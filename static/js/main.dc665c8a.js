/*! For license information please see main.dc665c8a.js.LICENSE.txt */
(()=>{var e={980:e=>{"use strict";e.exports=function(){return/\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67)\uDB40\uDC7F|(?:\uD83E\uDDD1\uD83C\uDFFF\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFC-\uDFFF])|\uD83D\uDC68(?:\uD83C\uDFFB(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|[\u2695\u2696\u2708]\uFE0F|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))?|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])\uFE0F|\u200D(?:(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D[\uDC66\uDC67])|\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC)?|(?:\uD83D\uDC69(?:\uD83C\uDFFB\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69]))|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC69(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83E\uDDD1(?:\u200D(?:\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDE36\u200D\uD83C\uDF2B|\uD83C\uDFF3\uFE0F\u200D\u26A7|\uD83D\uDC3B\u200D\u2744|(?:(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\uD83C\uDFF4\u200D\u2620|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])\u200D[\u2640\u2642]|[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u2328\u23CF\u23ED-\u23EF\u23F1\u23F2\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB\u25FC\u2600-\u2604\u260E\u2611\u2618\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u2692\u2694-\u2697\u2699\u269B\u269C\u26A0\u26A7\u26B0\u26B1\u26C8\u26CF\u26D1\u26D3\u26E9\u26F0\u26F1\u26F4\u26F7\u26F8\u2702\u2708\u2709\u270F\u2712\u2714\u2716\u271D\u2721\u2733\u2734\u2744\u2747\u2763\u27A1\u2934\u2935\u2B05-\u2B07\u3030\u303D\u3297\u3299]|\uD83C[\uDD70\uDD71\uDD7E\uDD7F\uDE02\uDE37\uDF21\uDF24-\uDF2C\uDF36\uDF7D\uDF96\uDF97\uDF99-\uDF9B\uDF9E\uDF9F\uDFCD\uDFCE\uDFD4-\uDFDF\uDFF5\uDFF7]|\uD83D[\uDC3F\uDCFD\uDD49\uDD4A\uDD6F\uDD70\uDD73\uDD76-\uDD79\uDD87\uDD8A-\uDD8D\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA\uDECB\uDECD-\uDECF\uDEE0-\uDEE5\uDEE9\uDEF0\uDEF3])\uFE0F|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDE35\u200D\uD83D\uDCAB|\uD83D\uDE2E\u200D\uD83D\uDCA8|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83E\uDDD1(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83D\uDC69(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF6\uD83C\uDDE6|\uD83C\uDDF4\uD83C\uDDF2|\uD83D\uDC08\u200D\u2B1B|\u2764\uFE0F\u200D(?:\uD83D\uDD25|\uD83E\uDE79)|\uD83D\uDC41\uFE0F|\uD83C\uDFF3\uFE0F|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|[#\*0-9]\uFE0F\u20E3|\u2764\uFE0F|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|\uD83C\uDFF4|(?:[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270C\u270D]|\uD83D[\uDD74\uDD90])(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC08\uDC15\uDC3B\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE2E\uDE35\uDE36\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5]|\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD]|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF]|[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF84\uDF86-\uDF93\uDFA0-\uDFC1\uDFC5\uDFC6\uDFC8\uDFC9\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC07\uDC09-\uDC14\uDC16-\uDC3A\uDC3C-\uDC3E\uDC40\uDC44\uDC45\uDC51-\uDC65\uDC6A\uDC79-\uDC7B\uDC7D-\uDC80\uDC84\uDC88-\uDC8E\uDC90\uDC92-\uDCA9\uDCAB-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDDA4\uDDFB-\uDE2D\uDE2F-\uDE34\uDE37-\uDE44\uDE48-\uDE4A\uDE80-\uDEA2\uDEA4-\uDEB3\uDEB7-\uDEBF\uDEC1-\uDEC5\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0D\uDD0E\uDD10-\uDD17\uDD1D\uDD20-\uDD25\uDD27-\uDD2F\uDD3A\uDD3F-\uDD45\uDD47-\uDD76\uDD78\uDD7A-\uDDB4\uDDB7\uDDBA\uDDBC-\uDDCB\uDDD0\uDDE0-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6]|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26A7\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5-\uDED7\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDD77\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g}},353:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(N){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=a;var r={},s={};function o(e,t){var n,a,o;return t?(o=0<=(e>>>=0)&&e<256)&&(a=s[e])?a:(n=u(e,(0|e)<0?-1:0,!0),o&&(s[e]=n),n):(o=-128<=(e|=0)&&e<128)&&(a=r[e])?a:(n=u(e,e<0?-1:0,!1),o&&(r[e]=n),n)}function i(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=p)return D}else{if(e<=-f)return k;if(e+1>=f)return w}return e<0?i(-e,t).neg():u(e%d|0,e/d|0,t)}function u(e,t,a){return new n(e,t,a)}n.fromInt=o,n.fromNumber=i,n.fromBits=u;var c=Math.pow;function l(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return l(e.substring(1),t,n).neg();for(var r=i(c(n,8)),s=g,o=0;o<e.length;o+=8){var u=Math.min(8,e.length-o),h=parseInt(e.substring(o,o+u),n);if(u<8){var d=i(c(n,u));s=s.mul(d).add(i(h))}else s=(s=s.mul(r)).add(i(h))}return s.unsigned=t,s}function h(e,t){return"number"===typeof e?i(e,t):"string"===typeof e?l(e,t):u(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=l,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,m=o(1<<24),g=o(0);n.ZERO=g;var y=o(0,!0);n.UZERO=y;var b=o(1);n.ONE=b;var v=o(1,!0);n.UONE=v;var x=o(-1);n.NEG_ONE=x;var w=u(-1,2147483647,!1);n.MAX_VALUE=w;var D=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=D;var k=u(0,-2147483648,!1);n.MIN_VALUE=k;var C=n.prototype;C.toInt=function(){return this.unsigned?this.low>>>0:this.low},C.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},C.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(k)){var t=i(e),n=this.div(t),a=n.mul(t).sub(this);return n.toString(e)+a.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=i(c(e,6),this.unsigned),s=this,o="";;){var u=s.div(r),l=(s.sub(u.mul(r)).toInt()>>>0).toString(e);if((s=u).isZero())return l+o;for(;l.length<6;)l="0"+l;o=""+l+o}},C.getHighBits=function(){return this.high},C.getHighBitsUnsigned=function(){return this.high>>>0},C.getLowBits=function(){return this.low},C.getLowBitsUnsigned=function(){return this.low>>>0},C.getNumBitsAbs=function(){if(this.isNegative())return this.eq(k)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},C.isZero=function(){return 0===this.high&&0===this.low},C.eqz=C.isZero,C.isNegative=function(){return!this.unsigned&&this.high<0},C.isPositive=function(){return this.unsigned||this.high>=0},C.isOdd=function(){return 1===(1&this.low)},C.isEven=function(){return 0===(1&this.low)},C.equals=function(e){return a(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},C.eq=C.equals,C.notEquals=function(e){return!this.eq(e)},C.neq=C.notEquals,C.ne=C.notEquals,C.lessThan=function(e){return this.comp(e)<0},C.lt=C.lessThan,C.lessThanOrEqual=function(e){return this.comp(e)<=0},C.lte=C.lessThanOrEqual,C.le=C.lessThanOrEqual,C.greaterThan=function(e){return this.comp(e)>0},C.gt=C.greaterThan,C.greaterThanOrEqual=function(e){return this.comp(e)>=0},C.gte=C.greaterThanOrEqual,C.ge=C.greaterThanOrEqual,C.compare=function(e){if(a(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},C.comp=C.compare,C.negate=function(){return!this.unsigned&&this.eq(k)?k:this.not().add(b)},C.neg=C.negate,C.add=function(e){a(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,o=e.high>>>16,i=65535&e.high,c=e.low>>>16,l=0,d=0,p=0,f=0;return p+=(f+=s+(65535&e.low))>>>16,d+=(p+=r+c)>>>16,l+=(d+=n+i)>>>16,l+=t+o,u((p&=65535)<<16|(f&=65535),(l&=65535)<<16|(d&=65535),this.unsigned)},C.subtract=function(e){return a(e)||(e=h(e)),this.add(e.neg())},C.sub=C.subtract,C.multiply=function(e){if(this.isZero())return g;if(a(e)||(e=h(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(k))return e.isOdd()?k:g;if(e.eq(k))return this.isOdd()?k:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return i(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,s=this.low>>>16,o=65535&this.low,c=e.high>>>16,l=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,y=0,b=0,v=0;return b+=(v+=o*p)>>>16,y+=(b+=s*p)>>>16,b&=65535,y+=(b+=o*d)>>>16,f+=(y+=r*p)>>>16,y&=65535,f+=(y+=s*d)>>>16,y&=65535,f+=(y+=o*l)>>>16,f+=n*p+r*d+s*l+o*c,u((b&=65535)<<16|(v&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},C.mul=C.multiply,C.divide=function(e){if(a(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,r,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return v;s=y}else{if(this.eq(k))return e.eq(b)||e.eq(x)?k:e.eq(k)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:x:(r=this.sub(e.mul(n)),s=n.add(r.div(e)));if(e.eq(k))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(r=this;r.gte(e);){n=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(n)/Math.LN2),l=o<=48?1:c(2,o-48),d=i(n),p=d.mul(e);p.isNegative()||p.gt(r);)p=(d=i(n-=l,this.unsigned)).mul(e);d.isZero()&&(d=b),s=s.add(d),r=r.sub(p)}return s},C.div=C.divide,C.modulo=function(e){return a(e)||(e=h(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},C.mod=C.modulo,C.rem=C.modulo,C.not=function(){return u(~this.low,~this.high,this.unsigned)},C.and=function(e){return a(e)||(e=h(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},C.or=function(e){return a(e)||(e=h(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},C.xor=function(e){return a(e)||(e=h(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},C.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},C.shl=C.shiftLeft,C.shiftRight=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},C.shr=C.shiftRight,C.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},C.shru=C.shiftRightUnsigned,C.shr_u=C.shiftRightUnsigned,C.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},C.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},C.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},C.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},C.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,a){return a?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},730:(e,t,n)=>{"use strict";var a=n(43),r=n(853);function s(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=new Set,i={};function u(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(i[e]=t,e=0;e<t.length;e++)o.add(t[e])}var l=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),h=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},f={};function m(e,t,n,a,r,s,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=a,this.attributeNamespace=r,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=s,this.removeEmptyString=o}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function v(e,t,n,a){var r=g.hasOwnProperty(t)?g[t]:null;(null!==r?0!==r.type:a||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,a){if(null===t||"undefined"===typeof t||function(e,t,n,a){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!a&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,a))return!0;if(a)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,r,a)&&(n=null),a||null===r?function(e){return!!h.call(f,e)||!h.call(p,e)&&(d.test(e)?f[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):r.mustUseProperty?e[r.propertyName]=null===n?3!==r.type&&"":n:(t=r.attributeName,a=r.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(r=r.type)||4===r&&!0===n?"":""+n,a?e.setAttributeNS(a,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var x=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,w=Symbol.for("react.element"),D=Symbol.for("react.portal"),k=Symbol.for("react.fragment"),C=Symbol.for("react.strict_mode"),N=Symbol.for("react.profiler"),S=Symbol.for("react.provider"),E=Symbol.for("react.context"),I=Symbol.for("react.forward_ref"),T=Symbol.for("react.suspense"),F=Symbol.for("react.suspense_list"),A=Symbol.for("react.memo"),R=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var _=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var O=Symbol.iterator;function L(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=O&&e[O]||e["@@iterator"])?e:null}var M,z=Object.assign;function B(e){if(void 0===M)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);M=t&&t[1]||""}return"\n"+M+e}var P=!1;function W(e,t){if(!e||P)return"";P=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(c){var a=c}Reflect.construct(e,[],t)}else{try{t.call()}catch(c){a=c}e.call(t.prototype)}else{try{throw Error()}catch(c){a=c}e()}}catch(c){if(c&&a&&"string"===typeof c.stack){for(var r=c.stack.split("\n"),s=a.stack.split("\n"),o=r.length-1,i=s.length-1;1<=o&&0<=i&&r[o]!==s[i];)i--;for(;1<=o&&0<=i;o--,i--)if(r[o]!==s[i]){if(1!==o||1!==i)do{if(o--,0>--i||r[o]!==s[i]){var u="\n"+r[o].replace(" at new "," at ");return e.displayName&&u.includes("<anonymous>")&&(u=u.replace("<anonymous>",e.displayName)),u}}while(1<=o&&0<=i);break}}}finally{P=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?B(e):""}function V(e){switch(e.tag){case 5:return B(e.type);case 16:return B("Lazy");case 13:return B("Suspense");case 19:return B("SuspenseList");case 0:case 2:case 15:return e=W(e.type,!1);case 11:return e=W(e.type.render,!1);case 1:return e=W(e.type,!0);default:return""}}function U(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case k:return"Fragment";case D:return"Portal";case N:return"Profiler";case C:return"StrictMode";case T:return"Suspense";case F:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case E:return(e.displayName||"Context")+".Consumer";case S:return(e._context.displayName||"Context")+".Provider";case I:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case A:return null!==(t=e.displayName||null)?t:U(e.type)||"Memo";case R:t=e._payload,e=e._init;try{return U(e(t))}catch(n){}}return null}function G(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return U(t);case 8:return t===C?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t}return null}function H(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function j(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function q(e){e._valueTracker||(e._valueTracker=function(e){var t=j(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),a=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var r=n.get,s=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return r.call(this)},set:function(e){a=""+e,s.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return a},setValue:function(e){a=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function K(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),a="";return e&&(a=j(e)?e.checked?"true":"false":e.value),(e=a)!==n&&(t.setValue(e),!0)}function X(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Y(e,t){var n=t.checked;return z({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Q(e,t){var n=null==t.defaultValue?"":t.defaultValue,a=null!=t.checked?t.checked:t.defaultChecked;n=H(null!=t.value?t.value:n),e._wrapperState={initialChecked:a,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Z(e,t){null!=(t=t.checked)&&v(e,"checked",t,!1)}function J(e,t){Z(e,t);var n=H(t.value),a=t.type;if(null!=n)"number"===a?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===a||"reset"===a)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,H(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function $(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var a=t.type;if(!("submit"!==a&&"reset"!==a||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&X(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,a){if(e=e.options,t){t={};for(var r=0;r<n.length;r++)t["$"+n[r]]=!0;for(n=0;n<e.length;n++)r=t.hasOwnProperty("$"+e[n].value),e[n].selected!==r&&(e[n].selected=r),r&&a&&(e[n].defaultSelected=!0)}else{for(n=""+H(n),t=null,r=0;r<e.length;r++){if(e[r].value===n)return e[r].selected=!0,void(a&&(e[r].defaultSelected=!0));null!==t||e[r].disabled||(t=e[r])}null!==t&&(t.selected=!0)}}function ae(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(s(91));return z({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function re(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(s(92));if(te(n)){if(1<n.length)throw Error(s(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:H(n)}}function se(e,t){var n=H(t.value),a=H(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=a&&(e.defaultValue=""+a)}function oe(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ue(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ie(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ce,le,he=(le=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ce=ce||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ce.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,a){MSApp.execUnsafeLocalFunction((function(){return le(e,t)}))}:le);function de(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},fe=["Webkit","ms","Moz","O"];function me(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||pe.hasOwnProperty(e)&&pe[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var a=0===n.indexOf("--"),r=me(n,t[n],a);"float"===n&&(n="cssFloat"),a?e.setProperty(n,r):e[n]=r}}Object.keys(pe).forEach((function(e){fe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pe[t]=pe[e]}))}));var ye=z({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function be(e,t){if(t){if(ye[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(s(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(s(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(s(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(s(62))}}function ve(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var xe=null;function we(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var De=null,ke=null,Ce=null;function Ne(e){if(e=vr(e)){if("function"!==typeof De)throw Error(s(280));var t=e.stateNode;t&&(t=wr(t),De(e.stateNode,e.type,t))}}function Se(e){ke?Ce?Ce.push(e):Ce=[e]:ke=e}function Ee(){if(ke){var e=ke,t=Ce;if(Ce=ke=null,Ne(e),t)for(e=0;e<t.length;e++)Ne(t[e])}}function Ie(e,t){return e(t)}function Te(){}var Fe=!1;function Ae(e,t,n){if(Fe)return e(t,n);Fe=!0;try{return Ie(e,t,n)}finally{Fe=!1,(null!==ke||null!==Ce)&&(Te(),Ee())}}function Re(e,t){var n=e.stateNode;if(null===n)return null;var a=wr(n);if(null===a)return null;n=a[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(a=!a.disabled)||(a=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!a;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(s(231,t,typeof n));return n}var _e=!1;if(l)try{var Oe={};Object.defineProperty(Oe,"passive",{get:function(){_e=!0}}),window.addEventListener("test",Oe,Oe),window.removeEventListener("test",Oe,Oe)}catch(le){_e=!1}function Le(e,t,n,a,r,s,o,i,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(l){this.onError(l)}}var Me=!1,ze=null,Be=!1,Pe=null,We={onError:function(e){Me=!0,ze=e}};function Ve(e,t,n,a,r,s,o,i,u){Me=!1,ze=null,Le.apply(We,arguments)}function Ue(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ge(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function He(e){if(Ue(e)!==e)throw Error(s(188))}function je(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ue(e)))throw Error(s(188));return t!==e?null:e}for(var n=e,a=t;;){var r=n.return;if(null===r)break;var o=r.alternate;if(null===o){if(null!==(a=r.return)){n=a;continue}break}if(r.child===o.child){for(o=r.child;o;){if(o===n)return He(r),e;if(o===a)return He(r),t;o=o.sibling}throw Error(s(188))}if(n.return!==a.return)n=r,a=o;else{for(var i=!1,u=r.child;u;){if(u===n){i=!0,n=r,a=o;break}if(u===a){i=!0,a=r,n=o;break}u=u.sibling}if(!i){for(u=o.child;u;){if(u===n){i=!0,n=o,a=r;break}if(u===a){i=!0,a=o,n=r;break}u=u.sibling}if(!i)throw Error(s(189))}}if(n.alternate!==a)throw Error(s(190))}if(3!==n.tag)throw Error(s(188));return n.stateNode.current===n?e:t}(e))?qe(e):null}function qe(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=qe(e);if(null!==t)return t;e=e.sibling}return null}var Ke=r.unstable_scheduleCallback,Xe=r.unstable_cancelCallback,Ye=r.unstable_shouldYield,Qe=r.unstable_requestPaint,Ze=r.unstable_now,Je=r.unstable_getCurrentPriorityLevel,$e=r.unstable_ImmediatePriority,et=r.unstable_UserBlockingPriority,tt=r.unstable_NormalPriority,nt=r.unstable_LowPriority,at=r.unstable_IdlePriority,rt=null,st=null;var ot=Math.clz32?Math.clz32:function(e){return e>>>=0,0===e?32:31-(it(e)/ut|0)|0},it=Math.log,ut=Math.LN2;var ct=64,lt=4194304;function ht(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function dt(e,t){var n=e.pendingLanes;if(0===n)return 0;var a=0,r=e.suspendedLanes,s=e.pingedLanes,o=268435455&n;if(0!==o){var i=o&~r;0!==i?a=ht(i):0!==(s&=o)&&(a=ht(s))}else 0!==(o=n&~r)?a=ht(o):0!==s&&(a=ht(s));if(0===a)return 0;if(0!==t&&t!==a&&0===(t&r)&&((r=a&-a)>=(s=t&-t)||16===r&&0!==(4194240&s)))return t;if(0!==(4&a)&&(a|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=a;0<t;)r=1<<(n=31-ot(t)),a|=e[n],t&=~r;return a}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ft(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function mt(){var e=ct;return 0===(4194240&(ct<<=1))&&(ct=64),e}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function yt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-ot(t)]=n}function bt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var a=31-ot(n),r=1<<a;r&t|e[a]&t&&(e[a]|=t),n&=~r}}var vt=0;function xt(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var wt,Dt,kt,Ct,Nt,St=!1,Et=[],It=null,Tt=null,Ft=null,At=new Map,Rt=new Map,_t=[],Ot="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Lt(e,t){switch(e){case"focusin":case"focusout":It=null;break;case"dragenter":case"dragleave":Tt=null;break;case"mouseover":case"mouseout":Ft=null;break;case"pointerover":case"pointerout":At.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Rt.delete(t.pointerId)}}function Mt(e,t,n,a,r,s){return null===e||e.nativeEvent!==s?(e={blockedOn:t,domEventName:n,eventSystemFlags:a,nativeEvent:s,targetContainers:[r]},null!==t&&(null!==(t=vr(t))&&Dt(t)),e):(e.eventSystemFlags|=a,t=e.targetContainers,null!==r&&-1===t.indexOf(r)&&t.push(r),e)}function zt(e){var t=br(e.target);if(null!==t){var n=Ue(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ge(n)))return e.blockedOn=t,void Nt(e.priority,(function(){kt(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Bt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Yt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=vr(n))&&Dt(t),e.blockedOn=n,!1;var a=new(n=e.nativeEvent).constructor(n.type,n);xe=a,n.target.dispatchEvent(a),xe=null,t.shift()}return!0}function Pt(e,t,n){Bt(e)&&n.delete(t)}function Wt(){St=!1,null!==It&&Bt(It)&&(It=null),null!==Tt&&Bt(Tt)&&(Tt=null),null!==Ft&&Bt(Ft)&&(Ft=null),At.forEach(Pt),Rt.forEach(Pt)}function Vt(e,t){e.blockedOn===t&&(e.blockedOn=null,St||(St=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Wt)))}function Ut(e){function t(t){return Vt(t,e)}if(0<Et.length){Vt(Et[0],e);for(var n=1;n<Et.length;n++){var a=Et[n];a.blockedOn===e&&(a.blockedOn=null)}}for(null!==It&&Vt(It,e),null!==Tt&&Vt(Tt,e),null!==Ft&&Vt(Ft,e),At.forEach(t),Rt.forEach(t),n=0;n<_t.length;n++)(a=_t[n]).blockedOn===e&&(a.blockedOn=null);for(;0<_t.length&&null===(n=_t[0]).blockedOn;)zt(n),null===n.blockedOn&&_t.shift()}var Gt=x.ReactCurrentBatchConfig,Ht=!0;function jt(e,t,n,a){var r=vt,s=Gt.transition;Gt.transition=null;try{vt=1,Kt(e,t,n,a)}finally{vt=r,Gt.transition=s}}function qt(e,t,n,a){var r=vt,s=Gt.transition;Gt.transition=null;try{vt=4,Kt(e,t,n,a)}finally{vt=r,Gt.transition=s}}function Kt(e,t,n,a){if(Ht){var r=Yt(e,t,n,a);if(null===r)Ha(e,t,a,Xt,n),Lt(e,a);else if(function(e,t,n,a,r){switch(t){case"focusin":return It=Mt(It,e,t,n,a,r),!0;case"dragenter":return Tt=Mt(Tt,e,t,n,a,r),!0;case"mouseover":return Ft=Mt(Ft,e,t,n,a,r),!0;case"pointerover":var s=r.pointerId;return At.set(s,Mt(At.get(s)||null,e,t,n,a,r)),!0;case"gotpointercapture":return s=r.pointerId,Rt.set(s,Mt(Rt.get(s)||null,e,t,n,a,r)),!0}return!1}(r,e,t,n,a))a.stopPropagation();else if(Lt(e,a),4&t&&-1<Ot.indexOf(e)){for(;null!==r;){var s=vr(r);if(null!==s&&wt(s),null===(s=Yt(e,t,n,a))&&Ha(e,t,a,Xt,n),s===r)break;r=s}null!==r&&a.stopPropagation()}else Ha(e,t,a,null,n)}}var Xt=null;function Yt(e,t,n,a){if(Xt=null,null!==(e=br(e=we(a))))if(null===(t=Ue(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ge(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Xt=e,null}function Qt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Je()){case $e:return 1;case et:return 4;case tt:case nt:return 16;case at:return 536870912;default:return 16}default:return 16}}var Zt=null,Jt=null,$t=null;function en(){if($t)return $t;var e,t,n=Jt,a=n.length,r="value"in Zt?Zt.value:Zt.textContent,s=r.length;for(e=0;e<a&&n[e]===r[e];e++);var o=a-e;for(t=1;t<=o&&n[a-t]===r[s-t];t++);return $t=r.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function an(){return!1}function rn(e){function t(t,n,a,r,s){for(var o in this._reactName=t,this._targetInst=a,this.type=n,this.nativeEvent=r,this.target=s,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(r):r[o]);return this.isDefaultPrevented=(null!=r.defaultPrevented?r.defaultPrevented:!1===r.returnValue)?nn:an,this.isPropagationStopped=an,this}return z(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var sn,on,un,cn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},ln=rn(cn),hn=z({},cn,{view:0,detail:0}),dn=rn(hn),pn=z({},hn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Nn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==un&&(un&&"mousemove"===e.type?(sn=e.screenX-un.screenX,on=e.screenY-un.screenY):on=sn=0,un=e),sn)},movementY:function(e){return"movementY"in e?e.movementY:on}}),fn=rn(pn),mn=rn(z({},pn,{dataTransfer:0})),gn=rn(z({},hn,{relatedTarget:0})),yn=rn(z({},cn,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=z({},cn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),vn=rn(bn),xn=rn(z({},cn,{data:0})),wn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Dn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},kn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Cn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=kn[e])&&!!t[e]}function Nn(){return Cn}var Sn=z({},hn,{key:function(e){if(e.key){var t=wn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Dn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Nn,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),En=rn(Sn),In=rn(z({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Tn=rn(z({},hn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Nn})),Fn=rn(z({},cn,{propertyName:0,elapsedTime:0,pseudoElement:0})),An=z({},pn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Rn=rn(An),_n=[9,13,27,32],On=l&&"CompositionEvent"in window,Ln=null;l&&"documentMode"in document&&(Ln=document.documentMode);var Mn=l&&"TextEvent"in window&&!Ln,zn=l&&(!On||Ln&&8<Ln&&11>=Ln),Bn=String.fromCharCode(32),Pn=!1;function Wn(e,t){switch(e){case"keyup":return-1!==_n.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Vn(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Un=!1;var Gn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Gn[e.type]:"textarea"===t}function jn(e,t,n,a){Se(a),0<(t=qa(t,"onChange")).length&&(n=new ln("onChange","change",null,n,a),e.push({event:n,listeners:t}))}var qn=null,Kn=null;function Xn(e){Ba(e,0)}function Yn(e){if(K(xr(e)))return e}function Qn(e,t){if("change"===e)return t}var Zn=!1;if(l){var Jn;if(l){var $n="oninput"in document;if(!$n){var ea=document.createElement("div");ea.setAttribute("oninput","return;"),$n="function"===typeof ea.oninput}Jn=$n}else Jn=!1;Zn=Jn&&(!document.documentMode||9<document.documentMode)}function ta(){qn&&(qn.detachEvent("onpropertychange",na),Kn=qn=null)}function na(e){if("value"===e.propertyName&&Yn(Kn)){var t=[];jn(t,Kn,e,we(e)),Ae(Xn,t)}}function aa(e,t,n){"focusin"===e?(ta(),Kn=n,(qn=t).attachEvent("onpropertychange",na)):"focusout"===e&&ta()}function ra(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Yn(Kn)}function sa(e,t){if("click"===e)return Yn(t)}function oa(e,t){if("input"===e||"change"===e)return Yn(t)}var ia="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function ua(e,t){if(ia(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(a=0;a<n.length;a++){var r=n[a];if(!h.call(t,r)||!ia(e[r],t[r]))return!1}return!0}function ca(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function la(e,t){var n,a=ca(e);for(e=0;a;){if(3===a.nodeType){if(n=e+a.textContent.length,e<=t&&n>=t)return{node:a,offset:t-e};e=n}e:{for(;a;){if(a.nextSibling){a=a.nextSibling;break e}a=a.parentNode}a=void 0}a=ca(a)}}function ha(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?ha(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function da(){for(var e=window,t=X();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(a){n=!1}if(!n)break;t=X((e=t.contentWindow).document)}return t}function pa(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function fa(e){var t=da(),n=e.focusedElem,a=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&ha(n.ownerDocument.documentElement,n)){if(null!==a&&pa(n))if(t=a.start,void 0===(e=a.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var r=n.textContent.length,s=Math.min(a.start,r);a=void 0===a.end?s:Math.min(a.end,r),!e.extend&&s>a&&(r=a,a=s,s=r),r=la(n,s);var o=la(n,a);r&&o&&(1!==e.rangeCount||e.anchorNode!==r.node||e.anchorOffset!==r.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&((t=t.createRange()).setStart(r.node,r.offset),e.removeAllRanges(),s>a?(e.addRange(t),e.extend(o.node,o.offset)):(t.setEnd(o.node,o.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var ma=l&&"documentMode"in document&&11>=document.documentMode,ga=null,ya=null,ba=null,va=!1;function xa(e,t,n){var a=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;va||null==ga||ga!==X(a)||("selectionStart"in(a=ga)&&pa(a)?a={start:a.selectionStart,end:a.selectionEnd}:a={anchorNode:(a=(a.ownerDocument&&a.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:a.anchorOffset,focusNode:a.focusNode,focusOffset:a.focusOffset},ba&&ua(ba,a)||(ba=a,0<(a=qa(ya,"onSelect")).length&&(t=new ln("onSelect","select",null,t,n),e.push({event:t,listeners:a}),t.target=ga)))}function wa(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Da={animationend:wa("Animation","AnimationEnd"),animationiteration:wa("Animation","AnimationIteration"),animationstart:wa("Animation","AnimationStart"),transitionend:wa("Transition","TransitionEnd")},ka={},Ca={};function Na(e){if(ka[e])return ka[e];if(!Da[e])return e;var t,n=Da[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ca)return ka[e]=n[t];return e}l&&(Ca=document.createElement("div").style,"AnimationEvent"in window||(delete Da.animationend.animation,delete Da.animationiteration.animation,delete Da.animationstart.animation),"TransitionEvent"in window||delete Da.transitionend.transition);var Sa=Na("animationend"),Ea=Na("animationiteration"),Ia=Na("animationstart"),Ta=Na("transitionend"),Fa=new Map,Aa="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Ra(e,t){Fa.set(e,t),u(t,[e])}for(var _a=0;_a<Aa.length;_a++){var Oa=Aa[_a];Ra(Oa.toLowerCase(),"on"+(Oa[0].toUpperCase()+Oa.slice(1)))}Ra(Sa,"onAnimationEnd"),Ra(Ea,"onAnimationIteration"),Ra(Ia,"onAnimationStart"),Ra("dblclick","onDoubleClick"),Ra("focusin","onFocus"),Ra("focusout","onBlur"),Ra(Ta,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),u("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),u("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),u("onBeforeInput",["compositionend","keypress","textInput","paste"]),u("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var La="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ma=new Set("cancel close invalid load scroll toggle".split(" ").concat(La));function za(e,t,n){var a=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,a,r,o,i,u,c){if(Ve.apply(this,arguments),Me){if(!Me)throw Error(s(198));var l=ze;Me=!1,ze=null,Be||(Be=!0,Pe=l)}}(a,t,void 0,e),e.currentTarget=null}function Ba(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var a=e[n],r=a.event;a=a.listeners;e:{var s=void 0;if(t)for(var o=a.length-1;0<=o;o--){var i=a[o],u=i.instance,c=i.currentTarget;if(i=i.listener,u!==s&&r.isPropagationStopped())break e;za(r,i,c),s=u}else for(o=0;o<a.length;o++){if(u=(i=a[o]).instance,c=i.currentTarget,i=i.listener,u!==s&&r.isPropagationStopped())break e;za(r,i,c),s=u}}}if(Be)throw e=Pe,Be=!1,Pe=null,e}function Pa(e,t){var n=t[mr];void 0===n&&(n=t[mr]=new Set);var a=e+"__bubble";n.has(a)||(Ga(t,e,2,!1),n.add(a))}function Wa(e,t,n){var a=0;t&&(a|=4),Ga(n,e,a,t)}var Va="_reactListening"+Math.random().toString(36).slice(2);function Ua(e){if(!e[Va]){e[Va]=!0,o.forEach((function(t){"selectionchange"!==t&&(Ma.has(t)||Wa(t,!1,e),Wa(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Va]||(t[Va]=!0,Wa("selectionchange",!1,t))}}function Ga(e,t,n,a){switch(Qt(t)){case 1:var r=jt;break;case 4:r=qt;break;default:r=Kt}n=r.bind(null,t,n,e),r=void 0,!_e||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(r=!0),a?void 0!==r?e.addEventListener(t,n,{capture:!0,passive:r}):e.addEventListener(t,n,!0):void 0!==r?e.addEventListener(t,n,{passive:r}):e.addEventListener(t,n,!1)}function Ha(e,t,n,a,r){var s=a;if(0===(1&t)&&0===(2&t)&&null!==a)e:for(;;){if(null===a)return;var o=a.tag;if(3===o||4===o){var i=a.stateNode.containerInfo;if(i===r||8===i.nodeType&&i.parentNode===r)break;if(4===o)for(o=a.return;null!==o;){var u=o.tag;if((3===u||4===u)&&((u=o.stateNode.containerInfo)===r||8===u.nodeType&&u.parentNode===r))return;o=o.return}for(;null!==i;){if(null===(o=br(i)))return;if(5===(u=o.tag)||6===u){a=s=o;continue e}i=i.parentNode}}a=a.return}Ae((function(){var a=s,r=we(n),o=[];e:{var i=Fa.get(e);if(void 0!==i){var u=ln,c=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":u=En;break;case"focusin":c="focus",u=gn;break;case"focusout":c="blur",u=gn;break;case"beforeblur":case"afterblur":u=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=fn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=mn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Tn;break;case Sa:case Ea:case Ia:u=yn;break;case Ta:u=Fn;break;case"scroll":u=dn;break;case"wheel":u=Rn;break;case"copy":case"cut":case"paste":u=vn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=In}var l=0!==(4&t),h=!l&&"scroll"===e,d=l?null!==i?i+"Capture":null:i;l=[];for(var p,f=a;null!==f;){var m=(p=f).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&(null!=(m=Re(f,d))&&l.push(ja(f,m,p)))),h)break;f=f.return}0<l.length&&(i=new u(i,c,null,n,r),o.push({event:i,listeners:l}))}}if(0===(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||n===xe||!(c=n.relatedTarget||n.fromElement)||!br(c)&&!c[fr])&&(u||i)&&(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,u?(u=a,null!==(c=(c=n.relatedTarget||n.toElement)?br(c):null)&&(c!==(h=Ue(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(u=null,c=a),u!==c)){if(l=fn,m="onMouseLeave",d="onMouseEnter",f="mouse","pointerout"!==e&&"pointerover"!==e||(l=In,m="onPointerLeave",d="onPointerEnter",f="pointer"),h=null==u?i:xr(u),p=null==c?i:xr(c),(i=new l(m,f+"leave",u,n,r)).target=h,i.relatedTarget=p,m=null,br(r)===a&&((l=new l(d,f+"enter",c,n,r)).target=p,l.relatedTarget=h,m=l),h=m,u&&c)e:{for(d=c,f=0,p=l=u;p;p=Ka(p))f++;for(p=0,m=d;m;m=Ka(m))p++;for(;0<f-p;)l=Ka(l),f--;for(;0<p-f;)d=Ka(d),p--;for(;f--;){if(l===d||null!==d&&l===d.alternate)break e;l=Ka(l),d=Ka(d)}l=null}else l=null;null!==u&&Xa(o,i,u,l,!1),null!==c&&null!==h&&Xa(o,h,c,l,!0)}if("select"===(u=(i=a?xr(a):window).nodeName&&i.nodeName.toLowerCase())||"input"===u&&"file"===i.type)var g=Qn;else if(Hn(i))if(Zn)g=oa;else{g=ra;var y=aa}else(u=i.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(g=sa);switch(g&&(g=g(e,a))?jn(o,g,n,r):(y&&y(e,i,a),"focusout"===e&&(y=i._wrapperState)&&y.controlled&&"number"===i.type&&ee(i,"number",i.value)),y=a?xr(a):window,e){case"focusin":(Hn(y)||"true"===y.contentEditable)&&(ga=y,ya=a,ba=null);break;case"focusout":ba=ya=ga=null;break;case"mousedown":va=!0;break;case"contextmenu":case"mouseup":case"dragend":va=!1,xa(o,n,r);break;case"selectionchange":if(ma)break;case"keydown":case"keyup":xa(o,n,r)}var b;if(On)e:{switch(e){case"compositionstart":var v="onCompositionStart";break e;case"compositionend":v="onCompositionEnd";break e;case"compositionupdate":v="onCompositionUpdate";break e}v=void 0}else Un?Wn(e,n)&&(v="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(v="onCompositionStart");v&&(zn&&"ko"!==n.locale&&(Un||"onCompositionStart"!==v?"onCompositionEnd"===v&&Un&&(b=en()):(Jt="value"in(Zt=r)?Zt.value:Zt.textContent,Un=!0)),0<(y=qa(a,v)).length&&(v=new xn(v,e,null,n,r),o.push({event:v,listeners:y}),b?v.data=b:null!==(b=Vn(n))&&(v.data=b))),(b=Mn?function(e,t){switch(e){case"compositionend":return Vn(t);case"keypress":return 32!==t.which?null:(Pn=!0,Bn);case"textInput":return(e=t.data)===Bn&&Pn?null:e;default:return null}}(e,n):function(e,t){if(Un)return"compositionend"===e||!On&&Wn(e,t)?(e=en(),$t=Jt=Zt=null,Un=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return zn&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(a=qa(a,"onBeforeInput")).length&&(r=new xn("onBeforeInput","beforeinput",null,n,r),o.push({event:r,listeners:a}),r.data=b))}Ba(o,t)}))}function ja(e,t,n){return{instance:e,listener:t,currentTarget:n}}function qa(e,t){for(var n=t+"Capture",a=[];null!==e;){var r=e,s=r.stateNode;5===r.tag&&null!==s&&(r=s,null!=(s=Re(e,n))&&a.unshift(ja(e,s,r)),null!=(s=Re(e,t))&&a.push(ja(e,s,r))),e=e.return}return a}function Ka(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Xa(e,t,n,a,r){for(var s=t._reactName,o=[];null!==n&&n!==a;){var i=n,u=i.alternate,c=i.stateNode;if(null!==u&&u===a)break;5===i.tag&&null!==c&&(i=c,r?null!=(u=Re(n,s))&&o.unshift(ja(n,u,i)):r||null!=(u=Re(n,s))&&o.push(ja(n,u,i))),n=n.return}0!==o.length&&e.push({event:t,listeners:o})}var Ya=/\r\n?/g,Qa=/\u0000|\uFFFD/g;function Za(e){return("string"===typeof e?e:""+e).replace(Ya,"\n").replace(Qa,"")}function Ja(e,t,n){if(t=Za(t),Za(e)!==t&&n)throw Error(s(425))}function $a(){}var er=null,tr=null;function nr(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ar="function"===typeof setTimeout?setTimeout:void 0,rr="function"===typeof clearTimeout?clearTimeout:void 0,sr="function"===typeof Promise?Promise:void 0,or="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof sr?function(e){return sr.resolve(null).then(e).catch(ir)}:ar;function ir(e){setTimeout((function(){throw e}))}function ur(e,t){var n=t,a=0;do{var r=n.nextSibling;if(e.removeChild(n),r&&8===r.nodeType)if("/$"===(n=r.data)){if(0===a)return e.removeChild(r),void Ut(t);a--}else"$"!==n&&"$?"!==n&&"$!"!==n||a++;n=r}while(n);Ut(t)}function cr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function lr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var hr=Math.random().toString(36).slice(2),dr="__reactFiber$"+hr,pr="__reactProps$"+hr,fr="__reactContainer$"+hr,mr="__reactEvents$"+hr,gr="__reactListeners$"+hr,yr="__reactHandles$"+hr;function br(e){var t=e[dr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[fr]||n[dr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=lr(e);null!==e;){if(n=e[dr])return n;e=lr(e)}return t}n=(e=n).parentNode}return null}function vr(e){return!(e=e[dr]||e[fr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function xr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(s(33))}function wr(e){return e[pr]||null}var Dr=[],kr=-1;function Cr(e){return{current:e}}function Nr(e){0>kr||(e.current=Dr[kr],Dr[kr]=null,kr--)}function Sr(e,t){kr++,Dr[kr]=e.current,e.current=t}var Er={},Ir=Cr(Er),Tr=Cr(!1),Fr=Er;function Ar(e,t){var n=e.type.contextTypes;if(!n)return Er;var a=e.stateNode;if(a&&a.__reactInternalMemoizedUnmaskedChildContext===t)return a.__reactInternalMemoizedMaskedChildContext;var r,s={};for(r in n)s[r]=t[r];return a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=s),s}function Rr(e){return null!==(e=e.childContextTypes)&&void 0!==e}function _r(){Nr(Tr),Nr(Ir)}function Or(e,t,n){if(Ir.current!==Er)throw Error(s(168));Sr(Ir,t),Sr(Tr,n)}function Lr(e,t,n){var a=e.stateNode;if(t=t.childContextTypes,"function"!==typeof a.getChildContext)return n;for(var r in a=a.getChildContext())if(!(r in t))throw Error(s(108,G(e)||"Unknown",r));return z({},n,a)}function Mr(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Er,Fr=Ir.current,Sr(Ir,e),Sr(Tr,Tr.current),!0}function zr(e,t,n){var a=e.stateNode;if(!a)throw Error(s(169));n?(e=Lr(e,t,Fr),a.__reactInternalMemoizedMergedChildContext=e,Nr(Tr),Nr(Ir),Sr(Ir,e)):Nr(Tr),Sr(Tr,n)}var Br=null,Pr=!1,Wr=!1;function Vr(e){null===Br?Br=[e]:Br.push(e)}function Ur(){if(!Wr&&null!==Br){Wr=!0;var e=0,t=vt;try{var n=Br;for(vt=1;e<n.length;e++){var a=n[e];do{a=a(!0)}while(null!==a)}Br=null,Pr=!1}catch(r){throw null!==Br&&(Br=Br.slice(e+1)),Ke($e,Ur),r}finally{vt=t,Wr=!1}}return null}var Gr=[],Hr=0,jr=null,qr=0,Kr=[],Xr=0,Yr=null,Qr=1,Zr="";function Jr(e,t){Gr[Hr++]=qr,Gr[Hr++]=jr,jr=e,qr=t}function $r(e,t,n){Kr[Xr++]=Qr,Kr[Xr++]=Zr,Kr[Xr++]=Yr,Yr=e;var a=Qr;e=Zr;var r=32-ot(a)-1;a&=~(1<<r),n+=1;var s=32-ot(t)+r;if(30<s){var o=r-r%5;s=(a&(1<<o)-1).toString(32),a>>=o,r-=o,Qr=1<<32-ot(t)+r|n<<r|a,Zr=s+e}else Qr=1<<s|n<<r|a,Zr=e}function es(e){null!==e.return&&(Jr(e,1),$r(e,1,0))}function ts(e){for(;e===jr;)jr=Gr[--Hr],Gr[Hr]=null,qr=Gr[--Hr],Gr[Hr]=null;for(;e===Yr;)Yr=Kr[--Xr],Kr[Xr]=null,Zr=Kr[--Xr],Kr[Xr]=null,Qr=Kr[--Xr],Kr[Xr]=null}var ns=null,as=null,rs=!1,ss=null;function os(e,t){var n=Ac(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function is(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,ns=e,as=cr(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,ns=e,as=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Yr?{id:Qr,overflow:Zr}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Ac(18,null,null,0)).stateNode=t,n.return=e,e.child=n,ns=e,as=null,!0);default:return!1}}function us(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function cs(e){if(rs){var t=as;if(t){var n=t;if(!is(e,t)){if(us(e))throw Error(s(418));t=cr(n.nextSibling);var a=ns;t&&is(e,t)?os(a,n):(e.flags=-4097&e.flags|2,rs=!1,ns=e)}}else{if(us(e))throw Error(s(418));e.flags=-4097&e.flags|2,rs=!1,ns=e}}}function ls(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ns=e}function hs(e){if(e!==ns)return!1;if(!rs)return ls(e),rs=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!nr(e.type,e.memoizedProps)),t&&(t=as)){if(us(e))throw ds(),Error(s(418));for(;t;)os(e,t),t=cr(t.nextSibling)}if(ls(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(s(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){as=cr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}as=null}}else as=ns?cr(e.stateNode.nextSibling):null;return!0}function ds(){for(var e=as;e;)e=cr(e.nextSibling)}function ps(){as=ns=null,rs=!1}function fs(e){null===ss?ss=[e]:ss.push(e)}var ms=x.ReactCurrentBatchConfig;function gs(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(s(309));var a=n.stateNode}if(!a)throw Error(s(147,e));var r=a,o=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=r.refs;null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!==typeof e)throw Error(s(284));if(!n._owner)throw Error(s(290,e))}return e}function ys(e,t){throw e=Object.prototype.toString.call(t),Error(s(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function bs(e){return(0,e._init)(e._payload)}function vs(e){function t(t,n){if(e){var a=t.deletions;null===a?(t.deletions=[n],t.flags|=16):a.push(n)}}function n(n,a){if(!e)return null;for(;null!==a;)t(n,a),a=a.sibling;return null}function a(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function r(e,t){return(e=_c(e,t)).index=0,e.sibling=null,e}function o(t,n,a){return t.index=a,e?null!==(a=t.alternate)?(a=a.index)<n?(t.flags|=2,n):a:(t.flags|=2,n):(t.flags|=1048576,n)}function i(t){return e&&null===t.alternate&&(t.flags|=2),t}function u(e,t,n,a){return null===t||6!==t.tag?((t=zc(n,e.mode,a)).return=e,t):((t=r(t,n)).return=e,t)}function c(e,t,n,a){var s=n.type;return s===k?h(e,t,n.props.children,a,n.key):null!==t&&(t.elementType===s||"object"===typeof s&&null!==s&&s.$$typeof===R&&bs(s)===t.type)?((a=r(t,n.props)).ref=gs(e,t,n),a.return=e,a):((a=Oc(n.type,n.key,n.props,null,e.mode,a)).ref=gs(e,t,n),a.return=e,a)}function l(e,t,n,a){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Bc(n,e.mode,a)).return=e,t):((t=r(t,n.children||[])).return=e,t)}function h(e,t,n,a,s){return null===t||7!==t.tag?((t=Lc(n,e.mode,a,s)).return=e,t):((t=r(t,n)).return=e,t)}function d(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t)return(t=zc(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case w:return(n=Oc(t.type,t.key,t.props,null,e.mode,n)).ref=gs(e,null,t),n.return=e,n;case D:return(t=Bc(t,e.mode,n)).return=e,t;case R:return d(e,(0,t._init)(t._payload),n)}if(te(t)||L(t))return(t=Lc(t,e.mode,n,null)).return=e,t;ys(e,t)}return null}function p(e,t,n,a){var r=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n)return null!==r?null:u(e,t,""+n,a);if("object"===typeof n&&null!==n){switch(n.$$typeof){case w:return n.key===r?c(e,t,n,a):null;case D:return n.key===r?l(e,t,n,a):null;case R:return p(e,t,(r=n._init)(n._payload),a)}if(te(n)||L(n))return null!==r?null:h(e,t,n,a,null);ys(e,n)}return null}function f(e,t,n,a,r){if("string"===typeof a&&""!==a||"number"===typeof a)return u(t,e=e.get(n)||null,""+a,r);if("object"===typeof a&&null!==a){switch(a.$$typeof){case w:return c(t,e=e.get(null===a.key?n:a.key)||null,a,r);case D:return l(t,e=e.get(null===a.key?n:a.key)||null,a,r);case R:return f(e,t,n,(0,a._init)(a._payload),r)}if(te(a)||L(a))return h(t,e=e.get(n)||null,a,r,null);ys(t,a)}return null}function m(r,s,i,u){for(var c=null,l=null,h=s,m=s=0,g=null;null!==h&&m<i.length;m++){h.index>m?(g=h,h=null):g=h.sibling;var y=p(r,h,i[m],u);if(null===y){null===h&&(h=g);break}e&&h&&null===y.alternate&&t(r,h),s=o(y,s,m),null===l?c=y:l.sibling=y,l=y,h=g}if(m===i.length)return n(r,h),rs&&Jr(r,m),c;if(null===h){for(;m<i.length;m++)null!==(h=d(r,i[m],u))&&(s=o(h,s,m),null===l?c=h:l.sibling=h,l=h);return rs&&Jr(r,m),c}for(h=a(r,h);m<i.length;m++)null!==(g=f(h,r,m,i[m],u))&&(e&&null!==g.alternate&&h.delete(null===g.key?m:g.key),s=o(g,s,m),null===l?c=g:l.sibling=g,l=g);return e&&h.forEach((function(e){return t(r,e)})),rs&&Jr(r,m),c}function g(r,i,u,c){var l=L(u);if("function"!==typeof l)throw Error(s(150));if(null==(u=l.call(u)))throw Error(s(151));for(var h=l=null,m=i,g=i=0,y=null,b=u.next();null!==m&&!b.done;g++,b=u.next()){m.index>g?(y=m,m=null):y=m.sibling;var v=p(r,m,b.value,c);if(null===v){null===m&&(m=y);break}e&&m&&null===v.alternate&&t(r,m),i=o(v,i,g),null===h?l=v:h.sibling=v,h=v,m=y}if(b.done)return n(r,m),rs&&Jr(r,g),l;if(null===m){for(;!b.done;g++,b=u.next())null!==(b=d(r,b.value,c))&&(i=o(b,i,g),null===h?l=b:h.sibling=b,h=b);return rs&&Jr(r,g),l}for(m=a(r,m);!b.done;g++,b=u.next())null!==(b=f(m,r,g,b.value,c))&&(e&&null!==b.alternate&&m.delete(null===b.key?g:b.key),i=o(b,i,g),null===h?l=b:h.sibling=b,h=b);return e&&m.forEach((function(e){return t(r,e)})),rs&&Jr(r,g),l}return function e(a,s,o,u){if("object"===typeof o&&null!==o&&o.type===k&&null===o.key&&(o=o.props.children),"object"===typeof o&&null!==o){switch(o.$$typeof){case w:e:{for(var c=o.key,l=s;null!==l;){if(l.key===c){if((c=o.type)===k){if(7===l.tag){n(a,l.sibling),(s=r(l,o.props.children)).return=a,a=s;break e}}else if(l.elementType===c||"object"===typeof c&&null!==c&&c.$$typeof===R&&bs(c)===l.type){n(a,l.sibling),(s=r(l,o.props)).ref=gs(a,l,o),s.return=a,a=s;break e}n(a,l);break}t(a,l),l=l.sibling}o.type===k?((s=Lc(o.props.children,a.mode,u,o.key)).return=a,a=s):((u=Oc(o.type,o.key,o.props,null,a.mode,u)).ref=gs(a,s,o),u.return=a,a=u)}return i(a);case D:e:{for(l=o.key;null!==s;){if(s.key===l){if(4===s.tag&&s.stateNode.containerInfo===o.containerInfo&&s.stateNode.implementation===o.implementation){n(a,s.sibling),(s=r(s,o.children||[])).return=a,a=s;break e}n(a,s);break}t(a,s),s=s.sibling}(s=Bc(o,a.mode,u)).return=a,a=s}return i(a);case R:return e(a,s,(l=o._init)(o._payload),u)}if(te(o))return m(a,s,o,u);if(L(o))return g(a,s,o,u);ys(a,o)}return"string"===typeof o&&""!==o||"number"===typeof o?(o=""+o,null!==s&&6===s.tag?(n(a,s.sibling),(s=r(s,o)).return=a,a=s):(n(a,s),(s=zc(o,a.mode,u)).return=a,a=s),i(a)):n(a,s)}}var xs=vs(!0),ws=vs(!1),Ds=Cr(null),ks=null,Cs=null,Ns=null;function Ss(){Ns=Cs=ks=null}function Es(e){var t=Ds.current;Nr(Ds),e._currentValue=t}function Is(e,t,n){for(;null!==e;){var a=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==a&&(a.childLanes|=t)):null!==a&&(a.childLanes&t)!==t&&(a.childLanes|=t),e===n)break;e=e.return}}function Ts(e,t){ks=e,Ns=Cs=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(vi=!0),e.firstContext=null)}function Fs(e){var t=e._currentValue;if(Ns!==e)if(e={context:e,memoizedValue:t,next:null},null===Cs){if(null===ks)throw Error(s(308));Cs=e,ks.dependencies={lanes:0,firstContext:e}}else Cs=Cs.next=e;return t}var As=null;function Rs(e){null===As?As=[e]:As.push(e)}function _s(e,t,n,a){var r=t.interleaved;return null===r?(n.next=n,Rs(t)):(n.next=r.next,r.next=n),t.interleaved=n,Os(e,a)}function Os(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Ls=!1;function Ms(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function zs(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Bs(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Ps(e,t,n){var a=e.updateQueue;if(null===a)return null;if(a=a.shared,0!==(2&Iu)){var r=a.pending;return null===r?t.next=t:(t.next=r.next,r.next=t),a.pending=t,Os(e,n)}return null===(r=a.interleaved)?(t.next=t,Rs(a)):(t.next=r.next,r.next=t),a.interleaved=t,Os(e,n)}function Ws(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194240&n))){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,bt(e,n)}}function Vs(e,t){var n=e.updateQueue,a=e.alternate;if(null!==a&&n===(a=a.updateQueue)){var r=null,s=null;if(null!==(n=n.firstBaseUpdate)){do{var o={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===s?r=s=o:s=s.next=o,n=n.next}while(null!==n);null===s?r=s=t:s=s.next=t}else r=s=t;return n={baseState:a.baseState,firstBaseUpdate:r,lastBaseUpdate:s,shared:a.shared,effects:a.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Us(e,t,n,a){var r=e.updateQueue;Ls=!1;var s=r.firstBaseUpdate,o=r.lastBaseUpdate,i=r.shared.pending;if(null!==i){r.shared.pending=null;var u=i,c=u.next;u.next=null,null===o?s=c:o.next=c,o=u;var l=e.alternate;null!==l&&((i=(l=l.updateQueue).lastBaseUpdate)!==o&&(null===i?l.firstBaseUpdate=c:i.next=c,l.lastBaseUpdate=u))}if(null!==s){var h=r.baseState;for(o=0,l=c=u=null,i=s;;){var d=i.lane,p=i.eventTime;if((a&d)===d){null!==l&&(l=l.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var f=e,m=i;switch(d=t,p=n,m.tag){case 1:if("function"===typeof(f=m.payload)){h=f.call(p,h,d);break e}h=f;break e;case 3:f.flags=-65537&f.flags|128;case 0:if(null===(d="function"===typeof(f=m.payload)?f.call(p,h,d):f)||void 0===d)break e;h=z({},h,d);break e;case 2:Ls=!0}}null!==i.callback&&0!==i.lane&&(e.flags|=64,null===(d=r.effects)?r.effects=[i]:d.push(i))}else p={eventTime:p,lane:d,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===l?(c=l=p,u=h):l=l.next=p,o|=d;if(null===(i=i.next)){if(null===(i=r.shared.pending))break;i=(d=i).next,d.next=null,r.lastBaseUpdate=d,r.shared.pending=null}}if(null===l&&(u=h),r.baseState=u,r.firstBaseUpdate=c,r.lastBaseUpdate=l,null!==(t=r.shared.interleaved)){r=t;do{o|=r.lane,r=r.next}while(r!==t)}else null===s&&(r.shared.lanes=0);Mu|=o,e.lanes=o,e.memoizedState=h}}function Gs(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var a=e[t],r=a.callback;if(null!==r){if(a.callback=null,a=n,"function"!==typeof r)throw Error(s(191,r));r.call(a)}}}var Hs={},js=Cr(Hs),qs=Cr(Hs),Ks=Cr(Hs);function Xs(e){if(e===Hs)throw Error(s(174));return e}function Ys(e,t){switch(Sr(Ks,t),Sr(qs,e),Sr(js,Hs),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ue(null,"");break;default:t=ue(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Nr(js),Sr(js,t)}function Qs(){Nr(js),Nr(qs),Nr(Ks)}function Zs(e){Xs(Ks.current);var t=Xs(js.current),n=ue(t,e.type);t!==n&&(Sr(qs,e),Sr(js,n))}function Js(e){qs.current===e&&(Nr(js),Nr(qs))}var $s=Cr(0);function eo(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var to=[];function no(){for(var e=0;e<to.length;e++)to[e]._workInProgressVersionPrimary=null;to.length=0}var ao=x.ReactCurrentDispatcher,ro=x.ReactCurrentBatchConfig,so=0,oo=null,io=null,uo=null,co=!1,lo=!1,ho=0,po=0;function fo(){throw Error(s(321))}function mo(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ia(e[n],t[n]))return!1;return!0}function go(e,t,n,a,r,o){if(so=o,oo=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,ao.current=null===e||null===e.memoizedState?$o:ei,e=n(a,r),lo){o=0;do{if(lo=!1,ho=0,25<=o)throw Error(s(301));o+=1,uo=io=null,t.updateQueue=null,ao.current=ti,e=n(a,r)}while(lo)}if(ao.current=Jo,t=null!==io&&null!==io.next,so=0,uo=io=oo=null,co=!1,t)throw Error(s(300));return e}function yo(){var e=0!==ho;return ho=0,e}function bo(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===uo?oo.memoizedState=uo=e:uo=uo.next=e,uo}function vo(){if(null===io){var e=oo.alternate;e=null!==e?e.memoizedState:null}else e=io.next;var t=null===uo?oo.memoizedState:uo.next;if(null!==t)uo=t,io=e;else{if(null===e)throw Error(s(310));e={memoizedState:(io=e).memoizedState,baseState:io.baseState,baseQueue:io.baseQueue,queue:io.queue,next:null},null===uo?oo.memoizedState=uo=e:uo=uo.next=e}return uo}function xo(e,t){return"function"===typeof t?t(e):t}function wo(e){var t=vo(),n=t.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=e;var a=io,r=a.baseQueue,o=n.pending;if(null!==o){if(null!==r){var i=r.next;r.next=o.next,o.next=i}a.baseQueue=r=o,n.pending=null}if(null!==r){o=r.next,a=a.baseState;var u=i=null,c=null,l=o;do{var h=l.lane;if((so&h)===h)null!==c&&(c=c.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),a=l.hasEagerState?l.eagerState:e(a,l.action);else{var d={lane:h,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null};null===c?(u=c=d,i=a):c=c.next=d,oo.lanes|=h,Mu|=h}l=l.next}while(null!==l&&l!==o);null===c?i=a:c.next=u,ia(a,t.memoizedState)||(vi=!0),t.memoizedState=a,t.baseState=i,t.baseQueue=c,n.lastRenderedState=a}if(null!==(e=n.interleaved)){r=e;do{o=r.lane,oo.lanes|=o,Mu|=o,r=r.next}while(r!==e)}else null===r&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function Do(e){var t=vo(),n=t.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=e;var a=n.dispatch,r=n.pending,o=t.memoizedState;if(null!==r){n.pending=null;var i=r=r.next;do{o=e(o,i.action),i=i.next}while(i!==r);ia(o,t.memoizedState)||(vi=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,a]}function ko(){}function Co(e,t){var n=oo,a=vo(),r=t(),o=!ia(a.memoizedState,r);if(o&&(a.memoizedState=r,vi=!0),a=a.queue,Mo(Eo.bind(null,n,a,e),[e]),a.getSnapshot!==t||o||null!==uo&&1&uo.memoizedState.tag){if(n.flags|=2048,Ao(9,So.bind(null,n,a,r,t),void 0,null),null===Tu)throw Error(s(349));0!==(30&so)||No(n,t,r)}return r}function No(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=oo.updateQueue)?(t={lastEffect:null,stores:null},oo.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function So(e,t,n,a){t.value=n,t.getSnapshot=a,Io(t)&&To(e)}function Eo(e,t,n){return n((function(){Io(t)&&To(e)}))}function Io(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!ia(e,n)}catch(a){return!0}}function To(e){var t=Os(e,1);null!==t&&nc(t,e,1,-1)}function Fo(e){var t=bo();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:xo,lastRenderedState:e},t.queue=e,e=e.dispatch=Xo.bind(null,oo,e),[t.memoizedState,e]}function Ao(e,t,n,a){return e={tag:e,create:t,destroy:n,deps:a,next:null},null===(t=oo.updateQueue)?(t={lastEffect:null,stores:null},oo.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(a=n.next,n.next=e,e.next=a,t.lastEffect=e),e}function Ro(){return vo().memoizedState}function _o(e,t,n,a){var r=bo();oo.flags|=e,r.memoizedState=Ao(1|t,n,void 0,void 0===a?null:a)}function Oo(e,t,n,a){var r=vo();a=void 0===a?null:a;var s=void 0;if(null!==io){var o=io.memoizedState;if(s=o.destroy,null!==a&&mo(a,o.deps))return void(r.memoizedState=Ao(t,n,s,a))}oo.flags|=e,r.memoizedState=Ao(1|t,n,s,a)}function Lo(e,t){return _o(8390656,8,e,t)}function Mo(e,t){return Oo(2048,8,e,t)}function zo(e,t){return Oo(4,2,e,t)}function Bo(e,t){return Oo(4,4,e,t)}function Po(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Wo(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Oo(4,4,Po.bind(null,t,e),n)}function Vo(){}function Uo(e,t){var n=vo();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&mo(t,a[1])?a[0]:(n.memoizedState=[e,t],e)}function Go(e,t){var n=vo();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&mo(t,a[1])?a[0]:(e=e(),n.memoizedState=[e,t],e)}function Ho(e,t,n){return 0===(21&so)?(e.baseState&&(e.baseState=!1,vi=!0),e.memoizedState=n):(ia(n,t)||(n=mt(),oo.lanes|=n,Mu|=n,e.baseState=!0),t)}function jo(e,t){var n=vt;vt=0!==n&&4>n?n:4,e(!0);var a=ro.transition;ro.transition={};try{e(!1),t()}finally{vt=n,ro.transition=a}}function qo(){return vo().memoizedState}function Ko(e,t,n){var a=tc(e);if(n={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null},Yo(e))Qo(t,n);else if(null!==(n=_s(e,t,n,a))){nc(n,e,a,ec()),Zo(n,t,a)}}function Xo(e,t,n){var a=tc(e),r={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null};if(Yo(e))Qo(t,r);else{var s=e.alternate;if(0===e.lanes&&(null===s||0===s.lanes)&&null!==(s=t.lastRenderedReducer))try{var o=t.lastRenderedState,i=s(o,n);if(r.hasEagerState=!0,r.eagerState=i,ia(i,o)){var u=t.interleaved;return null===u?(r.next=r,Rs(t)):(r.next=u.next,u.next=r),void(t.interleaved=r)}}catch(c){}null!==(n=_s(e,t,r,a))&&(nc(n,e,a,r=ec()),Zo(n,t,a))}}function Yo(e){var t=e.alternate;return e===oo||null!==t&&t===oo}function Qo(e,t){lo=co=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Zo(e,t,n){if(0!==(4194240&n)){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,bt(e,n)}}var Jo={readContext:Fs,useCallback:fo,useContext:fo,useEffect:fo,useImperativeHandle:fo,useInsertionEffect:fo,useLayoutEffect:fo,useMemo:fo,useReducer:fo,useRef:fo,useState:fo,useDebugValue:fo,useDeferredValue:fo,useTransition:fo,useMutableSource:fo,useSyncExternalStore:fo,useId:fo,unstable_isNewReconciler:!1},$o={readContext:Fs,useCallback:function(e,t){return bo().memoizedState=[e,void 0===t?null:t],e},useContext:Fs,useEffect:Lo,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,_o(4194308,4,Po.bind(null,t,e),n)},useLayoutEffect:function(e,t){return _o(4194308,4,e,t)},useInsertionEffect:function(e,t){return _o(4,2,e,t)},useMemo:function(e,t){var n=bo();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var a=bo();return t=void 0!==n?n(t):t,a.memoizedState=a.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},a.queue=e,e=e.dispatch=Ko.bind(null,oo,e),[a.memoizedState,e]},useRef:function(e){return e={current:e},bo().memoizedState=e},useState:Fo,useDebugValue:Vo,useDeferredValue:function(e){return bo().memoizedState=e},useTransition:function(){var e=Fo(!1),t=e[0];return e=jo.bind(null,e[1]),bo().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var a=oo,r=bo();if(rs){if(void 0===n)throw Error(s(407));n=n()}else{if(n=t(),null===Tu)throw Error(s(349));0!==(30&so)||No(a,t,n)}r.memoizedState=n;var o={value:n,getSnapshot:t};return r.queue=o,Lo(Eo.bind(null,a,o,e),[e]),a.flags|=2048,Ao(9,So.bind(null,a,o,n,t),void 0,null),n},useId:function(){var e=bo(),t=Tu.identifierPrefix;if(rs){var n=Zr;t=":"+t+"R"+(n=(Qr&~(1<<32-ot(Qr)-1)).toString(32)+n),0<(n=ho++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=po++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},ei={readContext:Fs,useCallback:Uo,useContext:Fs,useEffect:Mo,useImperativeHandle:Wo,useInsertionEffect:zo,useLayoutEffect:Bo,useMemo:Go,useReducer:wo,useRef:Ro,useState:function(){return wo(xo)},useDebugValue:Vo,useDeferredValue:function(e){return Ho(vo(),io.memoizedState,e)},useTransition:function(){return[wo(xo)[0],vo().memoizedState]},useMutableSource:ko,useSyncExternalStore:Co,useId:qo,unstable_isNewReconciler:!1},ti={readContext:Fs,useCallback:Uo,useContext:Fs,useEffect:Mo,useImperativeHandle:Wo,useInsertionEffect:zo,useLayoutEffect:Bo,useMemo:Go,useReducer:Do,useRef:Ro,useState:function(){return Do(xo)},useDebugValue:Vo,useDeferredValue:function(e){var t=vo();return null===io?t.memoizedState=e:Ho(t,io.memoizedState,e)},useTransition:function(){return[Do(xo)[0],vo().memoizedState]},useMutableSource:ko,useSyncExternalStore:Co,useId:qo,unstable_isNewReconciler:!1};function ni(e,t){if(e&&e.defaultProps){for(var n in t=z({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}function ai(e,t,n,a){n=null===(n=n(a,t=e.memoizedState))||void 0===n?t:z({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var ri={isMounted:function(e){return!!(e=e._reactInternals)&&Ue(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var a=ec(),r=tc(e),s=Bs(a,r);s.payload=t,void 0!==n&&null!==n&&(s.callback=n),null!==(t=Ps(e,s,r))&&(nc(t,e,r,a),Ws(t,e,r))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var a=ec(),r=tc(e),s=Bs(a,r);s.tag=1,s.payload=t,void 0!==n&&null!==n&&(s.callback=n),null!==(t=Ps(e,s,r))&&(nc(t,e,r,a),Ws(t,e,r))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=ec(),a=tc(e),r=Bs(n,a);r.tag=2,void 0!==t&&null!==t&&(r.callback=t),null!==(t=Ps(e,r,a))&&(nc(t,e,a,n),Ws(t,e,a))}};function si(e,t,n,a,r,s,o){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(a,s,o):!t.prototype||!t.prototype.isPureReactComponent||(!ua(n,a)||!ua(r,s))}function oi(e,t,n){var a=!1,r=Er,s=t.contextType;return"object"===typeof s&&null!==s?s=Fs(s):(r=Rr(t)?Fr:Ir.current,s=(a=null!==(a=t.contextTypes)&&void 0!==a)?Ar(e,r):Er),t=new t(n,s),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ri,e.stateNode=t,t._reactInternals=e,a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,e.__reactInternalMemoizedMaskedChildContext=s),t}function ii(e,t,n,a){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,a),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,a),t.state!==e&&ri.enqueueReplaceState(t,t.state,null)}function ui(e,t,n,a){var r=e.stateNode;r.props=n,r.state=e.memoizedState,r.refs={},Ms(e);var s=t.contextType;"object"===typeof s&&null!==s?r.context=Fs(s):(s=Rr(t)?Fr:Ir.current,r.context=Ar(e,s)),r.state=e.memoizedState,"function"===typeof(s=t.getDerivedStateFromProps)&&(ai(e,t,s,n),r.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof r.getSnapshotBeforeUpdate||"function"!==typeof r.UNSAFE_componentWillMount&&"function"!==typeof r.componentWillMount||(t=r.state,"function"===typeof r.componentWillMount&&r.componentWillMount(),"function"===typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),t!==r.state&&ri.enqueueReplaceState(r,r.state,null),Us(e,n,r,a),r.state=e.memoizedState),"function"===typeof r.componentDidMount&&(e.flags|=4194308)}function ci(e,t){try{var n="",a=t;do{n+=V(a),a=a.return}while(a);var r=n}catch(s){r="\nError generating stack: "+s.message+"\n"+s.stack}return{value:e,source:t,stack:r,digest:null}}function li(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function hi(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}var di="function"===typeof WeakMap?WeakMap:Map;function pi(e,t,n){(n=Bs(-1,n)).tag=3,n.payload={element:null};var a=t.value;return n.callback=function(){Hu||(Hu=!0,ju=a),hi(0,t)},n}function fi(e,t,n){(n=Bs(-1,n)).tag=3;var a=e.type.getDerivedStateFromError;if("function"===typeof a){var r=t.value;n.payload=function(){return a(r)},n.callback=function(){hi(0,t)}}var s=e.stateNode;return null!==s&&"function"===typeof s.componentDidCatch&&(n.callback=function(){hi(0,t),"function"!==typeof a&&(null===qu?qu=new Set([this]):qu.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function mi(e,t,n){var a=e.pingCache;if(null===a){a=e.pingCache=new di;var r=new Set;a.set(t,r)}else void 0===(r=a.get(t))&&(r=new Set,a.set(t,r));r.has(n)||(r.add(n),e=Nc.bind(null,e,t,n),t.then(e,e))}function gi(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function yi(e,t,n,a,r){return 0===(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Bs(-1,1)).tag=2,Ps(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=r,e)}var bi=x.ReactCurrentOwner,vi=!1;function xi(e,t,n,a){t.child=null===e?ws(t,null,n,a):xs(t,e.child,n,a)}function wi(e,t,n,a,r){n=n.render;var s=t.ref;return Ts(t,r),a=go(e,t,n,a,s,r),n=yo(),null===e||vi?(rs&&n&&es(t),t.flags|=1,xi(e,t,a,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,Hi(e,t,r))}function Di(e,t,n,a,r){if(null===e){var s=n.type;return"function"!==typeof s||Rc(s)||void 0!==s.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Oc(n.type,null,a,t,t.mode,r)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=s,ki(e,t,s,a,r))}if(s=e.child,0===(e.lanes&r)){var o=s.memoizedProps;if((n=null!==(n=n.compare)?n:ua)(o,a)&&e.ref===t.ref)return Hi(e,t,r)}return t.flags|=1,(e=_c(s,a)).ref=t.ref,e.return=t,t.child=e}function ki(e,t,n,a,r){if(null!==e){var s=e.memoizedProps;if(ua(s,a)&&e.ref===t.ref){if(vi=!1,t.pendingProps=a=s,0===(e.lanes&r))return t.lanes=e.lanes,Hi(e,t,r);0!==(131072&e.flags)&&(vi=!0)}}return Si(e,t,n,a,r)}function Ci(e,t,n){var a=t.pendingProps,r=a.children,s=null!==e?e.memoizedState:null;if("hidden"===a.mode)if(0===(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Sr(_u,Ru),Ru|=n;else{if(0===(1073741824&n))return e=null!==s?s.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Sr(_u,Ru),Ru|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},a=null!==s?s.baseLanes:n,Sr(_u,Ru),Ru|=a}else null!==s?(a=s.baseLanes|n,t.memoizedState=null):a=n,Sr(_u,Ru),Ru|=a;return xi(e,t,r,n),t.child}function Ni(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Si(e,t,n,a,r){var s=Rr(n)?Fr:Ir.current;return s=Ar(t,s),Ts(t,r),n=go(e,t,n,a,s,r),a=yo(),null===e||vi?(rs&&a&&es(t),t.flags|=1,xi(e,t,n,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,Hi(e,t,r))}function Ei(e,t,n,a,r){if(Rr(n)){var s=!0;Mr(t)}else s=!1;if(Ts(t,r),null===t.stateNode)Gi(e,t),oi(t,n,a),ui(t,n,a,r),a=!0;else if(null===e){var o=t.stateNode,i=t.memoizedProps;o.props=i;var u=o.context,c=n.contextType;"object"===typeof c&&null!==c?c=Fs(c):c=Ar(t,c=Rr(n)?Fr:Ir.current);var l=n.getDerivedStateFromProps,h="function"===typeof l||"function"===typeof o.getSnapshotBeforeUpdate;h||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(i!==a||u!==c)&&ii(t,o,a,c),Ls=!1;var d=t.memoizedState;o.state=d,Us(t,a,o,r),u=t.memoizedState,i!==a||d!==u||Tr.current||Ls?("function"===typeof l&&(ai(t,n,l,a),u=t.memoizedState),(i=Ls||si(t,n,i,a,d,u,c))?(h||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||("function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"===typeof o.componentDidMount&&(t.flags|=4194308)):("function"===typeof o.componentDidMount&&(t.flags|=4194308),t.memoizedProps=a,t.memoizedState=u),o.props=a,o.state=u,o.context=c,a=i):("function"===typeof o.componentDidMount&&(t.flags|=4194308),a=!1)}else{o=t.stateNode,zs(e,t),i=t.memoizedProps,c=t.type===t.elementType?i:ni(t.type,i),o.props=c,h=t.pendingProps,d=o.context,"object"===typeof(u=n.contextType)&&null!==u?u=Fs(u):u=Ar(t,u=Rr(n)?Fr:Ir.current);var p=n.getDerivedStateFromProps;(l="function"===typeof p||"function"===typeof o.getSnapshotBeforeUpdate)||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(i!==h||d!==u)&&ii(t,o,a,u),Ls=!1,d=t.memoizedState,o.state=d,Us(t,a,o,r);var f=t.memoizedState;i!==h||d!==f||Tr.current||Ls?("function"===typeof p&&(ai(t,n,p,a),f=t.memoizedState),(c=Ls||si(t,n,c,a,d,f,u)||!1)?(l||"function"!==typeof o.UNSAFE_componentWillUpdate&&"function"!==typeof o.componentWillUpdate||("function"===typeof o.componentWillUpdate&&o.componentWillUpdate(a,f,u),"function"===typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(a,f,u)),"function"===typeof o.componentDidUpdate&&(t.flags|=4),"function"===typeof o.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof o.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),t.memoizedProps=a,t.memoizedState=f),o.props=a,o.state=f,o.context=u,a=c):("function"!==typeof o.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),a=!1)}return Ii(e,t,n,a,s,r)}function Ii(e,t,n,a,r,s){Ni(e,t);var o=0!==(128&t.flags);if(!a&&!o)return r&&zr(t,n,!1),Hi(e,t,s);a=t.stateNode,bi.current=t;var i=o&&"function"!==typeof n.getDerivedStateFromError?null:a.render();return t.flags|=1,null!==e&&o?(t.child=xs(t,e.child,null,s),t.child=xs(t,null,i,s)):xi(e,t,i,s),t.memoizedState=a.state,r&&zr(t,n,!0),t.child}function Ti(e){var t=e.stateNode;t.pendingContext?Or(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Or(0,t.context,!1),Ys(e,t.containerInfo)}function Fi(e,t,n,a,r){return ps(),fs(r),t.flags|=256,xi(e,t,n,a),t.child}var Ai,Ri,_i,Oi,Li={dehydrated:null,treeContext:null,retryLane:0};function Mi(e){return{baseLanes:e,cachePool:null,transitions:null}}function zi(e,t,n){var a,r=t.pendingProps,o=$s.current,i=!1,u=0!==(128&t.flags);if((a=u)||(a=(null===e||null!==e.memoizedState)&&0!==(2&o)),a?(i=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(o|=1),Sr($s,1&o),null===e)return cs(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(u=r.children,e=r.fallback,i?(r=t.mode,i=t.child,u={mode:"hidden",children:u},0===(1&r)&&null!==i?(i.childLanes=0,i.pendingProps=u):i=Mc(u,r,0,null),e=Lc(e,r,n,null),i.return=t,e.return=t,i.sibling=e,t.child=i,t.child.memoizedState=Mi(n),t.memoizedState=Li,e):Bi(t,u));if(null!==(o=e.memoizedState)&&null!==(a=o.dehydrated))return function(e,t,n,a,r,o,i){if(n)return 256&t.flags?(t.flags&=-257,Pi(e,t,i,a=li(Error(s(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(o=a.fallback,r=t.mode,a=Mc({mode:"visible",children:a.children},r,0,null),(o=Lc(o,r,i,null)).flags|=2,a.return=t,o.return=t,a.sibling=o,t.child=a,0!==(1&t.mode)&&xs(t,e.child,null,i),t.child.memoizedState=Mi(i),t.memoizedState=Li,o);if(0===(1&t.mode))return Pi(e,t,i,null);if("$!"===r.data){if(a=r.nextSibling&&r.nextSibling.dataset)var u=a.dgst;return a=u,Pi(e,t,i,a=li(o=Error(s(419)),a,void 0))}if(u=0!==(i&e.childLanes),vi||u){if(null!==(a=Tu)){switch(i&-i){case 4:r=2;break;case 16:r=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:r=32;break;case 536870912:r=268435456;break;default:r=0}0!==(r=0!==(r&(a.suspendedLanes|i))?0:r)&&r!==o.retryLane&&(o.retryLane=r,Os(e,r),nc(a,e,r,-1))}return mc(),Pi(e,t,i,a=li(Error(s(421))))}return"$?"===r.data?(t.flags|=128,t.child=e.child,t=Ec.bind(null,e),r._reactRetry=t,null):(e=o.treeContext,as=cr(r.nextSibling),ns=t,rs=!0,ss=null,null!==e&&(Kr[Xr++]=Qr,Kr[Xr++]=Zr,Kr[Xr++]=Yr,Qr=e.id,Zr=e.overflow,Yr=t),t=Bi(t,a.children),t.flags|=4096,t)}(e,t,u,r,a,o,n);if(i){i=r.fallback,u=t.mode,a=(o=e.child).sibling;var c={mode:"hidden",children:r.children};return 0===(1&u)&&t.child!==o?((r=t.child).childLanes=0,r.pendingProps=c,t.deletions=null):(r=_c(o,c)).subtreeFlags=14680064&o.subtreeFlags,null!==a?i=_c(a,i):(i=Lc(i,u,n,null)).flags|=2,i.return=t,r.return=t,r.sibling=i,t.child=r,r=i,i=t.child,u=null===(u=e.child.memoizedState)?Mi(n):{baseLanes:u.baseLanes|n,cachePool:null,transitions:u.transitions},i.memoizedState=u,i.childLanes=e.childLanes&~n,t.memoizedState=Li,r}return e=(i=e.child).sibling,r=_c(i,{mode:"visible",children:r.children}),0===(1&t.mode)&&(r.lanes=n),r.return=t,r.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=r,t.memoizedState=null,r}function Bi(e,t){return(t=Mc({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Pi(e,t,n,a){return null!==a&&fs(a),xs(t,e.child,null,n),(e=Bi(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Wi(e,t,n){e.lanes|=t;var a=e.alternate;null!==a&&(a.lanes|=t),Is(e.return,t,n)}function Vi(e,t,n,a,r){var s=e.memoizedState;null===s?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:a,tail:n,tailMode:r}:(s.isBackwards=t,s.rendering=null,s.renderingStartTime=0,s.last=a,s.tail=n,s.tailMode=r)}function Ui(e,t,n){var a=t.pendingProps,r=a.revealOrder,s=a.tail;if(xi(e,t,a.children,n),0!==(2&(a=$s.current)))a=1&a|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Wi(e,n,t);else if(19===e.tag)Wi(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}a&=1}if(Sr($s,a),0===(1&t.mode))t.memoizedState=null;else switch(r){case"forwards":for(n=t.child,r=null;null!==n;)null!==(e=n.alternate)&&null===eo(e)&&(r=n),n=n.sibling;null===(n=r)?(r=t.child,t.child=null):(r=n.sibling,n.sibling=null),Vi(t,!1,r,n,s);break;case"backwards":for(n=null,r=t.child,t.child=null;null!==r;){if(null!==(e=r.alternate)&&null===eo(e)){t.child=r;break}e=r.sibling,r.sibling=n,n=r,r=e}Vi(t,!0,n,null,s);break;case"together":Vi(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Gi(e,t){0===(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Hi(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Mu|=t.lanes,0===(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(s(153));if(null!==t.child){for(n=_c(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=_c(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function ji(e,t){if(!rs)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var a=null;null!==n;)null!==n.alternate&&(a=n),n=n.sibling;null===a?t||null===e.tail?e.tail=null:e.tail.sibling=null:a.sibling=null}}function qi(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,a=0;if(t)for(var r=e.child;null!==r;)n|=r.lanes|r.childLanes,a|=14680064&r.subtreeFlags,a|=14680064&r.flags,r.return=e,r=r.sibling;else for(r=e.child;null!==r;)n|=r.lanes|r.childLanes,a|=r.subtreeFlags,a|=r.flags,r.return=e,r=r.sibling;return e.subtreeFlags|=a,e.childLanes=n,t}function Ki(e,t,n){var a=t.pendingProps;switch(ts(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return qi(t),null;case 1:case 17:return Rr(t.type)&&_r(),qi(t),null;case 3:return a=t.stateNode,Qs(),Nr(Tr),Nr(Ir),no(),a.pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),null!==e&&null!==e.child||(hs(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,null!==ss&&(oc(ss),ss=null))),Ri(e,t),qi(t),null;case 5:Js(t);var r=Xs(Ks.current);if(n=t.type,null!==e&&null!=t.stateNode)_i(e,t,n,a,r),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!a){if(null===t.stateNode)throw Error(s(166));return qi(t),null}if(e=Xs(js.current),hs(t)){a=t.stateNode,n=t.type;var o=t.memoizedProps;switch(a[dr]=t,a[pr]=o,e=0!==(1&t.mode),n){case"dialog":Pa("cancel",a),Pa("close",a);break;case"iframe":case"object":case"embed":Pa("load",a);break;case"video":case"audio":for(r=0;r<La.length;r++)Pa(La[r],a);break;case"source":Pa("error",a);break;case"img":case"image":case"link":Pa("error",a),Pa("load",a);break;case"details":Pa("toggle",a);break;case"input":Q(a,o),Pa("invalid",a);break;case"select":a._wrapperState={wasMultiple:!!o.multiple},Pa("invalid",a);break;case"textarea":re(a,o),Pa("invalid",a)}for(var u in be(n,o),r=null,o)if(o.hasOwnProperty(u)){var c=o[u];"children"===u?"string"===typeof c?a.textContent!==c&&(!0!==o.suppressHydrationWarning&&Ja(a.textContent,c,e),r=["children",c]):"number"===typeof c&&a.textContent!==""+c&&(!0!==o.suppressHydrationWarning&&Ja(a.textContent,c,e),r=["children",""+c]):i.hasOwnProperty(u)&&null!=c&&"onScroll"===u&&Pa("scroll",a)}switch(n){case"input":q(a),$(a,o,!0);break;case"textarea":q(a),oe(a);break;case"select":case"option":break;default:"function"===typeof o.onClick&&(a.onclick=$a)}a=r,t.updateQueue=a,null!==a&&(t.flags|=4)}else{u=9===r.nodeType?r:r.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ie(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof a.is?e=u.createElement(n,{is:a.is}):(e=u.createElement(n),"select"===n&&(u=e,a.multiple?u.multiple=!0:a.size&&(u.size=a.size))):e=u.createElementNS(e,n),e[dr]=t,e[pr]=a,Ai(e,t,!1,!1),t.stateNode=e;e:{switch(u=ve(n,a),n){case"dialog":Pa("cancel",e),Pa("close",e),r=a;break;case"iframe":case"object":case"embed":Pa("load",e),r=a;break;case"video":case"audio":for(r=0;r<La.length;r++)Pa(La[r],e);r=a;break;case"source":Pa("error",e),r=a;break;case"img":case"image":case"link":Pa("error",e),Pa("load",e),r=a;break;case"details":Pa("toggle",e),r=a;break;case"input":Q(e,a),r=Y(e,a),Pa("invalid",e);break;case"option":default:r=a;break;case"select":e._wrapperState={wasMultiple:!!a.multiple},r=z({},a,{value:void 0}),Pa("invalid",e);break;case"textarea":re(e,a),r=ae(e,a),Pa("invalid",e)}for(o in be(n,r),c=r)if(c.hasOwnProperty(o)){var l=c[o];"style"===o?ge(e,l):"dangerouslySetInnerHTML"===o?null!=(l=l?l.__html:void 0)&&he(e,l):"children"===o?"string"===typeof l?("textarea"!==n||""!==l)&&de(e,l):"number"===typeof l&&de(e,""+l):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(i.hasOwnProperty(o)?null!=l&&"onScroll"===o&&Pa("scroll",e):null!=l&&v(e,o,l,u))}switch(n){case"input":q(e),$(e,a,!1);break;case"textarea":q(e),oe(e);break;case"option":null!=a.value&&e.setAttribute("value",""+H(a.value));break;case"select":e.multiple=!!a.multiple,null!=(o=a.value)?ne(e,!!a.multiple,o,!1):null!=a.defaultValue&&ne(e,!!a.multiple,a.defaultValue,!0);break;default:"function"===typeof r.onClick&&(e.onclick=$a)}switch(n){case"button":case"input":case"select":case"textarea":a=!!a.autoFocus;break e;case"img":a=!0;break e;default:a=!1}}a&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return qi(t),null;case 6:if(e&&null!=t.stateNode)Oi(e,t,e.memoizedProps,a);else{if("string"!==typeof a&&null===t.stateNode)throw Error(s(166));if(n=Xs(Ks.current),Xs(js.current),hs(t)){if(a=t.stateNode,n=t.memoizedProps,a[dr]=t,(o=a.nodeValue!==n)&&null!==(e=ns))switch(e.tag){case 3:Ja(a.nodeValue,n,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Ja(a.nodeValue,n,0!==(1&e.mode))}o&&(t.flags|=4)}else(a=(9===n.nodeType?n:n.ownerDocument).createTextNode(a))[dr]=t,t.stateNode=a}return qi(t),null;case 13:if(Nr($s),a=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(rs&&null!==as&&0!==(1&t.mode)&&0===(128&t.flags))ds(),ps(),t.flags|=98560,o=!1;else if(o=hs(t),null!==a&&null!==a.dehydrated){if(null===e){if(!o)throw Error(s(318));if(!(o=null!==(o=t.memoizedState)?o.dehydrated:null))throw Error(s(317));o[dr]=t}else ps(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;qi(t),o=!1}else null!==ss&&(oc(ss),ss=null),o=!0;if(!o)return 65536&t.flags?t:null}return 0!==(128&t.flags)?(t.lanes=n,t):((a=null!==a)!==(null!==e&&null!==e.memoizedState)&&a&&(t.child.flags|=8192,0!==(1&t.mode)&&(null===e||0!==(1&$s.current)?0===Ou&&(Ou=3):mc())),null!==t.updateQueue&&(t.flags|=4),qi(t),null);case 4:return Qs(),Ri(e,t),null===e&&Ua(t.stateNode.containerInfo),qi(t),null;case 10:return Es(t.type._context),qi(t),null;case 19:if(Nr($s),null===(o=t.memoizedState))return qi(t),null;if(a=0!==(128&t.flags),null===(u=o.rendering))if(a)ji(o,!1);else{if(0!==Ou||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(u=eo(e))){for(t.flags|=128,ji(o,!1),null!==(a=u.updateQueue)&&(t.updateQueue=a,t.flags|=4),t.subtreeFlags=0,a=n,n=t.child;null!==n;)e=a,(o=n).flags&=14680066,null===(u=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=u.childLanes,o.lanes=u.lanes,o.child=u.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=u.memoizedProps,o.memoizedState=u.memoizedState,o.updateQueue=u.updateQueue,o.type=u.type,e=u.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Sr($s,1&$s.current|2),t.child}e=e.sibling}null!==o.tail&&Ze()>Uu&&(t.flags|=128,a=!0,ji(o,!1),t.lanes=4194304)}else{if(!a)if(null!==(e=eo(u))){if(t.flags|=128,a=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),ji(o,!0),null===o.tail&&"hidden"===o.tailMode&&!u.alternate&&!rs)return qi(t),null}else 2*Ze()-o.renderingStartTime>Uu&&1073741824!==n&&(t.flags|=128,a=!0,ji(o,!1),t.lanes=4194304);o.isBackwards?(u.sibling=t.child,t.child=u):(null!==(n=o.last)?n.sibling=u:t.child=u,o.last=u)}return null!==o.tail?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=Ze(),t.sibling=null,n=$s.current,Sr($s,a?1&n|2:1&n),t):(qi(t),null);case 22:case 23:return hc(),a=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==a&&(t.flags|=8192),a&&0!==(1&t.mode)?0!==(1073741824&Ru)&&(qi(t),6&t.subtreeFlags&&(t.flags|=8192)):qi(t),null;case 24:case 25:return null}throw Error(s(156,t.tag))}function Xi(e,t){switch(ts(t),t.tag){case 1:return Rr(t.type)&&_r(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return Qs(),Nr(Tr),Nr(Ir),no(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 5:return Js(t),null;case 13:if(Nr($s),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(s(340));ps()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Nr($s),null;case 4:return Qs(),null;case 10:return Es(t.type._context),null;case 22:case 23:return hc(),null;default:return null}}Ai=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ri=function(){},_i=function(e,t,n,a){var r=e.memoizedProps;if(r!==a){e=t.stateNode,Xs(js.current);var s,o=null;switch(n){case"input":r=Y(e,r),a=Y(e,a),o=[];break;case"select":r=z({},r,{value:void 0}),a=z({},a,{value:void 0}),o=[];break;case"textarea":r=ae(e,r),a=ae(e,a),o=[];break;default:"function"!==typeof r.onClick&&"function"===typeof a.onClick&&(e.onclick=$a)}for(l in be(n,a),n=null,r)if(!a.hasOwnProperty(l)&&r.hasOwnProperty(l)&&null!=r[l])if("style"===l){var u=r[l];for(s in u)u.hasOwnProperty(s)&&(n||(n={}),n[s]="")}else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(i.hasOwnProperty(l)?o||(o=[]):(o=o||[]).push(l,null));for(l in a){var c=a[l];if(u=null!=r?r[l]:void 0,a.hasOwnProperty(l)&&c!==u&&(null!=c||null!=u))if("style"===l)if(u){for(s in u)!u.hasOwnProperty(s)||c&&c.hasOwnProperty(s)||(n||(n={}),n[s]="");for(s in c)c.hasOwnProperty(s)&&u[s]!==c[s]&&(n||(n={}),n[s]=c[s])}else n||(o||(o=[]),o.push(l,n)),n=c;else"dangerouslySetInnerHTML"===l?(c=c?c.__html:void 0,u=u?u.__html:void 0,null!=c&&u!==c&&(o=o||[]).push(l,c)):"children"===l?"string"!==typeof c&&"number"!==typeof c||(o=o||[]).push(l,""+c):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(i.hasOwnProperty(l)?(null!=c&&"onScroll"===l&&Pa("scroll",e),o||u===c||(o=[])):(o=o||[]).push(l,c))}n&&(o=o||[]).push("style",n);var l=o;(t.updateQueue=l)&&(t.flags|=4)}},Oi=function(e,t,n,a){n!==a&&(t.flags|=4)};var Yi=!1,Qi=!1,Zi="function"===typeof WeakSet?WeakSet:Set,Ji=null;function $i(e,t){var n=e.ref;if(null!==n)if("function"===typeof n)try{n(null)}catch(a){Cc(e,t,a)}else n.current=null}function eu(e,t,n){try{n()}catch(a){Cc(e,t,a)}}var tu=!1;function nu(e,t,n){var a=t.updateQueue;if(null!==(a=null!==a?a.lastEffect:null)){var r=a=a.next;do{if((r.tag&e)===e){var s=r.destroy;r.destroy=void 0,void 0!==s&&eu(t,n,s)}r=r.next}while(r!==a)}}function au(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var a=n.create;n.destroy=a()}n=n.next}while(n!==t)}}function ru(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"===typeof t?t(e):t.current=e}}function su(e){var t=e.alternate;null!==t&&(e.alternate=null,su(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[dr],delete t[pr],delete t[mr],delete t[gr],delete t[yr])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function ou(e){return 5===e.tag||3===e.tag||4===e.tag}function iu(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||ou(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function uu(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=$a));else if(4!==a&&null!==(e=e.child))for(uu(e,t,n),e=e.sibling;null!==e;)uu(e,t,n),e=e.sibling}function cu(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==a&&null!==(e=e.child))for(cu(e,t,n),e=e.sibling;null!==e;)cu(e,t,n),e=e.sibling}var lu=null,hu=!1;function du(e,t,n){for(n=n.child;null!==n;)pu(e,t,n),n=n.sibling}function pu(e,t,n){if(st&&"function"===typeof st.onCommitFiberUnmount)try{st.onCommitFiberUnmount(rt,n)}catch(i){}switch(n.tag){case 5:Qi||$i(n,t);case 6:var a=lu,r=hu;lu=null,du(e,t,n),hu=r,null!==(lu=a)&&(hu?(e=lu,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):lu.removeChild(n.stateNode));break;case 18:null!==lu&&(hu?(e=lu,n=n.stateNode,8===e.nodeType?ur(e.parentNode,n):1===e.nodeType&&ur(e,n),Ut(e)):ur(lu,n.stateNode));break;case 4:a=lu,r=hu,lu=n.stateNode.containerInfo,hu=!0,du(e,t,n),lu=a,hu=r;break;case 0:case 11:case 14:case 15:if(!Qi&&(null!==(a=n.updateQueue)&&null!==(a=a.lastEffect))){r=a=a.next;do{var s=r,o=s.destroy;s=s.tag,void 0!==o&&(0!==(2&s)||0!==(4&s))&&eu(n,t,o),r=r.next}while(r!==a)}du(e,t,n);break;case 1:if(!Qi&&($i(n,t),"function"===typeof(a=n.stateNode).componentWillUnmount))try{a.props=n.memoizedProps,a.state=n.memoizedState,a.componentWillUnmount()}catch(i){Cc(n,t,i)}du(e,t,n);break;case 21:du(e,t,n);break;case 22:1&n.mode?(Qi=(a=Qi)||null!==n.memoizedState,du(e,t,n),Qi=a):du(e,t,n);break;default:du(e,t,n)}}function fu(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Zi),t.forEach((function(t){var a=Ic.bind(null,e,t);n.has(t)||(n.add(t),t.then(a,a))}))}}function mu(e,t){var n=t.deletions;if(null!==n)for(var a=0;a<n.length;a++){var r=n[a];try{var o=e,i=t,u=i;e:for(;null!==u;){switch(u.tag){case 5:lu=u.stateNode,hu=!1;break e;case 3:case 4:lu=u.stateNode.containerInfo,hu=!0;break e}u=u.return}if(null===lu)throw Error(s(160));pu(o,i,r),lu=null,hu=!1;var c=r.alternate;null!==c&&(c.return=null),r.return=null}catch(l){Cc(r,t,l)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)gu(t,e),t=t.sibling}function gu(e,t){var n=e.alternate,a=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(mu(t,e),yu(e),4&a){try{nu(3,e,e.return),au(3,e)}catch(g){Cc(e,e.return,g)}try{nu(5,e,e.return)}catch(g){Cc(e,e.return,g)}}break;case 1:mu(t,e),yu(e),512&a&&null!==n&&$i(n,n.return);break;case 5:if(mu(t,e),yu(e),512&a&&null!==n&&$i(n,n.return),32&e.flags){var r=e.stateNode;try{de(r,"")}catch(g){Cc(e,e.return,g)}}if(4&a&&null!=(r=e.stateNode)){var o=e.memoizedProps,i=null!==n?n.memoizedProps:o,u=e.type,c=e.updateQueue;if(e.updateQueue=null,null!==c)try{"input"===u&&"radio"===o.type&&null!=o.name&&Z(r,o),ve(u,i);var l=ve(u,o);for(i=0;i<c.length;i+=2){var h=c[i],d=c[i+1];"style"===h?ge(r,d):"dangerouslySetInnerHTML"===h?he(r,d):"children"===h?de(r,d):v(r,h,d,l)}switch(u){case"input":J(r,o);break;case"textarea":se(r,o);break;case"select":var p=r._wrapperState.wasMultiple;r._wrapperState.wasMultiple=!!o.multiple;var f=o.value;null!=f?ne(r,!!o.multiple,f,!1):p!==!!o.multiple&&(null!=o.defaultValue?ne(r,!!o.multiple,o.defaultValue,!0):ne(r,!!o.multiple,o.multiple?[]:"",!1))}r[pr]=o}catch(g){Cc(e,e.return,g)}}break;case 6:if(mu(t,e),yu(e),4&a){if(null===e.stateNode)throw Error(s(162));r=e.stateNode,o=e.memoizedProps;try{r.nodeValue=o}catch(g){Cc(e,e.return,g)}}break;case 3:if(mu(t,e),yu(e),4&a&&null!==n&&n.memoizedState.isDehydrated)try{Ut(t.containerInfo)}catch(g){Cc(e,e.return,g)}break;case 4:default:mu(t,e),yu(e);break;case 13:mu(t,e),yu(e),8192&(r=e.child).flags&&(o=null!==r.memoizedState,r.stateNode.isHidden=o,!o||null!==r.alternate&&null!==r.alternate.memoizedState||(Vu=Ze())),4&a&&fu(e);break;case 22:if(h=null!==n&&null!==n.memoizedState,1&e.mode?(Qi=(l=Qi)||h,mu(t,e),Qi=l):mu(t,e),yu(e),8192&a){if(l=null!==e.memoizedState,(e.stateNode.isHidden=l)&&!h&&0!==(1&e.mode))for(Ji=e,h=e.child;null!==h;){for(d=Ji=h;null!==Ji;){switch(f=(p=Ji).child,p.tag){case 0:case 11:case 14:case 15:nu(4,p,p.return);break;case 1:$i(p,p.return);var m=p.stateNode;if("function"===typeof m.componentWillUnmount){a=p,n=p.return;try{t=a,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(g){Cc(a,n,g)}}break;case 5:$i(p,p.return);break;case 22:if(null!==p.memoizedState){wu(d);continue}}null!==f?(f.return=p,Ji=f):wu(d)}h=h.sibling}e:for(h=null,d=e;;){if(5===d.tag){if(null===h){h=d;try{r=d.stateNode,l?"function"===typeof(o=r.style).setProperty?o.setProperty("display","none","important"):o.display="none":(u=d.stateNode,i=void 0!==(c=d.memoizedProps.style)&&null!==c&&c.hasOwnProperty("display")?c.display:null,u.style.display=me("display",i))}catch(g){Cc(e,e.return,g)}}}else if(6===d.tag){if(null===h)try{d.stateNode.nodeValue=l?"":d.memoizedProps}catch(g){Cc(e,e.return,g)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===e)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;null===d.sibling;){if(null===d.return||d.return===e)break e;h===d&&(h=null),d=d.return}h===d&&(h=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:mu(t,e),yu(e),4&a&&fu(e);case 21:}}function yu(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(ou(n)){var a=n;break e}n=n.return}throw Error(s(160))}switch(a.tag){case 5:var r=a.stateNode;32&a.flags&&(de(r,""),a.flags&=-33),cu(e,iu(e),r);break;case 3:case 4:var o=a.stateNode.containerInfo;uu(e,iu(e),o);break;default:throw Error(s(161))}}catch(i){Cc(e,e.return,i)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function bu(e,t,n){Ji=e,vu(e,t,n)}function vu(e,t,n){for(var a=0!==(1&e.mode);null!==Ji;){var r=Ji,s=r.child;if(22===r.tag&&a){var o=null!==r.memoizedState||Yi;if(!o){var i=r.alternate,u=null!==i&&null!==i.memoizedState||Qi;i=Yi;var c=Qi;if(Yi=o,(Qi=u)&&!c)for(Ji=r;null!==Ji;)u=(o=Ji).child,22===o.tag&&null!==o.memoizedState?Du(r):null!==u?(u.return=o,Ji=u):Du(r);for(;null!==s;)Ji=s,vu(s,t,n),s=s.sibling;Ji=r,Yi=i,Qi=c}xu(e)}else 0!==(8772&r.subtreeFlags)&&null!==s?(s.return=r,Ji=s):xu(e)}}function xu(e){for(;null!==Ji;){var t=Ji;if(0!==(8772&t.flags)){var n=t.alternate;try{if(0!==(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Qi||au(5,t);break;case 1:var a=t.stateNode;if(4&t.flags&&!Qi)if(null===n)a.componentDidMount();else{var r=t.elementType===t.type?n.memoizedProps:ni(t.type,n.memoizedProps);a.componentDidUpdate(r,n.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}var o=t.updateQueue;null!==o&&Gs(t,o,a);break;case 3:var i=t.updateQueue;if(null!==i){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Gs(t,i,n)}break;case 5:var u=t.stateNode;if(null===n&&4&t.flags){n=u;var c=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&n.focus();break;case"img":c.src&&(n.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var l=t.alternate;if(null!==l){var h=l.memoizedState;if(null!==h){var d=h.dehydrated;null!==d&&Ut(d)}}}break;default:throw Error(s(163))}Qi||512&t.flags&&ru(t)}catch(p){Cc(t,t.return,p)}}if(t===e){Ji=null;break}if(null!==(n=t.sibling)){n.return=t.return,Ji=n;break}Ji=t.return}}function wu(e){for(;null!==Ji;){var t=Ji;if(t===e){Ji=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Ji=n;break}Ji=t.return}}function Du(e){for(;null!==Ji;){var t=Ji;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{au(4,t)}catch(u){Cc(t,n,u)}break;case 1:var a=t.stateNode;if("function"===typeof a.componentDidMount){var r=t.return;try{a.componentDidMount()}catch(u){Cc(t,r,u)}}var s=t.return;try{ru(t)}catch(u){Cc(t,s,u)}break;case 5:var o=t.return;try{ru(t)}catch(u){Cc(t,o,u)}}}catch(u){Cc(t,t.return,u)}if(t===e){Ji=null;break}var i=t.sibling;if(null!==i){i.return=t.return,Ji=i;break}Ji=t.return}}var ku,Cu=Math.ceil,Nu=x.ReactCurrentDispatcher,Su=x.ReactCurrentOwner,Eu=x.ReactCurrentBatchConfig,Iu=0,Tu=null,Fu=null,Au=0,Ru=0,_u=Cr(0),Ou=0,Lu=null,Mu=0,zu=0,Bu=0,Pu=null,Wu=null,Vu=0,Uu=1/0,Gu=null,Hu=!1,ju=null,qu=null,Ku=!1,Xu=null,Yu=0,Qu=0,Zu=null,Ju=-1,$u=0;function ec(){return 0!==(6&Iu)?Ze():-1!==Ju?Ju:Ju=Ze()}function tc(e){return 0===(1&e.mode)?1:0!==(2&Iu)&&0!==Au?Au&-Au:null!==ms.transition?(0===$u&&($u=mt()),$u):0!==(e=vt)?e:e=void 0===(e=window.event)?16:Qt(e.type)}function nc(e,t,n,a){if(50<Qu)throw Qu=0,Zu=null,Error(s(185));yt(e,n,a),0!==(2&Iu)&&e===Tu||(e===Tu&&(0===(2&Iu)&&(zu|=n),4===Ou&&ic(e,Au)),ac(e,a),1===n&&0===Iu&&0===(1&t.mode)&&(Uu=Ze()+500,Pr&&Ur()))}function ac(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,a=e.pingedLanes,r=e.expirationTimes,s=e.pendingLanes;0<s;){var o=31-ot(s),i=1<<o,u=r[o];-1===u?0!==(i&n)&&0===(i&a)||(r[o]=pt(i,t)):u<=t&&(e.expiredLanes|=i),s&=~i}}(e,t);var a=dt(e,e===Tu?Au:0);if(0===a)null!==n&&Xe(n),e.callbackNode=null,e.callbackPriority=0;else if(t=a&-a,e.callbackPriority!==t){if(null!=n&&Xe(n),1===t)0===e.tag?function(e){Pr=!0,Vr(e)}(uc.bind(null,e)):Vr(uc.bind(null,e)),or((function(){0===(6&Iu)&&Ur()})),n=null;else{switch(xt(a)){case 1:n=$e;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=at}n=Tc(n,rc.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function rc(e,t){if(Ju=-1,$u=0,0!==(6&Iu))throw Error(s(327));var n=e.callbackNode;if(Dc()&&e.callbackNode!==n)return null;var a=dt(e,e===Tu?Au:0);if(0===a)return null;if(0!==(30&a)||0!==(a&e.expiredLanes)||t)t=gc(e,a);else{t=a;var r=Iu;Iu|=2;var o=fc();for(Tu===e&&Au===t||(Gu=null,Uu=Ze()+500,dc(e,t));;)try{bc();break}catch(u){pc(e,u)}Ss(),Nu.current=o,Iu=r,null!==Fu?t=0:(Tu=null,Au=0,t=Ou)}if(0!==t){if(2===t&&(0!==(r=ft(e))&&(a=r,t=sc(e,r))),1===t)throw n=Lu,dc(e,0),ic(e,a),ac(e,Ze()),n;if(6===t)ic(e,a);else{if(r=e.current.alternate,0===(30&a)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var a=0;a<n.length;a++){var r=n[a],s=r.getSnapshot;r=r.value;try{if(!ia(s(),r))return!1}catch(i){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(r)&&(2===(t=gc(e,a))&&(0!==(o=ft(e))&&(a=o,t=sc(e,o))),1===t))throw n=Lu,dc(e,0),ic(e,a),ac(e,Ze()),n;switch(e.finishedWork=r,e.finishedLanes=a,t){case 0:case 1:throw Error(s(345));case 2:case 5:wc(e,Wu,Gu);break;case 3:if(ic(e,a),(130023424&a)===a&&10<(t=Vu+500-Ze())){if(0!==dt(e,0))break;if(((r=e.suspendedLanes)&a)!==a){ec(),e.pingedLanes|=e.suspendedLanes&r;break}e.timeoutHandle=ar(wc.bind(null,e,Wu,Gu),t);break}wc(e,Wu,Gu);break;case 4:if(ic(e,a),(4194240&a)===a)break;for(t=e.eventTimes,r=-1;0<a;){var i=31-ot(a);o=1<<i,(i=t[i])>r&&(r=i),a&=~o}if(a=r,10<(a=(120>(a=Ze()-a)?120:480>a?480:1080>a?1080:1920>a?1920:3e3>a?3e3:4320>a?4320:1960*Cu(a/1960))-a)){e.timeoutHandle=ar(wc.bind(null,e,Wu,Gu),a);break}wc(e,Wu,Gu);break;default:throw Error(s(329))}}}return ac(e,Ze()),e.callbackNode===n?rc.bind(null,e):null}function sc(e,t){var n=Pu;return e.current.memoizedState.isDehydrated&&(dc(e,t).flags|=256),2!==(e=gc(e,t))&&(t=Wu,Wu=n,null!==t&&oc(t)),e}function oc(e){null===Wu?Wu=e:Wu.push.apply(Wu,e)}function ic(e,t){for(t&=~Bu,t&=~zu,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-ot(t),a=1<<n;e[n]=-1,t&=~a}}function uc(e){if(0!==(6&Iu))throw Error(s(327));Dc();var t=dt(e,0);if(0===(1&t))return ac(e,Ze()),null;var n=gc(e,t);if(0!==e.tag&&2===n){var a=ft(e);0!==a&&(t=a,n=sc(e,a))}if(1===n)throw n=Lu,dc(e,0),ic(e,t),ac(e,Ze()),n;if(6===n)throw Error(s(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,wc(e,Wu,Gu),ac(e,Ze()),null}function cc(e,t){var n=Iu;Iu|=1;try{return e(t)}finally{0===(Iu=n)&&(Uu=Ze()+500,Pr&&Ur())}}function lc(e){null!==Xu&&0===Xu.tag&&0===(6&Iu)&&Dc();var t=Iu;Iu|=1;var n=Eu.transition,a=vt;try{if(Eu.transition=null,vt=1,e)return e()}finally{vt=a,Eu.transition=n,0===(6&(Iu=t))&&Ur()}}function hc(){Ru=_u.current,Nr(_u)}function dc(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,rr(n)),null!==Fu)for(n=Fu.return;null!==n;){var a=n;switch(ts(a),a.tag){case 1:null!==(a=a.type.childContextTypes)&&void 0!==a&&_r();break;case 3:Qs(),Nr(Tr),Nr(Ir),no();break;case 5:Js(a);break;case 4:Qs();break;case 13:case 19:Nr($s);break;case 10:Es(a.type._context);break;case 22:case 23:hc()}n=n.return}if(Tu=e,Fu=e=_c(e.current,null),Au=Ru=t,Ou=0,Lu=null,Bu=zu=Mu=0,Wu=Pu=null,null!==As){for(t=0;t<As.length;t++)if(null!==(a=(n=As[t]).interleaved)){n.interleaved=null;var r=a.next,s=n.pending;if(null!==s){var o=s.next;s.next=r,a.next=o}n.pending=a}As=null}return e}function pc(e,t){for(;;){var n=Fu;try{if(Ss(),ao.current=Jo,co){for(var a=oo.memoizedState;null!==a;){var r=a.queue;null!==r&&(r.pending=null),a=a.next}co=!1}if(so=0,uo=io=oo=null,lo=!1,ho=0,Su.current=null,null===n||null===n.return){Ou=1,Lu=t,Fu=null;break}e:{var o=e,i=n.return,u=n,c=t;if(t=Au,u.flags|=32768,null!==c&&"object"===typeof c&&"function"===typeof c.then){var l=c,h=u,d=h.tag;if(0===(1&h.mode)&&(0===d||11===d||15===d)){var p=h.alternate;p?(h.updateQueue=p.updateQueue,h.memoizedState=p.memoizedState,h.lanes=p.lanes):(h.updateQueue=null,h.memoizedState=null)}var f=gi(i);if(null!==f){f.flags&=-257,yi(f,i,u,0,t),1&f.mode&&mi(o,l,t),c=l;var m=(t=f).updateQueue;if(null===m){var g=new Set;g.add(c),t.updateQueue=g}else m.add(c);break e}if(0===(1&t)){mi(o,l,t),mc();break e}c=Error(s(426))}else if(rs&&1&u.mode){var y=gi(i);if(null!==y){0===(65536&y.flags)&&(y.flags|=256),yi(y,i,u,0,t),fs(ci(c,u));break e}}o=c=ci(c,u),4!==Ou&&(Ou=2),null===Pu?Pu=[o]:Pu.push(o),o=i;do{switch(o.tag){case 3:o.flags|=65536,t&=-t,o.lanes|=t,Vs(o,pi(0,c,t));break e;case 1:u=c;var b=o.type,v=o.stateNode;if(0===(128&o.flags)&&("function"===typeof b.getDerivedStateFromError||null!==v&&"function"===typeof v.componentDidCatch&&(null===qu||!qu.has(v)))){o.flags|=65536,t&=-t,o.lanes|=t,Vs(o,fi(o,u,t));break e}}o=o.return}while(null!==o)}xc(n)}catch(x){t=x,Fu===n&&null!==n&&(Fu=n=n.return);continue}break}}function fc(){var e=Nu.current;return Nu.current=Jo,null===e?Jo:e}function mc(){0!==Ou&&3!==Ou&&2!==Ou||(Ou=4),null===Tu||0===(268435455&Mu)&&0===(268435455&zu)||ic(Tu,Au)}function gc(e,t){var n=Iu;Iu|=2;var a=fc();for(Tu===e&&Au===t||(Gu=null,dc(e,t));;)try{yc();break}catch(r){pc(e,r)}if(Ss(),Iu=n,Nu.current=a,null!==Fu)throw Error(s(261));return Tu=null,Au=0,Ou}function yc(){for(;null!==Fu;)vc(Fu)}function bc(){for(;null!==Fu&&!Ye();)vc(Fu)}function vc(e){var t=ku(e.alternate,e,Ru);e.memoizedProps=e.pendingProps,null===t?xc(e):Fu=t,Su.current=null}function xc(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(32768&t.flags)){if(null!==(n=Ki(n,t,Ru)))return void(Fu=n)}else{if(null!==(n=Xi(n,t)))return n.flags&=32767,void(Fu=n);if(null===e)return Ou=6,void(Fu=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Fu=t);Fu=t=e}while(null!==t);0===Ou&&(Ou=5)}function wc(e,t,n){var a=vt,r=Eu.transition;try{Eu.transition=null,vt=1,function(e,t,n,a){do{Dc()}while(null!==Xu);if(0!==(6&Iu))throw Error(s(327));n=e.finishedWork;var r=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(s(177));e.callbackNode=null,e.callbackPriority=0;var o=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var a=e.eventTimes;for(e=e.expirationTimes;0<n;){var r=31-ot(n),s=1<<r;t[r]=0,a[r]=-1,e[r]=-1,n&=~s}}(e,o),e===Tu&&(Fu=Tu=null,Au=0),0===(2064&n.subtreeFlags)&&0===(2064&n.flags)||Ku||(Ku=!0,Tc(tt,(function(){return Dc(),null}))),o=0!==(15990&n.flags),0!==(15990&n.subtreeFlags)||o){o=Eu.transition,Eu.transition=null;var i=vt;vt=1;var u=Iu;Iu|=4,Su.current=null,function(e,t){if(er=Ht,pa(e=da())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var a=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(a&&0!==a.rangeCount){n=a.anchorNode;var r=a.anchorOffset,o=a.focusNode;a=a.focusOffset;try{n.nodeType,o.nodeType}catch(w){n=null;break e}var i=0,u=-1,c=-1,l=0,h=0,d=e,p=null;t:for(;;){for(var f;d!==n||0!==r&&3!==d.nodeType||(u=i+r),d!==o||0!==a&&3!==d.nodeType||(c=i+a),3===d.nodeType&&(i+=d.nodeValue.length),null!==(f=d.firstChild);)p=d,d=f;for(;;){if(d===e)break t;if(p===n&&++l===r&&(u=i),p===o&&++h===a&&(c=i),null!==(f=d.nextSibling))break;p=(d=p).parentNode}d=f}n=-1===u||-1===c?null:{start:u,end:c}}else n=null}n=n||{start:0,end:0}}else n=null;for(tr={focusedElem:e,selectionRange:n},Ht=!1,Ji=t;null!==Ji;)if(e=(t=Ji).child,0!==(1028&t.subtreeFlags)&&null!==e)e.return=t,Ji=e;else for(;null!==Ji;){t=Ji;try{var m=t.alternate;if(0!==(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var g=m.memoizedProps,y=m.memoizedState,b=t.stateNode,v=b.getSnapshotBeforeUpdate(t.elementType===t.type?g:ni(t.type,g),y);b.__reactInternalSnapshotBeforeUpdate=v}break;case 3:var x=t.stateNode.containerInfo;1===x.nodeType?x.textContent="":9===x.nodeType&&x.documentElement&&x.removeChild(x.documentElement);break;default:throw Error(s(163))}}catch(w){Cc(t,t.return,w)}if(null!==(e=t.sibling)){e.return=t.return,Ji=e;break}Ji=t.return}m=tu,tu=!1}(e,n),gu(n,e),fa(tr),Ht=!!er,tr=er=null,e.current=n,bu(n,e,r),Qe(),Iu=u,vt=i,Eu.transition=o}else e.current=n;if(Ku&&(Ku=!1,Xu=e,Yu=r),o=e.pendingLanes,0===o&&(qu=null),function(e){if(st&&"function"===typeof st.onCommitFiberRoot)try{st.onCommitFiberRoot(rt,e,void 0,128===(128&e.current.flags))}catch(t){}}(n.stateNode),ac(e,Ze()),null!==t)for(a=e.onRecoverableError,n=0;n<t.length;n++)r=t[n],a(r.value,{componentStack:r.stack,digest:r.digest});if(Hu)throw Hu=!1,e=ju,ju=null,e;0!==(1&Yu)&&0!==e.tag&&Dc(),o=e.pendingLanes,0!==(1&o)?e===Zu?Qu++:(Qu=0,Zu=e):Qu=0,Ur()}(e,t,n,a)}finally{Eu.transition=r,vt=a}return null}function Dc(){if(null!==Xu){var e=xt(Yu),t=Eu.transition,n=vt;try{if(Eu.transition=null,vt=16>e?16:e,null===Xu)var a=!1;else{if(e=Xu,Xu=null,Yu=0,0!==(6&Iu))throw Error(s(331));var r=Iu;for(Iu|=4,Ji=e.current;null!==Ji;){var o=Ji,i=o.child;if(0!==(16&Ji.flags)){var u=o.deletions;if(null!==u){for(var c=0;c<u.length;c++){var l=u[c];for(Ji=l;null!==Ji;){var h=Ji;switch(h.tag){case 0:case 11:case 15:nu(8,h,o)}var d=h.child;if(null!==d)d.return=h,Ji=d;else for(;null!==Ji;){var p=(h=Ji).sibling,f=h.return;if(su(h),h===l){Ji=null;break}if(null!==p){p.return=f,Ji=p;break}Ji=f}}}var m=o.alternate;if(null!==m){var g=m.child;if(null!==g){m.child=null;do{var y=g.sibling;g.sibling=null,g=y}while(null!==g)}}Ji=o}}if(0!==(2064&o.subtreeFlags)&&null!==i)i.return=o,Ji=i;else e:for(;null!==Ji;){if(0!==(2048&(o=Ji).flags))switch(o.tag){case 0:case 11:case 15:nu(9,o,o.return)}var b=o.sibling;if(null!==b){b.return=o.return,Ji=b;break e}Ji=o.return}}var v=e.current;for(Ji=v;null!==Ji;){var x=(i=Ji).child;if(0!==(2064&i.subtreeFlags)&&null!==x)x.return=i,Ji=x;else e:for(i=v;null!==Ji;){if(0!==(2048&(u=Ji).flags))try{switch(u.tag){case 0:case 11:case 15:au(9,u)}}catch(D){Cc(u,u.return,D)}if(u===i){Ji=null;break e}var w=u.sibling;if(null!==w){w.return=u.return,Ji=w;break e}Ji=u.return}}if(Iu=r,Ur(),st&&"function"===typeof st.onPostCommitFiberRoot)try{st.onPostCommitFiberRoot(rt,e)}catch(D){}a=!0}return a}finally{vt=n,Eu.transition=t}}return!1}function kc(e,t,n){e=Ps(e,t=pi(0,t=ci(n,t),1),1),t=ec(),null!==e&&(yt(e,1,t),ac(e,t))}function Cc(e,t,n){if(3===e.tag)kc(e,e,n);else for(;null!==t;){if(3===t.tag){kc(t,e,n);break}if(1===t.tag){var a=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof a.componentDidCatch&&(null===qu||!qu.has(a))){t=Ps(t,e=fi(t,e=ci(n,e),1),1),e=ec(),null!==t&&(yt(t,1,e),ac(t,e));break}}t=t.return}}function Nc(e,t,n){var a=e.pingCache;null!==a&&a.delete(t),t=ec(),e.pingedLanes|=e.suspendedLanes&n,Tu===e&&(Au&n)===n&&(4===Ou||3===Ou&&(130023424&Au)===Au&&500>Ze()-Vu?dc(e,0):Bu|=n),ac(e,t)}function Sc(e,t){0===t&&(0===(1&e.mode)?t=1:(t=lt,0===(130023424&(lt<<=1))&&(lt=4194304)));var n=ec();null!==(e=Os(e,t))&&(yt(e,t,n),ac(e,n))}function Ec(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Sc(e,n)}function Ic(e,t){var n=0;switch(e.tag){case 13:var a=e.stateNode,r=e.memoizedState;null!==r&&(n=r.retryLane);break;case 19:a=e.stateNode;break;default:throw Error(s(314))}null!==a&&a.delete(t),Sc(e,n)}function Tc(e,t){return Ke(e,t)}function Fc(e,t,n,a){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=a,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Ac(e,t,n,a){return new Fc(e,t,n,a)}function Rc(e){return!(!(e=e.prototype)||!e.isReactComponent)}function _c(e,t){var n=e.alternate;return null===n?((n=Ac(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Oc(e,t,n,a,r,o){var i=2;if(a=e,"function"===typeof e)Rc(e)&&(i=1);else if("string"===typeof e)i=5;else e:switch(e){case k:return Lc(n.children,r,o,t);case C:i=8,r|=8;break;case N:return(e=Ac(12,n,t,2|r)).elementType=N,e.lanes=o,e;case T:return(e=Ac(13,n,t,r)).elementType=T,e.lanes=o,e;case F:return(e=Ac(19,n,t,r)).elementType=F,e.lanes=o,e;case _:return Mc(n,r,o,t);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case S:i=10;break e;case E:i=9;break e;case I:i=11;break e;case A:i=14;break e;case R:i=16,a=null;break e}throw Error(s(130,null==e?e:typeof e,""))}return(t=Ac(i,n,t,r)).elementType=e,t.type=a,t.lanes=o,t}function Lc(e,t,n,a){return(e=Ac(7,e,a,t)).lanes=n,e}function Mc(e,t,n,a){return(e=Ac(22,e,a,t)).elementType=_,e.lanes=n,e.stateNode={isHidden:!1},e}function zc(e,t,n){return(e=Ac(6,e,null,t)).lanes=n,e}function Bc(e,t,n){return(t=Ac(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Pc(e,t,n,a,r){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=a,this.onRecoverableError=r,this.mutableSourceEagerHydrationData=null}function Wc(e,t,n,a,r,s,o,i,u){return e=new Pc(e,t,n,i,u),1===t?(t=1,!0===s&&(t|=8)):t=0,s=Ac(3,null,null,t),e.current=s,s.stateNode=e,s.memoizedState={element:a,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Ms(s),e}function Vc(e){if(!e)return Er;e:{if(Ue(e=e._reactInternals)!==e||1!==e.tag)throw Error(s(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Rr(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(s(171))}if(1===e.tag){var n=e.type;if(Rr(n))return Lr(e,n,t)}return t}function Uc(e,t,n,a,r,s,o,i,u){return(e=Wc(n,a,!0,e,0,s,0,i,u)).context=Vc(null),n=e.current,(s=Bs(a=ec(),r=tc(n))).callback=void 0!==t&&null!==t?t:null,Ps(n,s,r),e.current.lanes=r,yt(e,r,a),ac(e,a),e}function Gc(e,t,n,a){var r=t.current,s=ec(),o=tc(r);return n=Vc(n),null===t.context?t.context=n:t.pendingContext=n,(t=Bs(s,o)).payload={element:e},null!==(a=void 0===a?null:a)&&(t.callback=a),null!==(e=Ps(r,t,o))&&(nc(e,r,o,s),Ws(e,r,o)),o}function Hc(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function jc(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function qc(e,t){jc(e,t),(e=e.alternate)&&jc(e,t)}ku=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Tr.current)vi=!0;else{if(0===(e.lanes&n)&&0===(128&t.flags))return vi=!1,function(e,t,n){switch(t.tag){case 3:Ti(t),ps();break;case 5:Zs(t);break;case 1:Rr(t.type)&&Mr(t);break;case 4:Ys(t,t.stateNode.containerInfo);break;case 10:var a=t.type._context,r=t.memoizedProps.value;Sr(Ds,a._currentValue),a._currentValue=r;break;case 13:if(null!==(a=t.memoizedState))return null!==a.dehydrated?(Sr($s,1&$s.current),t.flags|=128,null):0!==(n&t.child.childLanes)?zi(e,t,n):(Sr($s,1&$s.current),null!==(e=Hi(e,t,n))?e.sibling:null);Sr($s,1&$s.current);break;case 19:if(a=0!==(n&t.childLanes),0!==(128&e.flags)){if(a)return Ui(e,t,n);t.flags|=128}if(null!==(r=t.memoizedState)&&(r.rendering=null,r.tail=null,r.lastEffect=null),Sr($s,$s.current),a)break;return null;case 22:case 23:return t.lanes=0,Ci(e,t,n)}return Hi(e,t,n)}(e,t,n);vi=0!==(131072&e.flags)}else vi=!1,rs&&0!==(1048576&t.flags)&&$r(t,qr,t.index);switch(t.lanes=0,t.tag){case 2:var a=t.type;Gi(e,t),e=t.pendingProps;var r=Ar(t,Ir.current);Ts(t,n),r=go(null,t,a,e,r,n);var o=yo();return t.flags|=1,"object"===typeof r&&null!==r&&"function"===typeof r.render&&void 0===r.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Rr(a)?(o=!0,Mr(t)):o=!1,t.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,Ms(t),r.updater=ri,t.stateNode=r,r._reactInternals=t,ui(t,a,e,n),t=Ii(null,t,a,!0,o,n)):(t.tag=0,rs&&o&&es(t),xi(null,t,r,n),t=t.child),t;case 16:a=t.elementType;e:{switch(Gi(e,t),e=t.pendingProps,a=(r=a._init)(a._payload),t.type=a,r=t.tag=function(e){if("function"===typeof e)return Rc(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===I)return 11;if(e===A)return 14}return 2}(a),e=ni(a,e),r){case 0:t=Si(null,t,a,e,n);break e;case 1:t=Ei(null,t,a,e,n);break e;case 11:t=wi(null,t,a,e,n);break e;case 14:t=Di(null,t,a,ni(a.type,e),n);break e}throw Error(s(306,a,""))}return t;case 0:return a=t.type,r=t.pendingProps,Si(e,t,a,r=t.elementType===a?r:ni(a,r),n);case 1:return a=t.type,r=t.pendingProps,Ei(e,t,a,r=t.elementType===a?r:ni(a,r),n);case 3:e:{if(Ti(t),null===e)throw Error(s(387));a=t.pendingProps,r=(o=t.memoizedState).element,zs(e,t),Us(t,a,null,n);var i=t.memoizedState;if(a=i.element,o.isDehydrated){if(o={element:a,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},t.updateQueue.baseState=o,t.memoizedState=o,256&t.flags){t=Fi(e,t,a,n,r=ci(Error(s(423)),t));break e}if(a!==r){t=Fi(e,t,a,n,r=ci(Error(s(424)),t));break e}for(as=cr(t.stateNode.containerInfo.firstChild),ns=t,rs=!0,ss=null,n=ws(t,null,a,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(ps(),a===r){t=Hi(e,t,n);break e}xi(e,t,a,n)}t=t.child}return t;case 5:return Zs(t),null===e&&cs(t),a=t.type,r=t.pendingProps,o=null!==e?e.memoizedProps:null,i=r.children,nr(a,r)?i=null:null!==o&&nr(a,o)&&(t.flags|=32),Ni(e,t),xi(e,t,i,n),t.child;case 6:return null===e&&cs(t),null;case 13:return zi(e,t,n);case 4:return Ys(t,t.stateNode.containerInfo),a=t.pendingProps,null===e?t.child=xs(t,null,a,n):xi(e,t,a,n),t.child;case 11:return a=t.type,r=t.pendingProps,wi(e,t,a,r=t.elementType===a?r:ni(a,r),n);case 7:return xi(e,t,t.pendingProps,n),t.child;case 8:case 12:return xi(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(a=t.type._context,r=t.pendingProps,o=t.memoizedProps,i=r.value,Sr(Ds,a._currentValue),a._currentValue=i,null!==o)if(ia(o.value,i)){if(o.children===r.children&&!Tr.current){t=Hi(e,t,n);break e}}else for(null!==(o=t.child)&&(o.return=t);null!==o;){var u=o.dependencies;if(null!==u){i=o.child;for(var c=u.firstContext;null!==c;){if(c.context===a){if(1===o.tag){(c=Bs(-1,n&-n)).tag=2;var l=o.updateQueue;if(null!==l){var h=(l=l.shared).pending;null===h?c.next=c:(c.next=h.next,h.next=c),l.pending=c}}o.lanes|=n,null!==(c=o.alternate)&&(c.lanes|=n),Is(o.return,n,t),u.lanes|=n;break}c=c.next}}else if(10===o.tag)i=o.type===t.type?null:o.child;else if(18===o.tag){if(null===(i=o.return))throw Error(s(341));i.lanes|=n,null!==(u=i.alternate)&&(u.lanes|=n),Is(i,n,t),i=o.sibling}else i=o.child;if(null!==i)i.return=o;else for(i=o;null!==i;){if(i===t){i=null;break}if(null!==(o=i.sibling)){o.return=i.return,i=o;break}i=i.return}o=i}xi(e,t,r.children,n),t=t.child}return t;case 9:return r=t.type,a=t.pendingProps.children,Ts(t,n),a=a(r=Fs(r)),t.flags|=1,xi(e,t,a,n),t.child;case 14:return r=ni(a=t.type,t.pendingProps),Di(e,t,a,r=ni(a.type,r),n);case 15:return ki(e,t,t.type,t.pendingProps,n);case 17:return a=t.type,r=t.pendingProps,r=t.elementType===a?r:ni(a,r),Gi(e,t),t.tag=1,Rr(a)?(e=!0,Mr(t)):e=!1,Ts(t,n),oi(t,a,r),ui(t,a,r,n),Ii(null,t,a,!0,e,n);case 19:return Ui(e,t,n);case 22:return Ci(e,t,n)}throw Error(s(156,t.tag))};var Kc="function"===typeof reportError?reportError:function(e){console.error(e)};function Xc(e){this._internalRoot=e}function Yc(e){this._internalRoot=e}function Qc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Zc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Jc(){}function $c(e,t,n,a,r){var s=n._reactRootContainer;if(s){var o=s;if("function"===typeof r){var i=r;r=function(){var e=Hc(o);i.call(e)}}Gc(t,o,e,r)}else o=function(e,t,n,a,r){if(r){if("function"===typeof a){var s=a;a=function(){var e=Hc(o);s.call(e)}}var o=Uc(t,a,e,0,null,!1,0,"",Jc);return e._reactRootContainer=o,e[fr]=o.current,Ua(8===e.nodeType?e.parentNode:e),lc(),o}for(;r=e.lastChild;)e.removeChild(r);if("function"===typeof a){var i=a;a=function(){var e=Hc(u);i.call(e)}}var u=Wc(e,0,!1,null,0,!1,0,"",Jc);return e._reactRootContainer=u,e[fr]=u.current,Ua(8===e.nodeType?e.parentNode:e),lc((function(){Gc(t,u,n,a)})),u}(n,t,e,r,a);return Hc(o)}Yc.prototype.render=Xc.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(s(409));Gc(e,t,null,null)},Yc.prototype.unmount=Xc.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;lc((function(){Gc(null,e,null,null)})),t[fr]=null}},Yc.prototype.unstable_scheduleHydration=function(e){if(e){var t=Ct();e={blockedOn:null,target:e,priority:t};for(var n=0;n<_t.length&&0!==t&&t<_t[n].priority;n++);_t.splice(n,0,e),0===n&&zt(e)}},wt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=ht(t.pendingLanes);0!==n&&(bt(t,1|n),ac(t,Ze()),0===(6&Iu)&&(Uu=Ze()+500,Ur()))}break;case 13:lc((function(){var t=Os(e,1);if(null!==t){var n=ec();nc(t,e,1,n)}})),qc(e,1)}},Dt=function(e){if(13===e.tag){var t=Os(e,134217728);if(null!==t)nc(t,e,134217728,ec());qc(e,134217728)}},kt=function(e){if(13===e.tag){var t=tc(e),n=Os(e,t);if(null!==n)nc(n,e,t,ec());qc(e,t)}},Ct=function(){return vt},Nt=function(e,t){var n=vt;try{return vt=e,t()}finally{vt=n}},De=function(e,t,n){switch(t){case"input":if(J(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var a=n[t];if(a!==e&&a.form===e.form){var r=wr(a);if(!r)throw Error(s(90));K(a),J(a,r)}}}break;case"textarea":se(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Ie=cc,Te=lc;var el={usingClientEntryPoint:!1,Events:[vr,xr,wr,Se,Ee,cc]},tl={findFiberByHostInstance:br,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},nl={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:x.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=je(e))?null:e.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var al=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!al.isDisabled&&al.supportsFiber)try{rt=al.inject(nl),st=al}catch(le){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=el,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Qc(t))throw Error(s(200));return function(e,t,n){var a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:D,key:null==a?null:""+a,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Qc(e))throw Error(s(299));var n=!1,a="",r=Kc;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(a=t.identifierPrefix),void 0!==t.onRecoverableError&&(r=t.onRecoverableError)),t=Wc(e,1,!1,null,0,n,0,a,r),e[fr]=t.current,Ua(8===e.nodeType?e.parentNode:e),new Xc(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(s(188));throw e=Object.keys(e).join(","),Error(s(268,e))}return e=null===(e=je(t))?null:e.stateNode},t.flushSync=function(e){return lc(e)},t.hydrate=function(e,t,n){if(!Zc(t))throw Error(s(200));return $c(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Qc(e))throw Error(s(405));var a=null!=n&&n.hydratedSources||null,r=!1,o="",i=Kc;if(null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(r=!0),void 0!==n.identifierPrefix&&(o=n.identifierPrefix),void 0!==n.onRecoverableError&&(i=n.onRecoverableError)),t=Uc(t,null,e,1,null!=n?n:null,r,0,o,i),e[fr]=t.current,Ua(e),a)for(e=0;e<a.length;e++)r=(r=(n=a[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,r]:t.mutableSourceEagerHydrationData.push(n,r);return new Yc(t)},t.render=function(e,t,n){if(!Zc(t))throw Error(s(200));return $c(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Zc(e))throw Error(s(40));return!!e._reactRootContainer&&(lc((function(){$c(null,null,e,!1,(function(){e._reactRootContainer=null,e[fr]=null}))})),!0)},t.unstable_batchedUpdates=cc,t.unstable_renderSubtreeIntoContainer=function(e,t,n,a){if(!Zc(n))throw Error(s(200));if(null==e||void 0===e._reactInternals)throw Error(s(38));return $c(e,t,n,!1,a)},t.version="18.3.1-next-f1338f8080-20240426"},391:(e,t,n)=>{"use strict";var a=n(950);t.createRoot=a.createRoot,t.hydrateRoot=a.hydrateRoot},950:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(730)},153:(e,t,n)=>{"use strict";var a=n(43),r=Symbol.for("react.element"),s=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,i=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,u={key:!0,ref:!0,__self:!0,__source:!0};function c(e,t,n){var a,s={},c=null,l=null;for(a in void 0!==n&&(c=""+n),void 0!==t.key&&(c=""+t.key),void 0!==t.ref&&(l=t.ref),t)o.call(t,a)&&!u.hasOwnProperty(a)&&(s[a]=t[a]);if(e&&e.defaultProps)for(a in t=e.defaultProps)void 0===s[a]&&(s[a]=t[a]);return{$$typeof:r,type:e,key:c,ref:l,props:s,_owner:i.current}}t.jsx=c,t.jsxs=c},202:(e,t)=>{"use strict";var n=Symbol.for("react.element"),a=Symbol.for("react.portal"),r=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),i=Symbol.for("react.provider"),u=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),l=Symbol.for("react.suspense"),h=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),p=Symbol.iterator;var f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,g={};function y(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}function b(){}function v(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=y.prototype;var x=v.prototype=new b;x.constructor=v,m(x,y.prototype),x.isPureReactComponent=!0;var w=Array.isArray,D=Object.prototype.hasOwnProperty,k={current:null},C={key:!0,ref:!0,__self:!0,__source:!0};function N(e,t,a){var r,s={},o=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(o=""+t.key),t)D.call(t,r)&&!C.hasOwnProperty(r)&&(s[r]=t[r]);var u=arguments.length-2;if(1===u)s.children=a;else if(1<u){for(var c=Array(u),l=0;l<u;l++)c[l]=arguments[l+2];s.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===s[r]&&(s[r]=u[r]);return{$$typeof:n,type:e,key:o,ref:i,props:s,_owner:k.current}}function S(e){return"object"===typeof e&&null!==e&&e.$$typeof===n}var E=/\/+/g;function I(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function T(e,t,r,s,o){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var u=!1;if(null===e)u=!0;else switch(i){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case n:case a:u=!0}}if(u)return o=o(u=e),e=""===s?"."+I(u,0):s,w(o)?(r="",null!=e&&(r=e.replace(E,"$&/")+"/"),T(o,t,r,"",(function(e){return e}))):null!=o&&(S(o)&&(o=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,r+(!o.key||u&&u.key===o.key?"":(""+o.key).replace(E,"$&/")+"/")+e)),t.push(o)),1;if(u=0,s=""===s?".":s+":",w(e))for(var c=0;c<e.length;c++){var l=s+I(i=e[c],c);u+=T(i,t,r,l,o)}else if(l=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"===typeof l)for(e=l.call(e),c=0;!(i=e.next()).done;)u+=T(i=i.value,t,r,l=s+I(i,c++),o);else if("object"===i)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return u}function F(e,t,n){if(null==e)return e;var a=[],r=0;return T(e,a,"","",(function(e){return t.call(n,e,r++)})),a}function A(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var R={current:null},_={transition:null},O={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:_,ReactCurrentOwner:k};function L(){throw Error("act(...) is not supported in production builds of React.")}t.Children={map:F,forEach:function(e,t,n){F(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return F(e,(function(){t++})),t},toArray:function(e){return F(e,(function(e){return e}))||[]},only:function(e){if(!S(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=y,t.Fragment=r,t.Profiler=o,t.PureComponent=v,t.StrictMode=s,t.Suspense=l,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=O,t.act=L,t.cloneElement=function(e,t,a){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var r=m({},e.props),s=e.key,o=e.ref,i=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,i=k.current),void 0!==t.key&&(s=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(c in t)D.call(t,c)&&!C.hasOwnProperty(c)&&(r[c]=void 0===t[c]&&void 0!==u?u[c]:t[c])}var c=arguments.length-2;if(1===c)r.children=a;else if(1<c){u=Array(c);for(var l=0;l<c;l++)u[l]=arguments[l+2];r.children=u}return{$$typeof:n,type:e.type,key:s,ref:o,props:r,_owner:i}},t.createContext=function(e){return(e={$$typeof:u,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=N,t.createFactory=function(e){var t=N.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:c,render:e}},t.isValidElement=S,t.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:A}},t.memo=function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=_.transition;_.transition={};try{e()}finally{_.transition=t}},t.unstable_act=L,t.useCallback=function(e,t){return R.current.useCallback(e,t)},t.useContext=function(e){return R.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return R.current.useDeferredValue(e)},t.useEffect=function(e,t){return R.current.useEffect(e,t)},t.useId=function(){return R.current.useId()},t.useImperativeHandle=function(e,t,n){return R.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return R.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return R.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return R.current.useMemo(e,t)},t.useReducer=function(e,t,n){return R.current.useReducer(e,t,n)},t.useRef=function(e){return R.current.useRef(e)},t.useState=function(e){return R.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return R.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return R.current.useTransition()},t.version="18.3.1"},43:(e,t,n)=>{"use strict";e.exports=n(202)},579:(e,t,n)=>{"use strict";e.exports=n(153)},234:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var a=n-1>>>1,r=e[a];if(!(0<s(r,t)))break e;e[a]=t,e[n]=r,n=a}}function a(e){return 0===e.length?null:e[0]}function r(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var a=0,r=e.length,o=r>>>1;a<o;){var i=2*(a+1)-1,u=e[i],c=i+1,l=e[c];if(0>s(u,n))c<r&&0>s(l,u)?(e[a]=l,e[c]=n,a=c):(e[a]=u,e[i]=n,a=i);else{if(!(c<r&&0>s(l,n)))break e;e[a]=l,e[c]=n,a=c}}}return t}function s(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var i=Date,u=i.now();t.unstable_now=function(){return i.now()-u}}var c=[],l=[],h=1,d=null,p=3,f=!1,m=!1,g=!1,y="function"===typeof setTimeout?setTimeout:null,b="function"===typeof clearTimeout?clearTimeout:null,v="undefined"!==typeof setImmediate?setImmediate:null;function x(e){for(var t=a(l);null!==t;){if(null===t.callback)r(l);else{if(!(t.startTime<=e))break;r(l),t.sortIndex=t.expirationTime,n(c,t)}t=a(l)}}function w(e){if(g=!1,x(e),!m)if(null!==a(c))m=!0,_(D);else{var t=a(l);null!==t&&O(w,t.startTime-e)}}function D(e,n){m=!1,g&&(g=!1,b(S),S=-1),f=!0;var s=p;try{for(x(n),d=a(c);null!==d&&(!(d.expirationTime>n)||e&&!T());){var o=d.callback;if("function"===typeof o){d.callback=null,p=d.priorityLevel;var i=o(d.expirationTime<=n);n=t.unstable_now(),"function"===typeof i?d.callback=i:d===a(c)&&r(c),x(n)}else r(c);d=a(c)}if(null!==d)var u=!0;else{var h=a(l);null!==h&&O(w,h.startTime-n),u=!1}return u}finally{d=null,p=s,f=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var k,C=!1,N=null,S=-1,E=5,I=-1;function T(){return!(t.unstable_now()-I<E)}function F(){if(null!==N){var e=t.unstable_now();I=e;var n=!0;try{n=N(!0,e)}finally{n?k():(C=!1,N=null)}}else C=!1}if("function"===typeof v)k=function(){v(F)};else if("undefined"!==typeof MessageChannel){var A=new MessageChannel,R=A.port2;A.port1.onmessage=F,k=function(){R.postMessage(null)}}else k=function(){y(F,0)};function _(e){N=e,C||(C=!0,k())}function O(e,n){S=y((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){m||f||(m=!0,_(D))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):E=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return a(c)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,r,s){var o=t.unstable_now();switch("object"===typeof s&&null!==s?s="number"===typeof(s=s.delay)&&0<s?o+s:o:s=o,e){case 1:var i=-1;break;case 2:i=250;break;case 5:i=1073741823;break;case 4:i=1e4;break;default:i=5e3}return e={id:h++,callback:r,priorityLevel:e,startTime:s,expirationTime:i=s+i,sortIndex:-1},s>o?(e.sortIndex=s,n(l,e),null===a(c)&&e===a(l)&&(g?(b(S),S=-1):g=!0,O(w,s-o))):(e.sortIndex=i,n(c,e),m||f||(m=!0,_(D))),e},t.unstable_shouldYield=T,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},853:(e,t,n)=>{"use strict";e.exports=n(234)},334:(e,t,n)=>{var a=n(359),r=n(66),s=n(16),o=n(538),i=n(288),u=n(262),c=n(430);c.alea=a,c.xor128=r,c.xorwow=s,c.xorshift7=o,c.xor4096=i,c.tychei=u,e.exports=c},359:function(e,t,n){var a;!function(e,r){function s(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var a=.02519603282416938*(e+=t.charCodeAt(n));a-=e=a>>>0,e=(a*=e)>>>0,e+=4294967296*(a-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function i(e,t){var n=new s(e),a=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,a&&("object"==typeof a&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.alea=i}(0,e=n.nmd(e),n.amdD)},262:function(e,t,n){var a;!function(e,r){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function i(e,t){var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.tychei=i}(0,e=n.nmd(e),n.amdD)},66:function(e,t,n){var a;!function(e,r){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function i(e,t){var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.xor128=i}(0,e=n.nmd(e),n.amdD)},288:function(e,t,n){var a;!function(e,r){function s(e){var t=this;t.next=function(){var e,n,a=t.w,r=t.X,s=t.i;return t.w=a=a+1640531527|0,n=r[s+34&127],e=r[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[s]=n^e,t.i=s,n+(a^a>>>16)|0},function(e,t){var n,a,r,s,o,i=[],u=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,u=Math.max(u,t.length)),r=0,s=-32;s<u;++s)t&&(a^=t.charCodeAt((s+32)%t.length)),0===s&&(o=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,s>=0&&(o=o+1640531527|0,r=0==(n=i[127&s]^=a+o)?r+1:0);for(r>=128&&(i[127&(t&&t.length||0)]=-1),r=127,s=512;s>0;--s)a=i[r+34&127],n=i[r=r+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,i[r]=a^n;e.w=o,e.X=i,e.i=r}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function i(e,t){null==e&&(e=+new Date);var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.X&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.xor4096=i}(0,e=n.nmd(e),n.amdD)},538:function(e,t,n){var a;!function(e,r){function s(e){var t=this;t.next=function(){var e,n,a=t.x,r=t.i;return e=a[r],n=(e^=e>>>7)^e<<24,n^=(e=a[r+1&7])^e>>>10,n^=(e=a[r+3&7])^e>>>3,n^=(e=a[r+4&7])^e<<7,e=a[r+7&7],n^=(e^=e<<13)^e<<9,a[r]=n,t.i=r+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function i(e,t){null==e&&(e=+new Date);var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.x&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.xorshift7=i}(0,e=n.nmd(e),n.amdD)},16:function(e,t,n){var a;!function(e,r){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function i(e,t){var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.xorwow=i}(0,e=n.nmd(e),n.amdD)},430:function(e,t,n){var a;!function(r,s,o){var i,u=256,c=o.pow(u,6),l=o.pow(2,52),h=2*l,d=255;function p(e,t,n){var a=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(r.crypto||r.msCrypto).getRandomValues(e)),b(e)}catch(a){var t=r.navigator,n=t&&t.plugins;return[+new Date,r,n,r.screen,b(s)]}}():e,3),a),p=new f(a),v=function(){for(var e=p.g(6),t=c,n=0;e<l;)e=(e+n)*u,t*=u,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|p.g(4)},v.quick=function(){return p.g(4)/4294967296},v.double=v,y(b(p.S),s),(t.pass||n||function(e,t,n,a){return a&&(a.S&&m(a,p),e.state=function(){return m(p,{})}),n?(o.random=e,t):e})(v,d,"global"in t?t.global:this==o,t.state)}function f(e){var t,n=e.length,a=this,r=0,s=a.i=a.j=0,o=a.S=[];for(n||(e=[n++]);r<u;)o[r]=r++;for(r=0;r<u;r++)o[r]=o[s=d&s+e[r%n]+(t=o[r])],o[s]=t;(a.g=function(e){for(var t,n=0,r=a.i,s=a.j,o=a.S;e--;)t=o[r=d&r+1],n=n*u+o[d&(o[r]=o[s=d&s+t])+(o[s]=t)];return a.i=r,a.j=s,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,a=[],r=typeof e;if(t&&"object"==r)for(n in e)try{a.push(g(e[n],t-1))}catch(s){}return a.length?a:"string"==r?e:e+"\0"}function y(e,t){for(var n,a=e+"",r=0;r<a.length;)t[d&r]=d&(n^=19*t[d&r])+a.charCodeAt(r++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(o.random(),s),e.exports){e.exports=p;try{i=n(996)}catch(v){}}else void 0===(a=function(){return p}.call(t,n,t,e))||(e.exports=a)}("undefined"!==typeof self?self:this,[],Math)},966:e=>{var t=Object.create(null),n="word";t["can't"]=[{value:"ca",tag:n},{value:"n't",tag:n}],t["CAN'T"]=[{value:"CA",tag:n},{value:"N'T",tag:n}],t["Can't"]=[{value:"Ca",tag:n},{value:"n't",tag:n}],t["Couldn't"]=[{value:"could",tag:n},{value:"n't",tag:n}],t["COULDN'T"]=[{value:"COULD",tag:n},{value:"N'T",tag:n}],t["Couldn't"]=[{value:"Could",tag:n},{value:"n't",tag:n}],t["don't"]=[{value:"do",tag:n},{value:"n't",tag:n}],t["DON'T"]=[{value:"DO",tag:n},{value:"N'T",tag:n}],t["Don't"]=[{value:"Do",tag:n},{value:"n't",tag:n}],t["doesn't"]=[{value:"does",tag:n},{value:"n't",tag:n}],t["DOESN'T"]=[{value:"DOES",tag:n},{value:"N'T",tag:n}],t["Doesn't"]=[{value:"Does",tag:n},{value:"n't",tag:n}],t["didn't"]=[{value:"did",tag:n},{value:"n't",tag:n}],t["DIDN'T"]=[{value:"DID",tag:n},{value:"N'T",tag:n}],t["Didn't"]=[{value:"Did",tag:n},{value:"n't",tag:n}],t["hadn't"]=[{value:"had",tag:n},{value:"n't",tag:n}],t["HADN'T"]=[{value:"HAD",tag:n},{value:"N'T",tag:n}],t["Hadn't"]=[{value:"Had",tag:n},{value:"n't",tag:n}],t["mayn't"]=[{value:"may",tag:n},{value:"n't",tag:n}],t["MAYN'T"]=[{value:"MAY",tag:n},{value:"N'T",tag:n}],t["Mayn't"]=[{value:"May",tag:n},{value:"n't",tag:n}],t["mightn't"]=[{value:"might",tag:n},{value:"n't",tag:n}],t["MIGHTN'T"]=[{value:"MIGHT",tag:n},{value:"N'T",tag:n}],t["Mightn't"]=[{value:"Might",tag:n},{value:"n't",tag:n}],t["mustn't"]=[{value:"must",tag:n},{value:"n't",tag:n}],t["MUSTN'T"]=[{value:"MUST",tag:n},{value:"N'T",tag:n}],t["Mustn't"]=[{value:"Must",tag:n},{value:"n't",tag:n}],t["needn't"]=[{value:"need",tag:n},{value:"n't",tag:n}],t["NEEDN'T"]=[{value:"NEED",tag:n},{value:"N'T",tag:n}],t["Needn't"]=[{value:"Need",tag:n},{value:"n't",tag:n}],t["oughtn't"]=[{value:"ought",tag:n},{value:"n't",tag:n}],t["OUGHTN'T"]=[{value:"OUGHT",tag:n},{value:"N'T",tag:n}],t["Oughtn't"]=[{value:"Ought",tag:n},{value:"n't",tag:n}],t["shan't"]=[{value:"sha",tag:n},{value:"n't",tag:n}],t["SHAN'T"]=[{value:"SHA",tag:n},{value:"N'T",tag:n}],t["Shan't"]=[{value:"Sha",tag:n},{value:"n't",tag:n}],t["shouldn't"]=[{value:"should",tag:n},{value:"n't",tag:n}],t["SHOULDN'T"]=[{value:"SHOULD",tag:n},{value:"N'T",tag:n}],t["Shouldn't"]=[{value:"Should",tag:n},{value:"n't",tag:n}],t["won't"]=[{value:"wo",tag:n},{value:"n't",tag:n}],t["WON'T"]=[{value:"WO",tag:n},{value:"N'T",tag:n}],t["Won't"]=[{value:"Wo",tag:n},{value:"n't",tag:n}],t["wouldn't"]=[{value:"would",tag:n},{value:"n't",tag:n}],t["WOULDN'T"]=[{value:"WOULD",tag:n},{value:"N'T",tag:n}],t["Wouldn't"]=[{value:"Would",tag:n},{value:"n't",tag:n}],t["ain't"]=[{value:"ai",tag:n},{value:"n't",tag:n}],t["AIN'T"]=[{value:"AI",tag:n},{value:"N'T",tag:n}],t["Ain't"]=[{value:"Ai",tag:n},{value:"n't",tag:n}],t["aren't"]=[{value:"are",tag:n},{value:"n't",tag:n}],t["AREN'T"]=[{value:"ARE",tag:n},{value:"N'T",tag:n}],t["Aren't"]=[{value:"Are",tag:n},{value:"n't",tag:n}],t["isn't"]=[{value:"is",tag:n},{value:"n't",tag:n}],t["ISN'T"]=[{value:"IS",tag:n},{value:"N'T",tag:n}],t["Isn't"]=[{value:"Is",tag:n},{value:"n't",tag:n}],t["wasn't"]=[{value:"was",tag:n},{value:"n't",tag:n}],t["WASN'T"]=[{value:"WAS",tag:n},{value:"N'T",tag:n}],t["Wasn't"]=[{value:"Was",tag:n},{value:"n't",tag:n}],t["weren't"]=[{value:"were",tag:n},{value:"n't",tag:n}],t["WEREN'T"]=[{value:"WERE",tag:n},{value:"N'T",tag:n}],t["Weren't"]=[{value:"Were",tag:n},{value:"n't",tag:n}],t["haven't"]=[{value:"have",tag:n},{value:"n't",tag:n}],t["HAVEN'T"]=[{value:"HAVE",tag:n},{value:"N'T",tag:n}],t["Haven't"]=[{value:"Have",tag:n},{value:"n't",tag:n}],t["hasn't"]=[{value:"has",tag:n},{value:"n't",tag:n}],t["HASN'T"]=[{value:"HAS",tag:n},{value:"N'T",tag:n}],t["Hasn't"]=[{value:"Has",tag:n},{value:"n't",tag:n}],t["daren't"]=[{value:"dare",tag:n},{value:"n't",tag:n}],t["DAREN'T"]=[{value:"DARE",tag:n},{value:"N'T",tag:n}],t["Daren't"]=[{value:"Dare",tag:n},{value:"n't",tag:n}],t["i'm"]=[{value:"i",tag:n},{value:"'m",tag:n}],t["I'M"]=[{value:"I",tag:n},{value:"'M",tag:n}],t["I'm"]=[{value:"I",tag:n},{value:"'m",tag:n}],t["i've"]=[{value:"i",tag:n},{value:"'ve",tag:n}],t["I'VE"]=[{value:"I",tag:n},{value:"'VE",tag:n}],t["I've"]=[{value:"I",tag:n},{value:"'ve",tag:n}],t["i'd"]=[{value:"i",tag:n},{value:"'d",tag:n}],t["I'D"]=[{value:"I",tag:n},{value:"'D",tag:n}],t["I'd"]=[{value:"I",tag:n},{value:"'d",tag:n}],t["i'll"]=[{value:"i",tag:n},{value:"'ll",tag:n}],t["I'LL"]=[{value:"I",tag:n},{value:"'LL",tag:n}],t["I'll"]=[{value:"I",tag:n},{value:"'ll",tag:n}],t["you've"]=[{value:"you",tag:n},{value:"'ve",tag:n}],t["YOU'VE"]=[{value:"YOU",tag:n},{value:"'VE",tag:n}],t["You've"]=[{value:"You",tag:n},{value:"'ve",tag:n}],t["you'd"]=[{value:"you",tag:n},{value:"'d",tag:n}],t["YOU'D"]=[{value:"YOU",tag:n},{value:"'D",tag:n}],t["You'd"]=[{value:"You",tag:n},{value:"'d",tag:n}],t["you'll"]=[{value:"you",tag:n},{value:"'ll",tag:n}],t["YOU'LL"]=[{value:"YOU",tag:n},{value:"'LL",tag:n}],t["You'll"]=[{value:"You",tag:n},{value:"'ll",tag:n}],t["they've"]=[{value:"they",tag:n},{value:"'ve",tag:n}],t["THEY'VE"]=[{value:"THEY",tag:n},{value:"'VE",tag:n}],t["They've"]=[{value:"They",tag:n},{value:"'ve",tag:n}],t["they'd"]=[{value:"they",tag:n},{value:"'d",tag:n}],t["THEY'D"]=[{value:"THEY",tag:n},{value:"'D",tag:n}],t["They'd"]=[{value:"They",tag:n},{value:"'d",tag:n}],t["they'll"]=[{value:"they",tag:n},{value:"'ll",tag:n}],t["THEY'LL"]=[{value:"THEY",tag:n},{value:"'LL",tag:n}],t["They'll"]=[{value:"They",tag:n},{value:"'ll",tag:n}],t["they're"]=[{value:"they",tag:n},{value:"'re",tag:n}],t["THEY'RE"]=[{value:"THEY",tag:n},{value:"'RE",tag:n}],t["They're"]=[{value:"They",tag:n},{value:"'re",tag:n}],t["we've"]=[{value:"we",tag:n},{value:"'ve",tag:n}],t["WE'VE"]=[{value:"WE",tag:n},{value:"'VE",tag:n}],t["We've"]=[{value:"We",tag:n},{value:"'ve",tag:n}],t["we'd"]=[{value:"we",tag:n},{value:"'d",tag:n}],t["WE'D"]=[{value:"WE",tag:n},{value:"'D",tag:n}],t["We'd"]=[{value:"We",tag:n},{value:"'d",tag:n}],t["we'll"]=[{value:"we",tag:n},{value:"'ll",tag:n}],t["WE'LL"]=[{value:"WE",tag:n},{value:"'LL",tag:n}],t["We'll"]=[{value:"We",tag:n},{value:"'ll",tag:n}],t["we're"]=[{value:"we",tag:n},{value:"'re",tag:n}],t["WE'RE"]=[{value:"WE",tag:n},{value:"'RE",tag:n}],t["We're"]=[{value:"We",tag:n},{value:"'re",tag:n}],t["she'd"]=[{value:"she",tag:n},{value:"'d",tag:n}],t["SHE'D"]=[{value:"SHE",tag:n},{value:"'D",tag:n}],t["She'd"]=[{value:"She",tag:n},{value:"'d",tag:n}],t["she'll"]=[{value:"she",tag:n},{value:"'ll",tag:n}],t["SHE'LL"]=[{value:"SHE",tag:n},{value:"'LL",tag:n}],t["She'll"]=[{value:"She",tag:n},{value:"'ll",tag:n}],t["she's"]=[{value:"she",tag:n},{value:"'s",tag:n}],t["SHE'S"]=[{value:"SHE",tag:n},{value:"'S",tag:n}],t["She's"]=[{value:"She",tag:n},{value:"'s",tag:n}],t["he'd"]=[{value:"he",tag:n},{value:"'d",tag:n}],t["HE'D"]=[{value:"HE",tag:n},{value:"'D",tag:n}],t["He'd"]=[{value:"He",tag:n},{value:"'d",tag:n}],t["he'll"]=[{value:"he",tag:n},{value:"'ll",tag:n}],t["HE'LL"]=[{value:"HE",tag:n},{value:"'LL",tag:n}],t["He'll"]=[{value:"He",tag:n},{value:"'ll",tag:n}],t["he's"]=[{value:"he",tag:n},{value:"'s",tag:n}],t["HE'S"]=[{value:"HE",tag:n},{value:"'S",tag:n}],t["He's"]=[{value:"He",tag:n},{value:"'s",tag:n}],t["it'd"]=[{value:"it",tag:n},{value:"'d",tag:n}],t["IT'D"]=[{value:"IT",tag:n},{value:"'D",tag:n}],t["It'd"]=[{value:"It",tag:n},{value:"'d",tag:n}],t["it'll"]=[{value:"it",tag:n},{value:"'ll",tag:n}],t["IT'LL"]=[{value:"IT",tag:n},{value:"'LL",tag:n}],t["It'll"]=[{value:"It",tag:n},{value:"'ll",tag:n}],t["it's"]=[{value:"it",tag:n},{value:"'s",tag:n}],t["IT'S"]=[{value:"IT",tag:n},{value:"'S",tag:n}],t["It's"]=[{value:"It",tag:n},{value:"'s",tag:n}],t["what've"]=[{value:"what",tag:n},{value:"'ve",tag:n}],t["WHAT'VE"]=[{value:"WHAT",tag:n},{value:"'VE",tag:n}],t["What've"]=[{value:"What",tag:n},{value:"'ve",tag:n}],t["what'd"]=[{value:"what",tag:n},{value:"'d",tag:n}],t["WHAT'D"]=[{value:"WHAT",tag:n},{value:"'D",tag:n}],t["What'd"]=[{value:"What",tag:n},{value:"'d",tag:n}],t["what'll"]=[{value:"what",tag:n},{value:"'ll",tag:n}],t["WHAT'LL"]=[{value:"WHAT",tag:n},{value:"'LL",tag:n}],t["What'll"]=[{value:"What",tag:n},{value:"'ll",tag:n}],t["what're"]=[{value:"what",tag:n},{value:"'re",tag:n}],t["WHAT'RE"]=[{value:"WHAT",tag:n},{value:"'RE",tag:n}],t["What're"]=[{value:"What",tag:n},{value:"'re",tag:n}],t["who've"]=[{value:"who",tag:n},{value:"'ve",tag:n}],t["WHO'VE"]=[{value:"WHO",tag:n},{value:"'VE",tag:n}],t["Who've"]=[{value:"Who",tag:n},{value:"'ve",tag:n}],t["who'd"]=[{value:"who",tag:n},{value:"'d",tag:n}],t["WHO'D"]=[{value:"WHO",tag:n},{value:"'D",tag:n}],t["Who'd"]=[{value:"Who",tag:n},{value:"'d",tag:n}],t["who'll"]=[{value:"who",tag:n},{value:"'ll",tag:n}],t["WHO'LL"]=[{value:"WHO",tag:n},{value:"'LL",tag:n}],t["Who'll"]=[{value:"Who",tag:n},{value:"'ll",tag:n}],t["who're"]=[{value:"who",tag:n},{value:"'re",tag:n}],t["WHO'RE"]=[{value:"WHO",tag:n},{value:"'RE",tag:n}],t["Who're"]=[{value:"Who",tag:n},{value:"'re",tag:n}],t["when've"]=[{value:"when",tag:n},{value:"'ve",tag:n}],t["WHEN'VE"]=[{value:"WHEN",tag:n},{value:"'VE",tag:n}],t["When've"]=[{value:"When",tag:n},{value:"'ve",tag:n}],t["when'd"]=[{value:"when",tag:n},{value:"'d",tag:n}],t["WHEN'D"]=[{value:"WHEN",tag:n},{value:"'D",tag:n}],t["When'd"]=[{value:"When",tag:n},{value:"'d",tag:n}],t["when'll"]=[{value:"when",tag:n},{value:"'ll",tag:n}],t["WHEN'LL"]=[{value:"WHEN",tag:n},{value:"'LL",tag:n}],t["When'll"]=[{value:"When",tag:n},{value:"'ll",tag:n}],t["when're"]=[{value:"when",tag:n},{value:"'re",tag:n}],t["WHEN'RE"]=[{value:"WHEN",tag:n},{value:"'RE",tag:n}],t["When're"]=[{value:"When",tag:n},{value:"'re",tag:n}],t["where've"]=[{value:"where",tag:n},{value:"'ve",tag:n}],t["WHERE'VE"]=[{value:"WHERE",tag:n},{value:"'VE",tag:n}],t["Where've"]=[{value:"Where",tag:n},{value:"'ve",tag:n}],t["where'd"]=[{value:"where",tag:n},{value:"'d",tag:n}],t["WHERE'D"]=[{value:"WHERE",tag:n},{value:"'D",tag:n}],t["Where'd"]=[{value:"Where",tag:n},{value:"'d",tag:n}],t["where'll"]=[{value:"where",tag:n},{value:"'ll",tag:n}],t["WHERE'LL"]=[{value:"WHERE",tag:n},{value:"'LL",tag:n}],t["Where'll"]=[{value:"Where",tag:n},{value:"'ll",tag:n}],t["where're"]=[{value:"where",tag:n},{value:"'re",tag:n}],t["WHERE'RE"]=[{value:"WHERE",tag:n},{value:"'RE",tag:n}],t["Where're"]=[{value:"Where",tag:n},{value:"'re",tag:n}],t["why've"]=[{value:"why",tag:n},{value:"'ve",tag:n}],t["WHY'VE"]=[{value:"WHY",tag:n},{value:"'VE",tag:n}],t["Why've"]=[{value:"Why",tag:n},{value:"'ve",tag:n}],t["why'd"]=[{value:"why",tag:n},{value:"'d",tag:n}],t["WHY'D"]=[{value:"WHY",tag:n},{value:"'D",tag:n}],t["Why'd"]=[{value:"Why",tag:n},{value:"'d",tag:n}],t["why'll"]=[{value:"why",tag:n},{value:"'ll",tag:n}],t["WHY'LL"]=[{value:"WHY",tag:n},{value:"'LL",tag:n}],t["Why'll"]=[{value:"Why",tag:n},{value:"'ll",tag:n}],t["why're"]=[{value:"why",tag:n},{value:"'re",tag:n}],t["WHY'RE"]=[{value:"WHY",tag:n},{value:"'RE",tag:n}],t["Why're"]=[{value:"Why",tag:n},{value:"'re",tag:n}],t["how've"]=[{value:"how",tag:n},{value:"'ve",tag:n}],t["HOW'VE"]=[{value:"HOW",tag:n},{value:"'VE",tag:n}],t["How've"]=[{value:"How",tag:n},{value:"'ve",tag:n}],t["how'd"]=[{value:"how",tag:n},{value:"'d",tag:n}],t["HOW'D"]=[{value:"HOW",tag:n},{value:"'D",tag:n}],t["How'd"]=[{value:"How",tag:n},{value:"'d",tag:n}],t["how'll"]=[{value:"how",tag:n},{value:"'ll",tag:n}],t["HOW'LL"]=[{value:"HOW",tag:n},{value:"'LL",tag:n}],t["How'll"]=[{value:"How",tag:n},{value:"'ll",tag:n}],t["how're"]=[{value:"how",tag:n},{value:"'re",tag:n}],t["HOW'RE"]=[{value:"HOW",tag:n},{value:"'RE",tag:n}],t["How're"]=[{value:"How",tag:n},{value:"'re",tag:n}],t["there've"]=[{value:"there",tag:n},{value:"'ve",tag:n}],t["THERE'VE"]=[{value:"THERE",tag:n},{value:"'VE",tag:n}],t["There've"]=[{value:"There",tag:n},{value:"'ve",tag:n}],t["there'd"]=[{value:"there",tag:n},{value:"'d",tag:n}],t["THERE'D"]=[{value:"THERE",tag:n},{value:"'D",tag:n}],t["There'd"]=[{value:"There",tag:n},{value:"'d",tag:n}],t["there'll"]=[{value:"there",tag:n},{value:"'ll",tag:n}],t["THERE'LL"]=[{value:"THERE",tag:n},{value:"'LL",tag:n}],t["There'll"]=[{value:"There",tag:n},{value:"'ll",tag:n}],t["there're"]=[{value:"there",tag:n},{value:"'re",tag:n}],t["THERE'RE"]=[{value:"THERE",tag:n},{value:"'RE",tag:n}],t["There're"]=[{value:"There",tag:n},{value:"'re",tag:n}],t["that've"]=[{value:"that",tag:n},{value:"'ve",tag:n}],t["THAT'VE"]=[{value:"THAT",tag:n},{value:"'VE",tag:n}],t["That've"]=[{value:"That",tag:n},{value:"'ve",tag:n}],t["that'd"]=[{value:"that",tag:n},{value:"'d",tag:n}],t["THAT'D"]=[{value:"THAT",tag:n},{value:"'D",tag:n}],t["That'd"]=[{value:"That",tag:n},{value:"'d",tag:n}],t["that'll"]=[{value:"that",tag:n},{value:"'ll",tag:n}],t["THAT'LL"]=[{value:"THAT",tag:n},{value:"'LL",tag:n}],t["That'll"]=[{value:"That",tag:n},{value:"'ll",tag:n}],t["that're"]=[{value:"that",tag:n},{value:"'re",tag:n}],t["THAT'RE"]=[{value:"THAT",tag:n},{value:"'RE",tag:n}],t["That're"]=[{value:"That",tag:n},{value:"'re",tag:n}],t["let's"]=[{value:"let",tag:n},{value:"'s",tag:n}],t["LET'S"]=[{value:"THAT",tag:n},{value:"'S",tag:n}],t["Let's"]=[{value:"Let",tag:n},{value:"'s",tag:n}],t["could've"]=[{value:"could",tag:n},{value:"'ve",tag:n}],t["COULD'VE"]=[{value:"COULD",tag:n},{value:"'VE",tag:n}],t["Could've"]=[{value:"Could",tag:n},{value:"'ve",tag:n}],t["should've"]=[{value:"should",tag:n},{value:"'ve",tag:n}],t["SHOULD'VE"]=[{value:"SHOULD",tag:n},{value:"'VE",tag:n}],t["Should've"]=[{value:"Should",tag:n},{value:"'ve",tag:n}],t["would've"]=[{value:"would",tag:n},{value:"'ve",tag:n}],t["WOULD'VE"]=[{value:"WOULD",tag:n},{value:"'VE",tag:n}],t["Would've"]=[{value:"Would",tag:n},{value:"'ve",tag:n}],t["i'll've"]=[{value:"i",tag:n},{value:"'ll",tag:n},{value:"'ve",tag:n}],t["I'LL'VE"]=[{value:"I",tag:n},{value:"'LL",tag:n},{value:"'VE",tag:n}],t["I'll've"]=[{value:"I",tag:n},{value:"'ll",tag:n},{value:"'ve",tag:n}],t["you'll've"]=[{value:"you",tag:n},{value:"'ll",tag:n},{value:"'ve",tag:n}],t["YOU'LL'VE"]=[{value:"YOU",tag:n},{value:"'LL",tag:n},{value:"'VE",tag:n}],t["You'll've"]=[{value:"You",tag:n},{value:"'ll",tag:n},{value:"'ve",tag:n}],t["they'll've"]=[{value:"they",tag:n},{value:"'ll",tag:n},{value:"'ve",tag:n}],t["THEY'LL'VE"]=[{value:"THEY",tag:n},{value:"'LL",tag:n},{value:"'VE",tag:n}],t["They'll've"]=[{value:"They",tag:n},{value:"'ll",tag:n},{value:"'ve",tag:n}],t["it'll've"]=[{value:"it",tag:n},{value:"'ll",tag:n},{value:"'ve",tag:n}],t["IT'LL'VE"]=[{value:"IT",tag:n},{value:"'LL",tag:n},{value:"'VE",tag:n}],t["It'll've"]=[{value:"It",tag:n},{value:"'ll",tag:n},{value:"'ve",tag:n}],t["he'll've"]=[{value:"he",tag:n},{value:"'ll",tag:n},{value:"'ve",tag:n}],t["HE'LL'VE"]=[{value:"HE",tag:n},{value:"'LL",tag:n},{value:"'VE",tag:n}],t["He'll've"]=[{value:"He",tag:n},{value:"'ll",tag:n},{value:"'ve",tag:n}],t["she'll've"]=[{value:"she",tag:n},{value:"'ll",tag:n},{value:"'ve",tag:n}],t["SHE'LL'VE"]=[{value:"SHE",tag:n},{value:"'LL",tag:n},{value:"'VE",tag:n}],t["She'll've"]=[{value:"She",tag:n},{value:"'ll",tag:n},{value:"'ve",tag:n}],t["shouldn't've"]=[{value:"should",tag:n},{value:"n't",tag:n},{value:"'ve",tag:n}],t["SHOULDN'T'VE"]=[{value:"SHOULD",tag:n},{value:"N'T",tag:n},{value:"'VE",tag:n}],t["Shouldn't've"]=[{value:"Should",tag:n},{value:"n't",tag:n},{value:"'ve",tag:n}],t["couldn't've"]=[{value:"could",tag:n},{value:"n't",tag:n},{value:"'ve",tag:n}],t["COULDN'T'VE"]=[{value:"COULD",tag:n},{value:"N'T",tag:n},{value:"'VE",tag:n}],t["Couldn't've"]=[{value:"Could",tag:n},{value:"n't",tag:n},{value:"'ve",tag:n}],t["wouldn't've"]=[{value:"would",tag:n},{value:"n't",tag:n},{value:"'ve",tag:n}],t["WOULDN'T'VE"]=[{value:"WOULD",tag:n},{value:"N'T",tag:n},{value:"'VE",tag:n}],t["Wouldn't've"]=[{value:"Would",tag:n},{value:"n't",tag:n},{value:"'ve",tag:n}],t["i'd've"]=[{value:"i",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["I'D'VE"]=[{value:"I",tag:n},{value:"'D",tag:n},{value:"'VE",tag:n}],t["I'd've"]=[{value:"I",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["you'd've"]=[{value:"you",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["YOU'D'VE"]=[{value:"YOU",tag:n},{value:"'D",tag:n},{value:"'VE",tag:n}],t["You'd've"]=[{value:"You",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["he'd've"]=[{value:"he",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["HE'D'VE"]=[{value:"HE",tag:n},{value:"'D",tag:n},{value:"'VE",tag:n}],t["He'd've"]=[{value:"He",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["she'd've"]=[{value:"she",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["SHE'D'VE"]=[{value:"SHE",tag:n},{value:"'D",tag:n},{value:"'VE",tag:n}],t["She'd've"]=[{value:"She",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["you'd've"]=[{value:"you",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["YOU'D'VE"]=[{value:"YOU",tag:n},{value:"'D",tag:n},{value:"'VE",tag:n}],t["You'd've"]=[{value:"You",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["they'd've"]=[{value:"they",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["THEY'D'VE"]=[{value:"THEY",tag:n},{value:"'D",tag:n},{value:"'VE",tag:n}],t["They'd've"]=[{value:"They",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["there'd've"]=[{value:"there",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["THERE'D'VE"]=[{value:"THERE",tag:n},{value:"'D",tag:n},{value:"'VE",tag:n}],t["There'd've"]=[{value:"There",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["it'd've"]=[{value:"it",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["IT'D'VE"]=[{value:"IT",tag:n},{value:"'D",tag:n},{value:"'VE",tag:n}],t["It'd've"]=[{value:"It",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],e.exports=t},231:(e,t,n)=>{var a=n(980),r=n(966),s=/\s+/g,o=a(),i=/'/,u=/([a-z]+)('s)$/i,c=/([a-z]+s)(')$/i,l=[{regex:/"[^"]*"/g,category:"quoted_phrase"},{regex:/(?:https?:\/\/)(?:[\da-z\.-]+)\.(?:[a-z\.]{2,6})(?:[\/\w\.\-\?#=]*)*\/?/gi,category:"url"},{regex:/[-!#$%&'*+\/=?^\w{|}~](?:\.?[-!#$%&'*+\/=?^\w`{|}~])*@[a-z0-9](?:-?\.?[a-z0-9])*(?:\.[a-z](?:-?[a-z0-9])*)+/gi,category:"email"},{regex:/@\w+/g,category:"mention"},{regex:/#[a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF_][a-z0-9\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF_]*/gi,category:"hashtag"},{regex:/#[\u0900-\u0963\u0970-\u097F_][\u0900-\u0963\u0970-\u097F\u0966-\u096F0-9_]*/gi,category:"hashtag"},{regex:o,category:"emoji"},{regex:/:-?[dps\*\/\[\]{}\(\)]|;-?[/(/)d]|<3/gi,category:"emoticon"},{regex:/(?:\d|[01]\d|2[0-3]):?(?:[0-5][0-9])?\s?(?:[ap]\.?m\.?|hours|hrs)/gi,category:"time"},{regex:/1\dth|[04-9]th|1st|2nd|3rd|[02-9]1st|[02-9]2nd|[02-9]3rd|[02-9][04-9]th|\d+\d[04-9]th|\d+\d1st|\d+\d2nd|\d+\d3rd/g,category:"ordinal"},{regex:/\d+\/\d+|\d(?:[\.,-\/]?\d)*(?:\.\d+)?/g,category:"number"},{regex:/[\u0966-\u096F]+\/[\u0966-\u096F]+|[\u0966-\u096F](?:[\.,-\/]?[\u0966-\u096F])*(?:\.[\u0966-\u096F]+)?/g,category:"number"},{regex:/[\u20bf\u20bd\u20b9\u20a8$\xa3\xa5\u20ac\u20a9]/g,category:"currency"},{regex:/[a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF][a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF']*/gi,category:"word"},{regex:/[\u0900-\u094F\u0951-\u0963\u0970-\u097F]+/gi,category:"word"},{regex:/[\u2019'\u2018\u2019`\u201c\u201d"\[\]\(\){}\u2026,\.!;\?\-:\u0964\u0965]/g,category:"punctuation"},{regex:/[\u0950~@#%\^\+=\*\|\/<>&]/g,category:"symbol"}],h={emoticon:"c",email:"e",emoji:"j",hashtag:"h",mention:"m",number:"n",ordinal:"o",quoted_phrase:"q",currency:"r",time:"t",url:"u",word:"w",alien:"z"};e.exports=function(){var e=l.slice(0),t=[],n=Object.create(null),a=function(e,t){var n,a=r[e];return void 0===a?(n=e.match(u))||(n=e.match(c))?(t.push({value:n[1],tag:"word"}),t.push({value:n[2],tag:"word"})):t.push({value:e,tag:"word"}):(t.push(Object.assign({},a[0])),t.push(Object.assign({},a[1])),a[2]&&t.push(Object.assign({},a[2]))),t},o=function(e,n){var r,u,c,l=e.trim();if(n.length)for(r=function(e,t){var n,r,s,o,u=e.match(t.regex),c=e.split(t.regex),l=[],h=t.category,d=0;for(u=u||[],r=0,s=c.length;r<s;r+=1)(o=(o=c[r]).trim())&&l.push(o),d<u.length&&("word"===h?(n=u[d],i.test(n)?l=a(n,l):l.push({value:n,tag:h})):l.push({value:u[d],tag:h})),d+=1;return l}(l,n[0]),u=0,c=r.length;u<c;u+=1)"string"===typeof r[u]?o(r[u],n.slice(1)):t.push(r[u]);else e.split(s).forEach((function(e){t.push({value:e.trim(),tag:"alien"})}))},d=function(t){e="object"===typeof t&&Object.keys(t).length?l.filter((function(e){var n=t[e.category];return void 0===n||null===n||!!n})):[];const n=Object.create(null);return e.forEach((function(e){n[e.category]=!0})),h={emoticon:"c",email:"e",emoji:"j",hashtag:"h",mention:"m",number:"n",ordinal:"o",quoted_phrase:"q",currency:"r",time:"t",url:"u",word:"w",alien:"z"},Object.keys(n).length},p=function(e,t){if(h[e])throw new Error("Tag "+e+" already exists");h[e]=t};return d({quoted_phrase:!1}),n.defineConfig=d,n.tokenize=function(n){return t=[],o(n,e),t},n.getTokensFP=function(){var e=[];return t.forEach((function(t){e.push(h[t.tag]?h[t.tag]:t.value)})),e.join("")},n.addTag=p,n.addRegex=function(t,n,a){if(!h[n]&&!a)throw new Error("Tag "+n+" doesn't exist; Provide a 'fingerprintCode' to add it as a tag.");h[n]||p(n,a),e.unshift({regex:t,category:n})},n}},817:()=>{},590:()=>{},530:()=>{},108:()=>{},551:()=>{},996:()=>{}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var s=t[a]={id:a,loaded:!1,exports:{}};return e[a].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.m=e,n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.f={},n.e=e=>Promise.all(Object.keys(n.f).reduce(((t,a)=>(n.f[a](e,t),t)),[])),n.u=e=>"static/js/"+e+".3a6149cd.chunk.js",n.miniCssF=e=>{},n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={},t="chatbot:";n.l=(a,r,s,o)=>{if(e[a])e[a].push(r);else{var i,u;if(void 0!==s)for(var c=document.getElementsByTagName("script"),l=0;l<c.length;l++){var h=c[l];if(h.getAttribute("src")==a||h.getAttribute("data-webpack")==t+s){i=h;break}}i||(u=!0,(i=document.createElement("script")).charset="utf-8",i.timeout=120,n.nc&&i.setAttribute("nonce",n.nc),i.setAttribute("data-webpack",t+s),i.src=a),e[a]=[r];var d=(t,n)=>{i.onerror=i.onload=null,clearTimeout(p);var r=e[a];if(delete e[a],i.parentNode&&i.parentNode.removeChild(i),r&&r.forEach((e=>e(n))),t)return t(n)},p=setTimeout(d.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=d.bind(null,i.onerror),i.onload=d.bind(null,i.onload),u&&document.head.appendChild(i)}}})(),n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n.p="/ChatXD/",(()=>{var e={792:0};n.f.j=(t,a)=>{var r=n.o(e,t)?e[t]:void 0;if(0!==r)if(r)a.push(r[2]);else{var s=new Promise(((n,a)=>r=e[t]=[n,a]));a.push(r[2]=s);var o=n.p+n.u(t),i=new Error;n.l(o,(a=>{if(n.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var s=a&&("load"===a.type?"missing":a.type),o=a&&a.target&&a.target.src;i.message="Loading chunk "+t+" failed.\n("+s+": "+o+")",i.name="ChunkLoadError",i.type=s,i.request=o,r[1](i)}}),"chunk-"+t,t)}};var t=(t,a)=>{var r,s,o=a[0],i=a[1],u=a[2],c=0;if(o.some((t=>0!==e[t]))){for(r in i)n.o(i,r)&&(n.m[r]=i[r]);if(u)u(n)}for(t&&t(a);c<o.length;c++)s=o[c],n.o(e,s)&&e[s]&&e[s][0](),e[s]=0},a=self.webpackChunkchatbot=self.webpackChunkchatbot||[];a.forEach(t.bind(null,0)),a.push=t.bind(null,a.push.bind(a))})(),(()=>{"use strict";var e={};n.r(e),n.d(e,{CompositeArrayBuffer:()=>ds,browserFiles:()=>ii,browserHTTPRequest:()=>gi,concatenateArrayBuffers:()=>As,copyModel:()=>yo,decodeWeights:()=>Ds,decodeWeightsStream:()=>Es,encodeWeights:()=>ws,fromMemory:()=>xi,fromMemorySync:()=>wi,getLoadHandlers:()=>Us,getModelArtifactsForJSON:()=>Ls,getModelArtifactsForJSONSync:()=>Os,getModelArtifactsInfoForJSON:()=>Ms,getSaveHandlers:()=>Vs,getWeightSpecs:()=>zs,http:()=>mi,isHTTPScheme:()=>pi,listModels:()=>mo,loadWeights:()=>li,moveModel:()=>bo,registerLoadRouter:()=>Ws,registerSaveRouter:()=>Ps,removeModel:()=>go,weightsLoaderFactory:()=>hi,withSaveHandler:()=>Di,withSaveHandlerSync:()=>ki});var t={};n.r(t),n.d(t,{assertParamsValid:()=>Ei,computeFlatOffset:()=>Wi,computeOutShape:()=>Ti,getNormalizedAxes:()=>_i,isSliceContinous:()=>Pi,maskToAxes:()=>Ii,parseSliceParams:()=>Vi,sliceInfo:()=>Ui,startForAxis:()=>zi,startIndicesWithElidedDims:()=>Oi,stopForAxis:()=>Bi,stopIndicesWithElidedDims:()=>Li,stridesForAxis:()=>Mi,stridesWithElidedDims:()=>Fi});var a={};n.r(a),n.d(a,{conv2d:()=>td,depthwiseConv2d:()=>rd,matMul:()=>sd});var r={};n.r(r),n.d(r,{collectGatherOpShapeInfo:()=>yf,computeOutShape:()=>gf,segOpComputeOptimalWindowSize:()=>mf});var s={};n.r(s),n.d(s,{ERF_A1:()=>Rp,ERF_A2:()=>_p,ERF_A3:()=>Op,ERF_A4:()=>Lp,ERF_A5:()=>Mp,ERF_P:()=>Ap,PARALLELIZE_THRESHOLD:()=>xp,RowPartitionType:()=>mp,SELU_SCALE:()=>Fp,SELU_SCALEALPHA:()=>Tp,applyActivation:()=>$h,assertAndGetBroadcastShape:()=>Zo,assertAxesAreInnerMostDims:()=>mc,assertParamsConsistent:()=>pp,assignToTypedArray:()=>Up,axesAreInnerMostDims:()=>hc,calculateShapes:()=>Th,checkEinsumDimSizes:()=>Zp,checkPadOnDimRoundingMode:()=>gu,combineLocations:()=>dc,combineRaggedTensorToTensorShapes:()=>gp,complexWithEvenIndex:()=>Pp,complexWithOddIndex:()=>Wp,computeConv2DInfo:()=>su,computeConv3DInfo:()=>ou,computeDefaultPad:()=>iu,computeDilation2DInfo:()=>nu,computeOptimalWindowSize:()=>wp,computeOutAndReduceShapes:()=>pc,computeOutShape:()=>fp,computePool2DInfo:()=>au,computePool3DInfo:()=>ru,convertConv2DDataFormat:()=>mu,decodeEinsumEquation:()=>Yp,eitherStridesOrDilationsAreOne:()=>pu,expandShapeToKeepDim:()=>fc,exponent:()=>Hp,exponents:()=>Gp,fromStringArrayToUint8:()=>vf,fromUint8ToStringArray:()=>bf,getAxesPermutation:()=>gc,getBroadcastDims:()=>Yo,getComplexWithIndex:()=>Vp,getEinsumComputePath:()=>Jp,getEinsumPermutation:()=>Qp,getFusedBiasGradient:()=>Jh,getFusedDyActivation:()=>Zh,getImageCenter:()=>Dp,getInnerMostAxes:()=>bc,getPermuted:()=>Cp,getRaggedRank:()=>bp,getReductionAxes:()=>Qo,getReshaped:()=>kp,getReshapedPermuted:()=>Np,getRowPartitionTypesHelper:()=>yp,getSliceBeginCoords:()=>Sp,getSliceSize:()=>Ep,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>nf,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>af,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>rf,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>uf,getSparseReshapeInputOutputMismatchErrorMessage:()=>lf,getSparseReshapeInputOutputMultipleErrorMessage:()=>cf,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>sf,getSparseReshapeNegativeOutputDimErrorMessage:()=>of,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>ff,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>hf,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>df,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>pf,getUndoAxesPermutation:()=>yc,isIdentityPermutation:()=>$p,log:()=>Pa,mergeRealAndImagArrays:()=>zp,prepareAndValidate:()=>Ip,prepareSplitSize:()=>tf,segment_util:()=>r,shouldFuse:()=>ed,slice_util:()=>t,splitRealAndImagArrays:()=>Bp,stridesOrDilationsArePositive:()=>fu,tupleValuesAreOne:()=>du,upcastType:()=>zr,validateDefaultValueShape:()=>vp,validateInput:()=>Ih,validateUpdateShape:()=>Eh,warn:()=>Ba});var o={};n.r(o),n.d(o,{json:()=>Ww});var i={};n.r(i),n.d(i,{json:()=>Vw});var u={};n.r(u),n.d(u,{json:()=>Uw});var c={};n.r(c),n.d(c,{json:()=>Gw});var l={};n.r(l),n.d(l,{json:()=>Hw});var h={};n.r(h),n.d(h,{json:()=>jw});var d={};n.r(d),n.d(d,{json:()=>qw});var p={};n.r(p),n.d(p,{json:()=>Kw});var f={};n.r(f),n.d(f,{json:()=>Xw});var m={};n.r(m),n.d(m,{json:()=>Yw});var g={};n.r(g),n.d(g,{json:()=>Qw});var y={};n.r(y),n.d(y,{json:()=>Zw});var b={};n.r(b),n.d(b,{json:()=>Jw});var v={};n.r(v),n.d(v,{json:()=>$w});var x={};n.r(x),n.d(x,{json:()=>eD});var w={};n.r(w),n.d(w,{json:()=>tD});var D={};n.r(D),n.d(D,{json:()=>nD});var k={};n.r(k),n.d(k,{json:()=>aD});var C={};n.r(C),n.d(C,{json:()=>rD});var N={};n.r(N),n.d(N,{OP_SCOPE_SUFFIX:()=>os,abs:()=>Xo,acos:()=>Hi,acosh:()=>ji,add:()=>Eo,addN:()=>qi,all:()=>Ki,any:()=>Xi,argMax:()=>Yi,argMin:()=>Qi,asin:()=>Zi,asinh:()=>Ji,atan:()=>$i,atan2:()=>eu,atanh:()=>tu,avgPool:()=>bu,avgPool3d:()=>vu,basicLSTMCell:()=>Nu,batchNorm:()=>Eu,batchNorm2d:()=>Iu,batchNorm3d:()=>Tu,batchNorm4d:()=>Fu,batchToSpaceND:()=>Su,bincount:()=>Au,bitwiseAnd:()=>Ru,booleanMaskAsync:()=>Wh,broadcastArgs:()=>_u,broadcastTo:()=>Ou,buffer:()=>ko,cast:()=>Co,ceil:()=>Lu,clipByValue:()=>Mu,clone:()=>No,complex:()=>us,concat:()=>xu,concat1d:()=>zu,concat2d:()=>Bu,concat3d:()=>Pu,concat4d:()=>Wu,conv1d:()=>Uu,conv2d:()=>Vu,conv2dTranspose:()=>Hu,conv3d:()=>ju,conv3dTranspose:()=>Ku,cos:()=>Xu,cosh:()=>Yu,cosineWindow:()=>Xh,cumprod:()=>Qu,cumsum:()=>Zu,denseBincount:()=>Ju,depthToSpace:()=>$u,depthwiseConv2d:()=>ec,diag:()=>tc,dilation2d:()=>nc,div:()=>To,divNoNan:()=>sc,dot:()=>oc,dropout:()=>qh,einsum:()=>ic,elu:()=>uc,enclosingPowerOfTwo:()=>Kh,ensureShape:()=>cc,equal:()=>ac,erf:()=>lc,euclideanNorm:()=>Cc,exp:()=>Nc,expandDims:()=>Sc,expm1:()=>Ec,eye:()=>Tc,fft:()=>hh,fill:()=>Go,floor:()=>Fc,floorDiv:()=>Io,fused:()=>a,gather:()=>Ac,gatherND:()=>jh,greater:()=>Rc,greaterEqual:()=>_c,ifft:()=>dh,imag:()=>Oc,image:()=>sp,inTopKAsync:()=>Yh,irfft:()=>ph,isFinite:()=>Lc,isInf:()=>Mc,isNaN:()=>zc,leakyRelu:()=>Bc,less:()=>Pc,lessEqual:()=>Wc,linalg:()=>op,linspace:()=>Vc,localResponseNormalization:()=>Uc,log:()=>Gc,log1p:()=>Hc,logSigmoid:()=>Kc,logSoftmax:()=>Xc,logSumExp:()=>Yc,logicalAnd:()=>Qc,logicalNot:()=>Zc,logicalOr:()=>Jc,logicalXor:()=>$c,losses:()=>ip,lowerBound:()=>nl,matMul:()=>wu,max:()=>vc,maxPool:()=>al,maxPool3d:()=>rl,maxPoolWithArgmax:()=>sl,maximum:()=>Jo,mean:()=>ol,meshgrid:()=>cl,min:()=>xc,minimum:()=>ll,mirrorPad:()=>hl,mod:()=>dl,moments:()=>pl,movingAverage:()=>Uh,mul:()=>Fo,multiRNNCell:()=>fl,multinomial:()=>ml,neg:()=>jc,norm:()=>kc,notEqual:()=>gl,oneHot:()=>yl,ones:()=>ul,onesLike:()=>bl,op:()=>is,outerProduct:()=>vl,pad:()=>xl,pad1d:()=>wl,pad2d:()=>Dl,pad3d:()=>kl,pad4d:()=>Cl,pool:()=>Sl,pow:()=>jo,prelu:()=>El,print:()=>So,prod:()=>Il,raggedGather:()=>Tl,raggedRange:()=>Fl,raggedTensorToTensor:()=>Al,rand:()=>Rl,randomGamma:()=>zl,randomNormal:()=>Bl,randomStandardNormal:()=>Pl,randomUniform:()=>Wl,randomUniformInt:()=>Vl,range:()=>Ul,real:()=>Gl,reciprocal:()=>Hl,relu:()=>jl,relu6:()=>ql,reshape:()=>yu,reverse:()=>Kl,reverse1d:()=>Xl,reverse2d:()=>Yl,reverse3d:()=>Ql,reverse4d:()=>Zl,rfft:()=>mh,round:()=>Jl,rsqrt:()=>$l,scalar:()=>Lo,scatterND:()=>Gh,searchSorted:()=>tl,selu:()=>eh,separableConv2d:()=>th,setdiff1dAsync:()=>nh,sigmoid:()=>Du,sign:()=>ah,signal:()=>rp,sin:()=>rh,sinh:()=>sh,slice:()=>ku,slice1d:()=>oh,slice2d:()=>ih,slice3d:()=>uh,slice4d:()=>ch,softmax:()=>lh,softplus:()=>qc,spaceToBatchND:()=>Nl,sparse:()=>up,sparseToDense:()=>Hh,spectral:()=>ap,split:()=>fh,sqrt:()=>Ao,square:()=>Ro,squaredDifference:()=>gh,squeeze:()=>yh,stack:()=>bh,step:()=>vh,stridedSlice:()=>xh,string:()=>cp,sub:()=>qo,sum:()=>wc,tan:()=>wh,tanh:()=>Cu,tensor:()=>ls,tensor1d:()=>Dh,tensor2d:()=>kh,tensor3d:()=>Ci,tensor4d:()=>Ch,tensor5d:()=>Nh,tensor6d:()=>Sh,tensorScatterUpdate:()=>Fh,tile:()=>Ic,topk:()=>Ah,transpose:()=>Vh,truncatedNormal:()=>Rh,unique:()=>_h,unsortedSegmentSum:()=>Oh,unstack:()=>Lh,upperBound:()=>Mh,variable:()=>zh,where:()=>rc,whereAsync:()=>Ph,zeros:()=>il,zerosLike:()=>_o});var S={};n.r(S),n.d(S,{mx:()=>sC,XI:()=>ZC,Nk:()=>JC,f6:()=>eN,ct:()=>eC,YG:()=>rN,hH:()=>lN,z3:()=>XN,sG:()=>sS,uM:()=>lS,vS:()=>ES,qB:()=>LS,GG:()=>zS,lg:()=>US,rq:()=>PS,cu:()=>tE,WR:()=>JS,GE:()=>rE,px:()=>oE,jC:()=>wE,He:()=>CE,hE:()=>OE,BF:()=>WN,Dk:()=>HE,cl:()=>JE,_B:()=>hI,ub:()=>gI,_f:()=>vI,Ku:()=>NI,qy:()=>EI,Zy:()=>PI,bu:()=>UI,zv:()=>jk,dH:()=>fC,HS:()=>KC,yH:()=>uT,l3:()=>lT,z9:()=>dT,x6:()=>yT,_m:()=>CT,eW:()=>TT,GK:()=>RT,SP:()=>LT,yr:()=>zT,dl:()=>gS,Dw:()=>GT,xT:()=>KT,_X:()=>wC,wz:()=>eF});var E=n(43),I=n(391);function T(e){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},T(e)}function F(e){var t=function(e,t){if("object"!=T(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||"default");if("object"!=T(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==T(t)?t:t+""}function A(e,t,n){return(t=F(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function R(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function _(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?R(Object(n),!0).forEach((function(t){A(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):R(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}class O{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class L{refCount(e){return M("refCount")}incRef(e){return M("incRef")}timerAvailable(){return!0}time(e){return M("time")}read(e){return M("read")}readSync(e){return M("readSync")}readToGPU(e,t){return M("readToGPU")}numDataIds(){return M("numDataIds")}disposeData(e,t){return M("disposeData")}write(e,t,n){return M("write")}move(e,t,n,a,r){return M("move")}createTensorFromGPUData(e,t,n){return M("createTensorFromGPUData")}memory(){return M("memory")}floatPrecision(){return M("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return M("dispose")}}function M(e){throw new Error("'".concat(e,"' not yet implemented or not found in the registry. ")+"This kernel may not be supported by the tfjs backend you have chosen")}function z(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,W(e,t,n)}function B(e,t,n){return Math.max(e,Math.min(t,n))}function P(e){return e%2===0?e:e+1}function W(e,t,n){const a=e[t];e[t]=e[n],e[n]=a}function V(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function U(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";V(j(e,t),(()=>n+" Shapes ".concat(e," and ").concat(t," must match")))}function G(e){V(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function H(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function j(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function q(e){return e%1===0}function K(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function X(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function Y(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return new Promise(((r,s)=>{let o=0;const i=()=>{if(e())return void r();o++;const u=t(o);null!=n&&o>=n?s():null!=a?a(i,u):setTimeout(i,u)};i()}))}function Q(e,t){let n=1,a=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(-1===e[s]){if(-1!==a)throw Error("Shapes can only have 1 implicit size. "+"Found -1 at dim ".concat(a," and dim ").concat(s));a=s}else if(e[s]<0)throw Error("Shapes can not be < 0. Found ".concat(e[s]," at dim ").concat(s));if(-1===a){if(t>0&&t!==n)throw Error("Size(".concat(t,") must match the product of shape ").concat(e));return e}if(0===n)throw Error("Cannot infer the missing size in [".concat(e,"] when ")+"there are 0 elements");if(t%n!==0)throw Error("The implicit shape can't be a fractional number. "+"Got ".concat(t," / ").concat(n));const r=e.slice();return r[a]=t/n,r}function Z(e,t){const n=t.length;return V((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>"All values in axis param must be in range [-".concat(n,", ").concat(n,") but ")+"got axis ".concat(e))),V(e.every((e=>q(e))),(()=>"All values in axis param must be integers but "+"got axis ".concat(e))),e.map((e=>e<0?n+e:e))}function J(e,t){const n=[],a=[],r=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||r?null:Z(t,e).sort();let o=0;for(let i=0;i<e.length;++i){if(null!=s){if(s[o]===i&&1!==e[i])throw new Error("Can't squeeze axis ".concat(i," since its dim '").concat(e[i],"' is not 1"));(null==s[o]||s[o]>i)&&1===e[i]&&(n.push(e[i]),a.push(i)),s[o]<=i&&o++}1!==e[i]&&(n.push(e[i]),a.push(i))}return{newShape:n,keptDims:a}}function $(e,t){return ee(e,t)}function ee(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type ".concat(e));n=new Array(t)}return n}function te(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function ne(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype ".concat(e))}function ae(e){return"string"===typeof e||e instanceof String}function re(e){return"number"===typeof e}function se(e){return Array.isArray(e)?se(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":re(e)?"float32":ae(e)?"string":"boolean"===typeof e?"bool":"float32"}function oe(e){return!!(e&&e.constructor&&e.call&&e.apply)}function ie(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function ue(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function ce(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=new Array;if(1===t.length){const s=t[0]*(a?2:1);for(let t=0;t<s;t++)r[t]=n[e+t]}else{const s=t[0],o=t.slice(1),i=o.reduce(((e,t)=>e*t))*(a?2:1);for(let t=0;t<s;t++)r[t]=ce(e+t*i,o,n,a)}return r}function le(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const a=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===a)return[];if(a!==t.length)throw new Error("[".concat(e,"] does not match the input size ").concat(t.length).concat(n?" for a complex tensor":"","."));return ce(0,e,t,n)}function he(e,t){const n=de(e,t);for(let a=0;a<n.length;a++)n[a]=1;return n}function de(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type ".concat(t))}function pe(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return le(e,new Float32Array(n));if("int32"===t)return le(e,new Int32Array(n));if("bool"===t)return le(e,new Uint8Array(n));throw new Error("Unknown data type ".concat(t))}function fe(e){e.forEach((t=>{V(Number.isInteger(t)&&t>=0,(()=>"Tensor must have a shape comprised of positive integers but got "+"shape [".concat(e,"].")))}))}function me(e,t,n){if(0===t)return 0;if(1===t)return e[0];let a=e[e.length-1];for(let r=0;r<e.length-1;++r)a+=n[r]*e[r];return a}function ge(e,t,n){if(0===t)return[];if(1===t)return[e];const a=new Array(t);for(let r=0;r<a.length-1;++r)a[r]=Math.floor(e/n[r]),e-=a[r]*n[r];return a[a.length-1]=e,a}function ye(e){return e&&e.then&&"function"===typeof e.then}const be="tfjsflags";class ve{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=xe,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(we().getBool("IS_TEST")||we().getBool("PROD")||console.warn("Platform ".concat(this.platformName," has already been set. ")+"Overwriting the platform with ".concat(e,"."))),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];we().getBool("IS_TEST")||we().getBool("PROD")||console.warn("Setting feature override from URL ".concat(e,": ").concat(t,".")),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(ye(t))throw new Error("Flag ".concat(e," cannot be synchronously evaluated. ")+"Please use getAsync() instead.");return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error("Cannot set flag ".concat(e," as it has not been registered."));this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error("Cannot evaluate flag '".concat(e,"': no evaluation function found."));return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(be in e){e[be].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:"".concat(+n)===n?+n:t}(0,n)}))}}}function xe(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,a=new Array(n>1?n-1:0),r=1;r<n;r++)a[r-1]=arguments[r];return function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,a[0],a[1]),a.join("=")})),t}function we(){return ke}let De,ke=null;function Ce(){if(null==De){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}De=e}return De}function Ne(e,t){const n=function(){const e=Ce();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const a=t();return n.set(e,a),n.get(e)}}const Se="Abs",Ee="Acos",Ie="Acosh",Te="Add",Fe="AddN",Ae="All",Re="Any",_e="ArgMax",Oe="ArgMin",Le="Asin",Me="Asinh",ze="Atan",Be="Atanh",Pe="Atan2",We="AvgPool",Ve="AvgPoolGrad",Ue="AvgPool3D",Ge="AvgPool3DGrad",He="BatchMatMul",je="BatchToSpaceND",qe="Bincount",Ke="BitwiseAnd",Xe="BroadcastArgs",Ye="Cast",Qe="Ceil",Ze="ClipByValue",Je="Complex",$e="ComplexAbs",et="Concat",tt="Conv2D",nt="Conv2DBackpropFilter",at="Conv2DBackpropInput",rt="Conv3D",st="Conv3DBackpropFilterV2",ot="Conv3DBackpropInputV2",it="Cos",ut="Cosh",ct="Cumprod",lt="Cumsum",ht="CropAndResize",dt="DenseBincount",pt="DepthToSpace",ft="DepthwiseConv2dNative",mt="DepthwiseConv2dNativeBackpropFilter",gt="DepthwiseConv2dNativeBackpropInput",yt="Diag",bt="Dilation2D",vt="Dilation2DBackpropInput",xt="Dilation2DBackpropFilter",wt="Draw",Dt="RealDiv",kt="Einsum",Ct="Elu",Nt="EluGrad",St="Erf",Et="Equal",It="Exp",Tt="ExpandDims",Ft="Expm1",At="FFT",Rt="Fill",_t="FlipLeftRight",Ot="Floor",Lt="FloorDiv",Mt="FusedBatchNorm",zt="GatherV2",Bt="GatherNd",Pt="Greater",Wt="GreaterEqual",Vt="Identity",Ut="IFFT",Gt="Imag",Ht="IsFinite",jt="IsInf",qt="IsNan",Kt="LeakyRelu",Xt="Less",Yt="LessEqual",Qt="LinSpace",Zt="Log",Jt="Log1p",$t="LogicalAnd",en="LogicalNot",tn="LogicalOr",nn="LRN",an="LRNGrad",rn="Max",sn="Maximum",on="MaxPool",un="MaxPoolGrad",cn="MaxPool3D",ln="MaxPool3DGrad",hn="MaxPoolWithArgmax",dn="Mean",pn="Min",fn="Minimum",mn="MirrorPad",gn="Mod",yn="Multinomial",bn="Multiply",vn="Neg",xn="NotEqual",wn="NonMaxSuppressionV3",Dn="NonMaxSuppressionV4",kn="NonMaxSuppressionV5",Cn="OnesLike",Nn="OneHot",Sn="Pack",En="PadV2",In="Pow",Tn="Prelu",Fn="Prod",An="RaggedGather",Rn="RaggedRange",_n="RaggedTensorToTensor",On="Range",Ln="Real",Mn="Reciprocal",zn="Relu",Bn="Reshape",Pn="ResizeNearestNeighbor",Wn="ResizeNearestNeighborGrad",Vn="ResizeBilinear",Un="ResizeBilinearGrad",Gn="Relu6",Hn="Reverse",jn="Round",qn="Rsqrt",Kn="ScatterNd",Xn="TensorScatterUpdate",Yn="SearchSorted",Qn="Select",Zn="Selu",Jn="Slice",$n="Sin",ea="Sinh",ta="Sign",na="Sigmoid",aa="Softplus",ra="Sqrt",sa="Sum",oa="SpaceToBatchND",ia="SplitV",ua="Softmax",ca="SparseFillEmptyRows",la="SparseReshape",ha="SparseSegmentMean",da="SparseSegmentSum",pa="SparseToDense",fa="SquaredDifference",ma="Square",ga="StaticRegexReplace",ya="StridedSlice",ba="StringNGrams",va="StringSplit",xa="StringToHashBucketFast",wa="Sub",Da="Tan",ka="Tanh",Ca="Tile",Na="TopK",Sa="Transform",Ea="Transpose",Ia="Unique",Ta="Unpack",Fa="UnsortedSegmentSum",Aa="ZerosLike",Ra="Step",_a="FromPixels",Oa="RotateWithOffset",La="_FusedMatMul",Ma="FusedConv2D",za="FusedDepthwiseConv2D";function Ba(){we().getBool("IS_TEST")||we().getBool("PROD")||console.warn(...arguments)}function Pa(){we().getBool("IS_TEST")||we().getBool("PROD")||console.log(...arguments)}const Wa=Ne("kernelRegistry",(()=>new Map)),Va=Ne("gradRegistry",(()=>new Map));function Ua(e,t){const n=Ka(e,t);return Wa.get(n)}function Ga(e){return Va.get(e)}function Ha(e){const t=Wa.entries(),n=[];for(;;){const{done:a,value:r}=t.next();if(a)break;const[s,o]=r,[i]=s.split("_");i===e&&n.push(o)}return n}function ja(e){const{kernelName:t,backendName:n}=e,a=Ka(t,n);Wa.has(a)&&Ba("The kernel '".concat(t,"' for backend ")+"'".concat(n,"' is already registered")),Wa.set(a,e)}function qa(e){const{kernelName:t}=e;Va.has(t)&&we().getBool("DEBUG")&&Ba("Overriding the gradient for '".concat(t,"'")),Va.set(t,e)}function Ka(e,t){return"".concat(t,"_").concat(e)}function Xa(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var Ya=n(353);const Qa=n.n(Ya)()||Ya;function Za(e){return Qa.fromString(e,!0,16)}const Ja=Za("c3a5c85c97cb3127"),$a=Za("b492b66fbe98f273"),er=Za("9ae16a3b2f90404f");function tr(e){return e.xor(e.shru(47))}function nr(e,t,n){const a=e.slice(t,t+n);return Qa.fromBytes(Array.from(a),!0,!0)}function ar(e,t){return nr(e,t,8)}function rr(e,t){return nr(e,t,4)}function sr(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function or(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Za("9ddfea08eb382d69"),a=e.xor(t).mul(n);a=a.xor(a.shru(47));let r=t.xor(a).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function ir(e,t,n,a){return function(e,t,n,a,r,s){r=r.add(e),s=sr(s.add(r).add(a),21);const o=r;return r=(r=r.add(t)).add(n),s=s.add(sr(r,44)),[r.add(a),s.add(o)]}(ar(e,t),ar(e,t+8),ar(e,t+16),ar(e,t+24),n,a)}function ur(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=Qa.fromNumber(81,!0);if(t<=32)return t<=16?function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){const n=er.add(2*t),a=ar(e,0).add(er),r=ar(e,t-8);return or(sr(r,37).mul(n).add(a),sr(a,25).add(r).mul(n),n)}if(t>=4){const n=er.add(2*t);return or(rr(e,0).shl(3).add(t),rr(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),a=t+(e[t-1]<<2);return tr(er.mul(n).xor(Ja.mul(a))).mul(er)}return er}(e,t):function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=er.add(2*t),a=ar(e,0).mul($a),r=ar(e,8),s=ar(e,t-8).mul(n),o=ar(e,t-16).mul(er);return or(sr(a.add(r),43).add(sr(s,30)).add(o),a.add(sr(r.add(er),18)).add(s),n)}(e,t);if(t<=64)return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=er.add(2*t),a=ar(e,0).mul(er),r=ar(e,8),s=ar(e,t-8).mul(n),o=ar(e,t-16).mul(er),i=sr(a.add(r),43).add(sr(s,30)).add(o),u=or(i,a.add(sr(r.add(er),18)).add(s),n),c=ar(e,16).mul(n),l=ar(e,24),h=i.add(ar(e,t-32)).mul(n),d=u.add(ar(e,t-24)).mul(n);return or(sr(c.add(l),43).add(sr(h,30)).add(d),c.add(sr(l.add(a),18)).add(h),n)}(e,t);let a=n,r=n.mul($a).add(113),s=tr(r.mul(er).add(113)).mul(er),o=[Qa.UZERO,Qa.UZERO],i=[Qa.UZERO,Qa.UZERO];a=a.mul(er).add(ar(e,0));let u=0;const c=64*(t-1>>6),l=c+(t-1&63)-63;do{a=sr(a.add(r).add(o[0]).add(ar(e,u+8)),37).mul($a),r=sr(r.add(o[1]).add(ar(e,u+48)),42).mul($a),a=a.xor(i[1]),r=r.add(o[0]).add(ar(e,u+40)),s=sr(s.add(i[0]),33).mul($a),o=ir(e,u,o[1].mul($a),a.add(i[0])),i=ir(e,u+32,s.add(i[1]),r.add(ar(e,u+16))),[s,a]=[a,s],u+=64}while(u!==c);const h=$a.add(s.and(255).shl(1));return u=l,i[0]=i[0].add(t-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),a=sr(a.add(r).add(o[0]).add(ar(e,u+8)),37).mul(h),r=sr(r.add(o[1]).add(ar(e,u+48)),42).mul(h),a=a.xor(i[1].mul(9)),r=r.add(o[0].mul(9).add(ar(e,u+40))),s=sr(s.add(i[0]),33).mul(h),o=ir(e,u,o[1].mul(h),a.add(i[0])),i=ir(e,u+32,s.add(i[1]),r.add(ar(e,u+16))),[s,a]=[a,s],or(or(o[0],i[0],h).add(tr(r).mul(Ja)).add(s),or(o[1],i[1],h).add(a),h)}function cr(e,t){return"string"===t?dr(e):lr([e],t)}function lr(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=mr(e)),we().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const a=e[n];if(isNaN(a)||!isFinite(a))throw Error("A tensor of type ".concat(t," being uploaded contains ").concat(a,"."))}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type ".concat(t))}function hr(){return we().platform.now()}function dr(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",we().platform.encode(e,t)}function pr(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",we().platform.decode(e,t)}function fr(e){return null!=we().platform.isTypedArray?we().platform.isTypedArray(e):Xa(e)}function mr(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||ye(e)||null==e||fr(e)&&n)t.push(e);else if(Array.isArray(e)||fr(e))for(let a=0;a<e.length;++a)mr(e[a],t,n);else{let a=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(a=Math.max(a,Number(t)));for(let r=0;r<=a;r++)mr(e[r],t,n)}return t}class gr{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new br)}profileKernel(e,t,n){let a;const r=()=>{a=n()};let s;const o=hr();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(r);else{r();for(const e of a)e.dataSync();s=Promise.resolve({kernelMs:hr()-o})}if(we().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let i=0;i<a.length;i++){const t=a[i];t.data().then((n=>{yr(n,t.dtype,e)}))}return{kernelName:e,outputs:a,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:a,inputs:r,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),a,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function yr(e,t,n){if("float32"!==t)return!1;for(let a=0;a<e.length;a++){const t=e[a];if(isNaN(t)||!isFinite(t))return console.warn("Found ".concat(t," in the result of '").concat(n,"'")),!0}return!1}class br{logKernelProfile(e,t,n,a,r,s){const o="number"===typeof a?X("".concat(a,"ms"),9):a.error,i=X(e,25),u=t.rank,c=t.size,l=X(t.shape.toString(),14);let h="";for(const d in r){const e=r[d];if(null!=e){const n=e.shape||t.shape,a=n.length;h+="".concat(d,": ").concat(a,"D ").concat(a>0?n:""," ")}}console.log("%c".concat(i,"\t%c").concat(o,"\t%c").concat(u,"D ").concat(l,"\t%c").concat(c,"\t%c").concat(h,"\t%c").concat(s),"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function vr(e,t,n,a){const r=ue(t),s=function(e,t,n,a){const r=H(t),s=a[a.length-1],o=new Array(s).fill(0),i=t.length,u="complex64"===n?kr(e):e;if(i>1)for(let c=0;c<r/s;c++){const e=c*s;for(let t=0;t<s;t++)o[t]=Math.max(o[t],xr(u[e+t],0,n).length)}return o}(e,t,n,r),o=t.length,i=Dr(e,t,n,r,s),u=["Tensor"];return a&&(u.push("  dtype: ".concat(n)),u.push("  rank: ".concat(o)),u.push("  shape: [".concat(t,"]")),u.push("  values:")),u.push(i.map((e=>"    "+e)).join("\n")),u.join("\n")}function xr(e,t,n){let a;return a=Array.isArray(e)?"".concat(parseFloat(e[0].toFixed(7))," + ")+"".concat(parseFloat(e[1].toFixed(7)),"j"):ae(e)?"'".concat(e,"'"):"bool"===n?wr(e):parseFloat(e.toFixed(7)).toString(),X(a,t)}function wr(e){return 0===e?"false":"true"}function Dr(e,t,n,a,r){let s=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const o="complex64"===n?2:1,i=t[0],u=t.length;if(0===u){if("complex64"===n){return[xr(kr(e)[0],0,n)]}return"bool"===n?[wr(e[0])]:[e[0].toString()]}if(1===u){if(i>20){const t=3*o;let a=Array.from(e.slice(0,t)),s=Array.from(e.slice((i-3)*o,i*o));return"complex64"===n&&(a=kr(a),s=kr(s)),["["+a.map(((e,t)=>xr(e,r[t],n))).join(", ")+", ..., "+s.map(((e,t)=>xr(e,r[i-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?kr(e):Array.from(e)).map(((e,t)=>xr(e,r[t],n))).join(", ")+"]"]}const c=t.slice(1),l=a.slice(1),h=a[0]*o,d=[];if(i>20){for(let t=0;t<3;t++){const a=t*h,s=a+h;d.push(...Dr(e.slice(a,s),c,n,l,r,!1))}d.push("...");for(let t=i-3;t<i;t++){const a=t*h,s=a+h;d.push(...Dr(e.slice(a,s),c,n,l,r,t===i-1))}}else for(let m=0;m<i;m++){const t=m*h,a=t+h;d.push(...Dr(e.slice(t,a),c,n,l,r,m===i-1))}const p=2===u?",":"";d[0]="["+(i>0?d[0]+p:"");for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=",\n";for(let m=2;m<u;m++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function kr(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Cr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=H(e),null!=n){const e=n.length;V(e===this.size,(()=>"Length of values '".concat(e,"' does not match the size ")+"inferred by the shape '".concat(this.size,"'.")))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ee(t,this.size),this.strides=ue(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];0===n.length&&(n=[0]),V(n.length===this.rank,(()=>"The number of provided coordinates (".concat(n.length,") must ")+"match the rank (".concat(this.rank,")")));const r=this.locToIndex(n);this.values[r]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let a=0;for(const s of t){if(s<0||s>=this.shape[a]){const e="Requested out of range element at ".concat(t,". ")+"  Buffer shape=".concat(this.shape);throw new Error(e)}a++}let r=t[t.length-1];for(let s=0;s<t.length-1;++s)r+=this.strides[s]*t[s];return this.values[r]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Nr().makeTensor(this.values,this.shape,this.dtype)}}let Nr=null,Sr=null,Er=null;class Ir{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=H(e),this.strides=ue(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Sr.buffer(this.shape,this.dtype,e)}bufferSync(){return Sr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return le(this.shape,e,"complex64"===this.dtype)}arraySync(){return le(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Nr().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>pr(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Nr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Nr().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>pr(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Nr().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Nr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return Sr.print(this,e)}clone(){return this.throwIfDisposed(),Sr.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return vr(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Sr.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),Nr().makeVariable(this,e,t,n)}}function Tr(){return Ne("Tensor",(()=>Ir))}Object.defineProperty(Ir,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Tr();class Fr extends Ir{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error("dtype of the new value (".concat(e.dtype,") and ")+"previous value (".concat(this.dtype,") must match"));if(!j(e.shape,this.shape))throw new Error("shape of the new value (".concat(e.shape,") and ")+"previous value (".concat(this.shape,") must match"));Nr().disposeTensor(this),this.dataId=e.dataId,Nr().incRef(this,null)}dispose(){Nr().disposeVariable(this),this.isDisposedInternal=!0}}var Ar,Rr,_r,Or,Lr;Object.defineProperty(Fr,Symbol.hasInstance,{value:e=>e instanceof Ir&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Ar||(Ar={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Rr||(Rr={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(_r||(_r={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Or||(Or={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Lr||(Lr={}));const Mr={float32:Or,int32:Rr,bool:_r,complex64:Lr};function zr(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error("Can not upcast ".concat(e," with ").concat(t))}return Mr[e][t]}function Br(e){return zr(e,"int32")}function Pr(e){return null!=e&&"object"===typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function Wr(e){return"undefined"!==typeof GPUBuffer&&null!=e&&"object"===typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function Vr(e,t){if(e.dtype===t.dtype)return[e,t];const n=zr(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Ur(e,t){return t.some((t=>t.id===e.id))}function Gr(e){const t=[];return Hr(e,t,new Set),t}function Hr(e,t,n){if(null==e)return;if(e instanceof Ir)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!==typeof a)return;var a;const r=e;for(const s in r){const e=r[s];n.has(e)||(n.add(e),Hr(e,t,n))}}function jr(e){return null!=e.kernelName}class qr{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Kr{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new qr}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error("Backend '".concat(this.backendName,"' has not yet been initialized. Make ")+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error("The highest priority backend '".concat(e,"' has not yet been ")+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(Ba("".concat(e," backend was already registered. ")+"Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error("Backend name '".concat(e,"' not found in registry"));if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new gr(this.backendInstance),!0}setupRegisteredKernels(){Ha(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Ha(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error("Cannot initialize backend ".concat(e,", no registration found."));try{const n=t.factory();if(!n||n instanceof L||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,a=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,Ba("Initialization of backend ".concat(e," failed")),Ba(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(n){return Ba("Initialization of backend ".concat(e," failed")),Ba(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error("".concat(e," backend not found in registry"));this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),a=n.backend,r=this.readSync(t),s=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,a=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(a){throw t(),a}}nextTensorId(){return Kr.nextTensorId++}nextVariableId(){return Kr.nextVariableId++}clone(e){const t=Yr.runKernel(Vt,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return Yr.runKernel(Ye,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=Ua(e,this.backendName)))throw new Error("Kernel '".concat(e,"' not registered for backend '").concat(this.backendName,"'"));return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const a=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=a-t-r-s;if(o>0)throw new Error("Backend '".concat(this.backendName,"' has an internal memory leak ")+"(".concat(o," data ids) after running '").concat(e,"'"))}runKernelFunc(e){let t,n=[];const a=this.isTapeOn(),r=this.state.numBytes,s=this.state.numTensors;let o,i;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=jr(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(jr(e)){const{kernelName:t,inputs:r,attrs:s}=e;null==this.backendName&&this.backend;const u=Ua(t,this.backendName);V(null!=u,(()=>"Cannot find registered kernel '".concat(t,"' for backend '").concat(this.backendName,"'"))),o=()=>{const e=this.backend.numDataIds();i=u.kernelFunc({inputs:r,attrs:s,backend:this.backend});const o=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const c=o.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(a){const e=this.getTensorsForGradient(t,r,c);n=this.saveTensorsForBackwardMode(e)}return c}}else{const{forwardFunc:t}=e,r=e=>{a&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();i=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:c,attrs:l}=e,h=jr(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(u,c,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=o()})),a&&this.addTapeNode(u,c,t,h,n,l),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map((e=>null!=c[e]?c[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const a=Ga(e);if(null!=a){const e=a.inputsToSave||[],r=a.outputsToSave||[];let s;a.saveAllInputs?(V(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const o=n.filter(((e,t)=>r[t]));return s.concat(o)}return[]}makeTensor(e,t,n,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=e;"string"===n&&ae(e[0])&&(r=e.map((e=>dr(e))));const s=a.write(r,t,n),o=new Ir(t,n,s,this.nextTensorId());if(this.trackTensor(o,a),"string"===n){const e=this.state.tensorInfo.get(s),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,a){const r={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,a)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:a,dtype:r}=e,s=new Ir(a,r,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));const r=new Fr(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error("Variable with name ".concat(r.name," was already registered"));return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*ne(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Fr||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*ne(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,a,r,s){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},i=Ga(e);null!=i&&(a=i.gradFunc),null!=a&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],a=de(e.size,e.dtype);return this.makeTensor(a,e.shape,e.dtype)}return e})),a(e.length>1?e:e[0],r,s))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Gr(e),n=new Set(t.map((e=>e.id)));for(let r=0;r<this.state.activeScope.track.length;r++){const e=this.state.activeScope.track[r];e.kept||n.has(e.id)||e.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==a.id||this.track(e)}))}gradients(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(V(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '".concat(n.dtype,"'"));const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));V(r instanceof Ir,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const a={},r={};for(let u=0;u<t.length;u++)a[t[u].id]=!0;for(let u=0;u<e.length;u++){const n=e[u],s=n.inputs;for(const e in s){const o=s[e];let i=!1;for(let e=0;e<t.length;e++)if(a[o.id]){n.outputs.forEach((e=>a[e.id]=!0)),i=!0,r[n.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let u=e.length-1;u>=0;u--){const t=e[u],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(s[t.outputs[e].id]){for(const e in n)s[n[e].id]=!0,o[t.id]=!0;break}}const i=[];for(let u=0;u<e.length;u++){const t=e[u];if(r[t.id]&&o[t.id]){const e={};for(const r in t.inputs){const n=t.inputs[r];a[n.id]&&(e[r]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,i.push(n)}}return i}(this.state.activeTape,t,r);if(!a&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=he(H(e),"float32");return Yr.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,a){for(let r=t.length-1;r>=0;r--){const s=t[r],o=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==s.gradient)throw new Error("Cannot compute gradient: gradient function not found "+"for ".concat(s.kernelName,"."));const i=s.gradient(o);for(const t in s.inputs){if(!(t in i))throw new Error("Cannot backprop through input ".concat(t,". ")+"Available gradients found: ".concat(Object.keys(i),"."));const r=n((()=>i[t]()));if("float32"!==r.dtype)throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"".concat(t," must have 'float32' dtype, but has '").concat(r.dtype,"'"));const o=s.inputs[t];if(!j(r.shape,o.shape))throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"'".concat(t,"' has shape '").concat(r.shape,"', which does not match ")+"the shape of the input '".concat(o.shape,"'"));if(null==e[o.id])e[o.id]=r;else{const t=e[o.id];e[o.id]=a(t,r),t.dispose()}}}}(e,s,(e=>this.tidy(e)),Qr);const a=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:a}}))}customGrad(e){var t=this;return V(oe(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,a=new Array(n),r=0;r<n;r++)a[r]=arguments[r];let s;V(a.every((e=>e instanceof Ir)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const o={};a.forEach(((e,t)=>{o[t]=e}));return t.runKernelFunc({forwardFunc:(t,n)=>(s=e(...a,n),V(s.value instanceof Ir,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),V(oe(s.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),s.value),backwardsFunc:(e,t)=>{const n=s.gradFunc(e,t),r=Array.isArray(n)?n:[n];V(r.length===a.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),V(r.every((e=>e instanceof Ir)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return r.forEach(((e,t)=>{o[t]=()=>e})),o},inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=hr(),n=await this.backend.time(e);return n.wallMs=hr()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new qr;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Xr(){const e=Ce();if(null==e._tfengine){const t=new ve(e);e._tfengine=new Kr(t)}var t;return t=e._tfengine.ENV,ke=t,Nr=()=>e._tfengine,e._tfengine}Kr.nextTensorId=0,Kr.nextVariableId=0;const Yr=Xr();function Qr(e,t){const n={a:e,b:t};return Yr.runKernel(Te,n)}let Zr;function Jr(e){if(void 0!==Zr)return Zr;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function $r(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}const es=we();function ts(e,t){let n=e;if(fr(e))return"string"===t?[]:[e.length];if(Pr(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(Wr(e))return[e.buffer.size/(null==t?4:ne(t))];if(!Array.isArray(e))return[];const a=[];for(;Array.isArray(n)||fr(n)&&"string"!==t;)a.push(n.length),n=n[0];return Array.isArray(e)&&we().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ns(e,a,[]),a}function ns(e,t,n){if(n=n||[],!Array.isArray(e)&&!fr(e))return void V(0===t.length,(()=>"Element arr[".concat(n.join("]["),"] is a primitive, ")+"but should be an array/TypedArray of ".concat(t[0]," elements")));V(t.length>0,(()=>"Element arr[".concat(n.join("]["),"] should be a primitive, ")+"but is an array of ".concat(e.length," elements"))),V(e.length===t[0],(()=>"Element arr[".concat(n.join("]["),"] should have ").concat(t[0]," ")+"elements, but has ".concat(e.length," elements")));const a=t.slice(1);for(let r=0;r<e.length;++r)ns(e[r],a,n.concat(r))}function as(e,t,n,a){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error("Argument '".concat(n,"' passed to '").concat(a,"' must ")+"be ".concat(e," tensor, but got ").concat(t," tensor"))}}function rs(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof Tr())return as(a,e.dtype,t,n),e;let r=se(e);if("string"!==r&&["bool","int32","float32"].indexOf(a)>=0&&(r=a),as(a,r,t,n),null==e||!fr(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const a=null==e?"null":e.constructor.name;throw new Error("Argument '".concat(t,"' passed to '").concat(n,"' must be a ")+"Tensor or TensorLike, but got '".concat(a,"'"))}const s=ts(e,r);fr(e)||Array.isArray(e)||(e=[e]);const o="string"!==r?lr(e,r):mr(e,[],!0);return Yr.makeTensor(o,s,r)}function ss(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error("Argument ".concat(t," passed to ").concat(n," must be a ")+"`Tensor[]` or `TensorLike[]`");return e.map(((e,r)=>rs(e,"".concat(t,"[").concat(r,"]"),n,a)))}es.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),es.registerFlag("IS_BROWSER",(()=>$r())),es.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),es.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),es.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),es.registerFlag("PROD",(()=>!1)),es.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>es.getBool("DEBUG"))),es.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),es.registerFlag("IS_TEST",(()=>!1)),es.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>es.getBool("DEBUG"))),es.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),es.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),es.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const os="__op";function is(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+"".concat(t.length," keys."));let n=t[0];const a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=os;const r=function(){Yr.startScope(n);try{const e=a(...arguments);return ye(e)&&console.error("Cannot return a Promise inside of tidy."),Yr.endScope(e),e}catch(e){throw Yr.endScope(null),e}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}const us=is({complex_:function(e,t){const n=rs(e,"real","complex"),a=rs(t,"imag","complex");U(n.shape,a.shape,"real and imag shapes, ".concat(n.shape," and ").concat(a.shape,", ")+"must match in call to tf.complex().");const r={real:n,imag:a};return Yr.runKernel(Je,r)}});function cs(e,t,n,a){if(null==a)a=se(e);else if("complex64"===a)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Wr(e)||Pr(e)){if("float32"!==a&&"int32"!==a)throw new Error("Creating tensor from GPU data only supports "+"'float32'|'int32' dtype, while the dtype is ".concat(a,"."));return Yr.backend.createTensorFromGPUData(e,t||n,a)}if(!fr(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){fe(t);const e=H(t),a=H(n);V(e===a,(()=>"Based on the provided shape, [".concat(t,"], the tensor should have ")+"".concat(e," values but has ").concat(a)));for(let r=0;r<n.length;++r){const e=n[r],a=r!==n.length-1||e!==H(t.slice(r));V(n[r]===t[r]||!a,(()=>"Error creating a new Tensor. Inferred shape "+"(".concat(n,") does not match the provided ")+"shape (".concat(t,"). ")))}}return fr(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==a?lr(e,a):mr(e,[],!0),Yr.makeTensor(e,t,a)}function ls(e,t,n){return cs(e,t,ts(e,n),n)}const hs={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class ds{static join(e){return new ds(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>fr(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const a=e[n];n!==e.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=t+a.byteLength;this.shards.push({buffer:a,start:t,end:r}),t=r}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error("Could not find start shard for byte ".concat(e));const a=new ArrayBuffer(t-e),r=new Uint8Array(a);let s=0;for(let o=n;o<this.shards.length;o++){const n=this.shards[o],a=e+s-n.start,i=s,u=Math.min(t,n.end)-n.start,c=new Uint8Array(n.buffer,a,u-a);if(r.set(c,i),s+=c.length,t<n.end)break}return a}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,a=e.length;for(;n<=a;){const r=Math.floor((a-n)/2)+n,s=t(e[r]);if(0===s)return r;s<0?a=r:n=r+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function ps(){return Yr}function fs(){return Yr.memory()}function ms(e,t){return Yr.tidy(e,t)}function gs(e){Gr(e).forEach((e=>e.dispose()))}function ys(e){return Yr.keep(e)}function bs(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return Yr.registerBackend(e,t,n)}function vs(){return Yr.backend}Er=function(e){we().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const xs=4;async function ws(e,t){const n=[],a=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<r.length;++s){const o=r[s],i=Array.isArray(e)?e[s].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error("Unsupported dtype in weight '".concat(o,"': ").concat(i.dtype));const u={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+xs*t.length,a=new Uint8Array(n);let r=0;for(let s=0;s<t.length;s++){const e=t[s],n=new Uint8Array(new Uint32Array([e.length]).buffer);a.set(n,r),r+=xs,a.set(e,r),r+=e.length}e(a)}));a.push(e)}else a.push(i.data());null!=t&&(u.group=t),n.push(u)}return{data:Is(await Promise.all(a)),specs:n}}function Ds(e,t){const n=new ds(e),a={};let r=0;for(const s of t){const e=ks(s,((e,t)=>n.slice(r+e,r+t)));a[s.name]=Ns(s,n.slice(r,r+e)),r+=e}return a}function ks(e,t){const n=H(e.shape);let a;if("quantization"in e){const t=e.quantization;a=hs[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=xs+new Uint32Array(t(e,e+xs))[0];return e}a=hs[e.dtype]}return n*a}async function Cs(e,t){const n=H(e.shape);let a;if("quantization"in e){const t=e.quantization;a=hs[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=xs+new Uint32Array(await t(e,e+xs))[0];return e}a=hs[e.dtype]}return n*a}function Ns(e,t){const n=e.name,a=e.dtype,r=e.shape,s=H(r);let o,i=0;if("quantization"in e){const r=e.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error("Weight ".concat(e.name," with quantization ").concat(r.dtype," ")+"doesn't have corresponding metadata min and scale.")}else{if("float16"!==r.dtype)throw new Error("Weight ".concat(e.name," has unknown ")+"quantization dtype ".concat(r.dtype,". ")+"Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.");if("float32"!==a)throw new Error("Weight ".concat(e.name," is quantized with ").concat(r.dtype," ")+"which only supports weights of type float32 not ".concat(a,"."))}const u=hs[r.dtype],c="uint8"===r.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===a)if("uint8"===r.dtype||"uint16"===r.dtype){o=new Float32Array(c.length);for(let e=0;e<c.length;e++){const t=c[e];o[e]=t*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error("Unsupported quantization type ".concat(r.dtype," ")+"for weight type float32.");{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return a=>{const r=new ArrayBuffer(4*a.length),s=new Uint32Array(r);for(let o=0;o<a.length;o++){const r=a[o],i=e[n[r>>10]+(1023&r)]+t[r>>10];s[o]=i}return new Float32Array(r)}}();o=e(c)}}else{if("int32"!==a)throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(a));if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error("Unsupported quantization type ".concat(r.dtype," ")+"for weight type int32.");o=new Int32Array(c.length);for(let e=0;e<c.length;e++){const t=c[e];o[e]=Math.round(t*r.scale+r.min)}}i+=s*u}else if("string"===a){const n=H(e.shape);o=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(i,i+xs))[0];i+=xs;const n=new Uint8Array(t.slice(i,i+e));o.push(n),i+=e}}else{const e=hs[a];if("float32"===a)o=new Float32Array(t);else if("int32"===a)o=new Int32Array(t);else{if("bool"!==a){if("complex64"===a){o=new Float32Array(t);const e=new Float32Array(o.length/2),n=new Float32Array(o.length/2);for(let t=0;t<e.length;t++)e[t]=o[2*t],n[t]=o[2*t+1];const a=ls(e,r,"float32"),s=ls(n,r,"float32"),i=us(a,s);return a.dispose(),s.dispose(),i}throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(a))}o=new Uint8Array(t)}i+=s*e}return ls(o,r,a)}async function Ss(e,t,n){let a=new Uint8Array(t);for(;a.byteLength<n;){const{done:t,value:r}=await e.read();if(t&&null==r){const e=n-a.byteLength;throw new Error("Reader is done but ".concat(e," bytes are still expected"))}const s=new Uint8Array(a.length+r.byteLength);s.set(a,0),s.set(new Uint8Array(r),a.length),a=s}return a.buffer}async function Es(e,t){const n={},a=e.getReader();let r=new ArrayBuffer(0);for(const s of t){const e=await Cs(s,(async(e,t)=>(r=await Ss(a,r,t),r.slice(e,t))));r=await Ss(a,r,e);const t=r.slice(0,e);r=r.slice(e);const o=Ns(s,t);if(n[s.name]=o,"webgpu"===Yr.backendName){const e=vs();"uploadToGPU"in e&&H(o.shape)>=we().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(o.dataId)}}return n}function Is(e){if(null===e)throw new Error("Invalid input value: ".concat(JSON.stringify(e)));let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: ".concat(e.constructor.name))}));const a=new Uint8Array(t);let r=0;return n.forEach((e=>{a.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),a.buffer}const Ts="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function Fs(e){return Ts?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function As(e){return ds.join(e)}function Rs(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function _s(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Os(e,t,n){const a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(a.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");a.weightSpecs=t,a.weightData=n}return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(a.initializerSignature=e.initializerSignature),a}async function Ls(e,t){let n,a;return null!=e.weightsManifest&&([n,a]=await t(e.weightsManifest)),Os(e,n,a)}function Ms(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Fs(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Fs(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new ds(e.weightData).byteLength}}function zs(e){const t=[];for(const n of e)t.push(...n.weights);return t}class Bs{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Bs.instance&&(Bs.instance=new Bs),Bs.instance}static registerSaveRouter(e){Bs.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Bs.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Bs.getHandlers(e,"save")}static getLoadHandlers(e,t){return Bs.getHandlers(e,"load",t)}static getHandlers(e,t,n){const a=[];return("load"===t?Bs.getInstance().loadRouters:Bs.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&a.push(r)})),a}}const Ps=e=>Bs.registerSaveRouter(e),Ws=e=>Bs.registerLoadRouter(e),Vs=e=>Bs.getSaveHandlers(e),Us=(e,t)=>Bs.getLoadHandlers(e,t),Gs="tensorflowjs",Hs="models_store",js="model_info_store";function qs(){if(!we().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Ks(e){const t=e.result;t.createObjectStore(Hs,{keyPath:"modelPath"}),t.createObjectStore(js,{keyPath:"modelPath"})}class Xs{constructor(e){if(this.indexedDB=qs(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const a=this.indexedDB.open(Gs,1);a.onupgradeneeded=()=>Ks(a),a.onsuccess=()=>{const r=a.result;if(null==t){const t=r.transaction(Hs,"readonly"),a=t.objectStore(Hs).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return r.close(),n(new Error("Cannot find model with path '".concat(this.modelPath,"' ")+"in IndexedDB."));e(a.result.modelArtifacts)},a.onerror=e=>(r.close(),n(a.error)),t.oncomplete=()=>r.close()}else{t.weightData=ds.join(t.weightData);const a=Ms(t),o=r.transaction(js,"readwrite");let i,u,c=o.objectStore(js);try{i=c.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(s){return n(s)}i.onsuccess=()=>{u=r.transaction(Hs,"readwrite");const i=u.objectStore(Hs);let l;try{l=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(s){return n(s)}l.onsuccess=()=>e({modelArtifactsInfo:a}),l.onerror=e=>{c=o.objectStore(js);const t=c.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(l.error)),t.onerror=e=>(r.close(),n(l.error))}},i.onerror=e=>(r.close(),n(i.error)),o.oncomplete=()=>{null==u?r.close():u.oncomplete=()=>r.close()}}},a.onerror=e=>n(a.error)}))}}Xs.URL_SCHEME="indexeddb://";const Ys=e=>{return we().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Xs.URL_SCHEME)?(t=e.slice(Xs.URL_SCHEME.length),new Xs(t)):null;var t};Bs.registerSaveRouter(Ys),Bs.registerLoadRouter(Ys);class Qs{constructor(){this.indexedDB=qs()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Gs,1);n.onupgradeneeded=()=>Ks(n),n.onsuccess=()=>{const a=n.result,r=a.transaction(js,"readonly"),s=r.objectStore(js).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(a.close(),t(s.error)),r.oncomplete=()=>a.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Xs.URL_SCHEME)?t.slice(Xs.URL_SCHEME.length):t,new Promise(((t,n)=>{const a=this.indexedDB.open(Gs,1);a.onupgradeneeded=()=>Ks(a),a.onsuccess=()=>{const r=a.result,s=r.transaction(js,"readwrite"),o=s.objectStore(js),i=o.get(e);let u;i.onsuccess=()=>{if(null==i.result)return r.close(),n(new Error("Cannot find model with path '".concat(e,"' ")+"in IndexedDB."));{const a=o.delete(e),s=()=>{u=r.transaction(Hs,"readwrite");const a=u.objectStore(Hs).delete(e);a.onsuccess=()=>t(i.result.modelArtifactsInfo),a.onerror=e=>n(i.error)};a.onsuccess=s,a.onerror=e=>(s(),r.close(),n(i.error))}},i.onerror=e=>(r.close(),n(i.error)),s.oncomplete=()=>{null==u?r.close():u.oncomplete=()=>r.close()}},a.onerror=e=>n(a.error)}))}}const Zs="/",Js="tensorflowjs_models",$s="info",eo="model_topology",to="weight_specs",no="weight_data",ao="model_metadata";function ro(e){return{info:[Js,e,$s].join(Zs),topology:[Js,e,eo].join(Zs),weightSpecs:[Js,e,to].join(Zs),weightData:[Js,e,no].join(Zs),modelMetadata:[Js,e,ao].join(Zs)}}function so(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function oo(e){const t=e.split(Zs);if(t.length<3)throw new Error("Invalid key format: ".concat(e));return t.slice(1,t.length-1).join(Zs)}class io{constructor(e){if(!we().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ro(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),a=JSON.stringify(e.weightSpecs),r=Ms(e),s=ds.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,function(e){if(Ts)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let a=0,r=t.length;a<r;a++)n+=String.fromCharCode(t[a]);return btoa(n)}(s));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:r}}catch(t){throw so(this.keys),new Error("Failed to save model '".concat(this.modelPath,"' to local storage: ")+"size quota being exceeded is a possible cause of this failure: "+"modelTopologyBytes=".concat(r.modelTopologyBytes,", ")+"weightSpecsBytes=".concat(r.weightSpecsBytes,", ")+"weightDataBytes=".concat(r.weightDataBytes,"."))}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error("In local storage, there is no model with name '".concat(this.modelPath,"'"));if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error("In local storage, the topology of model '".concat(this.modelPath,"' ")+"is missing.");t.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error("In local storage, the weight specs of model '".concat(this.modelPath,"' ")+"are missing.");t.weightSpecs=a;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error("In local storage, the binary weight values of model "+"'".concat(this.modelPath,"' are missing."));return t.weightData=function(e){if(Ts){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let a=0;a<t.length;++a)n.set([t.charCodeAt(a)],a);return n.buffer}(s),t}}io.URL_SCHEME="localstorage://";const uo=e=>{return we().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(io.URL_SCHEME)?(t=e.slice(io.URL_SCHEME.length),new io(t)):null;var t};Bs.registerSaveRouter(uo),Bs.registerLoadRouter(uo);class co{constructor(){V(we().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),V("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Js+Zs,n=Zs+$s;for(let a=0;a<this.LS.length;++a){const r=this.LS.key(a);if(r.startsWith(t)&&r.endsWith(n)){e[oo(r)]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){var t;const n=ro(e=(t=e).startsWith(io.URL_SCHEME)?t.slice(io.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error("Cannot find model at path '".concat(e,"'"));const a=JSON.parse(this.LS.getItem(n.info));return so(n),a}}const lo="://";class ho{constructor(){this.managers={}}static getInstance(){return null==ho.instance&&(ho.instance=new ho),ho.instance}static registerManager(e,t){V(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(lo)&&(e=e.slice(0,e.indexOf(lo))),V(e.length>0,(()=>"scheme must not be an empty string."));const n=ho.getInstance();V(null==n.managers[e],(()=>"A model store manager is already registered for scheme '".concat(e,"'."))),n.managers[e]=t}static getManager(e){const t=ho.getInstance().managers[e];if(null==t)throw new Error("Cannot find model manager for scheme '".concat(e,"'"));return t}static getSchemes(){return Object.keys(ho.getInstance().managers)}}function po(e){if(-1===e.indexOf(lo))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+"".concat(ho.getSchemes().join(",")));return{scheme:e.split(lo)[0],path:e.split(lo)[1]}}async function fo(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];V(e!==t,(()=>"Old path and new path are the same: '".concat(e,"'")));const a=Bs.getLoadHandlers(e);V(a.length>0,(()=>"Copying failed because no load handler is found for source URL ".concat(e,"."))),V(a.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"load handlers for source URL ".concat(e,".")));const r=a[0],s=Bs.getSaveHandlers(t);V(s.length>0,(()=>"Copying failed because no save handler is found for destination "+"URL ".concat(t,"."))),V(s.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"save handlers for destination URL ".concat(t,".")));const o=s[0],i=po(e).scheme,u=po(e).path,c=i===po(e).scheme,l=await r.load();n&&c&&await ho.getManager(i).removeModel(u);const h=await o.save(l);return n&&!c&&await ho.getManager(i).removeModel(u),h.modelArtifactsInfo}async function mo(){const e=ho.getSchemes(),t={};for(const n of e){const e=await ho.getManager(n).listModels();for(const a in e){t[n+lo+a]=e[a]}}return t}async function go(e){const t=po(e);return ho.getManager(t.scheme).removeModel(t.path)}async function yo(e,t){return fo(e,t,!1)}async function bo(e,t){return fo(e,t,!0)}class vo{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got ".concat(t));return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&we().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return Xa(e)}}if(we().get("IS_BROWSER")){we().setPlatform("browser",new vo);try{ho.registerManager(io.URL_SCHEME,new co)}catch(GP){}try{ho.registerManager(Xs.URL_SCHEME,new Qs)}catch(GP){}}const xo=()=>n(817);let wo;class Do{constructor(){this.util=n(590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=we().global.fetch?we().global.fetch(e,t):(null==wo&&(wo=xo()),wo(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got ".concat(t));return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}function ko(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",fe(e),new Cr(e,t,n)}we().get("IS_NODE")&&!we().get("IS_BROWSER")&&we().setPlatform("node",new Do);const Co=is({cast_:function(e,t){const n=rs(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error("Failed to cast to unknown dtype ".concat(t));if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const a={x:n},r={dtype:t};return Yr.runKernel(Ye,a,r)}});const No=is({clone_:function(e){const t={x:rs(e,"x","clone","string_or_numeric")};return Yr.runKernel(Vt,t)}});function So(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}Xr();Sr={buffer:ko,cast:Co,clone:No,print:So};const Eo=is({add_:function(e,t){let n=rs(e,"a","add"),a=rs(t,"b","add");[n,a]=Vr(n,a);const r={a:n,b:a};return Yr.runKernel(Te,r)}});const Io=is({floorDiv_:function(e,t){let n=rs(e,"a","floorDiv"),a=rs(t,"b","floorDiv");[n,a]=Vr(n,a);const r={a:n,b:a};return Yr.runKernel(Lt,r)}});const To=is({div_:function(e,t){let n=rs(e,"a","div"),a=rs(t,"b","div");if([n,a]=Vr(n,a),"int32"===n.dtype&&"int32"===a.dtype)return Io(n,a);const r={a:n,b:a};return Yr.runKernel(Dt,r,{})}});const Fo=is({mul_:function(e,t){let n=rs(e,"a","mul"),a=rs(t,"b","mul");[n,a]=Vr(n,a);const r={a:n,b:a};return Yr.runKernel(bn,r)}});const Ao=is({sqrt_:function(e){const t={x:rs(e,"x","sqrt","float32")};return Yr.runKernel(ra,t)}});const Ro=is({square_:function(e){const t=rs(e,"x","square");return Yr.runKernel("Square",{x:t},{})}});const _o=is({zerosLike_:function(e){const t={x:rs(e,"x","zerosLike")};return Yr.runKernel(Aa,t)}});function Oo(e){return Yr.customGrad(e)}function Lo(e,t){if((fr(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&fr(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return cs(e,[],[],t)}const Mo=new Map,zo=new Map;class Bo{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Po{constructor(){this.classNameMap={}}static getMap(){return null==Po.instance&&(Po.instance=new Po),Po.instance}static register(e){Po.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Wo(e,t,n){V(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),V("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),V(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"===typeof t&&(t="Custom"),"undefined"===typeof n&&(n=e.className);const a=t+">"+n;return Po.register(e),Mo.set(a,e),zo.set(e,a),e}class Vo extends Bo{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:a,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return gs(r),t?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){V(oe(e),(()=>"The f passed in variableGrads(f) must be a function")),V(null==t||Array.isArray(t)&&t.every((e=>e instanceof Fr)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Yr.registeredVariables)t.push(Yr.registeredVariables[e])}const a=n?t.filter((e=>!e.trainable)):null,r=t.length;t=t.filter((e=>e.trainable)),V(t.length>0,(()=>"variableGrads() expects at least one of the input variables to "+"be trainable, but none of the ".concat(r," variables is ")+"trainable."));const{value:s,grads:o}=Yr.gradients(e,t,null,!0);V(o.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),V(0===s.rank,(()=>"The f passed in variableGrads(f) must return a scalar, but it "+"returned a rank-".concat(s.rank," tensor")));const i={};return t.forEach(((e,t)=>{null!=o[t]&&(i[e.name]=o[t])})),null!=a&&a.forEach((e=>i[e.name]=null)),{value:s,grads:i}}(e,t)}dispose(){null!=this.iterations_&&gs(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Lo(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+"".concat(this.getClassName()))}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Vo,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Uo extends Vo{static get className(){return"Adadelta"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Yr.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Yr.registeredVariables[t],r=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:"".concat(t,"/accum_grad"),variable:ms((()=>_o(a).variable(r)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:"".concat(t,"/accum_var"),variable:ms((()=>_o(a).variable(r)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;ms((()=>{const e=Eo(Fo(o,this.rho),Fo(Ro(s),1-this.rho)),t=Fo(To(Ao(Eo(i,this.epsilon)),Ao(Eo(o,this.epsilon))),s),n=Eo(Fo(i,this.rho),Fo(Ro(t),1-this.rho));o.assign(e),i.assign(n);const r=Eo(Fo(t,-this.learningRate),a);a.assign(r)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(gs(this.accumulatedGrads.map((e=>e.variable))),gs(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function Go(e,t,n){fe(e);const a={shape:e,value:t,dtype:n=n||se(t)};return Yr.runKernel(Rt,{},a)}class Ho extends Vo{static get className(){return"Adagrad"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Yr.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:"".concat(t,"/accumulator"),variable:ms((()=>Go(a.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=this.accumulatedGrads[n].variable;ms((()=>{const e=Eo(s,Ro(r));s.assign(e);const t=Eo(Fo(To(r,Ao(Eo(e,Yr.backend.epsilon()))),-this.learningRate),a);a.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&gs(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}const jo=is({pow_:function(e,t){let n=rs(e,"base","pow"),a=rs(t,"exp","pow");[n,a]=Vr(n,a);const r={a:n,b:a};return Yr.runKernel(In,r)}});const qo=is({sub_:function(e,t){let n=rs(e,"a","sub"),a=rs(t,"b","sub");[n,a]=Vr(n,a);const r={a:n,b:a};return Yr.runKernel(wa,r)}});class Ko extends Vo{static get className(){return"Adam"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ms((()=>{this.accBeta1=Lo(t).variable(),this.accBeta2=Lo(n).variable()})),null==a&&(this.epsilon=Yr.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);ms((()=>{const n=qo(1,this.accBeta1),a=qo(1,this.accBeta2);t.forEach(((t,r)=>{const s=Yr.registeredVariables[t],o=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(t,"/m"),variable:ms((()=>_o(s).variable(o)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:"".concat(t,"/v"),variable:ms((()=>_o(s).variable(o)))});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const u=this.accumulatedFirstMoment[r].variable,c=this.accumulatedSecondMoment[r].variable,l=Eo(Fo(u,this.beta1),Fo(i,1-this.beta1)),h=Eo(Fo(c,this.beta2),Fo(Ro(i),1-this.beta2)),d=To(l,n),p=To(h,a);u.assign(l),c.assign(h);const f=Eo(Fo(To(d,Eo(Ao(p),this.epsilon)),-this.learningRate),s);s.assign(f)})),this.accBeta1.assign(Fo(this.accBeta1,this.beta1)),this.accBeta2.assign(Fo(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&gs(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&gs(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),ms((()=>{this.accBeta1.assign(jo(this.beta1,this.iterations_+1)),this.accBeta2.assign(jo(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}const Xo=is({abs_:function(e){const t=rs(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Yr.runKernel($e,e)}{const e={x:t};return Yr.runKernel(Se,e)}}});function Yo(e,t){const n=e.length,a=[];for(let r=0;r<n;r++){const s=n-1-r,o=e[s]||1;(t[t.length-1-r]||1)>1&&1===o&&a.unshift(s)}return a}function Qo(e,t){const n=[];for(let a=0;a<t.length;a++){const r=e[e.length-a-1],s=t.length-a-1,o=t[s];(null==r||1===r&&o>1)&&n.unshift(s)}return n}function Zo(e,t){const n=Math.max(e.length,t.length),a=new Array(n);for(let r=0;r<n;r++){let s=e[e.length-r-1];null==s&&(s=1);let o=t[t.length-r-1];if(null==o&&(o=1),1===s)a[n-r-1]=o;else if(1===o)a[n-r-1]=s;else{if(s!==o){const n="Operands could not be broadcast together with shapes "+"".concat(e," and ").concat(t,".");throw Error(n)}a[n-r-1]=s}}return a}const Jo=is({maximum_:function(e,t){let n=rs(e,"a","maximum"),a=rs(t,"b","maximum");[n,a]=Vr(n,a),"bool"===n.dtype&&(n=Co(n,"int32"),a=Co(a,"int32")),Zo(n.shape,a.shape);const r={a:n,b:a};return Yr.runKernel(sn,r)}});class $o extends Vo{static get className(){return"Adamax"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ms((()=>{this.iteration=Lo(0).variable(),this.accBeta1=Lo(t).variable()})),null==a&&(this.epsilon=Yr.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);ms((()=>{const n=qo(1,this.accBeta1),a=To(-this.learningRate,Eo(Fo(this.iteration,this.decay),1));t.forEach(((t,r)=>{const s=Yr.registeredVariables[t],o=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(t,"/m"),variable:_o(s).variable(o)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:"".concat(t,"/v"),variable:_o(s).variable(o)});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const u=this.accumulatedFirstMoment[r].variable,c=this.accumulatedWeightedInfNorm[r].variable,l=Eo(Fo(u,this.beta1),Fo(i,1-this.beta1)),h=Fo(c,this.beta2),d=Xo(i),p=Jo(h,d);u.assign(l),c.assign(p);const f=Eo(Fo(To(a,n),To(l,Eo(p,this.epsilon))),s);s.assign(f)})),this.iteration.assign(Eo(this.iteration,1)),this.accBeta1.assign(Fo(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&gs(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&gs(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class ei extends Vo{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const r=Yr.registeredVariables[t];ms((()=>{const e=Eo(Fo(this.c,a),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=ys(Lo(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class ti extends ei{static get className(){return"Momentum"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Lo(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Yr.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:"".concat(t,"/momentum"),variable:ms((()=>_o(a).variable(e)))}}const r=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&ms((()=>{let e;const t=Eo(Fo(this.m,r),s);e=this.useNesterov?Eo(Fo(this.c,Eo(s,Fo(t,this.m))),a):Eo(Fo(this.c,t),a),r.assign(t),a.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&gs(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class ni extends Vo{static get className(){return"RMSProp"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==a&&(this.epsilon=Yr.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Yr.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:"".concat(t,"/rms"),variable:ms((()=>_o(a).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:"".concat(t,"/momentum"),variable:ms((()=>_o(a).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:"".concat(t,"/mg"),variable:ms((()=>_o(a).variable(r)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;ms((()=>{const e=Eo(Fo(o,this.decay),Fo(Ro(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=Eo(Fo(t,this.decay),Fo(s,1-this.decay)),u=To(Fo(s,this.learningRate),Ao(qo(e,Eo(Ro(r),this.epsilon)))),c=Eo(Fo(i,this.momentum),u);o.assign(e),t.assign(r),i.assign(c);const l=qo(a,c);a.assign(l)}else{const e=Eo(Fo(o,this.decay),Fo(Ro(s),1-this.decay)),t=Eo(Fo(i,this.momentum),To(Fo(s,this.learningRate),Ao(Eo(e,this.epsilon))));o.assign(e),i.assign(t);const n=qo(a,t);a.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&gs(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&gs(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&gs(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const ai=[Uo,Ho,Ko,$o,ti,ni,ei];function ri(e){return new Promise((e=>setTimeout(e))).then(e)}class si{constructor(e){if(!we().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(si.URL_SCHEME)&&(e=e.slice(si.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=ds.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=_s(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),a=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=a,await ri((()=>r.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await ri((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Ms(e)}}}}si.URL_SCHEME="downloads://";class oi{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, "+"but received ".concat(e));this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const a=JSON.parse(n.target.result),r=a.modelTopology;if(null==r)return void t(new Error("modelTopology field is missing from file ".concat(this.jsonFile.name)));if(null==a.weightsManifest)return void t(new Error("weightManifest field is missing from file ".concat(this.jsonFile.name)));if(0===this.weightsFiles.length)return void e({modelTopology:r});const s=Ls(a,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t("Failed to read model topology and weights manifest JSON "+"from file '".concat(this.jsonFile.name,"'. BrowserFiles supports loading ")+"Keras-style tf.Model artifacts only."),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const s of e)t.push(...s.weights),n.push(...s.paths);const a=this.checkManifestAndWeightFiles(e),r=n.map((e=>this.loadWeightsFile(e,a[e])));return Promise.all(r).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,a)=>{const r=new FileReader;r.onload=e=>{const t=e.target.result;n(t)},r.onerror=t=>a("Failed to weights data from file of path '".concat(e,"'.")),r.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>Rs(e.name))),a={};for(const r of e)r.paths.forEach((e=>{const r=Rs(e);if(-1!==t.indexOf(r))throw new Error("Duplicate file basename found in weights manifest: "+"'".concat(r,"'"));if(t.push(r),-1===n.indexOf(r))throw new Error("Weight file with basename '".concat(r,"' is not provided."));a[e]=this.weightsFiles[n.indexOf(r)]}));if(t.length!==this.weightsFiles.length)throw new Error("Mismatch in the number of files in weights manifest "+"(".concat(t.length,") and the number of weight files provided ")+"(".concat(this.weightsFiles.length,")."));return a}}function ii(e){return new oi(e)}function ui(e,t,n,a){!function(e){V(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){V(e>=0&&e<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got startFraction ".concat(e))),V(t>=0&&t<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got endFraction ".concat(t))),V(t>=e,(()=>"startFraction must be no more than endFraction, but "+"got startFraction ".concat(e," and endFraction ")+"".concat(t)))}(n=null==n?0:n,a=null==a?1:a);let r=0;return Promise.all(e.map((s=>(s.then((s=>{const o=n+ ++r/e.length*(a-n);return t(o),s})),s))))}async function ci(e,t){null==t&&(t={});const n=null==t.fetchFunc?we().platform.fetch:t.fetchFunc,a=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(a):await ui(a,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await ui(r,t.onProgress,.5,1)}async function li(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return hi((e=>ci(e,{requestInit:a})))(e,t,n)}function hi(e){return async function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",a=arguments.length>2?arguments[2]:void 0;const r=t.map((()=>!1)),s={},o=null!=a?a.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,c=hs[u]*H(e.shape),l=()=>{r[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:c})};null!=a?a.forEach(((t,n)=>{t===e.name&&(l(),o[n]=!0)})):l(),i.push(e.name),n+=c}))})),!o.every((e=>e))){const e=a.filter(((e,t)=>!o[t]));throw new Error("Could not find weights in manifest with names: "+"".concat(e.join(", "),". \n")+"Manifest JSON has weights with names: "+"".concat(i.join(", "),"."))}const u=r.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),c=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;c.push(t)}))}));const l=await e(c),h={};let d=0;return u.forEach((e=>{const n=t[e].paths.length,a=new ds(l.slice(d,d+n));s[e].forEach((e=>{const t=Ds(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const n in t)h[n]=t[n]})),d+=n})),h}}Bs.registerSaveRouter((e=>we().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(si.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new si(e)}(e.slice(si.URL_SCHEME.length)):null));class di{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(V("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=we().platform.fetch,V(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&V(2===e.length,(()=>"URL paths for http must have a length of 2, "+"(actual length is ".concat(e.length,")."))),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=_s(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=ds.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Ms(e),responses:[a]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+"".concat(a.status,"."))}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error("Request to ".concat(this.path," failed with status code ")+"".concat(e.status,". Please verify this URL points to ")+"the model JSON of the model to load.");let t;try{t=await e.json()}catch(r){let e="Failed to parse model JSON of response from ".concat(this.path,".");throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,a=t.weightsManifest;if(null==n&&null==a)throw new Error("The JSON from HTTP path ".concat(this.path," contains neither model ")+"topology or manifest for weights.");return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();return Ls(await this.loadModelJSON(),(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=zs(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const a=null==t.fetchFunc?we().platform.fetch:t.fetchFunc;let r,s=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var o;s<e.length;){if(!r){const n=(await a(e[s],t.requestInit,{isBinary:!0})).body;r=n.getReader()}const{done:i,value:u}=await r.read();if(!i)return void n.enqueue(u);s++,r=void 0,null===(o=t.onProgress)||void 0===o||o.call(t,s/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),a=e.substring(0,t),r=n>t?e.substring(n):"";return[a+"/",r]}(t),r=this.weightPathPrefix||n,s=[],o=[];for(const i of e)for(const e of i.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):s.push(r+e+a);return this.weightUrlConverter&&s.push(...await Promise.all(o)),s}async loadWeights(e){const t=await this.getWeightUrls(e);return[zs(e),await ci(t,this.loadOptions)]}}function pi(e){return null!=e.match(di.URL_SCHEME_REGEX)}di.URL_SCHEME_REGEX=/^https?:\/\//;const fi=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>pi(e))):pi(e),n)return mi(e,t)}return null};function mi(e,t){return new di(e,t)}function gi(e,t){return mi(e,t)}Bs.registerSaveRouter(fi),Bs.registerLoadRouter(fi);class yi{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class bi{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class vi{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function xi(e,t,n,a){return new vi(wi(...arguments))}function wi(e,t,n,a){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new yi(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new yi({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new yi({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:a})}function Di(e){return new bi(e)}function ki(e){return new bi(e)}function Ci(e,t,n){if(G(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const a=ts(e,n);if(3!==a.length&&1!==a.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return cs(e,t,a,n)}const Ni=-2,Si=-1;function Ei(e,t,n){const a=e.shape.length;V(a===t.length,(()=>"Error in slice".concat(a,"D: Length of begin ").concat(t," must ")+"match the rank of the array (".concat(a,")."))),V(a===n.length,(()=>"Error in slice".concat(a,"D: Length of size ").concat(n," must ")+"match the rank of the array (".concat(a,").")));for(let r=0;r<a;++r)V(t[r]+n[r]<=e.shape[r],(()=>"Error in slice".concat(a,"D: begin[").concat(r,"] + size[").concat(r,"] ")+"(".concat(t[r]+n[r],") would overflow input.shape[").concat(r,"] (").concat(e.shape[r],")")))}function Ii(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Ti(e,t,n){const a=[];for(let r=0;r<e.length;r++)a[r]=Math.ceil((t[r]-e[r])/n[r]);return a}function Fi(e,t,n,a){const r=[...e];for(let s=r.length;s<a.length;s++)r.push(1);for(let s=0;s<n;s++)0===s?r[t]=1:(r.splice(t,0,1),r.pop());return r}function Ai(e,t,n){return n<=e?n:n-(t-1)}function Ri(e,t){const n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function _i(e,t,n,a,r,s,o,i,u){const c=e.length;let l=new Array(c),h=new Array(c),d=new Array(c);if(t.length&&n>0){const u=t[0],c=n+1;l=Oi(o,u,c,a,e),h=Li(i,u,c,r,e),d=Fi(s,u,c,e)}else for(let p=0;p<c;p++)l[p]=zi(o,a,s,e,p,u),h[p]=Bi(i,r,s,e,p,u),d[p]=Mi(s,p,u);return{begin:l,end:h,strides:d}}function Oi(e,t,n,a,r){const s=[...r],o=Ri(n,t);for(let i=0;i<s.length;i++)if(o.indexOf(i)>-1)s[i]=0;else{const r=Ai(t,n,i);let o=a[r];e&1<<r&&(o=0),s[i]=o}return s}function Li(e,t,n,a,r){const s=[...r],o=Ri(n,t);for(let i=0;i<s.length;i++)if(o.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{const r=Ai(t,n,i);let o=a[r];e&1<<r&&(o=Number.MAX_SAFE_INTEGER),s[i]=o}for(let i=0;i<s.length;i++){const e=r[i];s[i]<0&&(s[i]+=e),s[i]=B(0,s[i],r[i])}return s}function Mi(e,t,n){let a=e[t];return(n&1<<t||null==a)&&(a=1),a}function zi(e,t,n,a,r,s){let o=t[r];const i=n[r]||1;(e&1<<r||s&1<<r||null==o)&&(o=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=a[r];return o<0&&(o+=u),o=B(0,o,u-1),o}function Bi(e,t,n,a,r,s){let o=t[r];const i=n[r]||1;(e&1<<r||s&1<<r||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=a[r];return o<0&&(o+=u),o=i>0?B(0,o,u):B(-1,o,u-1),o}function Pi(e,t,n){let a=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){a=r;break}for(let r=a+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function Wi(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function Vi(e,t,n){let a;const r=e.shape.length;let s;return a="number"===typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),a.forEach((e=>{V(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(r).fill(-1):"number"===typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(V(-1===t,(()=>"Negative size values should be exactly -1 but got "+"".concat(t," for the slice() size at index ").concat(n,"."))),e.shape[n]-a[n]))),[a,s]}function Ui(e,t,n,a,r,s,o,i,u){let c;if(null==a?(c=new Array(t.length),c.fill(1)):c=a,null!=o&&0!==(o&o-1))throw new Error("Multiple ellipses in slice is not allowed.");let l=!1;const h={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:c.slice(),beginMask:r,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};for(let b=0;b<h.dims;b++)l&&0!==(1<<b&i)&&h.numAddAxisAfterEllipsis++,1<<b&o&&(l=!0);l||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let a=0;a<e.dims;a++)if(1<<a&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-a)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&e.newAxisMask)t.finalShapeGatherIndices.push(Ni),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error("Index out of range using input dim ".concat(n,"; input ")+"has only ".concat(t.dims," dims, ").concat(t.begin.length,"."));null!=e.begin&&(t.begin[n]=e.begin[a]),null!=e.end&&(t.end[n]=e.end[a]),t.strides[n]=e.strides[a],e.beginMask&1<<a&&(t.beginMask|=1<<n),e.endMask&1<<a&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<a?(t.finalShapeGatherIndices.push(Si),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(a)),t.inputShapeGatherIndicesSparse[n]=a,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],y=[];for(let b=0;b<e.length;++b){if(0===d.strides[b])throw Error("strides[".concat(b,"] must be non-zero"));const t=!!(d.shrinkAxisMask&1<<b),n=e[b];if(-1===n){g.push(t?1:-1);continue}const a=[d.beginMask&1<<b,d.endMask&1<<b],r=[d.strides[b]>0?0:-1,d.strides[b]>0?n:n-1];if(t&&d.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[b];const s=!!(d.beginMask&1<<b&&d.endMask&1<<b);if(d.beginValid&&d.endValid){if(t){const e=d.begin[b]<0?n+d.begin[b]:d.begin[b];if(d.begin[b]=e,d.end[b]=d.begin[b]+1,e<0||e>=n)throw Error("slice index ".concat(d.begin[b]," of dimension ").concat(b," out of bounds."))}else d.begin[b]=Gi(d.begin[b],0,d.strides[b],n,a,r),d.end[b]=Gi(d.end[b],1,d.strides[b],n,a,r);const e=1===d.strides[b]&&0===d.begin[b]&&d.end[b]===n;p=p&&e,f=f&&(0===b&&1===d.strides[b]||e)}else p=p&&1===d.strides[b]&&s,f=f&&(0===b&&1===d.strides[b]||s);let o,i=!1;if(d.beginValid&&d.endValid?(o=d.end[b]-d.begin[b],i=!0):t?(o=1,i=!0):s&&n>=0&&(o=d.strides[b]<0?-n:n,i=!0),i){let e;e=0===o||o<0!==d.strides[b]<0?0:Math.trunc(o/d.strides[b])+(o%d.strides[b]!==0?1:0),g.push(e)}else g.push(-1)}for(let b=0;b<d.finalShapeGatherIndices.length;++b){const e=d.finalShapeGatherIndices[b];e>=0?y.push(g[e]):e===Ni&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>d.finalShapeGatherIndices[t]!==Ni)),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function Gi(e,t,n,a,r,s){if(r[t])return n>0?s[t]:s[t+1&1];{const t=e<0?a+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}const Hi=is({acos_:function(e){const t={x:rs(e,"x","acos")};return Yr.runKernel(Ee,t)}});const ji=is({acosh_:function(e){const t={x:rs(e,"x","acosh")};return Yr.runKernel(Ie,t)}});const qi=is({addN_:function(e){V(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),V(e.length>=1,(()=>"Must pass at least one tensor to tf.addN(), but got "+"".concat(e.length)));const t=e.map(((e,t)=>rs(e,"tensors".concat(t),"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!j(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const a=t;return Yr.runKernel(Fe,a)}});const Ki=is({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:rs(e,"x","all","bool")},r={axis:t,keepDims:n};return Yr.runKernel(Ae,a,r)}});const Xi=is({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:rs(e,"x","any","bool")},r={axis:t,keepDims:n};return Yr.runKernel(Re,a,r)}});const Yi=is({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:rs(e,"x","argMax")},a={axis:t};return Yr.runKernel(_e,n,a)}});const Qi=is({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:rs(e,"x","argMin")},a={axis:t};return Yr.runKernel(Oe,n,a)}});const Zi=is({asin_:function(e){const t={x:rs(e,"x","asin")};return Yr.runKernel(Le,t)}});const Ji=is({asinh_:function(e){const t={x:rs(e,"x","asinh")};return Yr.runKernel(Me,t)}});const $i=is({atan_:function(e){const t={x:rs(e,"x","atan")};return Yr.runKernel(ze,t)}});const eu=is({atan2_:function(e,t){let n=rs(e,"a","atan2"),a=rs(t,"b","atan2");[n,a]=Vr(n,a);const r={a:n,b:a};return Yr.runKernel(Pe,r)}});const tu=is({atanh_:function(e){const t={x:rs(e,"x","atanh")};return Yr.runKernel(Be,t)}});function nu(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5?arguments[5]:void 0;return su(e,[...t,e[3]],n,s,a,null,null,mu(r))}function au(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[i,u]=uu(t);let c;if("channelsLast"===o)c=[i,u,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));c=[i,u,e[1],e[1]]}return su(e,c,n,a,r,s,!1,o)}function ru(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[i,u,c]=cu(t);let l,h;if("NDHWC"===o)h="channelsLast",l=[i,u,c,e[4],e[4]];else{if("NCDHW"!==o)throw new Error("Unknown dataFormat ".concat(o));h="channelsFirst",l=[i,u,c,e[1],e[1]]}return ou(e,l,n,a,r,!1,h,s)}function su(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[u,c,l,h]=[-1,-1,-1,-1];if("channelsLast"===i)[u,c,l,h]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));[u,h,c,l]=e}const[d,p,,f]=t,[m,g]=uu(n),[y,b]=uu(a),v=lu(d,y),x=lu(p,b),{padInfo:w,outHeight:D,outWidth:k}=function(e,t,n,a,r,s,o,i,u){let c,l,h;if("number"===typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,a,r){null==a&&(a=iu(e,t,n));const s=e[0],o=e[1],i=hu((s-t+2*a)/n+1,r),u=hu((o-t+2*a)/n+1,r);return[i,u]}([t,n],s,a,e,i);l=r[0],h=r[1]}else if("same"===e){l=Math.ceil(t/a),h=Math.ceil(n/r);const e=Math.max(0,(l-1)*a+s-t),i=Math.max(0,(h-1)*r+o-n),u=Math.floor(e/2),d=e-u,p=Math.floor(i/2);c={top:u,bottom:d,left:p,right:i-p,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-s+1)/a),h=Math.ceil((n-o+1)/r);else{if("object"!==typeof e)throw Error("Unknown padding parameter: ".concat(e));{const d="channelsLast"===u?e[1][0]:e[2][0],p="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];c={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},l=hu((t-s+d+p)/a+1,i),h=hu((n-o+f+m)/r+1,i)}}return{padInfo:c,outHeight:l,outWidth:h}}(r,c,l,m,g,v,x,s,i),C=o?f*h:f;let N;return"channelsFirst"===i?N=[u,C,D,k]:"channelsLast"===i&&(N=[u,D,k,C]),{batchSize:u,dataFormat:i,inHeight:c,inWidth:l,inChannels:h,outHeight:D,outWidth:k,outChannels:C,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:v,effectiveFilterWidth:x,dilationHeight:y,dilationWidth:b,inShape:e,outShape:N,filterShape:t}}function ou(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",i=arguments.length>7?arguments[7]:void 0,[u,c,l,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[u,c,l,h,d]=e;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));[u,d,c,l,h]=e}const[p,f,m,,g]=t,[y,b,v]=cu(n),[x,w,D]=cu(a),k=lu(p,x),C=lu(f,w),N=lu(m,D),{padInfo:S,outDepth:E,outHeight:I,outWidth:T}=function(e,t,n,a,r,s,o,i,u,c,l){let h,d,p,f;"valid"===e&&(e=0);if("number"===typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const m=function(e,t,n,a,r,s){null==r&&(r=iu(e,t[0],a[0]));const o=[0,0,0,n];for(let i=0;i<3;i++)e[i]+2*r>=t[i]&&(o[i]=hu((e[i]-t[i]+2*r)/a[i]+1,s));return o}([t,n,a,1],[i,u,c],1,[r,s,o],e,l);d=m[0],p=m[1],f=m[2]}else{if("same"!==e)throw Error("Unknown padding parameter: ".concat(e));{d=Math.ceil(t/r),p=Math.ceil(n/s),f=Math.ceil(a/o);const e=(d-1)*r+i-t,l=(p-1)*s+u-n,m=(f-1)*o+c-a,g=Math.floor(e/2),y=e-g,b=Math.floor(l/2),v=l-b,x=Math.floor(m/2);h={top:b,bottom:v,left:x,right:m-x,front:g,back:y,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(r,c,l,h,y,b,v,k,C,N,i),F=s?g*d:g;let A;return"channelsFirst"===o?A=[u,F,E,I,T]:"channelsLast"===o&&(A=[u,E,I,T,F]),{batchSize:u,dataFormat:o,inDepth:c,inHeight:l,inWidth:h,inChannels:d,outDepth:E,outHeight:I,outWidth:T,outChannels:F,padInfo:S,strideDepth:y,strideHeight:b,strideWidth:v,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:k,effectiveFilterHeight:C,effectiveFilterWidth:N,dilationDepth:x,dilationHeight:w,dilationWidth:D,inShape:e,outShape:A,filterShape:t}}function iu(e,t,n){const a=lu(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+a)/2)}function uu(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function cu(e){return"number"===typeof e?[e,e,e]:e}function lu(e,t){return t<=1?e:e+(e-1)*(t-1)}function hu(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode ".concat(t))}}function du(e){const[t,n,a]=uu(e);return 1===t&&1===n&&1===a}function pu(e,t){return du(e)||du(t)}function fu(e){return uu(e).every((e=>e>0))}function mu(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat ".concat(e))}function gu(e,t,n){if(null!=n){if("string"===typeof t)throw Error("Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,"."));if("number"===typeof t)V(q(t),(()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,".")));else{if("object"!==typeof t)throw Error("Error in ".concat(e,": Unknown padding parameter: ").concat(t));t.forEach((t=>{t.forEach((t=>{V(q(t),(()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,".")))}))}))}}}const yu=is({reshape_:function(e,t){const n={x:rs(e,"x","reshape","string_or_numeric")},a={shape:t};return Yr.runKernel(Bn,n,a)}});const bu=is({avgPool_:function(e,t,n,a,r){const s=rs(e,"x","avgPool","float32");V(pu(n,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'")));let o=s,i=!1;3===s.rank&&(i=!0,o=yu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),V(4===o.rank,(()=>"Error in avgPool: x must be rank 4 but got rank ".concat(o.rank,"."))),gu("avgPool",a,r);const u={x:o},c={filterSize:t,strides:n,pad:a,dimRoundingMode:r};let l=Yr.runKernel(We,u,c);return l=Co(l,s.dtype),i?yu(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const vu=is({avgPool3d_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=rs(e,"x","avgPool3d","float32");let i=o,u=!1;4===o.rank&&(u=!0,i=yu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),V(5===i.rank,(()=>"Error in avgPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),V("NDHWC"===s,(()=>"Error in avgPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(s))),V("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>"Error in avgPool3d: Stride must be > 0, but got '".concat(n,"'"))),gu("avgPool3d",a,r);const c={x:i},l={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s};let h=Yr.runKernel(Ue,c,l);return h=Co(h,i.dtype),u?yu(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const xu=is({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;V(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=ss(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype ".concat(e.dtype,". "))})),1===n.length)return No(n[0]);const a=n,r={axis:t};return Yr.runKernel(et,a,r)}});const wu=is({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=rs(e,"a","matMul"),s=rs(t,"b","matMul");[r,s]=Vr(r,s);const o={a:r,b:s},i={transposeA:n,transposeB:a};return Yr.runKernel(He,o,i)}});const Du=is({sigmoid_:function(e){const t={x:rs(e,"x","sigmoid","float32")};return Yr.runKernel(na,t)}});const ku=is({slice_:function(e,t,n){const a=rs(e,"x","slice","string_or_numeric");if(0===a.rank)throw new Error("Slicing scalar is not possible");const r={x:a},s={begin:t,size:n};return Yr.runKernel(Jn,r,s)}});const Cu=is({tanh_:function(e){const t={x:rs(e,"x","tanh","float32")};return Yr.runKernel(ka,t)}});const Nu=is({basicLSTMCell_:function(e,t,n,a,r,s){const o=rs(e,"forgetBias","basicLSTMCell"),i=rs(t,"lstmKernel","basicLSTMCell"),u=rs(n,"lstmBias","basicLSTMCell"),c=rs(a,"data","basicLSTMCell"),l=rs(r,"c","basicLSTMCell"),h=rs(s,"h","basicLSTMCell"),d=xu([c,h],1),p=wu(d,i),f=Eo(p,u),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=ku(f,[0,0],y),v=ku(f,[0,g],y),x=ku(f,[0,2*g],y),w=ku(f,[0,3*g],y),D=Eo(Fo(Du(b),Cu(v)),Fo(l,Du(Eo(o,x))));return[D,Fo(Cu(D),Du(w))]}});const Su=is({batchToSpaceND_:function(e,t,n){const a=rs(e,"x","batchToSpaceND"),r=t.reduce(((e,t)=>e*t));V(a.rank>=1+t.length,(()=>"input rank is ".concat(a.rank," but should be > than blockShape.length ").concat(t.length))),V(n.length===t.length,(()=>"crops.length is ".concat(n.length," but should be equal to blockShape.length  ").concat(t.length))),V(a.shape[0]%r===0,(()=>"input tensor batch is ".concat(a.shape[0]," but is not divisible by the product of ")+"the elements of blockShape ".concat(t.join(" * ")," === ").concat(r)));const s={x:a},o={blockShape:t,crops:n};return Yr.runKernel(je,s,o)}});const Eu=is({batchNorm_:function(e,t,n,a,r,s){null==s&&(s=.001);const o=rs(e,"x","batchNorm"),i=rs(t,"mean","batchNorm"),u=rs(n,"variance","batchNorm");let c,l;null!=r&&(c=rs(r,"scale","batchNorm")),null!=a&&(l=rs(a,"offset","batchNorm")),V(i.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),V(null==l||i.rank===l.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),V(null==c||i.rank===c.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?yu(e,[1,1,1,e.size]):2===e.rank?yu(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?yu(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(o),scale:c,offset:l,mean:i,variance:u},d={varianceEpsilon:s},p=Yr.runKernel(Mt,h,d);return yu(p,o.shape)}});const Iu=is({batchNorm2d_:function(e,t,n,a,r,s){const o=rs(e,"x","batchNorm"),i=rs(t,"mean","batchNorm"),u=rs(n,"variance","batchNorm");let c,l;return null!=r&&(c=rs(r,"scale","batchNorm")),null!=a&&(l=rs(a,"offset","batchNorm")),V(2===o.rank,(()=>"Error in batchNorm2D: x must be rank 2 but got rank "+"".concat(o.rank,"."))),V(2===i.rank||1===i.rank,(()=>"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+"got rank ".concat(i.rank,"."))),V(2===u.rank||1===u.rank,(()=>"Error in batchNorm2D: variance must be rank 2 or rank 1 "+"but got rank ".concat(u.rank,"."))),null!=c&&V(2===c.rank||1===c.rank,(()=>"Error in batchNorm2D: scale must be rank 2 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&V(2===l.rank||1===l.rank,(()=>"Error in batchNorm2D: offset must be rank 2 or rank 1 "+"but got rank ".concat(l.rank,"."))),Eu(o,i,u,l,c,s)}});const Tu=is({batchNorm3d_:function(e,t,n,a,r,s){const o=rs(e,"x","batchNorm"),i=rs(t,"mean","batchNorm"),u=rs(n,"variance","batchNorm");let c,l;return null!=r&&(c=rs(r,"scale","batchNorm")),null!=a&&(l=rs(a,"offset","batchNorm")),V(3===o.rank,(()=>"Error in batchNorm3D: x must be rank 3 but got rank "+"".concat(o.rank,"."))),V(3===i.rank||1===i.rank,(()=>"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+"got rank ".concat(i.rank,"."))),V(3===u.rank||1===u.rank,(()=>"Error in batchNorm3D: variance must be rank 3 or rank 1 "+"but got rank ".concat(u.rank,"."))),null!=c&&V(3===c.rank||1===c.rank,(()=>"Error in batchNorm3D: scale must be rank 3 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&V(3===l.rank||1===l.rank,(()=>"Error in batchNorm3D: offset must be rank 3 or rank 1 "+"but got rank ".concat(l.rank,"."))),Eu(o,i,u,l,c,s)}});const Fu=is({batchNorm4d_:function(e,t,n,a,r,s){const o=rs(e,"x","batchNorm"),i=rs(t,"mean","batchNorm"),u=rs(n,"variance","batchNorm");let c,l;return null!=r&&(c=rs(r,"scale","batchNorm")),null!=a&&(l=rs(a,"offset","batchNorm")),V(4===o.rank,(()=>"Error in batchNorm4D: x must be rank 4 but got rank "+"".concat(o.rank,"."))),V(4===i.rank||1===i.rank,(()=>"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+"got rank ".concat(i.rank,"."))),V(4===u.rank||1===u.rank,(()=>"Error in batchNorm4D: variance must be rank 4 or rank 1 "+"but got rank ".concat(u.rank,"."))),null!=c&&V(4===c.rank||1===c.rank,(()=>"Error in batchNorm4D: scale must be rank 4 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&V(4===l.rank||1===l.rank,(()=>"Error in batchNorm4D: offset must be rank 4 or rank 1 "+"but got rank ".concat(l.rank,"."))),Eu(o,i,u,l,c,s)}});const Au=is({bincount_:function(e,t,n){const a=rs(e,"x","bincount"),r=rs(t,"weights","bincount");V("int32"===a.dtype,(()=>"Error in bincount: input "+"dtype must be int32, but got ".concat(a.dtype))),V(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),V(r.size===a.size||0===r.size,(()=>"Error in bincount: weights must have the same size as input or"+"0-length, but got input shape: ".concat(a.shape,", weights shape: ")+"".concat(r.shape,".")));const s={x:a,weights:r},o={size:n};return Yr.runKernel(qe,s,o)}});const Ru=is({bitwiseAnd_:function(e,t){const n=rs(e,"x","bitwiseAnd"),a=rs(t,"y","bitwiseAnd");if(!j(n.shape,a.shape))throw new Error("BitwiseAnd: Tensors must have the same shape. x: ".concat(n.shape,", y: ").concat(a.shape));if("int32"!==n.dtype||"int32"!==a.dtype)throw new Error("BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ".concat(n.dtype," and type of y: ").concat(a.dtype));const r={a:n,b:a};return Yr.runKernel(Ke,r)}});const _u=is({broadcastArgs_:function(e,t){const n=rs(e,"s0","broadcastArgs","int32"),a=rs(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error("broadcastArgs(): first input must be a vector (rank=1). "+"Has rank ".concat(n.rank));if(1!==a.rank)throw new Error("broadcastArgs(): second input must be a vector (rank=1). "+"Has rank ".concat(a.rank));const r={s0:n,s1:a};return Yr.runKernel(Xe,r)}});const Ou=is({broadcastTo_:function(e,t){let n=rs(e,"broadcastTo","x");const a=n.shape;if(fe(t),t.length<n.rank)throw new Error("broadcastTo(): shape.length=".concat(t.length," < input.rank=").concat(n.rank,"."));if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=yu(n,e)}const r=n.shape,s=Array.from(t);for(let u=t.length-1;u>=0;u--)if(r[u]===t[u])s[u]=1;else if(1!==n.shape[u])throw new Error("broadcastTo(): [".concat(a,"] cannot be broadcast to [").concat(t,"]."));if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return No(n);const o={x:n},i={reps:s};return Yr.runKernel(Ca,o,i)}});const Lu=is({ceil_:function(e){const t={x:rs(e,"x","ceil","float32")};return Yr.runKernel(Qe,t)}});const Mu=is({clipByValue_:function(e,t,n){const a=rs(e,"x","clipByValue");if(V(t<=n,(()=>"Error in clip: min (".concat(t,") must be ")+"less than or equal to max (".concat(n,")."))),t===n)return Go(a.shape,t,a.dtype);const r={x:a},s={clipValueMin:t,clipValueMax:n};return Yr.runKernel(Ze,r,s)}});const zu=is({concat1d_:function(e){return xu(e,0)}});const Bu=is({concat2d_:function(e,t){return xu(e,t)}});const Pu=is({concat3d_:function(e,t){return xu(e,t)}});const Wu=is({concat4d_:function(e,t){return xu(e,t)}});const Vu=is({conv2d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0;const i=rs(e,"x","conv2d","float32"),u=rs(t,"filter","conv2d","float32");let c=i,l=!1;3===i.rank&&(l=!0,c=yu(i,[1,i.shape[0],i.shape[1],i.shape[2]])),V(4===c.rank,(()=>"Error in conv2d: input must be rank 4, but got rank ".concat(c.rank,"."))),V(4===u.rank,(()=>"Error in conv2d: filter must be rank 4, but got rank "+"".concat(u.rank,"."))),gu("conv2d",a,o);const h="NHWC"===r?c.shape[3]:c.shape[1];V(h===u.shape[2],(()=>"Error in conv2d: depth of input (".concat(h,") must match ")+"input depth for filter ".concat(u.shape[2],"."))),V(pu(n,s),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(s,"'"))),V(fu(s),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),V(fu(n),(()=>"Error in conv2D: Strides should be larger than 0."));const d={x:c,filter:u},p={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:o},f=Yr.runKernel(tt,d,p);return l?yu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Uu=is({conv1d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,o=arguments.length>6?arguments[6]:void 0;const i=rs(e,"x","conv1d"),u=rs(t,"filter","conv1d");let c=i,l=!1;2===i.rank&&(l=!0,c=yu(i,[1,i.shape[0],i.shape[1]])),V(3===c.rank,(()=>"Error in conv1d: input must be rank 3, but got rank ".concat(c.rank,"."))),V(3===u.rank,(()=>"Error in conv1d: filter must be rank 3, but got rank "+"".concat(u.rank,"."))),gu("conv1d",a,o),V(c.shape[2]===u.shape[1],(()=>"Error in conv1d: depth of input (".concat(c.shape[2],") must match ")+"input depth for filter ".concat(u.shape[1],"."))),V(pu(n,s),(()=>"Error in conv1D: Either stride or dilation must be 1. "+"Got stride ".concat(n," and dilation '").concat(s,"'"))),V(fu(s),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),V(fu(n),(()=>"Error in conv1D: Stride should be larger than 0.")),V("NWC"===r,(()=>"Error in conv1d: got dataFormat of ".concat(r," but only NWC is currently supported.")));const h=yu(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=yu(c,[c.shape[0],1,c.shape[1],c.shape[2]]),p=Vu(d,h,[1,n],a,"NHWC",[1,s],o);return yu(p,l?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}});const Gu=is({conv2DBackpropInput_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",o=arguments.length>6?arguments[6]:void 0;V(e.length===t.rank,(()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match")));let i=e,u=t,c=!1;3===t.rank&&(c=!0,u=yu(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),V(4===i.length,(()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+"".concat(i.length,"."))),V(4===u.rank,(()=>"Error in conv2dDerInput: dy must be rank 4, but got "+"rank ".concat(u.rank))),V(4===n.rank,(()=>"Error in conv2dDerInput: filter must be rank 4, but got "+"rank ".concat(n.rank)));const l="NHWC"===s?i[3]:i[1],h="NHWC"===s?u.shape[3]:u.shape[1];V(l===n.shape[2],(()=>"Error in conv2dDerInput: depth of input (".concat(l,") must ")+"match input depth for filter ".concat(n.shape[2],"."))),V(h===n.shape[3],(()=>"Error in conv2dDerInput: depth of output (".concat(h,") must ")+"match output depth for filter ".concat(n.shape[3],"."))),gu("conv2dDerInput",r,o);const d={dy:u,filter:n},p={strides:a,pad:r,dataFormat:s,dimRoundingMode:o,inputShape:i},f=Yr.runKernel(at,d,p);return c?yu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Hu=is({conv2dTranspose_:function(e,t,n,a,r,s){const o=rs(e,"x","conv2dTranspose"),i=rs(t,"filter","conv2dTranspose");return Gu(n,o,i,a,r,"NHWC",s)}});const ju=is({conv3d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const o=rs(e,"x","conv3d"),i=rs(t,"filter","conv3d");let u=o,c=!1;4===o.rank&&(c=!0,u=yu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),V(5===u.rank,(()=>"Error in conv3d: input must be rank 5, but got rank ".concat(u.rank,"."))),V(5===i.rank,(()=>"Error in conv3d: filter must be rank 5, but got rank "+"".concat(i.rank,"."))),V(u.shape[4]===i.shape[3],(()=>"Error in conv3d: depth of input (".concat(u.shape[4],") must match ")+"input depth for filter ".concat(i.shape[3],"."))),V(pu(n,s),(()=>"Error in conv3D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(s,"'"))),V("NDHWC"===r,(()=>"Error in conv3d: got dataFormat of ".concat(r," but only NDHWC is currently supported."))),V(fu(s),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),V(fu(n),(()=>"Error in conv3D: Strides should be larger than 0."));const l={x:u,filter:i},h={strides:n,pad:a,dataFormat:r,dilations:s},d=Yr.runKernel(rt,l,h);return c?yu(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const qu=is({conv3DBackpropInput_:function(e,t,n,a,r){V(e.length===t.rank,(()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match")));let s=e,o=t,i=!1;4===t.rank&&(i=!0,o=yu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const u=s[4],c=o.shape[4];V(5===s.length,(()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+"".concat(s.length,"."))),V(5===o.rank,(()=>"Error in conv3dDerInput: dy must be rank 5, but got "+"rank ".concat(o.rank))),V(5===n.rank,(()=>"Error in conv3dDerInput: filter must be rank 5, but got "+"rank ".concat(n.rank))),V(u===n.shape[3],(()=>"Error in conv3dDerInput: depth of input (".concat(u,") must ")+"match input depth for filter ".concat(n.shape[3],"."))),V(c===n.shape[4],(()=>"Error in conv3dDerInput: depth of output (".concat(c,") must ")+"match output depth for filter ".concat(n.shape[4],".")));const l={dy:o,filter:n},h={pad:r,strides:a,inputShape:s},d=Yr.runKernel(ot,l,h);return i?yu(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const Ku=is({conv3dTranspose_:function(e,t,n,a,r){const s=rs(e,"x","conv3dTranspose"),o=rs(t,"filter","conv3dTranspose");return qu(n,s,o,a,r)}});const Xu=is({cos_:function(e){const t={x:rs(e,"x","cos","float32")};return Yr.runKernel(it,t)}});const Yu=is({cosh_:function(e){const t={x:rs(e,"x","cosh","float32")};return Yr.runKernel(ut,t)}});const Qu=is({cumprod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={x:rs(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:a};return Yr.runKernel(ct,r,s)}});const Zu=is({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={x:rs(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:a};return Yr.runKernel(lt,r,s)}});const Ju=is({denseBincount_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=rs(e,"x","denseBincount"),s=rs(t,"weights","denseBincount");V("int32"===r.dtype,(()=>"Error in denseBincount: input "+"dtype must be int32, but got ".concat(r.dtype))),V(r.rank<=2,(()=>"Error in denseBincount: input must be at most rank 2, but got "+"rank ".concat(r.rank,"."))),V(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),V(s.size===r.size||0===s.size,(()=>"Error in denseBincount: weights must have the same shape as x or "+"0-length, but got x shape: ".concat(r.shape,", weights shape: ")+"".concat(s.shape,".")));const o={x:r,weights:s},i={size:n,binaryOutput:a};return Yr.runKernel(dt,o,i)}});const $u=is({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const a=rs(e,"x","depthToSpace","float32"),r="NHWC"===n?a.shape[1]:a.shape[2],s="NHWC"===n?a.shape[2]:a.shape[3],o="NHWC"===n?a.shape[3]:a.shape[1];V(t>1,(()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(t))),V(r*t>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(r," and ").concat(t,"  for depthToSpace with input shape\n    ").concat(a.shape))),V(s*t>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(s," and ").concat(t," for depthToSpace with input shape\n        ").concat(a.shape))),V(o%(t*t)===0,(()=>"Dimension size must be evenly divisible by ".concat(t*t," but is ").concat(o," for depthToSpace with input shape ").concat(a.shape)));const i={x:a},u={blockSize:t,dataFormat:n};return Yr.runKernel(pt,i,u)}});const ec=is({depthwiseConv2d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0;const i=rs(e,"x","depthwiseConv2d","float32"),u=rs(t,"filter","depthwiseConv2d","float32");let c=i,l=!1;3===i.rank&&(l=!0,c=yu(i,[1,i.shape[0],i.shape[1],i.shape[2]])),V(4===c.rank,(()=>"Error in depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(c.rank,"."))),V(4===u.rank,(()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+"".concat(u.rank,".")));const h="NHWC"===r?c.shape[3]:c.shape[1];V(h===u.shape[2],(()=>"Error in depthwiseConv2d: number of input channels "+"(".concat(h,") must match the inChannels dimension in ")+"filter ".concat(u.shape[2],"."))),gu("depthwiseConv2d",a,o);const d={x:c,filter:u},p={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:o},f=Yr.runKernel(ft,d,p);return l?yu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const tc=is({diag_:function(e){const t={x:rs(e,"x","diag")};return Yr.runKernel(yt,t)}});const nc=is({dilation2d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const o=rs(e,"x","dilation2d"),i=rs(t,"filter","dilation2d");V(3===o.rank||4===o.rank,(()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+"".concat(o.rank,"."))),V(3===i.rank,(()=>"Error in dilation2d: filter must be rank 3, but got rank "+"".concat(i.rank,"."))),V("NHWC"===s,(()=>"Error in dilation2d: Only NHWC is currently supported, "+"but got dataFormat of ".concat(s)));let u=o,c=!1;3===o.rank&&(u=yu(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=!0),V(u.shape[3]===i.shape[2],(()=>"Error in dilation2d:  input and filter must have the same depth: ".concat(u.shape[3]," vs ").concat(i.shape[2])));const l={x:u,filter:i},h={strides:n,pad:a,dilations:r},d=Yr.runKernel(bt,l,h);return c?yu(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});const ac=is({equal_:function(e,t){let n=rs(e,"a","equal","string_or_numeric"),a=rs(t,"b","equal","string_or_numeric");[n,a]=Vr(n,a),Zo(n.shape,a.shape);const r={a:n,b:a};return Yr.runKernel(Et,r)}});const rc=is({where_:function(e,t,n){const a=rs(t,"a","where"),r=rs(n,"b","where"),s=rs(e,"condition","where","bool"),o=Zo(Zo(s.shape,a.shape),r.shape),i={condition:Ou(s,o),t:Ou(a,o),e:Ou(r,o)};return Yr.runKernel(Qn,i)}});const sc=is({divNoNan_:function(e,t){let n=rs(e,"a","div"),a=rs(t,"b","div");[n,a]=Vr(n,a);const r=To(n,a),s=_o(r),o=ac(a,s);return rc(o,s,r)}});const oc=is({dot_:function(e,t){const n=rs(e,"t1","dot"),a=rs(t,"t2","dot");V((1===n.rank||2===n.rank)&&(1===a.rank||2===a.rank),(()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+"".concat(n.rank," and ").concat(a.rank,".")));const r=1===n.rank?n.size:n.shape[1],s=1===a.rank?a.size:a.shape[0];if(V(r===s,(()=>"Error in dot: inner dimensions of inputs must match, but got "+"".concat(r," and ").concat(s,"."))),1===n.rank&&1===a.rank){const e=yu(n,[1,-1]),t=yu(a,[-1,1]),r=wu(e,t);return yu(r,[])}if(1===n.rank&&2===a.rank){const e=yu(n,[1,-1]),t=yu(a,[a.shape[0],a.shape[1]]),r=wu(e,t);return yu(r,[r.size])}if(2===n.rank&&1===a.rank){const e=yu(a,[-1,1]),t=wu(n,e);return yu(t,[t.size])}{const e=yu(a,[a.shape[0],a.shape[1]]);return wu(n,e)}}});const ic=is({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];const r=n.map(((e,t)=>rs(e,"tensors".concat(t),"einsum"))),s={equation:e};return Yr.runKernel(kt,r,s)}});const uc=is({elu_:function(e){const t={x:rs(e,"x","elu","float32")};return Yr.runKernel(Ct,t)}});const cc=is({ensureShape_:function(e,t){const n=rs(e,"x","ensureShape","string_or_numeric");if(!function(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}(n.shape,t))throw new Error("EnsureShape: Shape of tensor ".concat(n.shape," is not compatible with expected shape ").concat(t));return e}});const lc=is({erf_:function(e){let t=rs(e,"x","erf");V("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Co(t,"float32"));const n={x:t};return Yr.runKernel(St,n)}});function hc(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function dc(e,t,n){const a=e.length+t.length,r=[];let s=0,o=0;for(let i=0;i<a;i++)-1===n.indexOf(i)?r.push(e[s++]):r.push(t[o++]);return r}function pc(e,t){const n=[],a=e.length;for(let r=0;r<a;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function fc(e,t){return dc(e,t.map((e=>1)),t)}function mc(e,t,n){V(hc(t,n),(()=>"".concat(e," supports only inner-most axes for now. ")+"Got axes ".concat(t," and rank-").concat(n," input.")))}function gc(e,t){if(hc(e,t))return null;const n=[];for(let a=0;a<t;++a)-1===e.indexOf(a)&&n.push(a);return e.forEach((e=>n.push(e))),n}function yc(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function bc(e,t){const n=[];for(let a=t-e;a<t;++a)n.push(a);return n}const vc=is({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:rs(e,"x","max")},r={reductionIndices:t,keepDims:n};return Yr.runKernel(rn,a,r)}});const xc=is({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:rs(e,"x","min")},r={axis:t,keepDims:n};return Yr.runKernel(pn,a,r)}});const wc=is({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=rs(e,"x","sum");"bool"===a.dtype&&(a=Co(a,"int32"));const r={x:a},s={axis:t,keepDims:n};return Yr.runKernel(sa,r,s)}});function Dc(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return Xo(e);if(1!==e.rank&&null===n)return Dc(yu(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return wc(Xo(e),n);if(t===1/0)return vc(Xo(e),n);if(t===-1/0)return xc(Xo(e),n);if("euclidean"===t||2===t)return Ao(wc(jo(Xo(e),Lo(2,"int32")),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}if(Array.isArray(n)&&2===n.length){if(1===t)return vc(wc(Xo(e),n[0]),n[1]-1);if(t===1/0)return vc(wc(Xo(e),n[1]),n[0]);if(t===-1/0)return xc(wc(Xo(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Ao(wc(Ro(e),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}throw new Error("Error in norm: invalid axis: ".concat(n))}const kc=is({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=Dc(e=rs(e,"x","norm"),t,n);let s=r.shape;if(a){const t=Z(n,e.shape);s=fc(r.shape,t)}return yu(r,s)}});const Cc=is({euclideanNorm_:function(e){return kc(e,"euclidean",arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}});const Nc=is({exp_:function(e){const t={x:rs(e,"x","exp")};return Yr.runKernel(It,t)}});const Sc=is({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=rs(e,"x","expandDims","string_or_numeric");V(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const a={input:n},r={dim:t};return Yr.runKernel(Tt,a,r)}});const Ec=is({expm1_:function(e){const t={x:rs(e,"x","expm1")};return Yr.runKernel(Ft,t)}});const Ic=is({tile_:function(e,t){const n=rs(e,"x","tile","string_or_numeric");V(n.rank===t.length,(()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of reps ".concat(t,".")));const a={x:n},r={reps:t};return Yr.runKernel(Ca,a,r)}});const Tc=is({eye_:function(e,t,n){null==t&&(t=e);const a=ko([e,t],arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32"),r=e<=t?e:t;for(let o=0;o<r;++o)a.set(1,o,o);const s=yu(a.toTensor(),[e,t]);if(null==n)return s;if(1===n.length)return Ic(Sc(s,0),[n[0],1,1]);if(2===n.length)return Ic(Sc(Sc(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return Ic(Sc(Sc(Sc(s,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+"batchShapes, but received ".concat(n.length,"D."))}});const Fc=is({floor_:function(e){const t={x:rs(e,"x","floor","float32")};return Yr.runKernel(Ot,t)}});const Ac=is({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const r={x:rs(e,"x","gather"),indices:rs(t,"indices","gather","int32")},s={axis:n,batchDims:a};return Yr.runKernel(zt,r,s)}});const Rc=is({greater_:function(e,t){let n=rs(e,"a","greater","string_or_numeric"),a=rs(t,"b","greater","string_or_numeric");[n,a]=Vr(n,a),Zo(n.shape,a.shape);const r={a:n,b:a};return Yr.runKernel(Pt,r)}});const _c=is({greaterEqual_:function(e,t){let n=rs(e,"a","greaterEqual","string_or_numeric"),a=rs(t,"b","greaterEqual","string_or_numeric");[n,a]=Vr(n,a),Zo(n.shape,a.shape);const r={a:n,b:a};return Yr.runKernel(Wt,r)}});const Oc=is({imag_:function(e){const t={input:rs(e,"input","imag")};return Yr.runKernel(Gt,t)}});const Lc=is({isFinite_:function(e){const t={x:rs(e,"x","isFinite")};return Yr.runKernel(Ht,t)}});const Mc=is({isInf_:function(e){const t={x:rs(e,"x","isInf")};return Yr.runKernel(jt,t)}});const zc=is({isNaN_:function(e){const t={x:rs(e,"x","isNaN")};return Yr.runKernel(qt,t)}});const Bc=is({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n={x:rs(e,"x","leakyRelu")},a={alpha:t};return Yr.runKernel(Kt,n,a)}});const Pc=is({less_:function(e,t){let n=rs(e,"a","less","string_or_numeric"),a=rs(t,"b","less","string_or_numeric");[n,a]=Vr(n,a),Zo(n.shape,a.shape);const r={a:n,b:a};return Yr.runKernel(Xt,r)}});const Wc=is({lessEqual_:function(e,t){let n=rs(e,"a","lessEqual","string_or_numeric"),a=rs(t,"b","lessEqual","string_or_numeric");[n,a]=Vr(n,a),Zo(n.shape,a.shape);const r={a:n,b:a};return Yr.runKernel(Yt,r)}});function Vc(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const a={start:e,stop:t,num:n};return Yr.runKernel(Qt,{},a)}const Uc=is({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const s=rs(e,"x","localResponseNormalization");V(4===s.rank||3===s.rank,(()=>"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ".concat(s.rank,"."))),V(q(t),(()=>"Error in localResponseNormalization: depthRadius must be an "+"integer but got depthRadius ".concat(t,".")));let o=s,i=!1;3===s.rank&&(i=!0,o=yu(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const u={x:o},c={depthRadius:t,bias:n,alpha:a,beta:r},l=Yr.runKernel(nn,u,c);return i?yu(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const Gc=is({log_:function(e){const t={x:rs(e,"x","log","float32")};return Yr.runKernel(Zt,t)}});const Hc=is({log1p_:function(e){const t={x:rs(e,"x","log1p")};return Yr.runKernel(Jt,t)}});const jc=is({neg_:function(e){const t={x:rs(e,"x","neg")};return Yr.runKernel(vn,t)}});const qc=is({softplus_:function(e){const t={x:rs(e,"x","softplus")};return Yr.runKernel(aa,t)}});const Kc=is({logSigmoid_:function(e){const t=rs(e,"x","logSigmoid");return Oo((e=>({value:jc(qc(jc(e))),gradFunc:t=>Fo(t,Du(jc(e)))})))(t)}});const Xc=is({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=rs(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and axis was ").concat(t));const a=Oo(((e,n)=>{const a=vc(e,t,!0),r=qo(e,a),s=qo(Co(r,"float32"),Gc(wc(Nc(r),t,!0)));n([s]);return{value:s,gradFunc:(e,n)=>{const[a]=n,r=Nc(a);return qo(e,Fo(wc(e,t,!0),r))}}}));return a(n)}});const Yc=is({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a=rs(e,"x","logSumExp"),r=Z(t,a.shape),s=vc(a,r,!0),o=qo(a,s),i=Nc(o),u=wc(i,r),c=Gc(u),l=Eo(yu(s,c.shape),c);if(n){const e=fc(l.shape,r);return yu(l,e)}return l}});const Qc=is({logicalAnd_:function(e,t){const n=rs(e,"a","logicalAnd","bool"),a=rs(t,"b","logicalAnd","bool");Zo(n.shape,a.shape);const r={a:n,b:a};return Yr.runKernel($t,r)}});const Zc=is({logicalNot_:function(e){const t={x:rs(e,"x","logicalNot","bool")};return Yr.runKernel(en,t)}});const Jc=is({logicalOr_:function(e,t){const n=rs(e,"a","logicalOr","bool"),a=rs(t,"b","logicalOr","bool");Zo(n.shape,a.shape);const r={a:n,b:a};return Yr.runKernel(tn,r)}});const $c=is({logicalXor_:function(e,t){const n=rs(e,"a","logicalXor","bool"),a=rs(t,"b","logicalXor","bool");return Zo(n.shape,a.shape),Qc(Jc(e,t),Zc(Qc(e,t)))}}),el=2147483648;const tl=is({searchSorted_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"left";const a=rs(e,"sortedSequence","searchSorted"),r=rs(t,"values","searchSorted"),s=a.shape[a.shape.length-1],o=r.shape[r.shape.length-1],i=yu(a,[-1,s]),u=yu(r,[-1,o]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(H(u.shape)>=el)throw new Error("values tensor size must less than ".concat(el));if(i.shape[1]>=el)throw new Error("trailing dim_size must less than ".concat(el," for int32 output type, was ").concat(i.shape[1]));const c={sortedSequence:i,values:u},l={side:n};return Yr.runKernel(Yn,c,l)}});function nl(e,t){return tl(e,t,"left")}const al=is({maxPool_:function(e,t,n,a,r){const s=rs(e,"x","maxPool");let o=s,i=!1;3===s.rank&&(i=!0,o=yu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),V(4===o.rank,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(o.rank,"."))),V(pu(n,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'"))),gu("maxPool",a,r);const u={x:o},c={filterSize:t,strides:n,pad:a,dimRoundingMode:r},l=Yr.runKernel(on,u,c);return i?yu(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const rl=is({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=rs(e,"x","maxPool3d");let i=o,u=!1;4===o.rank&&(u=!0,i=yu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),V(5===i.rank,(()=>"Error in maxPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),V("NDHWC"===s,(()=>"Error in maxPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(s))),gu("maxPool3d",a,r);const c={x:i},l={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s},h=Yr.runKernel(cn,c,l);return u?yu(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const sl=is({maxPoolWithArgmax_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const s={x:rs(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:a,includeBatchInIndex:r},i=Yr.runKernel(hn,s,o);return{result:i[0],indexes:i[1]}}});const ol=is({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:rs(e,"x","mean")},r={axis:t,keepDims:n};return Yr.runKernel(dn,a,r)}});function il(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(fe(e),"complex64"===t){const t=il(e,"float32"),n=il(e,"float32");return us(t,n)}const n=de(H(e),t);return Yr.makeTensor(n,e,t)}function ul(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(fe(e),"complex64"===t){const t=ul(e,"float32"),n=il(e,"float32");return us(t,n)}const n=he(H(e),t);return Yr.makeTensor(n,e,t)}function cl(e,t){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError("".concat(n," is not a valid third argument to meshgrid"));if(void 0===e)return[];let a=rs(e,"x","meshgrid",e instanceof Ir?e.dtype:"float32");if(void 0===t)return[a];let r=rs(t,"y","meshgrid",t instanceof Ir?t.dtype:"float32");const s=H(a.shape),o=H(r.shape);return"xy"===n?(a=yu(a,[1,-1]),r=yu(r,[-1,1]),[wu(ul([o,1],a.dtype),a),wu(r,ul([1,s],r.dtype))]):(a=yu(a,[-1,1]),r=yu(r,[1,-1]),[wu(a,ul([1,o],a.dtype)),wu(ul([s,1],r.dtype),r)])}const ll=is({minimum_:function(e,t){let n=rs(e,"a","minimum"),a=rs(t,"b","minimum");[n,a]=Vr(n,a),"bool"===n.dtype&&(n=Co(n,"int32"),a=Co(a,"int32")),Zo(n.shape,a.shape);const r={a:n,b:a};return Yr.runKernel(fn,r)}});const hl=is({mirrorPad_:function(e,t,n){V("reflect"===n||"symmetric"===n,(()=>"Invalid mode. Mode must be either reflect or symmetric. "+"Got ".concat(n,".")));const a=rs(e,"x","mirrorPad");if(0===a.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");V(t.length===a.rank,(()=>"Padding doesn't match input. Must be ".concat(a.rank,". ")+"Got ".concat(t.length,".")));const r="reflect"===n?1:0;for(let i=0;i<a.rank;i++)V(2===t[i].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),V(t[i][0]>=0&&t[i][0]<=a.shape[i]-r&&t[i][1]>=0&&t[i][1]<=a.shape[i]-r,(()=>"Padding in dimension ".concat(i," cannot be greater than or equal ")+"to ".concat(a.shape[i]-r," or less than 0 for input of ")+"shape ".concat(a.shape)));const s={paddings:t,mode:n},o={x:a};return Yr.runKernel(mn,o,s)}});const dl=is({mod_:function(e,t){let n=rs(e,"a","mod"),a=rs(t,"b","mod");[n,a]=Vr(n,a);const r={a:n,b:a};return Yr.runKernel(gn,r)}});const pl=is({moments_:function(e){let t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const n=Z(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,(e=rs(e,"x","moments")).shape),a=ol(e,n,t);let r=a.shape;t||(r=fc(a.shape,n));const s=Ro(qo(Co(e,"float32"),yu(a,r)));return{mean:a,variance:ol(s,n,t)}}});const fl=is({multiRNNCell_:function(e,t,n,a){const r=rs(t,"data","multiRNNCell"),s=ss(n,"c","multiRNNCell"),o=ss(a,"h","multiRNNCell");let i=r;const u=[];for(let h=0;h<e.length;h++){const t=e[h](i,s[h],o[h]);u.push(t[0]),u.push(t[1]),i=t[1]}const c=[],l=[];for(let h=0;h<u.length;h+=2)c.push(u[h]),l.push(u[h+1]);return[c,l]}});const ml=is({multinomial_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=rs(e,"logits","multinomial"),s=r.size,o=r.rank;if(s<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+"".concat(s,"."));if(o>2)throw new Error("Rank of probabilities must be 1 or 2, but is ".concat(o));n=n||Math.random();const i={logits:1===o?yu(r,[1,-1]):r},u={numSamples:t,seed:n,normalized:a},c=Yr.runKernel(yn,i,u);return 1===o?yu(c,[c.size]):c}});const gl=is({notEqual_:function(e,t){let n=rs(e,"a","notEqual","string_or_numeric"),a=rs(t,"b","notEqual","string_or_numeric");[n,a]=Vr(n,a),Zo(n.shape,a.shape);const r={a:n,b:a};return Yr.runKernel(xn,r)}});const yl=is({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is ".concat(t));const s={indices:rs(e,"indices","oneHot","int32")},o={dtype:r,depth:t,onValue:n,offValue:a};return Yr.runKernel(Nn,s,o)}});const bl=is({onesLike_:function(e){const t={x:rs(e,"x","onesLike")};return Yr.runKernel(Cn,t)}});const vl=is({outerProduct_:function(e,t){const n=rs(e,"v1","outerProduct"),a=rs(t,"v2","outerProduct");V(1===n.rank&&1===a.rank,(()=>"Error in outerProduct: inputs must be rank 1, but got ranks "+"".concat(n.rank," and ").concat(a.rank,".")));const r=yu(n,[-1,1]),s=yu(a,[1,-1]);return wu(r,s)}});const xl=is({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const a=rs(e,"x","pad");if(0===a.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:n},s={x:a};return Yr.runKernel(En,s,r)}});const wl=is({pad1d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return V(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),xl(e,[t],n)}});const Dl=is({pad2d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return V(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),xl(e,t,n)}});const kl=is({pad3d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return V(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),xl(e,t,n)}});const Cl=is({pad4d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return V(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),xl(e,t,n)}});const Nl=is({spaceToBatchND_:function(e,t,n){const a=rs(e,"x","spaceToBatchND");V(a.rank>=1+t.length,(()=>"input rank ".concat(a.rank," should be > than [blockShape] ").concat(t.length))),V(n.length===t.length,(()=>"paddings.shape[0] ".concat(n.length," must be equal to [blockShape] ").concat(t.length))),V(a.shape.reduce(((e,a,r)=>r>0&&r<=t.length?e&&(a+n[r-1][0]+n[r-1][1])%t[r-1]===0:e),!0),(()=>"input spatial dimensions ".concat(a.shape.slice(1)," with paddings ").concat(n.toString()," must be divisible by blockShapes ").concat(t.toString())));const r={x:a},s={blockShape:t,paddings:n};return Yr.runKernel(oa,r,s)}});const Sl=is({pool_:function(e,t,n,a,r,s,o){null==r&&(r=[1,1]),null==s&&(s=1),0===a&&(a="valid");const i=rs(e,"x","maxPool");let u=i,c=!1;3===i.rank&&(c=!0,u=yu(i,[1,i.shape[0],i.shape[1],i.shape[2]])),V(pu(s,r),(()=>"Error in pool: Either strides or dilations must be 1. "+"Got strides ".concat(s," and dilations '").concat(r,"'")));const l=au(u.shape,t,s,r,a),h=[l.dilationHeight,l.dilationWidth];let d;d="same"===a?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),a=n.map((e=>e-1)),r=a.map((e=>Math.floor(e/2))),s=a.map(((e,t)=>e-r[t]));return a.map(((e,t)=>[r[t],s[t]]))}([l.filterHeight,l.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const a=n.map((e=>e[0])),r=n.map((e=>e[1])),s=e.concat(a,r),o=t.map(((e,t)=>(e-s[t]%e)%e)),i=r.map(((e,t)=>e+o[t])),u=t.map(((e,t)=>[a[t],i[t]])),c=t.map(((e,t)=>[0,o[t]]));return[u,c]}([l.inHeight,l.inWidth],h,d),g=p?a:"valid",y=p?u:Nl(u,h,f),b=("avg"===n?()=>bu(y,t,s,g,o):()=>al(y,t,s,g,o))(),v=p?b:Su(b,h,m);return c?yu(v,[v.shape[1],v.shape[2],v.shape[3]]):v}});const El=is({prelu_:function(e,t){const n={x:rs(e,"x","prelu"),alpha:rs(t,"alpha","prelu")};return Yr.runKernel(Tn,n)}});const Il=is({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=rs(e,"x","prod");"bool"===a.dtype&&(a=Co(a,"int32"));const r={x:a},s={axis:t,keepDims:n};return Yr.runKernel(Fn,r,s)}});const Tl=is({raggedGather_:function(e,t,n,a){const r={paramsNestedSplits:e.map(((e,t)=>rs(e,"tensors".concat(t),"raggedGather","int32"))),paramsDenseValues:rs(t,"paramsDenseValues","raggedGather"),indices:rs(n,"indices","raggedGather","int32")},s={outputRaggedRank:a},o=Yr.runKernel(An,r,s);return{outputNestedSplits:o.slice(0,o.length-1),outputDenseValues:o[o.length-1]}}});const Fl=is({raggedRange_:function(e,t,n){const a=rs(e,"starts","raggedRange"),r={starts:a,limits:rs(t,"limits","raggedRange",a.dtype),deltas:rs(n,"deltas","raggedRange",a.dtype)},s=Yr.runKernel(Rn,r);return{rtNestedSplits:s[0],rtDenseValues:s[1]}}});const Al=is({raggedTensorToTensor_:function(e,t,n,a,r){const s=rs(e,"shape","raggedTensorToTensor","int32"),o=rs(t,"values","raggedTensorToTensor"),i={shape:s,values:o,defaultValue:rs(n,"defaultValue","raggedTensorToTensor",o.dtype),rowPartitionTensors:a.map(((e,t)=>rs(e,"tensors".concat(t),"raggedTensorToTensor","int32")))},u={rowPartitionTypes:r};return Yr.runKernel(_n,i,u)}});const Rl=is({rand_:function(e,t,n){fe(e);const a=H(e);let r=null;if(null==n||"float32"===n)r=new Float32Array(a);else if("int32"===n)r=new Int32Array(a);else{if("bool"!==n)throw new Error("Unknown data type ".concat(n));r=new Uint8Array(a)}for(let s=0;s<a;s++)r[s]=t();return Yr.makeTensor(r,e,n)}});var _l=n(334);class Ol{constructor(e,t,n,a,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=r||Math.random();this.random=_l.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let a,r,s;do{a=2*this.random()-1,r=2*this.random()-1,s=a*a+r*r}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*a*o,t=this.mean+this.stdDev*r*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Ll{constructor(e,t,n,a){this.alpha=e,this.beta=1/t,this.dtype=n;const r=a||Math.random();this.randu=_l.alea(r.toString()),this.randn=new Ol(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,a,r,s;for(;;){do{a=this.randn.nextValue(),s=1+this.c*a}while(s<=0);if(s*=s*s,e=a*a,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),r=this.randu(),r<t||Math.log(r)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Ml{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between ".concat(e," - ").concat(t," <= 1 and dtype is not float"));this.random=_l.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const zl=is({randomGamma_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;if(fe(e),null==n&&(n=1),null==a&&(a="float32"),"float32"!==a&&"int32"!==a)throw new Error("Unsupported data type ".concat(a));const s=new Ll(t,n,a,r),o=ko(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const Bl=is({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if(fe(e),null!=a&&"bool"===a)throw new Error("Unsupported data type ".concat(a));const s=new Ol(t,n,a,!1,r),o=ko(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const Pl=is({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error("Unsupported data type ".concat(t));return Bl(e,0,1,t,n)}});const Wl=is({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;fe(e);const s=ko(e,a),o=new Ml(t,n,null,r);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}});const Vl=is({randomUniformInt_:function(e,t,n,a){return Wl(e,t,n,"int32",a)}});function Ul(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:a};return Yr.runKernel(On,{},r)}const Gl=is({real_:function(e){const t={input:rs(e,"input","real")};return Yr.runKernel(Ln,t)}});const Hl=is({reciprocal_:function(e){const t={x:rs(e,"x","reciprocal")};return Yr.runKernel(Mn,t)}});const jl=is({relu_:function(e){const t={x:rs(e,"x","relu")};return Yr.runKernel(zn,t)}});const ql=is({relu6_:function(e){const t={x:rs(e,"x","relu6")};return Yr.runKernel(Gn,t)}});const Kl=is({reverse_:function(e,t){const n={x:rs(e,"x","reverse")},a={dims:t};return Yr.runKernel(Hn,n,a)}});const Xl=is({reverse1d_:function(e){const t=rs(e,"x","reverse");return V(1===t.rank,(()=>"Error in reverse1D: x must be rank 1 but got rank ".concat(t.rank,"."))),Kl(t,0)}});const Yl=is({reverse2d_:function(e,t){const n=rs(e,"x","reverse");return V(2===n.rank,(()=>"Error in reverse2D: x must be rank 2 but got rank ".concat(n.rank,"."))),Kl(n,t)}});const Ql=is({reverse3d_:function(e,t){const n=rs(e,"x","reverse");return V(3===n.rank,(()=>"Error in reverse3D: x must be rank 3 but got rank ".concat(n.rank,"."))),Kl(n,t)}});const Zl=is({reverse4d_:function(e,t){const n=rs(e,"x","reverse");return V(4===n.rank,(()=>"Error in reverse4D: x must be rank 4 but got rank ".concat(n.rank,"."))),Kl(n,t)}});const Jl=is({round_:function(e){const t={x:rs(e,"x","round")};return Yr.runKernel(jn,t)}});const $l=is({rsqrt_:function(e){const t={x:rs(e,"x","rsqrt","float32")};return Yr.runKernel(qn,t)}});const eh=is({selu_:function(e){const t={x:rs(e,"x","selu")};return Yr.runKernel(Zn,t)}});const th=is({separableConv2d_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const i=rs(e,"x","separableConv2d"),u=rs(t,"depthwiseFilter","separableConv2d"),c=rs(n,"pointwiseFilter","separableConv2d");let l=i,h=!1;if(3===i.rank&&(h=!0,l=yu(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");V(4===l.rank,(()=>"Error in separableConv2d: input must be rank 4, but got "+"rank ".concat(l.rank,"."))),V(4===u.rank,(()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+"got rank ".concat(u.rank,"."))),V(4===c.rank,(()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+"got rank ".concat(u.rank,"."))),V(1===c.shape[0],(()=>"Error in separableConv2d: the first dimension of pointwise filter "+" must be 1, but got ".concat(c.shape[0],"."))),V(1===c.shape[1],(()=>"Error in separableConv2d: the second dimension of pointwise "+"filter must be 1, but got ".concat(c.shape[1],".")));const d=u.shape[2],p=u.shape[3];V(c.shape[2]===d*p,(()=>"Error in separableConv2d: the third dimension of pointwise filter "+"must be ".concat(d*p,", ")+"but got ".concat(c.shape[2],".")));const f=ec(l,u,a,r,o,s),m=Vu(f,c,1,"valid",o);return h?yu(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const nh=async function(e,t){const n=rs(e,"x","setdiff1d"),a=rs(t,"y","setdiff1d");V(n.dtype===a.dtype,(()=>"x and y should have the same dtype, but got x (".concat(n.dtype,") and y (").concat(a.dtype,")."))),V(1===n.rank,(()=>"x should be 1D tensor, but got x (".concat(n.shape,")."))),V(1===a.rank,(()=>"y should be 1D tensor, but got y (".concat(a.shape,").")));const r=await n.data(),s=await a.data(),o=new Set(s);let i=0;for(let l=0;l<r.length;l++)o.has(r[l])||i++;const u=new Cr([i],n.dtype),c=new Cr([i],"int32");for(let l=0,h=0;l<r.length;l++)o.has(r[l])||(u.values[h]=r[l],c.values[h]=l,h++);return[u.toTensor(),c.toTensor()]};const ah=is({sign_:function(e){const t={x:rs(e,"x","sign")};return Yr.runKernel(ta,t)}});const rh=is({sin_:function(e){const t={x:rs(e,"x","sin","float32")};return Yr.runKernel($n,t)}});const sh=is({sinh_:function(e){const t={x:rs(e,"x","sinh")};return Yr.runKernel(ea,t)}});const oh=is({slice1d_:function(e,t,n){const a=rs(e,"x","slice1d");return V(1===a.rank,(()=>"slice1d expects a rank-1 tensor, but got a rank-".concat(a.rank," tensor"))),ku(a,[t],[n])}});const ih=is({slice2d_:function(e,t,n){const a=rs(e,"x","slice2d");return V(2===a.rank,(()=>"slice2d expects a rank-2 tensor, but got a rank-".concat(a.rank," tensor"))),ku(a,t,n)}});const uh=is({slice3d_:function(e,t,n){const a=rs(e,"x","slice3d");return V(3===a.rank,(()=>"slice3d expects a rank-3 tensor, but got a rank-".concat(a.rank," tensor"))),ku(a,t,n)}});const ch=is({slice4d_:function(e,t,n){const a=rs(e,"x","slice4d");return V(4===a.rank,(()=>"slice4d expects a rank-4 tensor, but got a rank-".concat(a.rank," tensor"))),ku(a,t,n)}});const lh=is({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=rs(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and dim was ").concat(t));const a={logits:n},r={dim:t};return Yr.runKernel(ua,a,r)}});const hh=is({fft_:function(e){V("complex64"===e.dtype,(()=>"The dtype for tf.spectral.fft() must be complex64 "+"but got ".concat(e.dtype,".")));const t={input:e};return Yr.runKernel(At,t)}});const dh=is({ifft_:function(e){V("complex64"===e.dtype,(()=>"The dtype for tf.spectral.ifft() must be complex64 "+"but got ".concat(e.dtype,".")));const t={input:e};return Yr.runKernel(Ut,t)}});const ph=is({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let a;if(t<=2){const r=yu(e,[n,t]);a=dh(r)}else{const r=[n,2*(t-1)],s=yu(Gl(e),[n,t]),o=yu(Oc(e),[n,t]),i=Kl(ku(s,[0,1],[n,t-2]),1),u=Fo(Kl(ku(o,[0,1],[n,t-2]),1),Lo(-1)),c=xu([s,i],1),l=xu([o,u],1),h=yu(us(c,l),[r[0],r[1]]);a=dh(h)}if(a=Gl(a),3===e.rank&&0!==e.shape[0]){const t=a,n=e.shape[0];a=yu(a,[n,a.shape[0]/n,a.shape[1]]),t.dispose()}return a}});const fh=is({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const a={x:rs(e,"x","split")},r={numOrSizeSplits:t,axis:n};return Yr.runKernel(ia,a,r)}});const mh=is({rfft_:function(e,t){V("float32"===e.dtype,(()=>"The dtype for rfft() must be real value but got ".concat(e.dtype)));let n=e.shape[e.shape.length-1];const a=e.size/n;let r;if(null!=t&&t<n){const a=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,r=ku(e,a,s),n=t}else if(null!=t&&t>n){const a=e.shape.map((e=>e));a[e.shape.length-1]=t-n,r=xu([e,il(a)],e.shape.length-1),n=t}else r=e;const s=_o(r),o=yu(us(r,s),[a,n]),i=hh(o),u=Math.floor(n/2)+1,c=Gl(i),l=Oc(i),h=fh(c,[u,n-u],c.shape.length-1),d=fh(l,[u,n-u],l.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=u,yu(us(h[0],d[0]),p)}});const gh=is({squaredDifference_:function(e,t){let n=rs(e,"a","squaredDifference"),a=rs(t,"b","squaredDifference");[n,a]=Vr(n,a),Zo(n.shape,a.shape);const r={a:n,b:a};return Yr.runKernel(fa,r,{})}});const yh=is({squeeze_:function(e,t){const n=rs(e,"x","squeeze","string_or_numeric");return yu(n,J(n.shape,t).newShape)}});const bh=is({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=ss(e,"tensors","stack","string_or_numeric");V(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&V(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const a=n,r={axis:t};return Yr.runKernel(Sn,a,r)}});const vh=is({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:rs(e,"x","step")},a={alpha:t};return Yr.runKernel(Ra,n,a)}});const xh=is({stridedSlice_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,u=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const c={x:rs(e,"x","stridedSlice","string_or_numeric")},l={begin:t,end:n,strides:a,beginMask:r,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};return Yr.runKernel(ya,c,l)}});const wh=is({tan_:function(e){const t={x:rs(e,"x","tan","float32")};return Yr.runKernel(Da,t)}});function Dh(e,t){G(e);const n=ts(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return cs(e,null,n,t)}function kh(e,t,n){if(G(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const a=ts(e,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return cs(e,t,a,n)}function Ch(e,t,n){if(G(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const a=ts(e,n);if(4!==a.length&&1!==a.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return cs(e,t,a,n)}function Nh(e,t,n){if(G(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const a=ts(e,n);if(5!==a.length&&1!==a.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return cs(e,t,a,n)}function Sh(e,t,n){if(G(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const a=ts(e,n);if(6!==a.length&&1!==a.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return cs(e,t=t||a,a,n)}function Eh(e,t,n){const a=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + "+"shape[sliceDim:], got updates.shape: ".concat(n.shape)+", indices.shape: ".concat(t.shape,", shape: ").concat(e)+", sliceDim: ".concat(a,", and batchDim: ").concat(r,".");if(n.rank<r)throw new Error(s+" update.rank < ".concat(r,". "));if(e.length<a+(n.rank-r))throw new Error(s+" Output shape length < ".concat(a+(n.rank-r)));if(n.rank!==r+e.length-a)throw new Error(s+" update.rank != ".concat(r+e.length-a));for(let o=0;o<r;++o)if(n.shape[o]!==t.shape[o])throw new Error(s+" updates.shape[".concat(o,"] (").concat(n.shape[o],") != indices.shape[").concat(o,"] (").concat(t.shape[o],")."));for(let o=0;o<n.rank-r;++o)if(n.shape[o+r]!==e[o+a])throw new Error(s+" updates.shape[".concat(o+r,"] (").concat(n.shape[o+r],") != shape[").concat(o+r,"] (").concat(e[o+r],")"))}function Ih(e,t,n){if(t.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(t.rank,"."));if(e.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+" but the rank was ".concat(e.rank,"."));if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: ".concat(t.dtype));if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: ".concat(n));if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: ".concat(t.shape));if(0===e.size)throw new Error("Updates specified for empty output. updates shape: ".concat(e.shape))}Eh(n,t,e)}function Th(e,t,n){const a=t.shape.length,r=a>1?t.shape[a-1]:1,s=n.length;let o=1;for(let u=r;u<s;++u)o*=n[u];const i=r<1?1:r;return{sliceRank:r,numUpdates:H(t.shape)/i,sliceSize:o,strides:[...ue(n.slice(0,r)),1],outputSize:H(n)}}const Fh=is({tensorScatterUpdate_:function(e,t,n){const a=rs(e,"tensor","tensorScatterupdate"),r=rs(t,"indices","tensorScatterupdate","int32"),s=rs(n,"updates","tensorScatterupdate");if(Ih(s,r,a.shape),a.dtype!==s.dtype)throw new Error("tensor and updates must have the same dtype, instead they are ".concat(a.dtype," and ").concat(s.dtype,"."));const o={tensor:a,indices:r,updates:s};return Yr.runKernel(Xn,o,{})}});const Ah=is({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=rs(e,"x","topk");if(0===a.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=a.shape[a.shape.length-1];if(t<0)throw new Error("'k' passed to topk() must be >= 0 but got ".concat(t));if(t>r)throw new Error("'k' passed to topk() must be <= the last dimension (".concat(r,") ")+"but got ".concat(t));const s={x:a},o={k:t,sorted:n},[i,u]=Yr.runKernel(Na,s,o);return{values:i,indices:u}}});const Rh=is({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if(fe(e),null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const s=new Ol(t,n,a,!0,r),o=ko(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const _h=is({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=rs(e,"x","unique","string_or_numeric");V(n.rank>0,(()=>"The input tensor must be at least 1D"));const a={x:n},r={axis:t},[s,o]=Yr.runKernel(Ia,a,r);return{values:s,indices:o}}});const Oh=is({unsortedSegmentSum_:function(e,t,n){const a=rs(e,"x","unsortedSegmentSum"),r=rs(t,"segmentIds","unsortedSegmentSum","int32");V(q(n),(()=>"numSegments must be of dtype int"));const s={x:a,segmentIds:r},o={numSegments:n};return Yr.runKernel(Fa,s,o)}});const Lh=is({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=rs(e,"x","unstack","string_or_numeric");V(t>=-n.shape.length&&t<n.shape.length,(()=>"Axis = ".concat(t," is not in [-").concat(n.shape.length,", ").concat(n.shape.length,")")));const a={value:n},r={axis:t};return Yr.runKernel(Ta,a,r)}});function Mh(e,t){return tl(e,t,"right")}function zh(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return Yr.makeVariable(e,t,n,a)}function Bh(e,t){const n=[];for(let s=0;s<t.length;s++)t[s]&&n.push(s);const a=ko(e,"int32"),r=ko([n.length,e.length],"int32");for(let s=0;s<n.length;s++){const t=a.indexToLoc(n[s]),o=s*e.length;r.values.set(t,o)}return r.toTensor()}const Ph=async function(e){const t=rs(e,"condition","whereAsync","bool"),n=await t.data(),a=Bh(t.shape,n);return e!==t&&t.dispose(),a};const Wh=async function(e,t,n){const a=rs(e,"tensor","boolMask"),r=rs(t,"mask","boolMask","bool"),s=null==n?0:n,o=r.rank,i=a.shape;V(o>0,(()=>"mask cannot be scalar")),U(i.slice(s,s+o),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let m=s;m<s+o;m++)u*=i[m];const c=i.slice(0,s).concat([u],i.slice(s+o)),l=yu(a,c),h=yu(r,[-1]),d=await Ph(h),p=yh(d,[1]),f=Ac(l,p,s);return e!==a&&a.dispose(),t!==r&&r.dispose(),p.dispose(),l.dispose(),h.dispose(),d.dispose(),f};const Vh=is({transpose_:function(e,t,n){const a=rs(e,"x","transpose");if(null==t&&(t=a.shape.map(((e,t)=>t)).reverse()),V(a.rank===t.length,(()=>"Error in transpose: rank of input ".concat(a.rank," ")+"must match length of perm ".concat(t,"."))),t.forEach((e=>{V(e>=0&&e<a.rank,(()=>"All entries in 'perm' must be between 0 and ".concat(a.rank-1)+" but got ".concat(t)))})),a.rank<=1)return a.clone();const r={x:a},s={perm:t};return"complex64"===a.dtype?ms((()=>{let e=Gl(a),t=Oc(a);return e=Yr.runKernel(Ea,{x:e},s),t=Yr.runKernel(Ea,{x:t},s),n&&(t=jc(t)),us(e,t)})):Yr.runKernel(Ea,r,s)}});const Uh=is({movingAverage_:function(e,t,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];const s=rs(e,"v","movingAverage"),o=rs(t,"x","movingAverage"),i=rs(n,"decay","movingAverage");var u,c;c=o,V((u=s).dtype===c.dtype,(()=>"The dtypes of the first(".concat(u.dtype,") and")+" second(".concat(c.dtype,") input must match"))),V(j(s.shape,o.shape),(()=>"Shape mismatch in v and x"));const l=Lo(1),h=qo(l,i);let d=Fo(qo(o,s),h);if(r){V(null!=a,(()=>"When using zeroDebias: true, step is required."));const e=rs(a,"step","movingAverage");d=To(d,qo(l,jo(i,e)))}return Eo(s,d)}});const Gh=is({scatterND_:function(e,t,n){fe(n);const a=rs(e,"indices","scatterND","int32"),r=rs(t,"updates","scatterND");Ih(r,a,n);const s={indices:a,updates:r},o={shape:n};return Yr.runKernel(Kn,s,o)}});const Hh=is({sparseToDense_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;fe(n);const r=rs(e,"sparseIndices","sparseToDense","int32"),s=rs(t,"sparseValues","sparseToDense","string_or_numeric"),o=rs(a,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,a){if("int32"!==e.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type,"+" but the dtype was ".concat(e.dtype,"."));if(e.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix,"+" but got shape ".concat(e.shape,"."));const r=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error("outputShape has incorrect number of elements:,"+" ".concat(n.length,", should be: ").concat(s,"."));const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==r))throw new Error("sparseValues has incorrect shape "+"".concat(t.shape,", should be [] or [").concat(r,"]"));if(t.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,s,n,o);const i={sparseIndices:r,sparseValues:s,defaultValue:o},u={outputShape:n};return Yr.runKernel(pa,i,u)}});const jh=is({gatherND_:function(e,t){const n=rs(t,"indices","gatherND","int32"),a={params:rs(e,"x","gatherND","string_or_numeric"),indices:n};return Yr.runKernel(Bt,a)}});const qh=is({dropout_:function(e,t,n,a){const r=rs(e,"x","dropout");if(V("float32"===r.dtype,(()=>"x has to be a floating point tensor since it's going to be "+"scaled, but got a ".concat(r.dtype," tensor instead."))),V(t>=0&&t<1,(()=>"rate must be a float in the range [0, 1), but got ".concat(t,"."))),0===t)return e instanceof Ir?r.clone():r;const s=function(e,t){if(null==t)return e.shape.slice();if(j(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let a=0;a<e.shape.length;a++)null==t[a]&&null!=e.shape[a]?n.push(e.shape[a]):n.push(t[a]);return n}return t}(r,n),o=1-t,i=To(Fc(Eo(Wl(s,0,1,"float32",a),o)),o);return Fo(r,i)}});function Kh(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Xh(e,t,n){const a=1-e%2,r=new Float32Array(e);for(let s=0;s<e;++s){const o=2*Math.PI*s/(e+a-1);r[s]=t-n*Math.cos(o)}return Dh(r,"float32")}const Yh=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const a=rs(e,"predictions","inTopK"),r=rs(t,"targets","inTopK");V(a.rank>1,(()=>"inTopK() expects the predictions to be of rank 2 or higher, "+"but got ".concat(a.rank))),V(a.rank-1===r.rank,(()=>"predictions rank should be 1 larger than targets rank, but got predictions rank "+"".concat(a.rank," and targets rank ").concat(r.rank))),U(a.shape.slice(0,a.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=a.shape[a.shape.length-1];V(n>0&&n<=s,(()=>"'k' passed to inTopK() must be > 0 && <= the predictions last "+"dimension (".concat(s,"), but got ").concat(n)));const o=await a.data(),i=await r.data(),[u,c]=[o.length/s,s],l=$("bool",u);for(let h=0;h<u;h++){const e=h*c,t=o.subarray(e,e+c),a=[];for(let n=0;n<t.length;n++)a.push({value:t[n],index:n});a.sort(((e,t)=>t.value-e.value)),l[h]=0;for(let r=0;r<n;r++)if(a[r].index===i[h]){l[h]=1;break}}return e!==a&&a.dispose(),t!==r&&r.dispose(),ls(l,r.shape,"bool")};const Qh=is({conv2DBackpropFilter_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",o=arguments.length>6?arguments[6]:void 0,i=e;3===e.rank&&(i=yu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=yu(t,[1,t.shape[0],t.shape[1],t.shape[2]])),V(4===i.rank,(()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+"".concat(i.shape,"."))),V(4===u.rank,(()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+"".concat(u.shape,"."))),V(4===n.length,(()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+"".concat(n,".")));const c="NHWC"===s?i.shape[3]:i.shape[1],l="NHWC"===s?u.shape[3]:u.shape[1];V(c===n[2],(()=>"Error in conv2dDerFilter: depth of input ".concat(c,") must ")+"match input depth in filter (".concat(n[2],"."))),V(l===n[3],(()=>"Error in conv2dDerFilter: depth of dy (".concat(l,") must ")+"match output depth for filter (".concat(n[3],")."))),gu("conv2dDerFilter",r,o);const h={x:i,dy:u},d={strides:a,pad:r,dataFormat:s,dimRoundingMode:o,filterShape:n};return Yr.runKernel(nt,h,d)}});function Zh(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Fo(e,vh(t));throw new Error("Cannot compute gradient for fused activation ".concat(n,"."))}function Jh(e,t){let n=t;const a=Qo(e.shape,t.shape);return a.length>0&&(n=wc(n,a)),yu(n,e.shape)}function $h(e,t,n,a){if("linear"===t)return e;if("relu"===t)return jl(e);if("elu"===t)return uc(e);if("relu6"===t)return ql(e);if("prelu"===t)return El(e,n);if("leakyrelu"===t)return Bc(e,a);if("sigmoid"===t)return Du(e);throw new Error("Unknown fused activation ".concat(t,"."))}const ed=(e,t)=>!(e>0)||"linear"===t;const td=is({fusedConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:u,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:h}=e;if(c=c||"linear",!1===ed(Yr.state.gradientDepth,c)){V("NHWC"===s,(()=>"Error in fused conv2d: got dataFormat of ".concat(s," but ")+"only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear."));let e=Vu(t,n,a,r,s,o,i);return null!=u&&(e=Eo(e,u)),$h(e,c,l,h)}const d=rs(t,"x","conv2d","float32"),p=rs(n,"filter","conv2d","float32");let f=d,m=!1;3===d.rank&&(m=!0,f=yu(d,[1,d.shape[0],d.shape[1],d.shape[2]])),V(4===f.rank,(()=>"Error in fused conv2d: input must be rank 4, but got rank "+"".concat(f.rank,"."))),V(4===p.rank,(()=>"Error in fused conv2d: filter must be rank 4, but got rank "+"".concat(p.rank,"."))),gu("fused conv2d",r,i);const g="NHWC"===s?f.shape[3]:f.shape[1];V(p.shape[2]===g,(()=>"Error in conv2d: depth of input (".concat(g,") must match ")+"input depth for filter ".concat(p.shape[2],"."))),V(pu(a,o),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(a," and dilations '").concat(o,"'")));const y=su(f.shape,p.shape,a,o,r,i);let b,v;if(null!=u&&(b=rs(u,"bias","fused conv2d"),[b]=Vr(b,d),"NHWC"===s?Zo(y.outShape,b.shape):(V(b.shape.length<=1,(()=>"Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of "+"rank-".concat(b.shape.length,"."))),V(0===b.shape.length||b.shape[0]===y.outChannels||1===b.shape[0],(()=>"Error in fused conv2d: bias shape (".concat(b.shape,") is not ")+"compatible with the number of output channels "+"(".concat(y.outChannels,")"))))),null!=l){const e=l.shape;if(V(e.length<=1||3===e.length,(()=>"Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of "+"rank-".concat(e.length,"."))),1===e.length)V(1===e[0]||e[0]===y.outChannels,(()=>"Error in fused conv2d: PReLU activation weights "+"(".concat(e,") is not compatible with the number of output ")+"channels (".concat(y.outChannels,").")));else if(3===e.length)try{Zo(e,y.outShape)}catch(k){const t="Error in fused conv2d: PReLU activation weights (".concat(e,") ")+"is not compatible with the output shape of the conv2d "+"(".concat(y.outShape,").");throw Error(t)}v=rs(l,"prelu weights","fused conv2d")}const x=(e,t)=>{V("NHWC"===s,(()=>"Error in gradient of fused conv2D: got dataFormat of ".concat(s," but only NHWC is currently supported.")));const[n,i,u,l]=t,h=Zh(e,u,c);V(du(o),(()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(o,"'")));const d=[Gu(i.shape,h,n,a,r),Qh(i,h,n.shape,a,r)];if(null!=l){const e=Jh(l,h);d.push(e)}return d},w={x:f,filter:p,bias:b,preluActivationWeights:v},D={strides:a,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i,activation:c,leakyreluAlpha:h};if(null==u){const e=Oo(((e,t,n)=>{let a=Yr.runKernel(Ma,w,D);return n([t,e,a]),m&&(a=yu(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}));return e(f,p)}{const e=Oo(((e,t,n,a)=>{let r=Yr.runKernel(Ma,w,D);return a([t,e,r,n]),m&&(r=yu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(f,p,b)}}});const nd=is({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0,i=e;3===e.rank&&(i=yu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=yu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={x:i,dy:u},l={strides:a,pad:r,dimRoundingMode:o,dilations:s,filterShape:n};return Yr.runKernel(mt,c,l)}});const ad=is({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0,i=t,u=!1;3===t.rank&&(u=!0,i=yu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={dy:i,filter:n},l={strides:a,pad:r,dimRoundingMode:o,dilations:s,inputShape:e},h=Yr.runKernel(gt,c,l);return u?yu(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const rd=is({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:u,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:h}=e;if(!1===ed(Yr.state.gradientDepth,c)){let e=ec(t,n,a,r,s,o,i);return null!=u&&(e=Eo(e,u)),$h(e,c,l,h)}const d=rs(t,"x","depthwiseConv2d","float32"),p=rs(n,"filter","depthwiseConv2d","float32");let f=d,m=!1;3===d.rank&&(m=!0,f=yu(d,[1,d.shape[0],d.shape[1],d.shape[2]])),V(4===f.rank,(()=>"Error in fused depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(f.rank,"."))),V(4===p.rank,(()=>"Error in fused depthwiseConv2d: filter must be rank 4, "+"but got rank ".concat(p.rank,"."))),V(f.shape[3]===p.shape[2],(()=>"Error in fused depthwiseConv2d: number of input channels "+"(".concat(f.shape[3],") must match the inChannels dimension in ")+"filter ".concat(p.shape[2],"."))),null==o&&(o=[1,1]),V(pu(a,o),(()=>"Error in fused depthwiseConv2d: Either strides or dilations must "+"be 1. Got strides ".concat(a," and dilations '").concat(o,"'"))),gu("fused depthwiseConv2d",r,i);const g=su(f.shape,p.shape,a,o,r,i,!0);let y,b;null!=u&&(y=rs(u,"bias","fused conv2d"),[y]=Vr(y,d),Zo(g.outShape,y.shape)),null!=l&&(b=rs(l,"prelu weights","fused depthwiseConv2d"));const v=(e,t)=>{V(du(o),(()=>"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(o,"'")));const[n,s,u,l]=t,h=Zh(e,u,c),d=ad(s.shape,h,n,a,r,o,i),p=nd(s,h,n.shape,a,r,o,i);if(null!=l){return[d,p,Jh(y,h)]}return[d,p]},x={x:f,filter:p,bias:y,preluActivationWeights:b},w={strides:a,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i,activation:c,leakyreluAlpha:h};if(null==u){const e=Oo(((e,t,n)=>{let a=Yr.runKernel(za,x,w);return n([t,e,a]),m&&(a=yu(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:v}}));return e(f,p)}{const e=Oo(((e,t,n,a)=>{let r=Yr.runKernel(za,x,w);return a([t,e,r,n]),m&&(r=yu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}));return e(f,p,y)}}});const sd=is({fusedMatMul_:function(e){let{a:t,b:n,transposeA:a=!1,transposeB:r=!1,bias:s,activation:o="linear",preluActivationWeights:i,leakyreluAlpha:u=.2}=e;if(!1===ed(Yr.state.gradientDepth,o)){let e=wu(t,n,a,r);return null!=s&&(e=Eo(e,s)),$h(e,o,i,u)}let c=rs(t,"a","fused matMul"),l=rs(n,"b","fused matMul");[c,l]=Vr(c,l);const h=a?c.shape[c.rank-2]:c.shape[c.rank-1],d=r?l.shape[l.rank-1]:l.shape[l.rank-2],p=a?c.shape[c.rank-1]:c.shape[c.rank-2],f=r?l.shape[l.rank-2]:l.shape[l.rank-1],m=c.shape.slice(0,-2),g=l.shape.slice(0,-2),y=H(m),b=H(g);V(h===d,(()=>"Error in fused matMul: inner shapes (".concat(h,") and (")+"".concat(d,") of Tensors with shapes ").concat(c.shape," and ")+"".concat(l.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const v=Zo(c.shape.slice(0,-2),l.shape.slice(0,-2)).concat([p,f]),x=yu(c,a?[y,h,p]:[y,p,h]),w=yu(l,r?[b,f,d]:[b,d,f]);let D,k;null!=s&&(D=rs(s,"bias","fused matMul"),[D]=Vr(D,c),Zo(v,D.shape)),null!=i&&(k=rs(i,"prelu weights","fused matMul"));const C=(e,t)=>{const[n,i,u,c]=t,l=Zh(yu(e,u.shape),u,o);let h,d;if(a||r?!a&&r?(h=wu(l,i,!1,!1),d=wu(l,n,!0,!1)):a&&!r?(h=wu(i,l,!1,!0),d=wu(n,l,!1,!1)):(h=wu(i,l,!0,!0),d=wu(l,n,!0,!0)):(h=wu(l,i,!1,!0),d=wu(n,l,!0,!1)),null!=s){return[h,d,Jh(c,l)]}return[h,d]},N={a:x,b:w,bias:D,preluActivationWeights:k},S={transposeA:a,transposeB:r,activation:o,leakyreluAlpha:u};if(null==s){const e=Oo(((e,t,n)=>{const a=Yr.runKernel(La,N,S);return n([e,t,a]),{value:yu(a,v),gradFunc:C}}));return e(x,w)}{const e=Oo(((e,t,n,a)=>{const r=Yr.runKernel(La,N,S);return a([e,t,r,n]),{value:yu(r,v),gradFunc:C}}));return e(x,w,D)}}});const od=is({hammingWindow_:function(e){return Xh(e,.54,.46)}});const id=is({hannWindow_:function(e){return Xh(e,.5,.5)}});const ud=is({frame_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=0;const o=[];for(;s+t<=e.size;)o.push(ku(e,s,t)),s+=n;if(a)for(;s<e.size;){const a=s+t-e.size,i=xu([ku(e,s,t-a),Go([a],r)]);o.push(i),s+=n}return 0===o.length?kh([],[0,t]):yu(xu(o),[o.length,t])}});const cd=is({stft_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:id;null==a&&(a=Kh(t));const s=ud(e,t,n),o=Fo(s,r(t));return mh(o,a)}});const ld=is({cropAndResize_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=rs(e,"image","cropAndResize"),i=rs(t,"boxes","cropAndResize","float32"),u=rs(n,"boxInd","cropAndResize","int32"),c=i.shape[0];V(4===o.rank,(()=>"Error in cropAndResize: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),V(2===i.rank&&4===i.shape[1],(()=>"Error in cropAndResize: boxes must be have size [".concat(c,",4] ")+"but had shape ".concat(i.shape,"."))),V(1===u.rank&&u.shape[0]===c,(()=>"Error in cropAndResize: boxInd must be have size [".concat(c,"] ")+"but had shape ".concat(i.shape,"."))),V(2===a.length,(()=>"Error in cropAndResize: cropSize must be of length 2, but got "+"length ".concat(a.length,"."))),V(a[0]>=1&&a[1]>=1,(()=>"cropSize must be atleast [1,1], but was ".concat(a))),V("bilinear"===r||"nearest"===r,(()=>"method must be bilinear or nearest, but was ".concat(r)));const l={image:o,boxes:i,boxInd:u},h={method:r,extrapolationValue:s,cropSize:a};return Yr.runKernel(ht,l,h)}});const hd=is({flipLeftRight_:function(e){const t=rs(e,"image","flipLeftRight","float32");V(4===t.rank,(()=>"Error in flipLeftRight: image must be rank 4,"+"but got rank ".concat(t.rank,".")));const n={image:t};return Yr.runKernel(_t,n,{})}});const dd=is({grayscaleToRGB_:function(e){const t=rs(e,"image","grayscaleToRGB"),n=t.rank-1,a=t.shape[n];V(t.rank>=2,(()=>"Error in grayscaleToRGB: images must be at least rank 2, "+"but got rank ".concat(t.rank,"."))),V(1===a,(()=>"Error in grayscaleToRGB: last dimension of a grayscale image "+"should be size 1, but got size ".concat(a,".")));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,Ic(t,r)}});const pd=is({rgbToGrayscale_:function(e){const t=rs(e,"image","RGBToGrayscale"),n=t.rank-1,a=t.shape[n];V(t.rank>=2,(()=>"Error in RGBToGrayscale: images must be at least rank 2, "+"but got rank ".concat(t.rank,"."))),V(3===a,(()=>"Error in RGBToGrayscale: last dimension of an RGB image "+"should be size 3, but got size ".concat(a,".")));const r=t.dtype,s=Co(t,"float32"),o=Dh([.2989,.587,.114]);let i;switch(t.rank){case 2:i=ic("ij,j->i",s,o);break;case 3:i=ic("ijk,k->ij",s,o);break;case 4:i=ic("ijkl,l->ijk",s,o);break;case 5:i=ic("ijklm,m->ijkl",s,o);break;case 6:i=ic("ijklmn,n->ijklm",s,o);break;default:throw new Error("Not a valid tensor rank.")}return i=Sc(i,-1),Co(i,r)}});const fd=is({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=rs(e,"image","rotateWithOffset","float32");V(4===r.rank,(()=>"Error in rotateWithOffset: image must be rank 4,"+"but got rank ".concat(r.rank,".")));const s={image:r},o={radians:t,fillValue:n,center:a};return Yr.runKernel(Oa,s,o)}});function md(e,t,n,a,r,s){null==a&&(a=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=e.shape[0];return n=Math.min(n,o),V(0<=a&&a<=1,(()=>"iouThreshold must be in [0, 1], but was '".concat(a,"'"))),V(2===e.rank,(()=>"boxes must be a 2D tensor, but was of rank '".concat(e.rank,"'"))),V(4===e.shape[1],(()=>"boxes must have 4 columns, but 2nd dimension was ".concat(e.shape[1]))),V(1===t.rank,(()=>"scores must be a 1D tensor")),V(t.shape[0]===o,(()=>"scores has incompatible shape with boxes. Expected ".concat(o,", ")+"but was ".concat(t.shape[0]))),V(0<=s&&s<=1,(()=>"softNmsSigma must be in [0, 1], but was '".concat(s,"'"))),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s}}const gd=is({nonMaxSuppression_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=rs(e,"boxes","nonMaxSuppression","float32"),o=rs(t,"scores","nonMaxSuppression","float32"),i=md(s,o,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const u={maxOutputSize:n,iouThreshold:a,scoreThreshold:r};return Yr.runKernel(wn,{boxes:s,scores:o},u)}});function yd(e,t,n){const a=function(e,t,n){return function(e,t,n){let a=0,r=e.length,s=0,o=!1;for(;a<r;){s=a+(r-a>>>1);const i=n(t,e[s]);i>0?a=s+1:(r=s,o=!i)}return o?a:-a-1}(e,t,n||bd)}(e,t,n),r=a<0?-(a+1):a;e.splice(r,0,t)}function bd(e,t){return e>t?1:e<t?-1:0}function vd(e,t,n,a,r){return Dd(e,t,n,a,r,0)}function xd(e,t,n,a,r,s){return Dd(e,t,n,a,r,0,!1,s,!0)}function wd(e,t,n,a,r,s){return Dd(e,t,n,a,r,s,!0)}function Dd(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],u=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const c=[];for(let g=0;g<t.length;g++)t[g]>r&&c.push({score:t[g],boxIndex:g,suppressBeginIndex:0});c.sort(Nd);const l=s>0?-.5/s:0,h=[],d=[];for(;h.length<n&&c.length>0;){const t=c.pop(),{score:n,boxIndex:s,suppressBeginIndex:o}=t;if(n<r)break;let i=!1;for(let u=h.length-1;u>=o;--u){const n=kd(e,s,h[u]);if(n>=a){i=!0;break}if(t.score=t.score*Cd(a,l,n),t.score<=r)break}t.suppressBeginIndex=h.length,i||(t.score===n?(h.push(s),d.push(t.score)):t.score>r&&yd(c,t,Nd))}const p=h.length,f=n-p;i&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return o&&(m.selectedScores=d),u&&(m.validOutputs=p),m}function kd(e,t,n){const a=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),s=Math.min(a[0],a[2]),o=Math.min(a[1],a[3]),i=Math.max(a[0],a[2]),u=Math.max(a[1],a[3]),c=Math.min(r[0],r[2]),l=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(i-s)*(u-o),f=(h-c)*(d-l);if(p<=0||f<=0)return 0;const m=Math.max(s,c),g=Math.max(o,l),y=Math.min(i,h),b=Math.min(u,d),v=Math.max(y-m,0)*Math.max(b-g,0);return v/(p+f-v)}function Cd(e,t,n){const a=Math.exp(t*n*n);return n<=e?a:0}function Nd(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Sd=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=rs(e,"boxes","nonMaxSuppressionAsync"),o=rs(t,"scores","nonMaxSuppressionAsync"),i=md(s,o,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const u=await Promise.all([s.data(),o.data()]),c=u[0],l=u[1],{selectedIndices:h}=vd(c,l,n,a,r);return s!==e&&s.dispose(),o!==t&&o.dispose(),Dh(h,"int32")};const Ed=is({nonMaxSuppressionWithScore_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=rs(e,"boxes","nonMaxSuppression"),i=rs(t,"scores","nonMaxSuppression"),u=md(o,i,n,a,r,s);n=u.maxOutputSize,a=u.iouThreshold,r=u.scoreThreshold,s=u.softNmsSigma;const c={boxes:o,scores:i},l={maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s},h=Yr.runKernel(kn,c,l);return{selectedIndices:h[0],selectedScores:h[1]}}});const Id=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=rs(e,"boxes","nonMaxSuppressionAsync"),i=rs(t,"scores","nonMaxSuppressionAsync"),u=md(o,i,n,a,r,s);n=u.maxOutputSize,a=u.iouThreshold,r=u.scoreThreshold,s=u.softNmsSigma;const c=await Promise.all([o.data(),i.data()]),l=c[0],h=c[1],{selectedIndices:d,selectedScores:p}=wd(l,h,n,a,r,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Dh(d,"int32"),selectedScores:Dh(p)}};const Td=is({nonMaxSuppressionPadded_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=rs(e,"boxes","nonMaxSuppression"),i=rs(t,"scores","nonMaxSuppression"),u=md(o,i,n,a,r,null),c={boxes:o,scores:i},l={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},h=Yr.runKernel(Dn,c,l);return{selectedIndices:h[0],validOutputs:h[1]}}});const Fd=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=rs(e,"boxes","nonMaxSuppressionAsync"),i=rs(t,"scores","nonMaxSuppressionAsync"),u=md(o,i,n,a,r,null),c=u.maxOutputSize,l=u.iouThreshold,h=u.scoreThreshold,[d,p]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=xd(d,p,c,l,h,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Dh(f,"int32"),validOutputs:Lo(m,"int32")}};const Ad=is({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=rs(e,"images","resizeBilinear");V(3===r.rank||4===r.rank,(()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+"rank ".concat(r.rank,"."))),V(2===t.length,(()=>"Error in resizeBilinear: new shape must 2D, but got shape "+"".concat(t,"."))),V(!1===a||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=r,o=!1;3===r.rank&&(o=!0,s=yu(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,i={images:s},u={alignCorners:n,halfPixelCenters:a,size:t},c=Yr.runKernel(Vn,i,u);return o?yu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const Rd=is({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=rs(e,"images","resizeNearestNeighbor");V(3===r.rank||4===r.rank,(()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+"rank ".concat(r.rank,"."))),V(2===t.length,(()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+"".concat(t,"."))),V("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),V(!1===a||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=r,o=!1;3===r.rank&&(o=!0,s=yu(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,i={images:s},u={alignCorners:n,halfPixelCenters:a,size:t},c=Yr.runKernel(Pn,i,u);return o?yu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const _d=is({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=rs(e,"image","threshold"),s=r.shape[0]*r.shape[1];let o,i,u,c,l=Fo(Dh([a]),255);if(V(3===r.rank,(()=>"Error in threshold: image must be rank 3,"+"but got rank ".concat(r.rank,"."))),V(3===r.shape[2]||1===r.shape[2],(()=>"Error in threshold: image color channel must be equal to 3 or 1"+"but got ".concat(r.shape[2],"."))),V("int32"===r.dtype||"float32"===r.dtype,(()=>"Error in dtype: image dtype must be int32 or float32,"+"but got dtype ".concat(r.dtype,"."))),V("otsu"===t||"binary"===t,(()=>"Method must be binary or otsu, but was ".concat(t))),3===r.shape[2]){[o,i,u]=fh(r,[1,1,1],-1);const e=Fo(o,.2989),t=Fo(i,.587),n=Fo(u,.114);c=Eo(Eo(e,t),n)}else c=e;if("otsu"===t){l=function(e,t){let n,a,r,s,o,i,u=Dh([-1]),c=Dh([0]),l=Dh([0]);for(let h=0;h<e.size-1;h++){n=ku(e,0,h+1),a=ku(e,h+1),o=To(wc(n),t),i=To(wc(a),t);const d=wc(Fo(n,Ul(0,n.size)));r=To(d,wc(n));const p=Go(a.shape,n.size),f=Eo(Ul(0,a.size),p),m=Fo(a,f);s=To(wc(m),wc(a));const g=qo(r,s),y=qo(r,s),b=Fo(o,i);l=Fo(Fo(b,g),y);const v=Rc(l,c);c=rc(v,l,c),u=rc(v,Dh([h]),u)}return u}(Au(Co(Jl(c),"int32"),ls([]),256),s)}const h=n?Wc(c,l):Rc(c,l);return Co(Fo(h,255),"int32")}});const Od=is({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5?arguments[5]:void 0;const o=rs(e,"image","transform","float32"),i=rs(t,"transforms","transform","float32");V(4===o.rank,(()=>"Error in transform: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),V(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),V(null==s||2===s.length,(()=>"Error in transform: outputShape must be [height, width] or null, "+"but got ".concat(s,".")));const u={image:o,transforms:i},c={interpolation:n,fillMode:a,fillValue:r,outputShape:s};return Yr.runKernel(Sa,u,c)}});const Ld=is({bandPart_:function(e,t,n){const a=rs(e,"a","bandPart");V(a.rank>=2,(()=>"bandPart(): Rank must be at least 2, got ".concat(a.rank,".")));const r=a.shape,[s,o]=a.shape.slice(-2);let i,u;"number"===typeof t?(V(t%1===0,(()=>"bandPart(): numLower must be an integer, got ".concat(t,"."))),V(t<=s,(()=>"bandPart(): numLower (".concat(t,")")+" must not be greater than the number of rows (".concat(s,")."))),i=rs(t<0?s:t,"numLower","bandPart")):(V("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),i=rc(Pc(t,0),s,ll(t,s))),"number"===typeof n?(V(n%1===0,(()=>"bandPart(): numUpper must be an integer, got ".concat(n,"."))),V(n<=o,(()=>"bandPart(): numUpper (".concat(n,")")+" must not be greater than the number of columns (".concat(o,")."))),u=rs(n<0?o:n,"numUpper","bandPart")):(V("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),u=rc(Pc(n,0),o,ll(n,o)));const c=yu(Ul(0,s,1,"int32"),[-1,1]),l=Ul(0,o,1,"int32"),h=qo(c,l),d=Qc(Wc(h,i),_c(h,jc(u))),p=il([s,o],a.dtype);return yu(bh(Lh(yu(a,[-1,s,o])).map((e=>rc(d,e,p)))),r)}});const Md=is({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,V(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)V(e[t].shape[0]===n,(()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+"(".concat(e[t].shape[0]," vs. ").concat(n,")")))}else t=!0,e=fh(e,e.shape[0],0).map((e=>yh(e,[0])));V(e.length<=e[0].shape[0],(()=>"Gram-Schmidt: Number of vectors (".concat(e.length,") exceeds ")+"number of dimensions (".concat(e[0].shape[0],").")));const n=[],a=e;for(let r=0;r<e.length;++r)n.push(Yr.tidy((()=>{let e=a[r];if(r>0)for(let t=0;t<r;++t){const a=Fo(wc(Fo(n[t],e)),n[t]);e=qo(e,a)}return To(e,kc(e,"euclidean"))})));return t?bh(n,0):n}});function zd(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return Yr.tidy((()=>{V(2===e.shape.length,(()=>"qr2d() requires a 2D Tensor, but got a ".concat(e.shape.length,"D Tensor.")));const n=e.shape[0],a=e.shape[1];let r=Tc(n),s=No(e);const o=kh([[1]],[1,1]);let i=No(o);const u=n>=a?a:n;for(let e=0;e<u;++e){const t=s,u=i,c=r;[i,s,r]=Yr.tidy((()=>{const t=ku(s,[e,e],[n-e,1]),u=kc(t),c=ku(s,[e,e],[1,1]),l=rc(Rc(c,0),kh([[-1]]),kh([[1]])),h=qo(c,Fo(l,u)),d=To(t,h);i=1===d.shape[0]?No(o):xu([o,ku(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=jc(To(wu(l,h),u)),f=ku(s,[e,0],[n-e,a]),m=Fo(p,i),g=Vh(i);if(0===e)s=qo(f,wu(m,wu(g,f)));else{const t=qo(f,wu(m,wu(g,f)));s=xu([ku(s,[0,0],[e,a]),t],0)}const y=Vh(m),b=ku(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=qo(b,wu(wu(b,i),y));else{const t=qo(b,wu(wu(b,i),y));r=xu([ku(r,[0,0],[n,e]),t],1)}return[i,s,r]})),gs([t,u,c])}return!t&&n>a&&(r=ku(r,[0,0],[n,a]),s=ku(s,[0,0],[a,a])),[r,s]}))}const Bd=is({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(V(e.rank>=2,(()=>"qr() requires input tensor to have a rank >= 2, but got rank ".concat(e.rank))),2===e.rank)return zd(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),a=Lh(yu(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],s=[];a.forEach((e=>{const[n,a]=zd(e,t);r.push(n),s.push(a)}));return[yu(bh(r,0),e.shape),yu(bh(s,0),e.shape)]}}});var Pd;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Pd||(Pd={}));const Wd=is({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Pd.SUM_BY_NONZERO_WEIGHTS;const a=rs(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=rs(t,"weights","computeWeightedLoss"));const s=null==r?a:Fo(a,r);if(n===Pd.NONE)return s;if(n===Pd.SUM)return wc(s);if(n===Pd.MEAN){if(null==r)return ol(s);{const e=a.size/r.size,t=To(wc(s),wc(r));return e>1?To(t,Lo(e)):t}}if(n===Pd.SUM_BY_NONZERO_WEIGHTS){if(null==r)return To(wc(s),Lo(a.size));{const e=Fo(r,ul(a.shape)),t=Co(wc(gl(e,Lo(0))),"float32");return To(wc(s),t)}}throw Error("Unknown reduction: ".concat(n))}});const Vd=is({absoluteDifference_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Pd.SUM_BY_NONZERO_WEIGHTS;const r=rs(e,"labels","absoluteDifference"),s=rs(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=rs(n,"weights","absoluteDifference")),U(r.shape,s.shape,"Error in absoluteDifference: ");const i=Xo(qo(r,s));return Wd(i,o,a)}});const Ud=is({cosineDistance_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Pd.SUM_BY_NONZERO_WEIGHTS;const s=rs(e,"labels","cosineDistance"),o=rs(t,"predictions","cosineDistance");let i=null;null!=a&&(i=rs(a,"weights","cosineDistance")),U(s.shape,o.shape,"Error in cosineDistance: ");const u=Lo(1),c=qo(u,wc(Fo(s,o),n,!0));return Wd(c,i,r)}});const Gd=is({hingeLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Pd.SUM_BY_NONZERO_WEIGHTS,r=rs(e,"labels","hingeLoss");const s=rs(t,"predictions","hingeLoss");let o=null;null!=n&&(o=rs(n,"weights","hingeLoss")),U(r.shape,s.shape,"Error in hingeLoss: ");const i=Lo(1);r=qo(Fo(Lo(2),r),i);const u=jl(qo(i,Fo(r,s)));return Wd(u,o,a)}});const Hd=is({huberLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Pd.SUM_BY_NONZERO_WEIGHTS;const s=rs(e,"labels","huberLoss"),o=rs(t,"predictions","huberLoss");let i=null;null!=n&&(i=rs(n,"weights","huberLoss")),U(s.shape,o.shape,"Error in huberLoss: ");const u=Lo(a),c=Xo(qo(o,s)),l=ll(c,u),h=qo(c,l),d=Eo(Fo(Lo(.5),Ro(l)),Fo(u,h));return Wd(d,i,r)}});const jd=is({logLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Pd.SUM_BY_NONZERO_WEIGHTS;const s=rs(e,"labels","logLoss"),o=rs(t,"predictions","logLoss");let i=null;null!=n&&(i=rs(n,"weights","logLoss")),U(s.shape,o.shape,"Error in logLoss: ");const u=Lo(1),c=Lo(a),l=jc(Fo(s,Gc(Eo(o,c)))),h=Fo(qo(u,s),Gc(Eo(qo(u,o),c))),d=qo(l,h);return Wd(d,i,r)}});const qd=is({meanSquaredError_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Pd.SUM_BY_NONZERO_WEIGHTS;const r=rs(e,"labels","meanSquaredError"),s=rs(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=rs(n,"weights","meanSquaredError")),U(r.shape,s.shape,"Error in meanSquaredError: ");const i=gh(r,s);return Wd(i,o,a)}});const Kd=is({sigmoidCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Pd.SUM_BY_NONZERO_WEIGHTS,s=rs(e,"multiClassLabels","sigmoidCrossEntropy");const o=rs(t,"logits","sigmoidCrossEntropy");let i=null;if(null!=n&&(i=rs(n,"weights","sigmoidCrossEntropy")),U(s.shape,o.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=Lo(a),t=Lo(1),n=Lo(.5);s=Eo(Fo(s,qo(t,e)),Fo(n,e))}const u=function(e,t){const n=rs(e,"labels","sigmoidCrossEntropyWithLogits"),a=rs(t,"logits","sigmoidCrossEntropyWithLogits");U(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=jl(a),s=Fo(a,n),o=Hc(Nc(jc(Xo(a))));return Eo(qo(r,s),o)}(s,o);return Wd(u,i,r)}});const Xd=is({softmaxCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Pd.SUM_BY_NONZERO_WEIGHTS,s=rs(e,"onehotLabels","softmaxCrossEntropy");const o=rs(t,"logits","softmaxCrossEntropy");let i=null;if(null!=n&&(i=rs(n,"weights","softmaxCrossEntropy")),U(s.shape,o.shape,"Error in softmaxCrossEntropy: "),a>0){const e=Lo(a),t=Lo(1),n=Lo(s.shape[1]);s=Eo(Fo(s,qo(t,e)),To(e,n))}const u=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet "+"supported. Labels / logits was rank ".concat(t.rank," ")+"and dim was ".concat(n));const a=Oo(((e,t,a)=>{const r=Yc(t,[n],!0),s=qo(Co(t,"float32"),r);a([e,s]);const o=jc(Fo(s,e));return{value:wc(o,[n]),gradFunc:(e,t)=>{const[a,r]=t,s=fc(e.shape,[n]);return[Fo(yu(e,s),qo(Co(a,"float32"),Nc(r))),Fo(yu(e,s),qo(Nc(r),Co(a,"float32")))]}}}));return a(e,t)}(s,o);return Wd(u,i,r)}});const Yd=is({sparseFillEmptyRows_:function(e,t,n,a){const r=rs(e,"indices","sparseFillEmptyRows","int32"),s=rs(t,"values","sparseFillEmptyRows"),o=rs(n,"denseShape","sparseFillEmptyRows","int32"),i=rs(a,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==r.rank)throw new Error("Indices should be Tensor2D but received shape\n        ".concat(r.shape));if(1!==s.rank)throw new Error("Values should be Tensor1D but received shape ".concat(s.shape));if(1!==o.rank)throw new Error("Dense shape should be Tensor1D but received shape ".concat(o.shape));if(0!==i.rank)throw new Error("Default value should be a scalar but received shape ".concat(i.shape));const u={indices:r,values:s,denseShape:o,defaultValue:i},c=Yr.runKernel(ca,u);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}});const Qd=is({sparseReshape_:function(e,t,n){const a=rs(e,"inputIndices","sparseReshape","int32"),r=rs(t,"inputShape","sparseReshape","int32"),s=rs(n,"newShape","sparseReshape","int32");if(2!==a.rank)throw new Error("Input indices should be Tensor2D but received shape\n        ".concat(a.shape));if(1!==r.rank)throw new Error("Input shape should be Tensor1D but received shape ".concat(r.shape));if(1!==s.rank)throw new Error("New shape should be Tensor1D but received shape ".concat(s.shape));const o={inputIndices:a,inputShape:r,newShape:s},i=Yr.runKernel(la,o);return{outputIndices:i[0],outputShape:i[1]}}});const Zd=is({sparseSegmentMean_:function(e,t,n){const a=rs(e,"data","sparseSegmentMean"),r=rs(t,"indices","sparseSegmentMean","int32"),s=rs(n,"segmentIds","sparseSegmentMean","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error("Indices should be Tensor1D but received shape\n          ".concat(r.shape));if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n          ".concat(s.shape));const o={data:a,indices:r,segmentIds:s};return Yr.runKernel(ha,o)}});const Jd=is({sparseSegmentSum_:function(e,t,n){const a=rs(e,"data","sparseSegmentSum"),r=rs(t,"indices","sparseSegmentSum","int32"),s=rs(n,"segmentIds","sparseSegmentSum","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error("Indices should be Tensor1D but received shape\n         ".concat(r.shape));if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n         ".concat(s.shape));const o={data:a,indices:r,segmentIds:s};return Yr.runKernel(da,o)}});const $d=is({stringNGrams_:function(e,t,n,a,r,s,o,i){const u=rs(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error("Data must be a vector, saw: ".concat(u.shape));const c=rs(t,"dataSplits","stringNGrams");if("int32"!==c.dtype)throw new Error("Data splits must be of datatype int32");const l={separator:n,nGramWidths:a,leftPad:r,rightPad:s,padWidth:o,preserveShortSequences:i},h={data:u,dataSplits:c},d=Yr.runKernel(ba,h,l);return{nGrams:d[0],nGramsSplits:d[1]}}});const ep=is({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=rs(e,"input","stringSplit","string"),r=rs(t,"delimiter","stringSplit","string");if(1!==a.rank)throw new Error("Input should be Tensor1D but received shape ".concat(a.shape));if(0!==r.rank)throw new Error("Delimiter should be a scalar but received shape ".concat(r.shape));const s={skipEmpty:n},o={input:a,delimiter:r},i=Yr.runKernel(va,o,s);return{indices:i[0],values:i[1],shape:i[2]}}});const tp=is({stringToHashBucketFast_:function(e,t){const n=rs(e,"input","stringToHashBucketFast","string"),a={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return Yr.runKernel(xa,r,a)}});const np=is({staticRegexReplace_:function(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=rs(e,"input","staticRegexReplace","string"),s={pattern:t,rewrite:n,replaceGlobal:a};return Yr.runKernel(ga,{x:r},s)}}),ap={fft:hh,ifft:dh,rfft:mh,irfft:ph},rp={hammingWindow:od,hannWindow:id,frame:ud,stft:cd},sp={flipLeftRight:hd,grayscaleToRGB:dd,resizeNearestNeighbor:Rd,resizeBilinear:Ad,rgbToGrayscale:pd,rotateWithOffset:fd,cropAndResize:ld,nonMaxSuppression:gd,nonMaxSuppressionAsync:Sd,nonMaxSuppressionWithScore:Ed,nonMaxSuppressionWithScoreAsync:Id,nonMaxSuppressionPadded:Td,nonMaxSuppressionPaddedAsync:Fd,threshold:_d,transform:Od},op={bandPart:Ld,gramSchmidt:Md,qr:Bd},ip={absoluteDifference:Vd,computeWeightedLoss:Wd,cosineDistance:Ud,hingeLoss:Gd,huberLoss:Hd,logLoss:jd,meanSquaredError:qd,sigmoidCrossEntropy:Kd,softmaxCrossEntropy:Xd},up={sparseFillEmptyRows:Yd,sparseReshape:Qd,sparseSegmentMean:Zd,sparseSegmentSum:Jd},cp={stringNGrams:$d,stringSplit:ep,stringToHashBucketFast:tp,staticRegexReplace:np};const lp=class{static sgd(e){return new ei(e)}static momentum(e,t){return new ti(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new ni(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new Ko(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new Uo(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new $o(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new Ho(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}},hp="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function dp(){return new Promise((e=>hp((()=>e()))))}function pp(e,t){const n=e[0].length;e.forEach(((e,t)=>{V(e.length===n,(()=>"Error in concat".concat(n,"D: rank of tensors[").concat(t,"] must be the same ")+"as the rank of the rest (".concat(n,")")))})),V(t>=0&&t<n,(()=>"Error in concat".concat(n,"D: axis must be between 0 and ").concat(n-1,".")));const a=e[0];e.forEach(((e,r)=>{for(let s=0;s<n;s++)V(s===t||e[s]===a[s],(()=>"Error in concat".concat(n,"D: Shape of tensors[").concat(r,"] (").concat(e,") ")+"does not match the shape of the rest (".concat(a,") ")+"along the non-concatenated axis ".concat(r,".")))}))}function fp(e,t){const n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}var mp;function gp(e,t,n){let a=new Array;if(null==n&&null==t)return a;if(null==t)for(;a.length<e+n.length;)a.push(-1);else a=t.slice();if(null==n)return a;if(e+n.length!==a.length)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.rank = ").concat(e+n.length,", but shape.rank = ").concat(a.length));for(let r=1;r<n.length;++r){const s=n[r],o=a[a.length-n.length+r],i=a[o];if(s>=0)if(i>=0){if(i!==s)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.shape[").concat(r+e,"] = ").concat(s," but shape[").concat(r+e,"] = ").concat(i))}else a[o]=s}return a}function yp(e){const t={FIRST_DIM_SIZE:mp.FIRST_DIM_SIZE,VALUE_ROWIDS:mp.VALUE_ROWIDS,ROW_LENGTHS:mp.ROW_LENGTHS,ROW_SPLITS:mp.ROW_SPLITS,ROW_LIMITS:mp.ROW_LIMITS,ROW_STARTS:mp.ROW_STARTS},n=[];for(const a of e){if(!(a in t))break;n.push(t[a])}return n}function bp(e){return 0===e.length?0:e[0]===mp.FIRST_DIM_SIZE?e.length-1:e.length}function vp(e,t){if(null==e||null==t)return;const n=e.length,a=t.length;if(n>=a)throw new Error("defaultValue.shape=".concat(e," and ragged tensor flatValues.shape=").concat(t,", are incompatible: defaultValue.rank = ").concat(n," must be less than ragged tensor input flatValues.rank = ").concat(a,")"));for(let r=0;r<Math.min(n,a-1);++r){const n=e[r],a=t[r+1];if(n>=0&&a>=0&&1!==n&&n!==a)throw new Error("defaultValue.shape=".concat(e,", and ragged tensor input flatValues.shape=").concat(t," are incompatible: defaultValue.shape[").concat(r-e.length,"] = ").concat(n," but ragged tensor input.flatValues.shape[").concat(r-e.length,"] = ").concat(a))}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(mp||(mp={}));const xp=30;function wp(e){return e<=xp?e:ie(e,Math.floor(Math.sqrt(e)))}function Dp(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function kp(e,t,n){let a=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function Cp(e,t){const n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(t);for(let a=t+1;a<e;++a)a<=2*t?(n.push(a),n.push(a-(t+1))):n.push(a)}else{const a=[],r=[];for(let n=1;n<e;++n)n>=2*t+1||n%2===1?r.push(n):a.push(n);n.push(...a),n.push(0),n.push(...r)}return n}function Np(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=[];a?r.push(e[0]/n):r.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?a?r.push(t[s-1]*e[s]):r.push(e[s]/t[s-1]):r.push(e[s]);return r}function Sp(e,t){const n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function Ep(e,t,n){const a=e.slice(0,1);for(let r=0;r<n;++r)a.push(e[r+1]-t[r][0]-t[r][1]);return a}function Ip(e,t){const n=e.shape.length,a=t.shape.length;if(n<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher,"+" but the rank was ".concat(n,"."));if(a<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(a,"."));if("int32"!==t.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type,"+" but the dtype was ".concat(t.dtype,"."));if(t.shape[a-1]>n)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+"".concat(t.shape[a-1]," vs. ").concat(n));if(0===H(e.shape))throw new Error("Requested more than 0 entries, but input is empty."+" Input shape: ".concat(e.shape,"."));const r=t.shape,s=r[r.length-1];let o=1;for(let h=0;h<r.length-1;++h)o*=r[h];const i=e.shape,u=r.slice();u.pop();let c=1;for(let h=s;h<n;++h)c*=i[h],u.push(i[h]);const l=[...ue(e.shape).map((e=>e/c)),1].slice(0,s);return[u,o,c,l]}const Tp=1.7580993408473768,Fp=1.0507009873554805,Ap=.3275911,Rp=.254829592,_p=-.284496736,Op=1.421413741,Lp=-1.453152027,Mp=1.061405429;function zp(e,t){if(e.length!==t.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+"".concat(e.length,", imag: ").concat(t.length,"."));const n=new Float32Array(2*e.length);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function Bp(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function Pp(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function Wp(e){const t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function Vp(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Up(e,t,n,a){e[2*a]=t,e[2*a+1]=n}function Gp(e,t){const n=new Float32Array(e/2),a=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const s=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(s),a[r]=Math.sin(s)}return{real:n,imag:a}}function Hp(e,t,n){const a=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(a),imag:Math.sin(a)}}const jp="->",qp=/->/g,Kp=",",Xp="...";function Yp(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(qp,"").length)/jp.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("'.concat(jp,'").'));const[a,r]=e.split(jp);V(-1===a.indexOf(Xp),(()=>'The ellipsis notation ("'.concat(Xp,'") is not supported yet.')));const s=a.split(Kp),o=s.length;if(t!==o)throw new Error("Expected ".concat(o," input tensors, received ").concat(t));if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let h=0;h<r.length;++h){const e=r[h];if(!s.some((t=>-1!==t.indexOf(e))))throw new Error("Output subscripts contain the label ".concat(e," ")+"not present in the input subscripts.");-1===i.indexOf(e)&&i.push(e)}for(let h=0;h<a.length;++h){const e=a[h];-1===i.indexOf(e)&&e!==Kp&&i.push(e)}const u=new Array(s.length);for(let h=0;h<o;++h){if(new Set(s[h].split("")).size!==s[h].length)throw new Error("Found duplicate axes in input component ".concat(s[h],". ")+"Support for duplicate axes in input is not implemented yet.");u[h]=[];for(let e=0;e<s[h].length;++e)u[h].push(i.indexOf(s[h][e]))}const c=i.length,l=[];for(let h=r.length;h<c;++h)l.push(h);return{allDims:i,summedDims:l,idDims:u}}function Qp(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;const a=[];for(let r=0;r<e;++r)-1===n[r]&&a.push(r);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:a}}function Zp(e,t,n){const a=new Array(e);for(let r=0;r<n.length;++r){const e=n[r].shape;for(let n=0;n<t[r].length;++n)void 0===a[t[r][n]]?a[t[r][n]]=e[n]:V(a[t[r][n]]===e[n],(()=>"Expected dimension ".concat(a[t[r][n]]," at axis ").concat(n," ")+"of input shaped ".concat(JSON.stringify(e),", ")+"but got dimension ".concat(e[n])))}}function Jp(e,t){const n=e,a=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let o=0;o<r;++o)a.push([]);const s=[];for(let o=0;o<n.length;++o){const e=ef(t,n[o]);for(const t of e)-1===s.indexOf(t)&&(a[o].push(t),s.push(t))}return{path:n,steps:a}}function $p(e){return e.every(((e,t)=>e===t))}function ef(e,t){const n=[];for(let a=0;a<e.length;++a)0!==e[a].length&&-1===e[a].indexOf(t)&&-1!==t||n.push(a);return n}function tf(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=[];if("number"===typeof t)V(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);V(r<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const a=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-a}V(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=t}return a}function nf(e){return"Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ".concat(e)}function af(e,t){return"indices(".concat(e,", 0) is invalid: ").concat(t," < 0")}function rf(e,t,n){return"indices(".concat(e,", 0) is invalid: ").concat(t," >= ").concat(n)}function sf(e,t){return"only one output dimension may be -1, not both ".concat(e," and ").concat(t)}function of(e,t){return"size ".concat(e," must be non-negative, not ").concat(t)}function uf(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function cf(e,t){const n=H(e),a=H(t);return"Input to reshape is a SparseTensor with ".concat(n,"\n  dense values, but the requested shape requires a multiple of ").concat(a,". inputShape=").concat(e," outputShape= ").concat(t)}function lf(e,t){const n=H(e),a=H(t);return"Input to reshape is a tensor with ".concat(n," dense values, but the requested shape has ").concat(a,". inputShape=").concat(e," outputShape=").concat(t)}function hf(){return"segment ids must be >= 0"}function df(){return"segment ids are not increasing"}function pf(e,t){return"Segment id ".concat(e," out of range [0, ").concat(t,"), possibly because segmentIds input is not sorted.")}function ff(e,t,n){return"Bad: indices[".concat(e,"] == ").concat(t," out of range [0, ").concat(n,")")}function mf(e,t){let n,a=!1;for(e<=xp?(n=e,a=!0):n=ie(e,Math.floor(Math.sqrt(e)));!a;)n>t||n===e?a=!0:n=ie(e,n+1);return n}function gf(e,t,n){const a=[],r=e.length;for(let s=0;s<r;s++)s!==t?a.push(e[s]):a.push(n);return a}function yf(e,t,n,a){const r=t.shape.length,s=e.shape.length;if(0!==a&&(a<-r||a>r))throw new Error("Expect batchDims in the range of [-".concat(r,", ").concat(r,"], but got ").concat(a));if(a<0&&(a+=r),a>s)throw new Error("batchDims (".concat(a,") must be less than rank(x) (\n    ").concat(s,")."));if(n<a)throw new Error("batchDims (".concat(a,") must be less than or equal to axis (").concat(n,")."));for(let h=0;h<a;++h)if(e.shape[h]!==t.shape[h])throw new Error("x.shape[".concat(h,"]: ").concat(e.shape[h]," should be equal to indices.shape[").concat(h,"]: ").concat(t.shape[h],"."));const o=e.shape[n],i=[];let u=1,c=1,l=1;for(let h=0;h<a;++h)i.push(e.shape[h]),u*=e.shape[h];for(let h=a;h<n;h++)i.push(e.shape[h]),c*=e.shape[h];for(let h=a;h<r;h++)i.push(t.shape[h]);for(let h=n+1;h<s;h++)i.push(e.shape[h]),l*=e.shape[h];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:o,outputShape:i}}function bf(e){try{return e.map((e=>pr(e)))}catch(GP){throw new Error("Failed to decode encoded string bytes into utf-8, error: ".concat(GP))}}function vf(e){return e.map((e=>dr(e)))}!function(){for(const e of ai)Wo(e)}();const xf={kernelName:Se,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fo(e,vh(Co(n,"float32"),-1))}}},wf={kernelName:Ee,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ro(Co(n,"float32")),a=Ao(qo(Lo(1),t));return jc(To(e,a))}}}},Df={kernelName:Ie,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ao(qo(Ro(Co(n,"float32")),1));return To(e,t)}}}},kf={kernelName:Te,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Zo(n.shape,a.shape);return{a:()=>{let t=e;const a=Qo(n.shape,r);return a.length>0&&(t=wc(t,a)),yu(t,n.shape)},b:()=>{let t=e;const n=Qo(a.shape,r);return n.length>0&&(t=wc(t,n)),yu(t,a.shape)}}}},Cf={kernelName:Fe,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,a)=>{n[a]=()=>e.clone()})),n}},Nf={kernelName:_e,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_o(n)}}},Sf={kernelName:Oe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_o(n)}}},Ef={kernelName:Le,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>To(e,Ao(qo(Lo(1),Ro(Co(n,"float32")))))}}},If={kernelName:Me,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ao(Eo(Lo(1),Ro(Co(n,"float32"))));return To(e,t)}}}},Tf={kernelName:Pe,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Zo(n.shape,a.shape);return{a:()=>{const t=Eo(Ro(n),Ro(a));let s=Fo(e,To(a,t));const o=Qo(n.shape,r);return o.length>0&&(s=wc(s,o)),yu(s,n.shape)},b:()=>{const t=Eo(Ro(n),Ro(a));let s=jc(Fo(e,To(n,t)));const o=Qo(a.shape,r);return o.length>0&&(s=wc(s,o)),yu(s,a.shape)}}}},Ff={kernelName:ze,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>To(e,Eo(Ro(Co(n,"float32")),1))}}},Af={kernelName:Be,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>To(e,qo(Lo(1),Ro(Co(n,"float32"))))}}};const Rf=is({avgPool3dGrad_:function(e,t,n,a,r,s){const o=rs(e,"dy","avgPool3dGrad"),i=rs(t,"input","avgPool3dGrad");let u=o,c=i,l=!1;4===i.rank&&(l=!0,u=yu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=yu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),V(5===u.rank,(()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+"".concat(u.rank,"."))),V(5===c.rank,(()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+"".concat(c.rank,"."))),gu("avgPool3dGrad",r,s);const h={dy:u,input:c},d={filterSize:n,strides:a,pad:r,dimRoundingMode:s},p=Yr.runKernel(Ge,h,d);return l?yu(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),_f={kernelName:Ue,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:s,pad:o,dimRoundingMode:i}=n;return{x:()=>Rf(e,a,r,s,o,i)}}};const Of=is({avgPoolGrad_:function(e,t,n,a,r){const s=rs(e,"dy","avgPoolGrad"),o=rs(t,"input","avgPoolGrad");V(o.rank===s.rank,(()=>"Rank of input (".concat(o.rank,") does not match rank of dy (").concat(s.rank,")")));let i=o,u=s,c=!1;3===o.rank&&(c=!0,i=yu(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=yu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),V(4===u.rank,(()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+"".concat(u.rank,"."))),V(4===i.rank,(()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+"".concat(i.rank,".")));const l={dy:u,input:i},h={filterSize:n,strides:a,pad:r},d=Yr.runKernel(Ve,l,h);return c?yu(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Lf={kernelName:We,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:s,pad:o}=n;return{x:()=>Of(e,a,r,s,o)}}},Mf={kernelName:He,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[a,r]=t,{transposeA:s,transposeB:o}=n;return s||o?!s&&o?{a:()=>wu(e,r,!1,!1),b:()=>wu(e,a,!0,!1)}:s&&!o?{a:()=>wu(r,e,!1,!0),b:()=>wu(a,e,!1,!1)}:{a:()=>wu(r,e,!0,!0),b:()=>wu(e,a,!0,!0)}:{a:()=>wu(e,r,!1,!0),b:()=>wu(a,e,!0,!1)}}},zf={kernelName:je,gradFunc:(e,t,n)=>{const{blockShape:a,crops:r}=n;return{x:()=>Nl(e,a,r)}}},Bf={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const a=n,r=a.inputShape,s=a.shape,o=Array.from(s);for(let u=r.length-1;u>=0;u--)if(r[u]===s[u])o[u]=1;else if(1!==r[u])throw new Error("broadcastTo(): [".concat(r,"] cannot be broadcast to [").concat(s,"]."));const i=[];for(let u=0;u<o.length;u++)o[u]>1&&i.push(u);return{x:()=>wc(e,i,!0)}}},Pf={kernelName:Ye,gradFunc:e=>({x:()=>e.clone()})},Wf={kernelName:Qe,gradFunc:e=>({x:()=>_o(e)})},Vf={kernelName:Ze,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{clipValueMin:r,clipValueMax:s}=n;return{x:()=>rc(Qc(_c(a,r),Wc(a,s)),e,_o(e))}}},Uf={kernelName:$e,inputsToSave:["x"],gradFunc:xf.gradFunc},Gf={kernelName:et,saveAllInputs:!0,gradFunc:(e,t,n)=>{const a=t.map((e=>e.shape)),{axis:r}=n,s=Z(r,t[0].shape)[0],o=a.map((e=>e[s]));return fh(e,o,s).map((e=>()=>e))}},Hf={kernelName:tt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{dilations:s,strides:o,pad:i,dataFormat:u}=n;return V(du(s),(()=>"Error in gradient of conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(s,"'"))),{x:()=>Gu(a.shape,e,r,o,i,u),filter:()=>Qh(a,e,r.shape,o,i,u)}}},jf={kernelName:at,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{strides:s,pad:o,dataFormat:i,dimRoundingMode:u}=n;return{dy:()=>Vu(e,r,s,o,i,1,u),filter:()=>Qh(e,a,r.shape,s,o,i,u)}}};const qf=is({conv3DBackpropFilter_:function(e,t,n,a,r){let s=e;4===e.rank&&(s=yu(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;4===o.rank&&(o=yu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),V(5===s.rank,(()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+"".concat(s.shape,"."))),V(5===o.rank,(()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+"".concat(o.shape,"."))),V(5===n.length,(()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+"".concat(n,"."))),V(s.shape[4]===n[3],(()=>"Error in conv3dDerFilter: depth of input ".concat(s.shape[4],") must ")+"match input depth in filter (".concat(n[3],"."))),V(o.shape[4]===n[4],(()=>"Error in conv3dDerFilter: depth of dy (".concat(o.shape[4],") must ")+"match output depth for filter (".concat(n[4],").")));const i={x:s,dy:o},u={strides:a,pad:r,filterShape:n};return Yr.runKernel(st,i,u)}}),Kf={kernelName:rt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:s}=n;V(du(a),(()=>"Error in gradient of conv3D: dilation rates greater than 1 are "+"not yet supported in gradients. Got dilations '".concat(a,"'")));const[o,i]=t;return{x:()=>qu(o.shape,e,i,r,s),filter:()=>qf(o,e,i.shape,r,s)}}},Xf={kernelName:it,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fo(jc(rh(Co(n,"float32"))),e)}}},Yf={kernelName:ut,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fo(sh(Co(n,"float32")),e)}}},Qf={kernelName:lt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r,exclusive:s,reverse:o}=n;return{x:()=>{const t=gc([r],a.rank);let n=Zu(e,r,s,!o);return null!=t&&(n=Vh(n,t)),n}}}},Zf={kernelName:ft,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:s,dimRoundingMode:o}=n,i=null==a?[1,1]:a;V(du(i),(()=>"Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(i,"'")));const[u,c]=t;return V(4===u.rank,(()=>"Error in gradient of depthwiseConv2dNative: input must be "+"rank 4, but got rank ".concat(u.rank,"."))),V(4===c.rank,(()=>"Error in gradient of depthwiseConv2dNative: filter must be "+"rank 4, but got rank ".concat(c.rank,"."))),V(u.shape[3]===c.shape[2],(()=>"Error in gradient of depthwiseConv2d: number of input "+"channels (".concat(u.shape[3],") must match the inChannels dimension ")+"in filter ".concat(c.shape[2],"."))),V(pu(r,i),(()=>"Error in gradient of depthwiseConv2d: Either strides or "+"dilations must be  1. Got strides ".concat(r," and dilations ")+"'".concat(i,"'."))),gu("depthwiseConv2d",s,o),{x:()=>ad(u.shape,e,c,r,s,i,o),filter:()=>nd(u,e,c.shape,r,s,i,o)}}},Jf={kernelName:bt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,s={x:a,filter:r,dy:e},o={x:a,filter:r,dy:e};return{x:()=>Yr.runKernel(vt,s,n),filter:()=>Yr.runKernel(xt,o,n)}}},$f={kernelName:Ct,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,a={dy:e,y:n};return{x:()=>Yr.runKernel(Nt,a)}}},em={kernelName:St,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=Fo(Nc(jc(Ro(n))),2/Math.sqrt(Math.PI));return{x:()=>Fo(e,a)}}},tm={kernelName:It,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fo(e,n)}}},nm={kernelName:Tt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>yu(e,n.shape)}}},am={kernelName:Ft,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fo(e,Nc(n))}}},rm={kernelName:Ot,gradFunc:e=>({x:()=>_o(e)})},sm={kernelName:Lt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Zo(n.shape,a.shape);return{a:()=>{const t=To(e,Co(a,"float32")),s=Qo(n.shape,r);return s.length>0?yu(wc(t,s),n.shape):t},b:()=>{let t=Fo(e,Co(n,"float32"));const s=Qo(a.shape,r);s.length>0&&(t=yu(wc(t,s),a.shape));const o=Ro(a);return jc(To(t,Co(o,"float32")))}}}},om={kernelName:Mt,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:a}=n,[r,s,o,i]=t,u=null==i?Lo(1):i,c=Qo(s.shape,r.shape),l=[];if(1===s.rank){for(let e=0;e<r.shape.length-1;++e)l.push(r.shape[e]);l.push(1)}const h=qo(r,s),d=Fo(e,u),p=$l(Eo(o,Lo(a))),f=Fo(Fo(Fo(p,p),p),Lo(-.5));return{x:()=>1===s.rank?yu(Fo(Fo(e,Ic(yu(p,[1,1,1,s.shape[0]]),l)),u),r.shape):yu(Fo(Fo(e,p),u),r.shape),mean:()=>{let e=Fo(Fo(p,Lo(-1)),d);return 1===s.rank&&(e=wc(e,c)),yu(e,s.shape)},variance:()=>{let e=Fo(Fo(f,h),d);return 1===s.rank&&(e=wc(e,c)),yu(e,s.shape)},scale:()=>{const t=Fo(h,p);let n=Fo(e,t);return 1===s.rank&&(n=wc(n,c)),yu(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=wc(t,c)),yu(t,s.shape)}}}},im={kernelName:zt,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[a,r]=t,{axis:s,batchDims:o}=n,i=Z(s,a.shape)[0],u=(e,t,n)=>()=>{const a=e.shape,r=t.size,o=a.slice(0,i),u=o.length,c=a.slice(s,a.length).slice(1),l=c.length,h=um(0,u),d=um(u+1,u+1+l),p=cm([o,[r],c]),f=yu(n,p),m=yu(t,[r]),g=cm([[u],h,d]),y=Vh(f,g);let b=Oh(y,m,e.shape[i]);const v=yc(g);return b=Vh(b,v),b};if(1===o){const t=a.shape[0],n=a.split(t,0);return{x:()=>{const t=bh(n.map(((t,n)=>u(t,r.slice(n,1),e.slice(n,1))())));return t.reshape(a.shape)},indices:()=>r}}return{x:u(a,r,e),indices:()=>r}}};function um(e,t){const n=[];for(let a=e;a<t;++a)n.push(a);return n}function cm(e){const t=[];for(let n=0;n<e.length;++n)for(let a=0;a<e[n].length;++a)t.push(e[n][a]);return t}const lm={kernelName:Wt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>_o(n),b:()=>_o(a)}}},hm={kernelName:Vt,gradFunc:e=>({x:()=>Co(e,"float32")})},dm={kernelName:Ht,gradFunc:e=>({x:()=>_o(e)})},pm={kernelName:jt,gradFunc:e=>({x:()=>_o(e)})},fm={kernelName:qt,gradFunc:e=>({x:()=>_o(e)})},mm={kernelName:Kt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{alpha:r}=n,s=Rc(a,0);return{x:()=>rc(s,e,Fo(e,r))}}},gm={kernelName:Jt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>To(e,Eo(n,1))}}},ym={kernelName:Zt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>To(e,Co(n,"float32"))}}},bm={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;return{logits:()=>{const t=Nc(a);return qo(e,Fo(wc(e,r,!0),t))}}}};const vm=is({localResponseNormalizationBackprop_:function(e,t,n){const a={x:e,y:t,dy:n},r={depthRadius:arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,bias:arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,alpha:arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,beta:arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5};return Yr.runKernel(an,a,r)}}),xm={kernelName:nn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{depthRadius:s,bias:o,alpha:i,beta:u}=n;return{x:()=>vm(a,r,e,s,o,i,u)}}};function wm(e,t,n,a){return t.rank<n.rank&&(t=yu(t,fc(t.shape,a))),e.rank<n.rank&&(e=yu(e,fc(e.shape,a))),{x:()=>Fo(e,Co(ac(n,t),e.dtype))}}const Dm={kernelName:rn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{reductionIndices:r}=a,s=t[0],o=wm(e,t[1],s,Z(r,s.shape));return{x:()=>o.x()}}},km={kernelName:sn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>Fo(e,Co(_c(n,a),"float32")),b:()=>Fo(e,Co(Pc(n,a),"float32"))}}};const Cm=is({maxPool3dGrad_:function(e,t,n,a,r,s,o){const i=rs(e,"dy","maxPool3dGrad"),u=rs(t,"input","maxPool3dGrad"),c=rs(n,"output","maxPool3dGrad");let l=i,h=u,d=c,p=!1;4===u.rank&&(p=!0,l=yu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),h=yu(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=yu(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),V(5===l.rank,(()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+"".concat(l.rank,"."))),V(5===h.rank,(()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+"".concat(h.rank,"."))),V(5===d.rank,(()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+"".concat(d.rank,"."))),gu("maxPool3dGrad",s,o);const f={dy:l,input:h,output:d},m={filterSize:a,strides:r,pad:s,dimRoundingMode:o},g=Yr.runKernel(ln,f,m);return p?yu(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Nm={kernelName:cn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:u}=n;return{x:()=>Cm(e,a,r,s,o,i,u)}}};const Sm=is({maxPoolGrad_:function(e,t,n,a,r,s,o){const i=rs(e,"dy","maxPoolGrad"),u=rs(t,"input","maxPoolGrad"),c=rs(n,"output","maxPoolGrad");V(u.rank===i.rank,(()=>"Rank of input (".concat(u.rank,") does not match rank of dy ")+"(".concat(i.rank,")"))),V(4===i.rank,(()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+"".concat(i.rank,"."))),V(4===u.rank,(()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+"".concat(u.rank,"."))),gu("maxPoolGrad",s,o);const l={dy:i,input:u,output:c},h={filterSize:a,strides:r,pad:s,dimRoundingMode:o};return Yr.runKernel(un,l,h)}}),Em={kernelName:on,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:s,strides:o,pad:i}=n;return{x:()=>Sm(e,a,r,s,o,i)}}},Im={kernelName:mn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,s=r.map((e=>e[0]));return{x:()=>ku(e,s,a.shape)}}},Tm={kernelName:En,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,s=r.map((e=>e[0]));return{x:()=>ku(e,s,a.shape)}}},Fm={kernelName:In,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,a,r]=t,s=n,o=a,i=Zo(s.shape,o.shape);return{a:()=>{const t=Co(o,"float32");let n=Fo(e,Fo(t,jo(s,qo(t,Lo(1)))));const a=Qo(s.shape,i);return a.length>0&&(n=wc(n,a)),yu(n,s.shape)},b:()=>{const t=Rc(s,0),n=rc(t,Gc(s),_o(s));let a=Fo(e,Fo(r,n));const u=Qo(o.shape,i);return u.length>0&&(a=wc(a,u)),yu(a,o.shape)}}}};function Am(e,t,n){const a=e.shape.length,r=a-n.length,s=gc(n,a);let o=e;null!=s&&(o=Vh(e,s));const i=o.shape.slice(),u=i.splice(a-n.length,n.length).reduce(((e,t)=>e*t),1);i.push(u);let c=function(e,t,n){const a=e.shape.slice();a[n]=1;const r=yu(t,a),s=Qu(e,n,!0,!1),o=Qu(e,n,!0,!0),i=Fo(s,o);return Fo(r,i)}(o.reshape(i),t,r);if(c=c.reshape(o.shape),null!=s){const e=yc(s);c=Vh(c,e)}return c}const Rm={kernelName:Zn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Rc(n,Lo(0)),a=Lo(Tp),r=Lo(Fp),s=Fo(e,r),o=Fo(Fo(e,a),Nc(Co(n,"float32")));return rc(t,s,o)}}}},_m={kernelName:oa,gradFunc:(e,t,n)=>{const{blockShape:a,paddings:r}=n;return{x:()=>Su(e,a,r)}}},Om={kernelName:ia,gradFunc:(e,t,n)=>{const{axis:a}=n;return{x:()=>xu(e,a)}}};const Lm=[xf,wf,Df,kf,Cf,Nf,Sf,Ef,If,Tf,Ff,Af,_f,Lf,Mf,zf,Bf,Pf,Wf,Vf,Uf,Gf,jf,Hf,Kf,Xf,Yf,Qf,Zf,Jf,{kernelName:Dt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Zo(n.shape,a.shape);return{a:()=>{const t=To(e,Co(a,"float32")),s=Qo(n.shape,r);return s.length>0?yu(wc(t,s),n.shape):t},b:()=>{let t=Fo(e,Co(n,"float32"));const s=Qo(a.shape,r);s.length>0&&(t=yu(wc(t,s),a.shape));const o=Ro(a);return jc(To(t,Co(o,"float32")))}}}},$f,em,tm,nm,am,sm,rm,om,im,lm,hm,dm,pm,fm,mm,gm,ym,bm,xm,Dm,Dm,km,Nm,Em,{kernelName:dn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n,s=Z(r,a.shape),o=H(pc(a.shape,s)[1]);return{x:()=>{const t=a.shape.slice();s.forEach((e=>{t[e]=1}));const n=yu(e,t);return To(Fo(n,ul(a.shape,"float32")),o)}}}},{kernelName:pn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{axis:r}=a,[s,o]=t,i=wm(e,o,s,Z(r,s.shape));return{x:()=>i.x()}}},{kernelName:fn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>Fo(e,Co(Wc(n,a),"float32")),b:()=>Fo(e,Co(Rc(n,a),"float32"))}}},Im,{kernelName:gn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Zo(n.shape,a.shape);return{a:()=>{const t=Qo(n.shape,r);return t.length>0?yu(wc(e,t),n.shape):e},b:()=>{const t=Fo(e,jc(Fc(To(n,a)))),s=Qo(a.shape,r);return s.length>0?yu(wc(t,s),a.shape):t}}}},{kernelName:bn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Zo(n.shape,a.shape);return{a:()=>{const t=Fo(e,Co(a,"float32")),s=Qo(n.shape,r);return s.length>0?yu(wc(t,s),n.shape):t},b:()=>{const t=Fo(e,Co(n,"float32")),s=Qo(a.shape,r);return s.length>0?yu(wc(t,s),a.shape):t}}}},{kernelName:vn,gradFunc:e=>({x:()=>jc(e)})},{kernelName:Nn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>il(n.shape,"float32")}}},{kernelName:Cn,gradFunc:e=>({x:()=>_o(e)})},{kernelName:Sn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:a}=n;return Lh(e,a).map((e=>()=>e))}},Tm,Tm,Fm,{kernelName:Tn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,a]=t,r=Rc(n,0);return{x:()=>rc(r,e,Fo(e,a)),alpha:()=>{let t=rc(r,_o(e),Fo(e,n));const s=Qo(a.shape,e.shape);return s.length>0&&(t=wc(t,s)),yu(t,a.shape)}}}},{kernelName:Fn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;let s=[];return s=void 0===r||null===r?a.shape.map(((e,t)=>t)):"number"===typeof r?[r]:r,{x:()=>Am(a,e,s)}}},{kernelName:Mn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>To(e,jc(Ro(n)))}}},{kernelName:Gn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=Fo(Wc(n,6),vh(n));return{x:()=>Fo(e,Co(a,"float32"))}}},{kernelName:zn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fo(e,Co(vh(n),"float32"))}}},{kernelName:Bn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yu(e,n.shape)}}},{kernelName:Vn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>Yr.runKernel(Un,r,n)}}},{kernelName:Pn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>Yr.runKernel(Wn,r,n)}}},{kernelName:Hn,gradFunc:(e,t,n)=>{const{dims:a}=n,r=Z(a,e.shape);return{x:()=>Kl(e,r)}}},{kernelName:jn,gradFunc:e=>({x:()=>_o(e)})},{kernelName:qn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>jc(To(e,Fo(jo(n,1.5),2)))}}},{kernelName:Qn,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Co(_o(n),"float32"),t:()=>Fo(e,Co(n,e.dtype)),e:()=>Fo(e,Co(Zc(n),e.dtype))}}},Rm,{kernelName:na,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fo(e,Fo(n,qo(Lo(1),n)))}}},{kernelName:ta,gradFunc:e=>({x:()=>_o(e)})},{kernelName:$n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fo(Xu(Co(n,"float32")),e)}}},{kernelName:ea,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fo(Yu(Co(n,"float32")),e)}}},{kernelName:Jn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{begin:r,size:s}=n,o=a.shape,[i,u]=Vi(a,r,s),c=[];for(let l=0;l<e.rank;l++)c.push([i[l],o[l]-i[l]-u[l]]);return{x:()=>xl(e,c)}}},{kernelName:ua,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{dim:r}=n,s=Fo(e,a);return{logits:()=>qo(s,Fo(wc(s,[r],true),a))}}},{kernelName:aa,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fo(e,Du(n))}}},_m,_m,Om,Om,{kernelName:ra,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>To(e,Fo(Ao(Co(n,"float32")),2))}}},{kernelName:fa,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Lo(2);return{a:()=>Fo(e,Fo(r,qo(n,a))),b:()=>Fo(e,Fo(r,qo(a,n)))}}},{kernelName:ma,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fo(e,Fo(Co(n,"float32"),2))}}},{kernelName:Ra,gradFunc:e=>({x:()=>_o(e)})},{kernelName:wa,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Zo(n.shape,a.shape);return{a:()=>{let t=e;const a=Qo(n.shape,r);return a.length>0&&(t=wc(t,a)),yu(t,n.shape)},b:()=>{let t=e;const n=Qo(a.shape,r);return n.length>0&&(t=wc(t,n)),yu(jc(t),a.shape)}}}},{kernelName:sa,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,r=a.shape.slice(),{axis:s}=n;Z(s,a.shape).forEach((e=>{r[e]=1}));const o=yu(e,r),i=Fo(o,ul(a.shape,"float32"));return{x:()=>i}}},{kernelName:Da,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>To(e,Ro(Xu(n)))}}},{kernelName:ka,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fo(qo(Lo(1),Ro(n)),e)}}},{kernelName:Ca,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{reps:r}=n;return{x:()=>{let t=_o(a);if(1===a.rank)for(let n=0;n<r[0];++n)t=Eo(t,ku(e,[n*a.shape[0]],[a.shape[0]]));else if(2===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)t=Eo(t,ku(e,[n*a.shape[0],s*a.shape[1]],[a.shape[0],a.shape[1]]));else if(3===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let o=0;o<r[2];++o)t=Eo(t,ku(e,[n*a.shape[0],s*a.shape[1],o*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else{if(4!==a.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+"".concat(a.rank," tensors yet."));for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let o=0;o<r[2];++o)for(let i=0;i<r[3];++i)t=Eo(t,ku(e,[n*a.shape[0],s*a.shape[1],o*a.shape[2],i*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]))}return t}}}},{kernelName:Ea,gradFunc:(e,t,n)=>{const a=n,{perm:r}=a,s=yc(r);return{x:()=>Vh(e,s)}}},{kernelName:Ta,gradFunc:(e,t,n)=>{const a=n,{axis:r}=a;return{value:()=>bh(e,r)}}},{kernelName:Fa,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Jo(t,_o(t)),a=Ac(e,n);let r=_c(t,Lo(0,"int32"));const s=a.rank-r.rank;for(let i=0;i<s;++i)r=Sc(r,i+1);r=Qc(r,ul(a.shape,"bool"));const o=_o(a);return rc(r,a,o)}(e,n)}}},{kernelName:Aa,gradFunc:e=>({x:()=>_o(e)})}];for(const n of Lm)qa(n);Tr().prototype.abs=function(){return this.throwIfDisposed(),Xo(this)},Tr().prototype.acos=function(){return this.throwIfDisposed(),Hi(this)},Tr().prototype.acosh=function(){return this.throwIfDisposed(),ji(this)},Tr().prototype.add=function(e){return this.throwIfDisposed(),Eo(this,e)},Tr().prototype.all=function(e,t){return this.throwIfDisposed(),Ki(this,e,t)},Tr().prototype.any=function(e,t){return this.throwIfDisposed(),Xi(this,e,t)},Tr().prototype.argMax=function(e){return this.throwIfDisposed(),Yi(this,e)},Tr().prototype.argMin=function(e){return this.throwIfDisposed(),Qi(this,e)},Tr().prototype.asScalar=function(){return this.throwIfDisposed(),V(1===this.size,(()=>"The array must have only 1 element.")),yu(this,[])},Tr().prototype.asType=function(e){return this.throwIfDisposed(),Co(this,e)},Tr().prototype.as1D=function(){return this.throwIfDisposed(),yu(this,[this.size])},Tr().prototype.as2D=function(e,t){return this.throwIfDisposed(),yu(this,[e,t])},Tr().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),yu(this,[e,t,n])},Tr().prototype.as4D=function(e,t,n,a){return this.throwIfDisposed(),yu(this,[e,t,n,a])},Tr().prototype.as5D=function(e,t,n,a,r){return this.throwIfDisposed(),yu(this,[e,t,n,a,r])},Tr().prototype.asin=function(){return this.throwIfDisposed(),Zi(this)},Tr().prototype.asinh=function(){return this.throwIfDisposed(),Ji(this)},Tr().prototype.atan=function(){return this.throwIfDisposed(),$i(this)},Tr().prototype.atan2=function(e){return this.throwIfDisposed(),eu(this,e)},Tr().prototype.atanh=function(){return this.throwIfDisposed(),tu(this)},Tr().prototype.avgPool=function(e,t,n,a){return this.throwIfDisposed(),bu(this,e,t,n,a)},Tr().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Su(this,e,t)},Tr().prototype.batchNorm=function(e,t,n,a,r){return this.throwIfDisposed(),Eu(this,e,t,n,a,r)},Tr().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Ou(this,e)},Tr().prototype.cast=function(e){return this.throwIfDisposed(),Co(this,e)},Tr().prototype.ceil=function(){return this.throwIfDisposed(),Lu(this)},Tr().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Mu(this,e,t)},Tr().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Ir&&(e=[e]),xu([this,...e],t)},Tr().prototype.conv1d=function(e,t,n,a,r,s){return this.throwIfDisposed(),Uu(this,e,t,n,a,r,s)},Tr().prototype.conv2dTranspose=function(e,t,n,a,r){return this.throwIfDisposed(),Hu(this,e,t,n,a,r)},Tr().prototype.conv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),Vu(this,e,t,n,a,r,s)},Tr().prototype.cos=function(){return this.throwIfDisposed(),Xu(this)},Tr().prototype.cosh=function(){return this.throwIfDisposed(),Yu(this)},Tr().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Qu(this,e,t,n)},Tr().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Zu(this,e,t,n)},Tr().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),$u(this,e,t)},Tr().prototype.depthwiseConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),ec(this,e,t,n,a,r,s)},Tr().prototype.dilation2d=function(e,t,n,a,r){return this.throwIfDisposed(),nc(this,e,t,n,a,r)},Tr().prototype.divNoNan=function(e){return this.throwIfDisposed(),sc(this,e)},Tr().prototype.div=function(e){return this.throwIfDisposed(),To(this,e)},Tr().prototype.dot=function(e){return this.throwIfDisposed(),oc(this,e)},Tr().prototype.elu=function(){return this.throwIfDisposed(),uc(this)},Tr().prototype.equal=function(e){return this.throwIfDisposed(),ac(this,e)},Tr().prototype.erf=function(){return this.throwIfDisposed(),lc(this)},Tr().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Cc(this,e,t)},Tr().prototype.exp=function(){return this.throwIfDisposed(),Nc(this)},Tr().prototype.expandDims=function(e){return this.throwIfDisposed(),Sc(this,e)},Tr().prototype.expm1=function(){return this.throwIfDisposed(),Ec(this)},Tr().prototype.fft=function(){return this.throwIfDisposed(),hh(this)},Tr().prototype.flatten=function(){return this.throwIfDisposed(),yu(this,[this.size])},Tr().prototype.floor=function(){return this.throwIfDisposed(),Fc(this)},Tr().prototype.floorDiv=function(e){return this.throwIfDisposed(),Io(this,e)},Tr().prototype.gather=function(e,t,n){return this.throwIfDisposed(),Ac(this,e,t,n)},Tr().prototype.greaterEqual=function(e){return this.throwIfDisposed(),_c(this,e)},Tr().prototype.greater=function(e){return this.throwIfDisposed(),Rc(this,e)},Tr().prototype.ifft=function(){return this.throwIfDisposed(),dh(this)},Tr().prototype.irfft=function(){return this.throwIfDisposed(),ph(this)},Tr().prototype.isFinite=function(){return this.throwIfDisposed(),Lc(this)},Tr().prototype.isInf=function(){return this.throwIfDisposed(),Mc(this)},Tr().prototype.isNaN=function(){return this.throwIfDisposed(),zc(this)},Tr().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Bc(this,e)},Tr().prototype.lessEqual=function(e){return this.throwIfDisposed(),Wc(this,e)},Tr().prototype.less=function(e){return this.throwIfDisposed(),Pc(this,e)},Tr().prototype.localResponseNormalization=function(e,t,n,a){return this.throwIfDisposed(),Uc(this,e,t,n,a)},Tr().prototype.logSigmoid=function(){return this.throwIfDisposed(),Kc(this)},Tr().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Xc(this,e)},Tr().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Yc(this,e,t)},Tr().prototype.log=function(){return this.throwIfDisposed(),Gc(this)},Tr().prototype.log1p=function(){return this.throwIfDisposed(),Hc(this)},Tr().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Qc(this,e)},Tr().prototype.logicalNot=function(){return this.throwIfDisposed(),Zc(this)},Tr().prototype.logicalOr=function(e){return this.throwIfDisposed(),Jc(this,e)},Tr().prototype.logicalXor=function(e){return this.throwIfDisposed(),$c(this,e)},Tr().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),wu(this,e,t,n)},Tr().prototype.maxPool=function(e,t,n,a){return this.throwIfDisposed(),al(this,e,t,n,a)},Tr().prototype.max=function(e,t){return this.throwIfDisposed(),vc(this,e,t)},Tr().prototype.maximum=function(e){return this.throwIfDisposed(),Jo(this,e)},Tr().prototype.mean=function(e,t){return this.throwIfDisposed(),ol(this,e,t)},Tr().prototype.min=function(e,t){return this.throwIfDisposed(),xc(this,e,t)},Tr().prototype.minimum=function(e){return this.throwIfDisposed(),ll(this,e)},Tr().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),hl(this,e,t)},Tr().prototype.mod=function(e){return this.throwIfDisposed(),dl(this,e)},Tr().prototype.mul=function(e){return this.throwIfDisposed(),Fo(this,e)},Tr().prototype.neg=function(){return this.throwIfDisposed(),jc(this)},Tr().prototype.norm=function(e,t,n){return this.throwIfDisposed(),kc(this,e,t,n)},Tr().prototype.notEqual=function(e){return this.throwIfDisposed(),gl(this,e)},Tr().prototype.oneHot=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),yl(this,e,t,n)},Tr().prototype.onesLike=function(){return this.throwIfDisposed(),bl(this)},Tr().prototype.pad=function(e,t){return this.throwIfDisposed(),xl(this,e,t)},Tr().prototype.pool=function(e,t,n,a,r,s){return this.throwIfDisposed(),Sl(this,e,t,n,a,r,s)},Tr().prototype.pow=function(e){return this.throwIfDisposed(),jo(this,e)},Tr().prototype.prelu=function(e){return this.throwIfDisposed(),El(this,e)},Tr().prototype.prod=function(e,t){return this.throwIfDisposed(),Il(this,e,t)},Tr().prototype.reciprocal=function(){return this.throwIfDisposed(),Hl(this)},Tr().prototype.relu=function(){return this.throwIfDisposed(),jl(this)},Tr().prototype.relu6=function(){return this.throwIfDisposed(),ql(this)},Tr().prototype.reshapeAs=function(e){return this.throwIfDisposed(),yu(this,e.shape)},Tr().prototype.reshape=function(e){return this.throwIfDisposed(),yu(this,e)},Tr().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Ad(this,e,t,n)},Tr().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Rd(this,e,t,n)},Tr().prototype.reverse=function(e){return this.throwIfDisposed(),Kl(this,e)},Tr().prototype.rfft=function(){return this.throwIfDisposed(),mh(this)},Tr().prototype.round=function(){return this.throwIfDisposed(),Jl(this)},Tr().prototype.rsqrt=function(){return this.throwIfDisposed(),$l(this)},Tr().prototype.selu=function(){return this.throwIfDisposed(),eh(this)},Tr().prototype.separableConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),th(this,e,t,n,a,r,s)},Tr().prototype.sigmoid=function(){return this.throwIfDisposed(),Du(this)},Tr().prototype.sign=function(){return this.throwIfDisposed(),ah(this)},Tr().prototype.sin=function(){return this.throwIfDisposed(),rh(this)},Tr().prototype.sinh=function(){return this.throwIfDisposed(),sh(this)},Tr().prototype.slice=function(e,t){return this.throwIfDisposed(),ku(this,e,t)},Tr().prototype.softmax=function(e){return this.throwIfDisposed(),lh(this,e)},Tr().prototype.softplus=function(){return this.throwIfDisposed(),qc(this)},Tr().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Nl(this,e,t)},Tr().prototype.split=function(e,t){return this.throwIfDisposed(),fh(this,e,t)},Tr().prototype.sqrt=function(){return this.throwIfDisposed(),Ao(this)},Tr().prototype.square=function(){return this.throwIfDisposed(),Ro(this)},Tr().prototype.squaredDifference=function(e){return this.throwIfDisposed(),gh(this,e)},Tr().prototype.squeeze=function(e){return this.throwIfDisposed(),yh(this,e)},Tr().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Ir?[this,e]:[this,...e];return bh(n,t)},Tr().prototype.step=function(e){return this.throwIfDisposed(),vh(this,e)},Tr().prototype.stridedSlice=function(e,t,n,a,r,s,o,i){return this.throwIfDisposed(),xh(this,e,t,n,a,r,s,o,i)},Tr().prototype.sub=function(e){return this.throwIfDisposed(),qo(this,e)},Tr().prototype.sum=function(e,t){return this.throwIfDisposed(),wc(this,e,t)},Tr().prototype.tan=function(){return this.throwIfDisposed(),wh(this)},Tr().prototype.tanh=function(){return this.throwIfDisposed(),Cu(this)},Tr().prototype.tile=function(e){return this.throwIfDisposed(),Ic(this,e)},Tr().prototype.toBool=function(){return this.throwIfDisposed(),Co(this,"bool")},Tr().prototype.toFloat=function(){return this.throwIfDisposed(),Co(this,"float32")},Tr().prototype.toInt=function(){return this.throwIfDisposed(),Co(this,"int32")},Tr().prototype.topk=function(e,t){return this.throwIfDisposed(),Ah(this,e,t)},Tr().prototype.transpose=function(e){return this.throwIfDisposed(),Vh(this,e)},Tr().prototype.unique=function(e){return this.throwIfDisposed(),_h(this,e)},Tr().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Oh(this,e,t)},Tr().prototype.unstack=function(e){return this.throwIfDisposed(),Lh(this,e)},Tr().prototype.where=function(e,t){return this.throwIfDisposed(),rc(e,this,t)},Tr().prototype.zerosLike=function(){return this.throwIfDisposed(),_o(this)};class Mm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Mm.prototype)}}class zm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,zm.prototype)}}class Bm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Bm.prototype)}}class Pm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Pm.prototype)}}class Wm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Wm.prototype)}}Error;class Vm{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error("The maxEntries of LRU caches must be at least 0, but got ".concat(e,"."));if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function Um(e,t){if(Array.isArray(e)){let n=[];for(let a=0;a<t;a++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Gm(e,t){if(!e)throw new Wm(t)}function Hm(e,t){let n=0;for(const a of e)a===t&&n++;return n}function jm(e){return 1===e.length?e[0]:e}function qm(e){return Array.isArray(e)?e:[e]}function Km(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Xm(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let Ym={};function Qm(e){if(null===e||void 0===e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Zm(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach((e=>Zm(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!==typeof t.value?Zm(t):e[n]=t.value)}}}function Jm(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"===typeof e){const r=e;let s;if(r in n)s=n[r];else if(r in Ym)s=Ym[r];else if(s=t[r],null==s)throw new Bm("Unknown ".concat(a,": ").concat(e,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");return s}{const s=e;if(null==s.className||null==s.config)throw new Bm("".concat(a,": Improper config format: ")+"".concat(JSON.stringify(s),".\n")+"'className' and 'config' must set.");const o=s.className;let i,u;if(o in n?[i,u]=n[o]:o in Ym?[i,u]=Ym.className:o in t&&([i,u]=t[o]),null==i)throw new Bm("Unknown ".concat(a,": ").concat(o,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");if(null!=u){const e={};for(const n of Object.keys(Ym))e[n]=Ym[n];for(const r of Object.keys(n))e[r]=n[r];s.config.customObjects=e;const t=Object.assign({},Ym);for(const r of Object.keys(n))Ym[r]=n[r];Zm(s.config);const a=u(i,s.config,n,r);return Ym=Object.assign({},t),a}{const e=Object.assign({},Ym);for(const a of Object.keys(n))Ym[a]=n[a];const t=new i(s.config);return Ym=Object.assign({},e),t}}}function $m(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function eg(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function tg(e){if(null==e)throw new Bm("Invalid value in obj: ".concat(JSON.stringify(e)));for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function ng(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Bm("".concat(n," is not a valid ").concat(t,".  Valid values are ").concat(e," or null/undefined."))}function ag(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return Gm(n>=0),Gm(a>=n),Array.isArray(e)&&e.length>=n&&e.length<=a&&e.every((e=>typeof e===t))}function rg(e,t){Array.isArray(e)?(V(e.length>0,(()=>"".concat(t," is unexpectedly an empty array."))),e.forEach(((e,n)=>rg(e,"element ".concat(n+1," of ").concat(t))))):V(Number.isInteger(e)&&e>0,(()=>"Expected ".concat(t," to be a positive integer, but got ")+"".concat(sg(e),".")))}function sg(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>sg(e))).join(",")+"]":"string"===typeof e?'"'.concat(e,'"'):"".concat(e)}function og(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let ig=0;function ug(){return ig++}const cg={};function lg(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e in cg||(cg[e]=0),cg[e]+=1,e+cg[e].toString()}const hg=["channelsFirst","channelsLast"],dg=["nearest","bilinear"],pg=["valid","same","causal"],fg=["max","avg"],mg=["sum","mul","concat","ave"],gg=new Map;function yg(e){ng(hg,"DataFormat",e)}function bg(e){ng(pg,"PaddingMode",e)}function vg(e){ng(fg,"PoolMode",e)}const xg=[];function wg(e,t){xg.push(e);try{const e=t();return xg.pop(),e}catch(n){throw xg.pop(),n}}function Dg(e){if(!Ng(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===xg.length?"":xg.join("/")+"/")+e}function kg(e){if(!Ng(e))throw new Error("Not a valid tensor name: '"+e+"'");gg.has(e)||gg.set(e,0);const t=gg.get(e);if(gg.set(e,gg.get(e)+1),t>0){const n="".concat(e,"_").concat(t);return gg.set(n,1),n}return e}const Cg=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Ng(e){return!!e.match(Cg)}function Sg(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let a=1;for(let r=t;r<n;++r)a*=e[r];return a}function Eg(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a<t&&(t=a)}return t}function Ig(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a>t&&(t=a)}return t}function Tg(e,t){if(t<e)throw new Bm("end (".concat(t,") < begin (").concat(e,") is forbidden."));const n=[];for(let a=e;a<t;++a)n.push(a);return n}let Fg;function Ag(){return null==Fg&&(Fg=vs().epsilon()),Fg}function Rg(e,t){return Co(e,t)}function _g(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),yu(e,n)}function Og(e,t,n){return ms((()=>{switch(e.rank){case 1:return oh(e,t,n);case 2:return ih(e,[t,0],[n,e.shape[1]]);case 3:return uh(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return ch(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return ku(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return ku(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Bm("sliceAlongFirstAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function Lg(e,t,n){return ms((()=>{switch(e.rank){case 1:return oh(e,t,n);case 2:return ih(e,[0,t],[e.shape[0],n]);case 3:return uh(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return ch(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Bm("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function Mg(e,t,n,a){return ms((()=>{switch(e.rank){case 1:return oh(e,t,n);case 2:switch(a){case 1:return Og(e,t,n);case 2:return Lg(e,t,n);default:throw new Bm("The axis is not within the rank of the tensor "+"".concat(a))}case 3:switch(a){case 1:return Og(e,t,n);case 2:return uh(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Lg(e,t,n);default:throw new Bm("The axis is not within the rank of the tensor "+"".concat(a))}case 4:switch(a){case 1:return Og(e,t,n);case 2:return ch(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return ch(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Lg(e,t,n);default:throw new Bm("The axis is not within the rank of the tensor "+"".concat(a))}default:throw new Bm("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function zg(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(t=e[0].rank,n=0!==t?t:0),n===e[0].rank&&(n=-1),xu(e,n)}function Bg(e,t){switch(e.rank){case 1:return zu([e,t]);case 2:return Bu([e,t],0);case 3:return Pu([e,t],0);case 4:return Wu([e,t],0);default:throw new Bm("concatAlongFirstAxis() received an unsupported "+"tensor rank: ".concat(e.rank))}}function Pg(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Bm("The length of input n (".concat(t.length,") does not match ")+"the number of dimensions in input x (".concat(e.rank,")"));return Ic(e,t)}function Wg(e){return Bl(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,arguments.length>3?arguments[3]:void 0,arguments.length>4?arguments[4]:void 0)}function Vg(e,t,n,a){if(e.rank<2||t.rank<2)throw new Pm("dot requires both inputs to be rank >= 2"+" but got x shape = ".concat(e.shape," and y shape = ").concat(t.shape));if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Pm("If rank y >= 3, then the second last dim"+" of y must equal the last dim of x but got x shape = ".concat(e.shape," and ")+" y shape = ".concat(t.shape))}if(2===e.rank&&2===t.rank){return sd({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?Hg(e.rank,a,"channelsLast"):null,activation:n})}{const r=e.shape.slice(),s=r.pop();e=yu(e,[-1,s]);const o=t.shape.slice(),i=o.pop(),u=o.pop(),c=[...o,i],l=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=yu(Vh(t,l),[u,-1]);const h=[...r,...c];return yu(sd({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?Hg(e.rank,a,"channelsLast"):null,activation:n}),h)}}function Ug(e,t,n){return ms((()=>(t=Array.isArray(t)?Dh(t,"int32"):Co(t,"int32"),Ac(e,t,n))))}function Gg(e){return Fo(e,e)}function Hg(e,t,n){const a=t.shape;if(1!==t.rank&&t.rank!==e)throw new Bm("Unexpected bias dimensions: ".concat(t.rank)+"; expected it to be 1 or ".concat(e));if(5===e){if("channelsFirst"===n)return 1===a.length?yu(t,[1,a[0],1,1,1]):yu(t,[1,a[3],a[0],a[1],a[2]]);if("channelsLast"===n)return 1===a.length?yu(t,[1,1,1,1,a[0]]):yu(t,[1].concat(a))}else if(4===e){if("channelsFirst"===n)return 1===a.length?yu(t,[1,a[0],1,1]):yu(t,[1,a[2],a[0],a[1]]);if("channelsLast"===n)return 1===a.length?yu(t,[1,1,1,a[0]]):yu(t,[1].concat(a))}else if(3===e){if("channelsFirst"===n)return 1===a.length?yu(t,[1,a[0],1]):yu(t,[1,a[1],a[0]]);if("channelsLast"===n)return 1===a.length?yu(t,[1,1,a[0]]):yu(t,[1].concat(a))}else if(e<3)return t;throw new Bm("Unsupported input rank by biasAdd: ".concat(t.rank))}function jg(e,t,n){return ms((()=>(null==n&&(n="channelsLast"),yg(n),Eo(e,Hg(e.rank,t,n)))))}function qg(e,t,n,a){return ms((()=>qh(e,t,n,a)))}function Kg(e,t){return arguments.length>2&&void 0!==arguments[2]&&arguments[2]?e():t()}const Xg=["fanIn","fanOut","fanAvg"],Yg=["normal","uniform","truncatedNormal"];class Qg extends Bo{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Zg extends Qg{apply(e,t){return il(e,t)}}Zg.className="Zeros",Wo(Zg);class Jg extends Qg{apply(e,t){return ul(e,t)}}Jg.className="Ones",Wo(Jg);class $g extends Qg{constructor(e){if(super(),"object"!==typeof e)throw new Bm("Expected argument of type ConstantConfig but got ".concat(e));if(void 0===e.value)throw new Bm("config must have value set but got ".concat(e));this.value=e.value}apply(e,t){return ms((()=>Fo(Lo(this.value),ul(e,t))))}getConfig(){return{value:this.value}}}$g.className="Constant",Wo($g);class ey extends Qg{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Wl(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}ey.className="RandomUniform",Wo(ey);class ty extends Qg{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Pm("randomNormal does not support dType ".concat(t,"."));return Wg(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ty.className="RandomNormal",Wo(ty);class ny extends Qg{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Pm("truncatedNormal does not support dType ".concat(t,"."));return Rh(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ny.className="TruncatedNormal",Wo(ny);class ay extends Qg{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return ms((()=>{if(2!==e.length||e[0]!==e[1])throw new Bm("Identity matrix initializer can only be used for 2D square matrices.");return Fo(this.gain,Tc(e[0]))}))}getConfig(){return{gain:this.gain}}}ay.className="Identity",Wo(ay);class ry extends Qg{constructor(e){if(super(),e.scale<0)throw new Bm("scale must be a positive float. Got: ".concat(e.scale));var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,ng(Xg,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){ng(Yg,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e){let t,n,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(yg(a),2===e.length)t=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===a){const a=Sg(e,2);t=e[1]*a,n=e[0]*a}else if("channelsLast"===a){const a=Sg(e,0,e.length-2);t=e[e.length-2]*a,n=e[e.length-1]*a}}else{const a=Sg(e);t=Math.sqrt(a),n=Math.sqrt(a)}return[t,n]}(e),a=n[0],r=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,a):"fanOut"===this.mode?s/=Math.max(1,r):s/=Math.max(1,(a+r)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Pm("".concat(this.getClassName()," does not support dType ").concat(t,"."));return Rh(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return Wl(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}ry.className="VarianceScaling",Wo(ry);class sy extends ry{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ry.className}}sy.className="GlorotUniform",Wo(sy);class oy extends ry{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ry.className}}oy.className="GlorotNormal",Wo(oy);class iy extends ry{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ry.className}}iy.className="HeNormal",Wo(iy);class uy extends ry{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ry.className}}uy.className="HeUniform",Wo(uy);class cy extends ry{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ry.className}}cy.className="LeCunNormal",Wo(cy);class ly extends ry{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ry.className}}ly.className="LeCunUniform",Wo(ly);class hy extends Qg{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return ms((()=>{if(e.length<2)throw new Pm("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError("Unsupported data type ".concat(t,"."));const n=H(e.slice(0,-1)),a=e[e.length-1],r=n*a;r>this.ELEMENTS_WARN_SLOW&&console.warn("Orthogonal initializer is being called on a matrix with more "+"than ".concat(this.ELEMENTS_WARN_SLOW," (").concat(r,") elements: ")+"Slowness may result.");const s=Wg([Math.max(a,n),Math.min(a,n)],0,1,t,this.seed),o=op.qr(s,!1);let i=o[0];const u=o[1].flatten().stridedSlice([0],[Math.min(a,n)*Math.min(a,n)],[Math.min(a,n)+1]);return i=Fo(i,u.sign()),n<a&&(i=i.transpose()),Fo(Lo(this.gain),i.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}hy.className="Orthogonal",Wo(hy);const dy={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function py(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Jm(e,Po.getMap().classNameMap,t,"initializer")}function fy(e){return Qm(e)}function my(e){if("string"===typeof e){const t=e in dy?dy[e]:e;if("GlorotNormal"===t)return new oy;if("GlorotUniform"===t)return new sy;if("HeNormal"===t)return new iy;if("HeUniform"===t)return new uy;if("LeCunNormal"===t)return new cy;if("LeCunUniform"===t)return new ly;{const e={};return e.className=t,e.config={},py(e)}}return e instanceof Qg?e:py(e)}function gy(e){return Array.isArray(e)&&Array.isArray(e[0])}function yy(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function by(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Bm("Expected Tensor length to be 1; got ".concat(e.length));t=e[0]}else t=e;return t}function vy(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new Bm("Expected exactly 1 Shape; got ".concat(e.length))}return e}function xy(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const wy="Variable";class Dy{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:wy,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=ug(),n=null==n?wy:n,this.originalName=Dg(n),this.name=kg(this.originalName),this.trainable_=a,this.constraint=r,this.val=zh(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error("LayersVariable ".concat(this.name," is already disposed."))}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function ky(e){return e.map((e=>e.read()))}function Cy(e){e.forEach((e=>{e[0].write(e[1])}))}class Ny{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Sy{constructor(e,t,n,a,r,s,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=a,this.callArgs=r,this.outputTensorIndex=o,this.id=ug(),null!=s&&(this.originalName=Dg(s),this.name=kg(this.originalName)),this.rank=t.length}}let Ey=0;class Iy{constructor(e,t){this.callArgs=t,this.id=Ey++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Ty=0;class Fy extends Bo{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Ty++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Km(e)+"_"+lg(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new zm("The layer has never been called "+"and thus has no defined ".concat(t,"."));if(this.inboundNodes.length<=e)throw new Bm("Asked to get ".concat(t," at node ").concat(e,", ")+"but the layer has only ".concat(this.inboundNodes.length," inbound nodes."));return this.inboundNodes[e]}getInputAt(e){return jm(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return jm(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Mm("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new Mm("Layer ".concat(this.name)+" is not connected, no input to return.");return jm(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Mm("Layer ".concat(this.name)+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new Mm("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return jm(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=qm(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=qm(this.inputSpec);if(t.length!==n.length)throw new Bm("Layer ".concat(this.name," expects ").concat(n.length," inputs, ")+"but it received ".concat(t.length," input tensors. ")+"Input received: ".concat(e));for(let a=0;a<t.length;a++){const e=t[a],r=n[a];if(null==r)continue;const s=e.rank;if(null!=r.ndim&&s!==r.ndim)throw new Bm("Input ".concat(a," is incompatible with layer ").concat(this.name,": ")+"expected ndim=".concat(r.ndim,", found ndim=").concat(s));if(null!=r.maxNDim&&s>r.maxNDim)throw new Bm("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected max_ndim=".concat(r.maxNDim,", found ndim=").concat(s));if(null!=r.minNDim&&s<r.minNDim)throw new Bm("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected min_ndim=".concat(r.minNDim,", found ndim=").concat(s,"."));if(null!=r.dtype&&e.dtype!==r.dtype)throw new Bm("Input ".concat(a," is incompatible with layer ").concat(this.name," ")+": expected dtype=".concat(r.dtype,", found dtype=").concat(e.dtype,"."));if(r.axes){const t=e.shape;for(const e in r.axes){const n=Number(e),s=r.axes[e],o=n>=0?t[n]:t[t.length+n];if(null!=s&&-1===[s,null].indexOf(o))throw new Bm("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected axis ").concat(n," of input shape to ")+"have value ".concat(s," but got shape ").concat(t,"."))}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){const n=r.shape[t],s=e.shape[t];if(null!=n&&null!=s&&n!==s)throw new Bm("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected shape=").concat(r.shape,", ")+"found shape=".concat(e.shape,"."))}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=qm(e),a=function(e){let t=!0;for(const n of qm(e))if(!(n instanceof Sy)){t=!1;break}return t}(e),r=function(e){let t=!0;for(const n of qm(e))if(n instanceof Sy){t=!1;break}return t}(e);if(a===r)throw new Bm("Arguments to apply() must be all SymbolicTensors or all Tensors");return wg(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of qm(e))t.push(n.shape);this.build(jm(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,a);const r=qm(a),s=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(a=jm(s),null!=this.activityRegularizer)throw new Pm("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}{const n=function(e){e=qm(e);const t=[];for(const n of e)t.push(n.shape);return jm(t)}(e),a=this.computeOutputShape(n);let r;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,a)=>new Sy(s,n,this,qm(e),t,this.name,a))):new Sy(s,a,this,qm(e),t,this.name),this.addInboundNode(e,r,null,null,n,a,t),this._refCount++,null!=this.activityRegularizer)throw new Pm("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+"".concat(JSON.stringify(e),") does not match that of the ")+"batchInputShape (".concat(JSON.stringify(this.batchInputShape),") ")+"of the layer ".concat(this.name));else{let t=!1;this.batchInputShape.forEach(((n,a)=>{null!=n&&null!=e[a]&&e[a]!==n&&(t=!0)})),t&&console.warn("The shape of the input tensor "+"(".concat(JSON.stringify(e),") does not ")+"match the expectation of layer ".concat(this.name,": ")+"".concat(JSON.stringify(this.batchInputShape)))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Mm("The layer ".concat(this.name," has never been called and thus has no ")+"defined output shape.");const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Mm("The layer ".concat(this.name," has multiple inbound nodes with different ")+'output shapes. Hence the notion of "output shape" is ill-defined for the layer.')}countParams(){if(!this.built)throw new zm("You tried to call countParams() on ".concat(this.name,", ")+"but the layer is not built yet. Build it first by calling build(batchInputShape).");return xy(this.weights)}build(e){this.built=!0}getWeights(){return ky(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(e){ms((()=>{const t=this.weights;if(t.length!==e.length)throw new Bm('You called setWeights(weights) on layer "'.concat(this.name,'" ')+"with a weight list of length ".concat(e.length,", ")+"but the layer was expecting ".concat(t.length," weights. ")+"Provided weights: ".concat(e,"..."));if(0===t.length)return;const n=[],a=ky(t);for(let r=0;r<a.length;++r){const s=a[r],o=t[r],i=e[r];if(!j(s.shape,i.shape))throw new Bm("Layer weight shape ".concat(s.shape," ")+"not compatible with provided weight shape ".concat(i.shape));n.push([o,i])}Cy(n)}))}addWeight(e,t,n,a,r,s,o,i){if(-1!==this._addedWeightNames.indexOf(e))throw new Bm("Duplicate weight name ".concat(e," for layer ").concat(this.name));this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(a=null!=i?i():my("zeros"));const u=a.apply(t,n),c=new Dy(u,n,e,s,o);return u.dispose(),null!=r&&this.addLoss((()=>r.apply(c.read()))),null==s&&(s=!0),s?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=qm(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.");t.forEach((e=>{if(null!=e)throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.")}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const a=this.computeMask(e,n),r=qm(t),s=qm(a);if(r.length!==s.length)throw new Error("".concat(this.name," outputs ").concat(r.length," tensors ")+"but ".concat(r.length," masks for those tensors"));for(let o=0;o<r.length;o++)r[o].kerasMask=s[o]}addInboundNode(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const i=qm(e);t=qm(t),n=qm(n),a=qm(a),r=yy(r),s=yy(s);const u=[],c=[],l=[];for(const h of i)u.push(h.sourceLayer),c.push(h.nodeIndex),l.push(h.tensorIndex);new Iy({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:l,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:a,inputShapes:r,outputShapes:s},o);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error("Layer '".concat(this.name,"' is already disposed."))}dispose(){if(!this.built)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been ")+"built yet.");if(null===this._refCount)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been used ")+"yet.");this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Ay(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const a=Ay(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of a)-1===t.indexOf(e)&&t.push(e)}return t}}}class Ry extends Fy{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:lg("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Bm("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Bm("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Bm("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const a=new Sy(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new Iy({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Bm("Cannot pass any input to an "+"InputLayer's apply() method. InputLayer name: ".concat(this.name))}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Ry.className="InputLayer",Wo(Ry);class _y{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof _y)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Bm("Duplicate key: name=".concat(e.name,", id=").concat(e.id));return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Co(t,e.dtype)}catch(GP){throw new Bm("The dtype of the feed (".concat(t.dtype,") can not be cast to the dtype ")+"of the key '".concat(e.name,"' (").concat(e.dtype,")."))}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Sy){if(null==this.id2Value[e.id])throw new Bm("Nonexistent key: ".concat(e.name));return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Bm("Feed dict has no SymbolicTensor name: ".concat(e));return this.id2Value[t]}}getMask(e){if(e instanceof Sy){if(null==this.id2Value[e.id])throw new Bm("Nonexistent key: ".concat(e.name));return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Bm("Feed dict has no SymbolicTensor name: ".concat(e));return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&gs(this.id2Mask)}}const Oy=new Vm,Ly=new Vm;function My(e,t,n,a){const r=null!=n&&n.training,s=Array.isArray(e),o=s?e:[e],i=o.map((e=>e.name)),u=[],c=t.names();for(const f of i)-1!==c.indexOf(f)?u.push(t.getValue(f)):u.push(null);null!=a&&(a.maxNumTensors=-1/0,a.minNumTensors=1/0);const l=i.join(",")+"|"+t.names().sort().join(",");let h,d=Oy.get(l);if(null==d){const e=function(e,t){V(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],a={};if(1===e.length){const r=By(e[0],t);n=r.sorted,a=r.recipientMap}else{const r=new Set;for(const s of e){const{sorted:e,recipientMap:o}=By(s,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const t in o)null==a[t]&&(a[t]=new Set),o[t].forEach((e=>a[t].add(e)))}}return{sorted:n,recipientCounts:zy(a)}}(o,t);d=e.sorted,h=e.recipientCounts,Oy.put(l,d),Ly.put(l,h)}h={},r||Object.assign(h,Ly.get(l));const p=new _y(t);for(let f=0;f<d.length;++f){if(null!=a){const e=fs().numTensors;e>a.maxNumTensors&&(a.maxNumTensors=e),e<a.minNumTensors&&(a.minNumTensors=e)}const e=d[f],s=e.sourceLayer;if(s instanceof Ry)continue;const o=[],c=[],l=[];let m=!1;for(const n of e.inputs){const e=p.getValue(n),a=p.getMask(n);o.push(e),c.push(a),null!=a&&(m=!0),r||(h[n.name]--,0!==h[n.name]||t.hasKey(n)||-1!==i.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||l.push(e))}m&&((n=n||{}).mask=c[0]);const g=qm(s.apply(o,n));let y=null;s.supportsMasking&&(y=s.computeMask(o,c));const b=Py(e),v=Array.isArray(b)?b:[b];for(let t=0;t<v.length;++t){p.hasKey(v[t])||p.add(v[t],g[t],Array.isArray(y)?y[0]:y);const e=i.indexOf(v[t].name);-1!==e&&(u[e]=g[t])}r||gs(l)}return p.disposeMasks(),s?u:u[0]}function zy(e){const t={};for(const n in e)t[n]=e[n].size;return t}function By(e,t){const n=new Set,a=[],r={};for(const i of t.names())n.add(i);const s=[],o=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=o[o.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),a.push(e),n.add(e.name),t&&o.pop();else{o.push(s.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:a,recipientMap:r}}function Py(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const a of e.sourceLayer.inboundNodes[t].outputTensors)if(a.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function Wy(e,t){return ms((()=>Ao(wc(Fo(e,e),t,!0))))}we().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=Oy&&Oy.setMaxEntries(e),null!=Ly&&Ly.setMaxEntries(e)}));class Vy extends Bo{getConfig(){return{}}}class Uy extends Vy{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ms((()=>{const t=Wy(e,this.axis),n=Mu(t,0,this.maxValue);return Fo(e,To(n,Eo(Ag(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Uy.className="MaxNorm",Wo(Uy);class Gy extends Vy{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ms((()=>To(e,Eo(Ag(),Wy(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Gy.className="UnitNorm",Wo(Gy);class Hy extends Vy{apply(e){return jl(e)}}Hy.className="NonNeg",Wo(Hy);class jy extends Vy{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ms((()=>{const t=Wy(e,this.axis),n=Eo(Fo(this.rate,Mu(t,this.minValue,this.maxValue)),Fo(1-this.rate,t));return Fo(e,To(n,Eo(Ag(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}jy.className="MinMaxNorm",Wo(jy);const qy={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ky(e){return Qm(e)}function Xy(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Jm(e,Po.getMap().classNameMap,t,"constraint")}function Yy(e){if(null==e)return null;if("string"===typeof e){return Xy({className:e in qy?qy[e]:e,config:{}})}return e instanceof Vy?e:Xy(e)}async function Qy(e){if(null==e)return;const t=[],n=[],a=[];for(const r in e){const s=e[r];if("number"!==typeof s){const e=s;t.push(e.data()),n.push(r),a.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];gs(a)}}function Zy(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}var Jy;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Jy||(Jy={}));class $y{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class eb{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class tb extends $y{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const a in t){const e=t[a];if("number"===typeof e)this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+e*n;else{let t;a in this.totals?t=this.totals[a]:this.totals[a]=0;const r=ms((()=>Eo(this.totals[a],Fo(e,n))));this.totals[a]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:ms((()=>{const e=Fo(To(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),ys(t[n])})))}}class nb extends $y{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!==typeof a[s]){const o=a[s];e.push(o.data()),t.push(r),n.push(s)}}const a=await Promise.all(e);for(let r=0;r<a.length;++r){this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=a[r][0]}}}class ab extends $y{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||dp,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");re(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let a,r=null!=n?n():hr();return function(){const s=null!=n?n():hr();return s-r<t||(r=s,a=e(...arguments)),a}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const a=[];null!=this.yield&&(await Qy(n),a.push(this.yield(e,t,n))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Qy(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Qy(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Qy(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Qy(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):re(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Qy(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Qy(e),await this.trainEnd(e))}}function rb(e,t){if(null==e&&(e={}),e instanceof $y)return[e];if(Array.isArray(e)&&e[0]instanceof $y)return e;return qm(e).map((e=>new ab(e,t)))}class sb{constructor(){}static registerCallbackConstructor(e,t){V(e>=0&&Number.isInteger(e),(()=>"Verbosity level is expected to be an integer >= 0, "+"but got ".concat(e))),sb.checkForDuplicate(t),null==sb.constructors[e]&&(sb.constructors[e]=[]),sb.constructors[e].push(t)}static checkForDuplicate(e){for(const t in sb.constructors){sb.constructors[+t].forEach((t=>{if(t===e)throw new Bm("Duplicate callback constructor.")}))}}static clear(){sb.constructors={}}static createCallbacks(e){const t=[];for(const n in sb.constructors){const a=+n;e>=a&&t.push(...sb.constructors[a])}return t.map((e=>new e))}}function ob(e,t,n,a,r,s,o,i,u){const c=new nb,l=[new tb,...sb.createCallbacks(t)];null!=e&&l.push(...e),l.push(c);const h=new eb(l);return h.setParams({epochs:n,initialEpoch:a,samples:r,steps:s,batchSize:o,verbose:t,doValidation:i,metrics:u}),{callbackList:h,history:c}}function ib(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Jm(e,Po.getMap().classNameMap,t,"layer",n)}function ub(e,t){return ms((()=>{"float32"!==e.dtype&&(e=Co(e,"float32"));const n=wc(Gg(e),t,!0),a=Go(n.shape,Ag()),r=Ao(Jo(n,a));return To(e,r)}))}function cb(e,t){return ms((()=>ol(Gg(qo(t,e)),-1)))}function lb(e,t){return ms((()=>ol(Xo(qo(t,e)),-1)))}function hb(e,t){return ms((()=>{const n=qo(e,t),a=Mu(Xo(e),Ag(),Number.MAX_VALUE),r=Xo(To(n,a));return Fo(100,ol(r,-1))}))}function db(e,t){return ms((()=>{const n=Mu(t,Ag(),Number.MAX_VALUE),a=Gc(Eo(1,n)),r=Mu(e,Ag(),Number.MAX_VALUE),s=Gc(Eo(1,r));return ol(Gg(qo(a,s)),-1)}))}function pb(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return ms((()=>{if(n)t=lh(t);else{const e=wc(t,t.shape.length-1,!0);t=To(t,e)}return t=Mu(t,Ag(),1-Ag()),jc(wc(Fo(Co(e,"float32"),Gc(t)),t.shape.length-1))}))}function fb(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return ms((()=>{const a=Co(Fc(function(e){const t=[Sg(e.shape)];return yu(e,t)}(e)),"int32"),r=(t=Mu(t,Ag(),1-Ag())).shape;return pb(yu(yl(a,r[r.length-1]),r),t,n)}))}function mb(e,t){return ms((()=>{let n;return n=Mu(t,Ag(),1-Ag()),n=Gc(To(n,qo(1,n))),ol(function(e,t){if(!j(e.shape,t.shape))throw new Bm("logits and labels must have the same shape, but got shapes "+"".concat(JSON.stringify(e.shape)," and ").concat(JSON.stringify(t.shape)));return ms((()=>{const n=jl(t),a=jc(Xo(t));return Eo(qo(n,Fo(t,e)),Hc(Nc(a)))}))}(e,n),-1)}))}function gb(e,t){return ms((()=>{const n=Mu(e,Ag(),1),a=Mu(t,Ag(),1);return wc(Fo(e,Gc(To(n,a))),-1)}))}function yb(e,t){return ms((()=>{const n=ub(e,-1),a=ub(t,-1),r=Fo(n,a);return jc(wc(r,-1))}))}sb.constructors={};const bb={meanSquaredError:cb,meanAbsoluteError:lb,meanAbsolutePercentageError:hb,meanSquaredLogarithmicError:db,squaredHinge:function(e,t){return ms((()=>{const n=Jo(0,qo(1,Fo(e,t)));return ol(Gg(n),-1)}))},hinge:function(e,t){return ms((()=>{const n=Jo(0,qo(1,Fo(e,t)));return ol(n,-1)}))},categoricalHinge:function(e,t){return ms((()=>{const n=wc(Fo(e,t),-1),a=vc(Fo(qo(1,e),t),-1);return Jo(0,Eo(1,qo(a,n)))}))},logcosh:function(e,t){return ms((()=>{const n=Math.log(2),a=qo(t,e),r=qo(Eo(a,qc(Fo(-2,a))),n);return ol(r,-1)}))},categoricalCrossentropy:pb,sparseCategoricalCrossentropy:fb,binaryCrossentropy:mb,kullbackLeiblerDivergence:gb,poisson:function(e,t){return ms((()=>{const n=Gc(Eo(Ag(),t));return ol(qo(t,Fo(e,n)),-1)}))},cosineProximity:yb};function vb(e){if("string"===typeof e){if(e in bb)return bb[e];let t="Unknown loss ".concat(e);throw e.toLowerCase().includes("softmaxcrossentropy")&&(t="Unknown loss ".concat(e,". ")+'Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy'),new Bm(t)}return e}function xb(e,t){return ms((()=>{const n=Fo(.5,bl(t)),a=Rg(Rc(t,n),e.dtype);return ol(ac(e,a),-1)}))}function wb(e,t){return ms((()=>Rg(ac(Yi(e,-1),Yi(t,-1)),"float32")))}function Db(e,t){return ms((()=>Co(wc(Qc(ac(e,1),ac(t,1))),"float32")))}function kb(e,t){return mb(e,t)}function Cb(e,t){return e.rank===t.rank&&(e=yh(e,[e.rank-1])),(t=Yi(t,-1)).dtype!==e.dtype&&(t=Co(t,e.dtype)),Co(ac(e,t),"float32")}const Nb=pb,Sb=fb,Eb={binaryAccuracy:xb,categoricalAccuracy:wb,precision:function(e,t){return ms((()=>{const n=Db(e,t),a=function(e,t){return ms((()=>Co(wc(Qc(ac(e,0),ac(t,1))),"float32")))}(e,t),r=Eo(n,a);return Co(rc(Rc(r,0),To(n,r),0),"float32")}))},categoricalCrossentropy:Nb,sparseCategoricalCrossentropy:Sb,mse:cb,MSE:cb,mae:lb,MAE:lb,mape:hb,MAPE:hb,cosine:yb};function Ib(e){if("string"===typeof e&&e in Eb)return Eb[e];if("string"!==typeof e&&null!=e)return e;throw new Bm("Unknown metric ".concat(e))}function Tb(e){if(Gm(null!==e,"Unknown LossOrMetricFn ".concat(e)),"string"===typeof e)return e;{let t;for(const n of Object.keys(bb))if(bb[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Eb))if(Eb[n]===e){t=n;break}return void 0!==t?t:e.name}}const Fb=1048576;function Ab(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Rb(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>Fb&&console.warn('User-defined metadata of model "'.concat(t,'" is too large in ')+"size (length=".concat(n.length," when serialized). It is not ")+"recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= "+"".concat(Fb,"."))}}function Rb(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!Rb(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Rb(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function _b(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const r=function(e){let t=!0;const n=[],a=[];for(const r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(const r of n){if(r.length>1||1===r.length&&r[0].inboundLayers.length>1){t=!1;break}a.push(...r)}if(t)for(const r of e.layers){let e=!1;for(const n of r.inboundNodes)if(-1!==a.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Input Shape","Output shape","Param #"];let o;if(r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){s.push("Receives inputs"),o=[];for(const t in e.nodesByDepth)o.push(...e.nodesByDepth[t])}a("_".repeat(t)),Ob(s,n,a),a("=".repeat(t));const i=e.layers;for(let l=0;l<i.length;++l)r?Lb(i[l],n,a):Mb(i[l],n,o,a),a((l===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;t=null!=e.collectedTrainableWeights?xy(e.collectedTrainableWeights):xy(e.trainableWeights);return t}(e),c=xy(e.nonTrainableWeights);a("Total params: ".concat(u+c)),a("Trainable params: ".concat(u)),a("Non-trainable params: ".concat(c)),a("_".repeat(t))}function Ob(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,a="";for(let r=0;r<e.length;++r)r>0&&(a=a.slice(0,a.length-1)+" "),a+=e[r],a=a.slice(0,t[r]),a+=" ".repeat(t[r]-a.length);n(a)}function Lb(e,t,n){let a,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(GP){r="multiple"}try{a=JSON.stringify(e.outputShape)}catch(GP){a="multiple"}const s=e.name,o=e.getClassName();Ob(["".concat(s," (").concat(o,")"),r,a,e.countParams().toString()],t,n)}function Mb(e,t,n,a){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(GP){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(GP){r="multiple"}const o=[];for(const l of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(l)))for(let e=0;e<l.inboundLayers.length;++e){const t=l.inboundLayers[e].name,n=l.nodeIndices[e],a=l.tensorIndices[e];o.push("".concat(t,"[").concat(n,"][").concat(a,"]"))}const i=e.name,u=e.getClassName(),c=0===o.length?"":o[0];Ob(["".concat(i," (").concat(u,")"),s,r,e.countParams().toString(),c],t,a);for(let l=1;l<o.length;++l)Ob(["","","","",o[l]],t,a)}function zb(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function Bb(e,t){if(null===e)return null;if("string"===typeof e)return Xm(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];zb(t,r,a)?n.push(a):n.push(Bb(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n];if("name"===n&&"string"===typeof a)t[n]=a;else{const e=Xm(n);t[e]=Bb(a,e)}}return t}}function Pb(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return Km(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];zb(t,r,a)?n.push(a):n.push(Pb(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n],r=Km(n);t[r]="name"!==n&&"className"!==n||"string"!==typeof a?Pb(a,n):a}return t}}const Wb="4.22.0";class Vb extends Fy{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=lg(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],eg(this.inputs).length!==this.inputs.length)throw new Bm("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+"".concat(this.inputs.map((e=>e.name))));eg(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+"".concat(this.outputs.map((e=>e.name)))),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const y of this.inputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;Gm(0===t,"input layer has >1 nodes"),Gm(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const t=this.inputLayers[y];if(!(t instanceof Ry))throw new TypeError("Input layers to a LayersModel must be InputLayer objects. "+"Received inputs: ".concat(e.inputs,". ")+"Input ".concat(y," (0-based) originates ")+"from layer type ".concat(t.getClassName(),"."));this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},a={},r={},s={},o=[],i=(e,t,n,a,r,u)=>{null!=a&&null!=r&&null!=u||(a=e.sourceLayer,r=e.nodeIndex,u=e.tensorIndex);const c=a.inboundNodes[r];if(-1!==n.indexOf(c))throw new zm("The tensor ".concat(e.name,' at layer "').concat(a.name,'" ')+"is part of a cycle.");if(-1!==t.indexOf(c))return;this.containerNodes.add(Vb.nodeKey(a,r)),a.id in s||(s[a.id]=Object.keys(s).length),-1===n.indexOf(c)&&n.push(c);const l=c.inboundLayers.length;for(let s=0;s<l;s++){const e=c.inputTensors[s],a=c.inboundLayers[s],r=c.nodeIndices[s],o=c.tensorIndices[s];i(e,t,n,a,r,o)}for(t.push(c);n.indexOf(c)>=0;)n.splice(n.indexOf(c),1);o.push(c)},u=[],c=[];for(const y of this.outputs)i(y,u,c);const l=o.slice().reverse();for(const y of l){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id];const s=null==a[y.outboundLayer.id]?0:a[y.outboundLayer.id];e=Math.max(e,s),a[y.outboundLayer.id]=e,r[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let a=0;a<y.inboundLayers.length;a++){const r=y.inboundLayers[a],s=y.nodeIndices[a],o=r.inboundNodes[s],i=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(e+1,i),n[o.id]=o}}const h={};for(const y in t){const e=t[y];e in h||(h[e]=[]),h[e].push(n[y])}const d={};for(const y in a){const e=a[y];e in d||(d[e]=[]),d[e].push(r[y])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort($m);this.layers=[];for(const y of p){const e=d[y];e.sort(((e,t)=>{const n=s[e.id],a=s[t.id];return n<a?-1:n>a?1:0}));for(const t of e)t instanceof Vb&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort($m);const f=this.inputs.slice(),m=[];for(const y of p)for(const e of h[y]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new zm("Graph disconnected: cannot obtain value for tensor ".concat(n)+' at layer "'.concat(t.name,'". ')+"The following previous layers were accessed without "+"issue: ".concat(m));for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const y of g){const e=g.filter((e=>e===y)).length;if(1!==e)throw new zm('The name "'.concat(y,'" is used ').concat(e," times ")+"in the model. All layer names should be unique. Layer names: "+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Iy({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error("Container '".concat(this.name,"' is already disposed."))}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Bm("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let a=0;const r=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);r&&this.parseWeights(e);for(const o of this.layers)for(const[e,t]of o.weights.entries()){const s=r?"".concat(t.name.split("/").slice(0,-1).join("/")+"/").concat(e):t.originalName;if(null!=n[s])throw new Bm("Duplicate weight name: ".concat(s));n[s]=t,a++}const s=[];for(const o in e){let a=o;if(null==n[o]){const e=o.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])s.push([n[a],e[o]]);else if(t)throw new Bm("Provided weight data has no target variable: ".concat(o));delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Bm("".concat(e.length," of ").concat(a," weights are not set: ")+"".concat(e))}Cy(s)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),a=["vars","layer_checkpoint_dependencies"],r=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!a.includes(e))).join("/");r!==t&&(e[r]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers ".concat(Wb),t.backend="TensorFlow.js",t}toJSON(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=Pb(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return ms((()=>{e=qm(e);const n=new _y;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return My(this.outputs,n,t)}))}computeMask(e,t){return ms((()=>{let n;return e=qm(e),n=null==t?Um(null,e.length):qm(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=yy(e);if(t.length!==this.inputLayers.length)throw new Bm("Invalid inputShape argument ".concat(e,": ")+"model has ".concat(this.inputLayers.length," tensor inputs."));const n={};for(let o=0;o<t.length;o++){const e=this.inputLayers[o],a=t[o];n[e.name+"_0_0"]=a}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort($m);if(a.length>1)for(const o of a){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const a=[];for(let o=0;o<t.inboundLayers.length;o++){const e=t.inboundLayers[o],r=t.nodeIndices[o],s=t.tensorIndices[o],i=n["".concat(e.name,"_").concat(r,"_").concat(s)];a.push(i)}const r=yy(e.computeOutputShape(jm(a))),s=e.inboundNodes.indexOf(t);for(let t=0;t<r.length;t++){n["".concat(e.name,"_").concat(s,"_").concat(t)]=r[t]}}}const r=[],s=[];for(let o=0;o<this.outputLayers.length;o++){const e=this.outputLayers[o],t=this.outputLayersNodeIndices[o],n=this.outputLayersTensorIndices[o],a="".concat(e.name,"_").concat(t,"_").concat(n);s.push(a)}for(let o=0;o<s.length;o++){const e=s[o];Gm(e in n),r.push(n[e])}return jm(r)}runInternalGraph(e,t){null==t&&(t=Um(null,e.length));const n={};for(let i=0;i<this.inputs.length;++i){const a=this.inputs[i],r=e[i],s=t[i];n[a.id]=[r,s]}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort($m);for(const i of a){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer,a=t.inputTensors,r=t.outputTensors,s=new Array;for(const t of a)t.id in n&&s.push(n[t.id]);if(s.length===a.length){let a,o,i,u,c={};if(null!=t.callArgs&&(c=t.callArgs),1===s.length){const[t,n]=s[0];null==c.mask&&(c.mask=n),i=qm(e.call(t,c)),u=qm(e.computeMask(t,n)),a=[t],o=[n]}else a=s.map((e=>e[0])),o=s.map((e=>e[1])),null==c.mask&&(c.mask=o),i=qm(e.call(a,c)),u=qm(e.computeMask(a,o));if(e.activityRegularizer)throw new Pm("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],a=i[e],s=u[e];n[t.id]=[a,s]}}}}const r=[],s=[],o=[];for(const i of this.outputs){Gm(i.id in n,"Could not compute output ".concat(i.name," : ").concat(i.id));const[e,t]=n[i.id];o.push(e.shape),r.push(e),s.push(t)}return[r,s,o]}buildNodeConversionMap(e){const t={};let n;for(const a of this.layers){n=a instanceof Vb?1:0;for(let e=0;e<a.inboundNodes.length;e++){const r=Vb.nodeKey(a,e);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new Bm("Provide either a layer name or layer index");if("number"===typeof e)return this.findLayer(e);for(const n of this.layers)if(n.name===e)return n;throw new Bm("No such layer: ".concat(e))}findLayer(e){if(this.layers.length<=e)throw new Bm("Was asked to retrieve layer at index ".concat(e,", but model only ")+"has ".concat(this.layers.length," layer(s)."));return this.layers[e]}calculateLosses(){return ms((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const a=Vb.nodeKey(t,n);this.containerNodes.has(a)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const s of this.layers){const e=s.getClassName(),a=s.getConfig(),r=[];for(let n=0;n<s.inboundNodes.length;n++){const e=s.inboundNodes[n],a=Vb.nodeKey(s,n);let o={};if(this.containerNodes.has(a)){if(e.callArgs)try{JSON.stringify(e.callArgs),o=e.callArgs}catch(GP){console.warn("Layer ".concat(s.name," was passed ")+"non-serializable keyword arguments: "+"".concat(e.callArgs,". They will not be included ")+"in the serialized model (and thus will be missing at deserialization time)."),o={}}if(e.inboundLayers.length>0){const n=[];for(let a=0;a<e.inboundLayers.length;a++){const r=e.inboundLayers[a],s=e.nodeIndices[a],i=e.tensorIndices[a];let u=t[Vb.nodeKey(r,s)];null==u&&(u=0),n.push([r.name,u,i,o])}r.push(n)}}}const o={};o.name=s.name,o.className=e,o.config=a,o.inboundNodes=r,n.push(o)}e.layers=n;const a=[];for(let s=0;s<this.inputLayers.length;s++){const e=this.inputLayers[s],n=this.inputLayersNodeIndices[s],r=Vb.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let o=t[r];null!==o&&void 0!==o||(o=0);const i=this.inputLayersTensorIndices[s];a.push([e.name,o,i])}e.inputLayers=a;const r=[];for(let s=0;s<this.outputLayers.length;s++){const e=this.outputLayers[s],n=this.outputLayersNodeIndices[s],a=Vb.nodeKey(e,n);if(!this.containerNodes.has(a))continue;let o=t[a];null!==o&&void 0!==o||(o=0);const i=this.outputLayersTensorIndices[s];r.push([e.name,o,i])}return e.outputLayers=r,e}static fromConfig(e,t){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a={},r={};function s(e,t){e.name in r?r[e.name].push(t):r[e.name]=[t]}function o(e,t){const n=[];let r;for(const o of t){const i=o[0],u=o[1],c=o[2];if(r=null==o[3]?{}:o[3],!(i in a))return void s(e,t);const l=a[i];if(l.inboundNodes.length<=u)return void s(e,t);const h=l.inboundNodes[u];n.push(h.outputTensors[c])}n.length>0&&e.apply(jm(n),r)}function i(e){const r=e.name,o=ib(e,null!=t.customObjects?t.customObjects:{});o.setFastWeightInitDuringBuild(n),a[r]=o;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Bm("Corrupted configuration, expected array for nodeData: ".concat(e));s(o,e)}))}const u=t.name,c=t.layers;for(const f of c)i(f);for(;!tg(r);)for(const e of c){const t=a[e.name];if(t.name in r){const e=r[t.name];delete r[t.name];for(const n of e)o(t,n)}}const l=[],h=[],d=t.inputLayers;for(const f of d){const e=f[0],t=f[1],n=f[2];Gm(e in a);const r=a[e].inboundNodes[t].outputTensors;l.push(r[n])}const p=t.outputLayers;for(const f of p){const e=f[0],t=f[1],n=f[2];Gm(e in a);const r=a[e].inboundNodes[t].outputTensors;h.push(r[n])}return new e({inputs:l,outputs:h,name:u})}get stateful(){if(this._stateful)throw new Bm("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){ms((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Ub(e,t,n){const a=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===a)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==a)throw new Error("Provided ".concat(n," is an array of ").concat(e.length," ")+"element(s), but the model has ".concat(a," outputs. ")+"Make sure a set of weights is provided for each model output.");return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error("The model has multiple (".concat(a,") outputs, ")+"so ".concat(n," must be either an array with ")+"".concat(a," elements or an object with ").concat(t," keys. ")+"Provided ".concat(n," not understood: ").concat(JSON.stringify(e)))}function Gb(e,t){return Ub(e,t,"classWeight")}async function Hb(e,t,n,a){if(null!=t||null!=a)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=ms((()=>{if(1===e.shape.length)return No(e);if(2===e.shape.length){if(e.shape[1]>1){return Yi(e,1)}if(1===e.shape[1])return yu(e,[e.shape[0]]);throw new Error("Encountered unexpected last-dimension size (".concat(e.shape[1],") ")+"during handling of class weights. The size is expected to be >= 1.")}throw new Error("Unexpected rank of target (y) tensor (".concat(e.rank,") during ")+"handling of class weights. The rank is expected to be 1 or 2.")})),a=Array.from(await t.data());gs(t);const r=[];return a.forEach((e=>{if(null==n[e])throw new Error("classWeight must contain all classes in the training data. "+"The class ".concat(e," exists in the data but not in ")+"classWeight");r.push(n[e])})),Dh(r,"float32")}return null}function jb(e,t){return Fo(e,t)}function qb(e,t){let n,a;const r=t;n=r.xs,a=r.ys,V(null!=n&&null!=a,(()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+"".concat(t)));const s=Kb("input",e.inputNames,n),o=Kb("output",e.outputNames,a),i=s[0].shape[0];V(s.length===e.inputs.length,(()=>"LayersModel has ".concat(e.inputs.length," inputs, but the dataset ")+"provides ".concat(s.length," inputs.  (Expected input keys: ")+"".concat(JSON.stringify(e.inputNames),")"))),V(o.length===e.outputs.length,(()=>"LayersModel has ".concat(e.outputs.length," outputs, but the dataset ")+"provides ".concat(o.length," outputs.  (Expected output keys: ")+"".concat(JSON.stringify(e.outputNames),")")));for(let u=0;u<s.length;u++)V(s[u].shape[0]===i,(()=>"Batch size mismatch: input "+"".concat(e.inputNames[u]," has ").concat(s[u].shape[0],"; ")+"expected  ".concat(i," based on input ").concat(e.inputNames[0],".")));for(let u=0;u<o.length;u++)V(o[u].shape[0]===i,(()=>"Batch size mismatch: output "+"".concat(e.outputNames[u]," has ").concat(o[u].shape[0],"; ")+"expected  ".concat(i," based on input ").concat(e.inputNames[0],".")));return{xs:s,ys:o}}function Kb(e,t,n){if(n instanceof Ir)return[n];if(Array.isArray(n))return V(n.length===t.length,(()=>"Received an array of ".concat(n.length," Tensors, but expected ").concat(t.length," to match the ").concat(e," keys ").concat(t,"."))),n;{const a=[];for(const r of t){if(null==n[r])throw new Bm("The feature data generated by the dataset lacks the required "+"".concat(e," key '").concat(r,"'."));a.push(n[r])}return a}}async function Xb(e,t,n){const a=null!=n.batchesPerEpoch;if(V(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),V(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),V(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>"For fitDataset(), config.epochs is expected to be a positive "+"integer, but got ".concat(n.epochs))),V(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>"For fitDataset(), config.batchesPerEpoch is expected to be a "+"positive integer if specified, but got ".concat(n.batchesPerEpoch))),V(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let s,o;if(r)if(Yb(n.validationData))V(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, "+"but got ".concat(n.validationBatches)));else{const e=function(e){if(3===e.length)throw new Pm("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,o=e.ys}const i=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let c;c=r?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const l=rb(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=ob(l,h,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,r,c);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const c={};await d.onEpochBegin(f);let l=0,h=0;for(a||(m=await t.iterator());!a||l<n.batchesPerEpoch;){const t=await m.next();if(a&&t.done){console.warn("You provided `batchesPerEpoch` as "+"".concat(n.batchesPerEpoch,", ")+"but your dataset iterator ran out of data after "+"".concat(l," batches; ")+"interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+"".concat(n.batchesPerEpoch*n.epochs," batches). ")+"You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:a,ys:r}=qb(e,t.value),s={};s.batch=h,s.size=a[0].shape[0],await d.onBatchBegin(h,s);const o=[];if(null!=n.classWeight){const t=Gb(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)o.push(await Hb(r[e],null,t[e]))}const c=a.concat(r).concat(o),p=i(c);gs(c);for(let e=0;e<u.length;++e){const t=u[e],n=p[e];s[t]=n,ys(n)}await d.onBatchEnd(h,s),Zy(s),h++,l++}if(a?l>=n.batchesPerEpoch:t.done){if(r){let t;t=Yb(n.validationData)?qm(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):qm(e.evaluate(s,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)c["val_".concat(e.metricsNames[n])]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,c),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function Yb(e){return"function"===typeof e.iterator}function Qb(e){V(e>0&&Number.isInteger(e),(()=>"batchSize is required to be a positive integer, but got ".concat(e)))}function Zb(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Og(e,t,n-t))):Og(e,t,n-t)}function Jb(e,t){return ms((()=>null==e?null:Array.isArray(e)?e.map((e=>Jb(e,t))):Ug(e,"int32"===t.dtype?t:Co(t,"int32"))))}function $b(e,t){const n=[];let a=0,r=null;for(;a<e;)r=a+t,r>=e&&(r=e),n.push([a,r]),a=r;return n}function ev(e){const t=[];e instanceof Ir&&(e=[e]);for(let n=0;n<e.length;++n){const a=e[n];if(1===a.rank)t.push(_g(a,1));else{if(0===a.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(a)}}return t}function tv(e,t){if(null==e)return;const n=[];if(t instanceof Ir)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const r in t){const e=t[r];n.push(e.id)}const a=[];if(e instanceof Ir)-1===n.indexOf(e.id)&&a.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&a.push(e)}));else if(null!=e)for(const r in e){const t=e[r];-1===n.indexOf(t.id)&&a.push(t)}a.forEach((e=>{e.isDisposed||e.dispose()}))}function nv(e){return Array.isArray(e)}function av(e){return!function(e){return e instanceof Ir}(e)&&!nv(e)}function rv(e,t,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==t||0===t.length){if(null!=e){let t=!1;if(nv(e)&&e.length>0)t=!0;else if(av(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Bm("Error when checking model ".concat(s," expected no data, ")+"but got ".concat(e))}return[]}if(null==e)return t.map((e=>null));if(av(e)){a=[];for(const n of t){if(null==e[n])throw new Bm('No data provided for "'.concat(n,'". Need data for each key in: ')+"".concat(t));a.push(e[n])}}else if(nv(e)){if(e.length!==t.length)throw new Bm("Error when checking model ".concat(s,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"model expected. Expected to see ".concat(t.length," Tensor(s), but ")+"instead got the following list of Tensor(s): ".concat(e));a=e}else{if(t.length>1)throw new Bm("The model ".concat(s," expects ").concat(t.length," Tensor(s), ")+"but only received one Tensor. Found: Tensor with shape ".concat(e.shape));a=[e]}if(a=ev(a),null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=a[o];if(e.shape.length!==n[o].length)throw new Bm("Error when checking ".concat(s,": expected ").concat(t[o]," ")+"to have ".concat(n[o].length," dimension(s). but got array with ")+"shape ".concat(e.shape));for(let t=0;t<n[o].length;++t){if(0===t&&!r)continue;const a=e.shape[t],i=n[o][t];if(null!=i&&i>=0&&a!==i)throw new Bm("".concat(s," expected a batch of elements where each ")+"example has shape [".concat(n[o].slice(1,n[o].length),"] ")+"(i.e.,tensor shape [*,".concat(n[o].slice(1,n[o].length),"])")+" but the ".concat(s," received an input with ").concat(e.shape[0])+" examples, each with shape [".concat(e.shape.slice(1,e.shape.length),"]")+" (tensor shape [".concat(e.shape,"])"))}}return a}function sv(e,t,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(e)){if(e.length!==t.length)throw new Bm("Error when checking model ".concat(s,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"the model expected. Expected to see ".concat(t.length," Tensor(s),")+" but instead got ".concat(e.length," Tensors(s)."));a=e}else{if(t.length>1)throw new Bm("The model expects ".concat(t.length," ").concat(s," Tensors, ")+"but only received one Tensor. Found: array with shape "+"".concat(JSON.stringify(e.shape),"."));a=[e]}if(null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=a[o];if(e.shape.length!==n[o].length)throw new Bm("Error when checking ".concat(s,": expected ").concat(t[o]," ")+"to have ".concat(n[o].length," dimension(s), but got array with ")+"shape ".concat(JSON.stringify(e.shape)));for(let a=0;a<n[o].length;++a){if(0===a&&!r)continue;const i=e.shape[a],u=n[o][a];if(null!=u&&u!==i)throw new Bm("Error when checking ".concat(s,": expected ")+"".concat(t[o]," to have shape ").concat(JSON.stringify(n[o])," but ")+"got array with shape ".concat(JSON.stringify(e.shape),"."))}}}class ov extends Vb{constructor(e){super(e),this.isTraining=!1}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new Bm("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");_b(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>lp.adagrad(.01),Adadelta:()=>lp.adadelta(1,.95,Ag()),Adam:()=>lp.adam(.001,.9,.999,Ag()),Adamax:()=>lp.adamax(.002,.9,.999,Ag(),0),RMSProp:()=>lp.rmsprop(.001,.9,0,Ag()),SGD:()=>lp.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Bm("Unknown Optimizer ".concat(e))}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Vo))throw new Bm("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Bm("When passing an Array as loss, it should have one entry per "+"model output. The model has ".concat(this.outputs.length," output(s), ")+"but you passed loss=".concat(e.loss,"."));const n=e.loss;t=n.map((e=>vb(e)))}else{const n=vb(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Bm('Unknown entry in loss dictionary: "'.concat(t,'". ')+"Only expected the following keys: ".concat(this.outputNames));for(const n of this.outputNames)null==e.loss[n]&&console.warn('Output "'.concat(n,'" is missing from loss dictionary. We assume ')+"this was done on purpose, and we will not be expecting data "+"to be passed to ".concat(n," during training")),t.push(vb(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){const e=this.internalOutputShapes[s],t=this.outputNames[s];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[s])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],wg("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const a=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError("Type of metrics argument not understood. Expected an string,"+"function, Array, or Object, found: ".concat(e));n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const a of t){let t=n.hasOwnProperty(a)?n[a]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};wg("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,a,s;for(const o of t){if("string"===typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===mb?-1!==["accuracy","acc"].indexOf(o)?a=xb:-1!==["crossentropy","ce"].indexOf(o)&&(a=kb):this.lossFunctions[e]===fb?-1!==["accuracy","acc"].indexOf(o)?a=Cb:-1!==["crossentropy","ce"].indexOf(o)&&(a=Sb):-1!==["accuracy","acc"].indexOf(o)?a=wb:-1!==["crossentropy","ce"].indexOf(o)&&(a=Nb),-1!==["accuracy","acc"].indexOf(o)?r="acc":-1!==["crossentropy","ce"].indexOf(o)&&(r="ce"),s=a,n=""+r}else{const e=Ib(o);s=e,n=""+Tb(o)}let t;wg(n,(()=>{t=s})),r(e,n,t)}})(a[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=null==n.batchSize?32:n.batchSize;Qb(a);const r=this.standardizeUserDataXY(e,t,!0,a);try{const e=r[0].concat(r[1]);this.makeTestFunction();const t=this.testFunction;return jm(this.testLoop(t,e,a,n.verbose,n.steps))}finally{tv(r[0],e),tv(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const a=null!=(n=n||{}).batches,r=e.testFunction;let s=[];if(n.verbose>0)throw new Pm("Verbose mode is not implemented yet.");V(!a||n.batches>0&&Number.isInteger(n.batches),(()=>"Test loop expects `batches` to be a positive integer, but "+"received ".concat(JSON.stringify(n.batches))));const o="function"===typeof t.next?t:await t.iterator();let i=0,u=0;for(;!a||u<n.batches;){const t=await o.next();if(s=ms((()=>{if(t.value){const{xs:n,ys:a}=qb(e,t.value),o=n.concat(a),c=ms((()=>r(o)));if(gs(o),0===u)for(let e=0;e<c.length;++e)s.push(Lo(0));const l=o[0].shape[0];for(let e=0;e<c.length;++e){const t=c[e],n=s[e];s[e]=ms((()=>Eo(s[e],Fo(l,t)))),u>0&&gs(n)}gs(c),i+=l,++u}return s})),t.done){a&&console.warn("Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least `batches` "+"batches (in this case, ".concat(n.batches," batches). ")+"You may need to use the repeat() function when building your dataset.");break}}for(let c=0;c<s.length;++c){const e=s[c];s[c]=To(s[c],i),gs(e)}return jm(s)}(this,e,t)}checkNumSamples(e,t,n){let a,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(a=null,null!=t)throw new Bm("If ".concat(r," is set, batchSize must be null or undefined.")+"Got batchSize = ".concat(t))}else{if(null==e)throw new Bm("Either the input data should have a defined shape, or "+"".concat(r," shoud be specified."));a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Bm("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),a=n?t:[t],r=this.retrieveSymbolicTensors(a),s=new _y;if(e instanceof Ir&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Bm("The number of inputs provided (".concat(e.length,") ")+"does not match the number of inputs of this model "+"(".concat(this.inputs.length,")."));for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const i of this.inputs){const t=e[i.name];if(null==t)throw new Bm("No value is provided for the model's input ".concat(i.name));s.add(i,t)}const o=My(r,s);return n?o:o[0]}retrieveSymbolicTensors(e){const t=Um(null,e.length);let n=e.length;for(const a of this.layers){const r=Array.isArray(a.output)?a.output:[a.output],s=r.map((e=>e.name));for(let a=0;a<e.length;++a){const o=s.indexOf(e[a]);if(-1!==o&&(t[a]=r[o],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,a)=>{null==t&&n.push(e[a])})),new Bm("Cannot find SymbolicTensors for output name(s): "+"".concat(JSON.stringify(n)))}return t}predictLoop(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return ms((()=>{const a=this.checkNumSamples(e);if(n)throw new Pm("Verbose predictLoop() is not implemented yet.");const r=$b(a,t),s=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t){ms((()=>{const n=r[t][0],a=r[t][1],s=Zb(e,n,a),o=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)o.push({key:this.inputs[e],value:s[e]});else o.push({key:this.inputs[0],value:s});const i=new _y(o);return My(this.outputs,i)})).forEach(((e,t)=>s[t].push(e)))}return jm(s.map((e=>xu(e,0))))}))}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=ev(e);sv(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return Qb(e),this.predictLoop(n,e)}finally{tv(n,e)}}predictOnBatch(e){sv(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new zm("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let r=0;r<this.feedOutputShapes.length;++r){const e=this.feedOutputShapes[r];this.feedLossFns[r]===fb?a.push(e.slice(0,e.length-1).concat([1])):a.push(e)}if(function(e,t){const n=eg(e.map((e=>e.shape[0])));n.sort();const a=eg(t.map((e=>e.shape[0])));if(a.sort(),n.length>1)throw new Bm("All input Tensors (x) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(e.map((e=>e.shape)))));if(a.length>1)throw new Bm("All target Tensors (y) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(t.map((e=>e.shape)))));if(n.length>0&&a.length>0&&!j(n,a))throw new Bm("Input Tensors should have the same number of samples as target "+"Tensors. Found ".concat(n[0]," input sample(s) and ").concat(a[0]," target ")+"sample(s).")}(e=rv(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=rv(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const a=[cb,mb,pb];for(let r=0;r<e.length;++r){const s=e[r],o=t[r],i=n[r];if(null!=o){if(o===pb&&1===s.shape[s.shape.length-1])throw new Bm("You are passing a target array of shape ".concat(s.shape," while using ")+"a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].");if(-1!==a.indexOf(o)){const e=s.shape.slice(1),t=i.slice(1);for(let n=0;n<e.length;++n){const a=e[n],r=t[n];if(null!=r&&a!==r)throw new Bm("A target Tensor with shape ".concat(s.shape," was passed for an ")+"output of shape ".concat(i,", while using a loss function that ")+"expects targets to have the same shape as the output.")}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&e[0].shape[0]%n!==0)throw new Bm("In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size "+"".concat(n,". Found: ").concat(e[0].shape[0]," sample(s)."));return[e,t]}async standardizeUserData(e,t,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=arguments.length>5?arguments[5]:void 0;const[o,i]=this.standardizeUserDataXY(e,t,r,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=a){const e=Gb(a,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await Hb(i[t],null,e[t]))}return[o,i,u]}testLoop(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4?arguments[4]:void 0;return ms((()=>{const s=this.checkNumSamples(t,n,r,"steps"),o=[];if(a>0)throw new Pm("Verbose mode is not implemented yet.");if(null!=r)throw new Pm("steps mode in testLoop() is not implemented yet");{const a=$b(s,n),r=Dh(Tg(0,s));for(let n=0;n<a.length;++n){const s=a[n][0],i=a[n][1],u=Og(r,s,i-s),c=Jb(t,u),l=e(c);if(0===n)for(let e=0;e<l.length;++e)o.push(Lo(0));for(let e=0;e<l.length;++e){const t=l[e];o[e]=Eo(o[e],Fo(i-s,t))}}for(let e=0;e<o.length;++e)o[e]=To(o[e],s)}return o}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const a=e[n];let r=a;if(Hm(e,a)>1){const t=Hm(e.slice(0,n),a);r+="_".concat(t)}t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],o=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const o=new _y(e),i=My(this.outputs,o,{training:!0});let u;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(a[n],i[n]);null!=r[n]&&(e=jb(e,r[n]));const s=ol(e);t.push(s),u=0===n?e:Eo(u,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],r=this.metricsTensors[n][1];e=ol(t(a[r],i[r]))}ys(e),s.push(e)}return u=ol(u),this.calculateLosses().forEach((e=>{u=Eo(u,e)})),u}),!0,o)].concat(s)}}makeTestFunction(){this.testFunction=e=>ms((()=>{const t=[];let n;const a=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:a[e]});const o=new _y(s),i=My(this.outputs,o);for(let e=0;e<this.lossFunctions.length;++e){const a=this.lossFunctions[e],s=ol(a(r[e],i[e]));n=0===e?s:Eo(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],a=this.metricsTensors[e][1],s=ol(n(r[a],i[a]));t.push(s)}return t}))}async fit(e,t){let n,a,r,s,o,i,u,c,l,h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{const d=null==h.batchSize?32:h.batchSize;Qb(d);const p=!1,f=await this.standardizeUserData(e,t,h.sampleWeight,h.classWeight,p,d);n=f[0],a=f[1],l=f[2];let m,g=!1;if(null!=h.validationData&&h.validationData.length>0){if(g=!0,2!==h.validationData.length)throw 3===h.validationData.length?new Pm("validationData including sample weights is not supported yet."):new Bm("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+"".concat(h.validationData," is invalid."));o=h.validationData[0],i=h.validationData[1];const e=!0,t=await this.standardizeUserData(o,i,null,null,e,d);u=t[0],c=t[1],m=u.concat(c)}else if(null!=h.validationSplit&&h.validationSplit>0&&h.validationSplit<1){g=!0;const e=Math.floor(n[0].shape[0]*(1-h.validationSplit)),t=n[0].shape[0];u=Zb(n,e,t),r=n,n=Zb(n,0,e),c=Zb(a,e,t),s=a,a=Zb(a,0,e),m=u.concat(c)}else null!=h.validationSteps&&(g=!0);const y=n.concat(a).concat(l);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),v=this.getDedupedMetricsNames();let x,w;g?(this.makeTestFunction(),x=this.testFunction,w=v.slice().concat(v.map((e=>"val_"+e)))):(x=null,m=[],w=v.slice());const D=rb(h.callbacks,h.yieldEvery);return await this.fitLoop(b,y,v,d,h.epochs,h.verbose,D,x,m,h.shuffle,w,h.initialEpoch,null,null)}finally{this.isTraining=!1,tv(n,e),tv(a,t),tv(r,e),tv(s,t),tv(u,o),tv(c,i),null!=l&&gs(l)}}async fitLoop(e,t,n,a,r,s,o,i,u,c,l,h,d,p){null==a&&(a=32),null==r&&(r=1),null==c&&(c=!0),null==h&&(h=0);let f=!1;if(null!=i&&null!=u&&(f=!0),null!=p&&(f=!0,null==d))throw new Bm("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,a,d,"steps_per_epoch");let g;null!=m&&(g=Tg(0,m)),null==s&&(s=1);const{callbackList:y,history:b}=ob(o,s,r,h,m,d,a,f,l);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let v=h;v<r;++v){await y.onEpochBegin(v);const r={};if(null!=d)throw new Pm("stepsPerEpoch mode is not implemented yet.");{if("batch"===c)throw new Pm("batch shuffling is not implemneted yet");c&&z(g);const s=Dh(g),o=$b(m,a);for(let c=0;c<o.length;++c){const l={};if(await y.onBatchBegin(c,l),ms((()=>{const h=o[c][0],d=o[c][1],p=Og(s,h,d-h);l.batch=c,l.size=d-h;const m=Jb(t,p),g=e(m);for(let e=0;e<n.length;++e){const t=n[e],a=g[e];l[t]=a,ys(a)}if(c===o.length-1&&f){const e=this.testLoop(i,u,a);for(let t=0;t<n.length;++t){const a=n[t],s=e[t];ys(s),r["val_"+a]=s}}})),await y.onBatchEnd(c,l),Zy(l),this.stopTraining_)break}s.dispose()}if(await y.onEpochEnd(v,r),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return Xb(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),a=n[0],r=n[1],s=this.makeTrainFunction()(a.concat(r)),o=[];for(const i of s){const e=await i.data();o.push(e[0])}return gs(s),tv(n[0],e),tv(n[1],t),jm(o)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,a=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let s=0;s<a.length;++s)n&&!a[s].trainable||t.push({name:a[s].originalName,tensor:r[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=fs().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-fs().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=Km(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Km(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const a of t){if("string"!==typeof n[a])throw new Error("Serialization of non-string loss is not supported.");e[a]=Km(n[a])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[Km(Tb(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Km(Tb(e))));{const e={};for(const t in this.metrics)e[t]=Km(Tb(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=ib(Bb(e.optimizer_config));let n,a;if("string"===typeof e.loss)n=Xm(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Xm(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Xm(e.loss[t])}if(Array.isArray(e.metrics))a=e.metrics.map((e=>Xm(e)));else if(null!=e.metrics){a={};for(const t in e.metrics)a[t]=Xm(e.metrics[t])}this.compile({loss:n,metrics:a,optimizer:t})}async save(e,t){if("string"===typeof e){const t=Vs(e);if(0===t.length)throw new Bm("Cannot find any save handlers for URL '".concat(e,"'"));if(t.length>1)throw new Bm("Found more than one (".concat(t.length,") save handlers for ")+"URL '".concat(e,"'"));e=t[0]}if(null==e.save)throw new Bm("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await ws(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v".concat(Wb),convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:r}=await ws(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=As([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Ab(this.userDefinedMetadata,this.name,e),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=n.data,a.weightSpecs=n.specs,e.save(a)}setUserDefinedMetadata(e){Ab(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}ov.className="Model",Wo(ov);class iv extends ov{}iv.className="Functional",Wo(iv);class uv extends ov{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:lg("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Bm("Negative dimension size caused by adding layer "+"".concat(e.name," with input shape [")+"".concat(e.inboundNodes[0].inputTensors[0].shape,"]"))}add(e){const t=e instanceof uv||e instanceof ov;let n;if(t){if(n=e,1!==n.outputs.length)throw new Bm("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Bm("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Bm("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Bm("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Ry({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Bm("A layer added to a Sequential model must not already be "+"connected somewhere else. LayersModel received layer ".concat(e.name," ")+"which has ".concat(e.inboundNodes.length," pre-existing inbound ")+"connections.");if(1!==e.inboundNodes[0].outputTensors.length)throw new Bm("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Ay(this.outputs[0])}this.inboundNodes=[],new Iy({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Um(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(vy(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new ov({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new zm("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new zm("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new zm("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new zm("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t){let n,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Bm("Legacy serialization format not supported yet.");n=t}else V(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),n=t.layers,delete t.layers,r=t;const s=new e(r);if(!(s instanceof uv))throw new Pm("Sequential.fromConfig called on non-Sequential input: ".concat(s));for(const o of n){const e=ib(o,void 0,a);a&&e.setFastWeightInitDuringBuild(!0),s.add(e)}return s}set stopTraining(e){if(null==this.model)throw new Bm("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Bm("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}uv.className="Sequential",Wo(uv);class cv extends Bo{getConfig(){return{}}}class lv extends cv{apply(e){return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==t)throw new Pm("Support for alpha values other than 1 (".concat(t,") is not implemented ")+"yet.");return uc(e)}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}}lv.className="elu",Wo(lv);class hv extends cv{apply(e){return eh(e)}}hv.className="selu",Wo(hv);class dv extends cv{apply(e){return jl(e)}}dv.className="relu",Wo(dv);class pv extends cv{apply(e){return ms((()=>ll(6,jl(e))))}}pv.className="relu6",Wo(pv);class fv extends cv{apply(e){return e}}fv.className="linear",Wo(fv);class mv extends cv{apply(e){return Du(e)}}mv.className="sigmoid",Wo(mv);class gv extends cv{apply(e){return function(e){return ms((()=>{const t=Eo(.5,Fo(.2,e));return Mu(t,0,1)}))}(e)}}gv.className="hardSigmoid",Wo(gv);class yv extends cv{apply(e){return qc(e)}}yv.className="softplus",Wo(yv);class bv extends cv{apply(e){return function(e){return ms((()=>To(e,Eo(Xo(e),1))))}(e)}}bv.className="softsign",Wo(bv);class vv extends cv{apply(e){return Cu(e)}}vv.className="tanh",Wo(vv);class xv extends cv{apply(e){return lh(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}}xv.className="softmax",Wo(xv);class wv extends cv{apply(e){return Xc(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}}wv.className="logSoftmax",Wo(wv);class Dv extends cv{apply(e){return ms((()=>ms((()=>{const t=Math.sqrt(2),n=Fo(.5,Eo(1,lc(To(e,t))));return Fo(e,n)}))))}}Dv.className="gelu",Wo(Dv);class kv extends cv{apply(e){return ms((()=>Fo(.5,Fo(e,Eo(1,Cu(Fo(Ao(To(2,Math.PI)),Eo(e,Fo(.044715,jo(e,3))))))))))}}kv.className="gelu_new",Wo(kv);class Cv extends cv{apply(e){return ms((()=>Fo(e,Cu(qc(e)))))}}Cv.className="mish",Wo(Cv);class Nv extends cv{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return ms((()=>Fo(Du(Fo(e,t)),e)))}}function Sv(e){return e.getClassName()}function Ev(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Jm(e,Po.getMap().classNameMap,t,"activation")}function Iv(e){if(null==e){const e={className:"linear",config:{}};return Ev(e)}if("string"===typeof e){const t={};return t.className=e,t.config={},Ev(t)}return e instanceof cv?e:Ev(e)}function Tv(e){if(null!=e&&"object"!==typeof e)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an "+"object, but received: ".concat(e))}Nv.className="swish",Wo(Nv);class Fv extends Bo{}class Av extends Fv{constructor(e){super(),Tv(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return ms((()=>{let t=il([1]);return this.hasL1&&(t=Eo(t,wc(Fo(this.l1,Xo(e))))),this.hasL2&&(t=Eo(t,wc(Fo(this.l2,Gg(e))))),yu(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Av.className="L1L2",Wo(Av);const Rv={l1l2:"L1L2"};function _v(e){return Qm(e)}function Ov(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Jm(e,Po.getMap().classNameMap,t,"regularizer")}function Lv(e){if(null==e)return null;if("string"===typeof e){return Ov({className:e in Rv?Rv[e]:e,config:{}})}return e instanceof Fv?e:Ov(e)}class Mv extends Fy{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=by(e);let n=jl(e);return null!=this.maxValue&&(n=Mu(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Mv.className="ReLU",Wo(Mv);class zv extends Fy{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=by(e);return Bc(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}zv.className="LeakyReLU",Wo(zv);class Bv extends Fy{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=my(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Lv(e.alphaRegularizer),this.alphaConstraint=Yy(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new Bm("Expected sharedAxes to be a number or an array of numbers, "+"but got ".concat(e.sharedAxes));this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=vy(e)).slice(1);if(null!=this.sharedAxes)for(const a of this.sharedAxes)t[a-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let a=1;a<e.length;++a)n[a]=e[a];this.inputSpec=[new Ny({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=by(e),El(e,this.alpha.read())}getConfig(){const e={alphaInitializer:fy(this.alphaInitializer),alphaRegularizer:_v(this.alphaRegularizer),alphaConstraint:Ky(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Bv.className="PReLU",Wo(Bv);class Pv extends Fy{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Pm("Non-default alpha value (".concat(e.alpha,") is not supported by the ")+"ELU layer yet.");this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=by(e);return uc(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Pv.className="ELU",Wo(Pv);class Wv extends Fy{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=by(e);return Fo(n,Co(Rc(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Wv.className="ThresholdedReLU",Wo(Wv);class Vv extends Fy{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new xv).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return ms((()=>{let n=by(e);const a=t.mask;if(null!=a){const e=Fo(qo(ul(n.shape),Co(a,n.dtype)),Lo(-1e9));n=Eo(n,e)}return this.axis instanceof Array?this.axis.length>1?Nc(qo(n,Yc(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Uv(e,t,n){if("number"===typeof e)return Um(e,t);if(e.length!==t)throw new Bm("The ".concat(n," argument must be an integer or tuple of ").concat(t," integers.")+" Received: ".concat(e.length," elements."));for(let r=0;r<t;++r){const s=e[r];if((a=s)!==parseInt(a.toString(),10))throw new Bm("The ".concat(n," argument must be an integer or tuple of ").concat(t)+" integers. Received: ".concat(JSON.stringify(e)," including a")+" non-integer number ".concat(s))}return e;var a}function Gv(e,t,n,a){if(null==e)return e;let r;return r="same"===n?e:e-(t+(t-1)*((arguments.length>4&&void 0!==arguments[4]?arguments[4]:1)-1))+1,Math.floor((r+a-1)/a)}function Hv(e,t,n,a){if(null==e)return null;if("valid"===a)e=e*t+Ig([n-t,0]);else{if("same"!==a)throw new Bm("Unsupport padding mode: ".concat(a,"."));e*=t}return e}function jv(e,t){return ms((()=>(yg(t),"channelsFirst"===t?Vh(e,[0,2,3,1]):e)))}function qv(e,t){return ms((()=>(yg(t),"channelsFirst"===t?Vh(e,[0,2,3,4,1]):e)))}function Kv(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return ms((()=>{if(null==s&&(s="channelsLast"),yg(s),3!==e.shape.length)throw new Bm("The input of a conv1dWithBias operation should be 3, but is "+"".concat(e.shape.length," instead."));if(3!==t.shape.length)throw new Bm("The kernel for a conv1dWithBias operation should be 3, but is "+"".concat(t.shape.length," instead"));if(null!=n&&1!==n.shape.length)throw new Bm("The bias for a conv1dWithBias operation should be 1, but is "+"".concat(n.shape.length," instead"));if("channelsFirst"===s&&(e=Vh(e,[0,2,1])),"causal"===r)throw new Pm("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=Uu(e,t,a,"same"===r?"same":"valid","NWC",o);return null!=n&&(i=jg(i,n)),i}))}function Xv(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0,i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return ms((()=>{if(null==s&&(s="channelsLast"),yg(s),3!==e.rank&&4!==e.rank)throw new Bm("conv2dWithBiasActivation expects input to be of rank 3 or 4, "+"but received ".concat(e.rank,"."));if(3!==t.rank&&4!==t.rank)throw new Bm("conv2dWithBiasActivation expects kernel to be of rank 3 or 4, "+"but received ".concat(e.rank,"."));let u=jv(e,s);if("causal"===r)throw new Pm("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=td({x:u,filter:t,strides:a,pad:"same"===r?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),"channelsFirst"===s&&(u=Vh(u,[0,3,1,2])),u}))}function Yv(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0;return ms((()=>{if(null==s&&(s="channelsLast"),yg(s),4!==e.rank&&5!==e.rank)throw new Bm("conv3dWithBias expects input to be of rank 4 or 5, but received "+"".concat(e.rank,"."));if(4!==t.rank&&5!==t.rank)throw new Bm("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+"".concat(e.rank,"."));let i=qv(e,s);if("causal"===r)throw new Pm("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=ju(i,t,a,"same"===r?"same":"valid","NDHWC",o),null!=n&&(i=jg(i,n)),"channelsFirst"===s&&(i=Vh(i,[0,4,1,2,3])),i}))}Vv.className="Softmax",Wo(Vv);class Qv extends Fy{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Qv.verifyArgs(t),this.rank=e,rg(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Pm("Convolution layer for rank other than 1, 2, or 3 (".concat(this.rank,") is ")+"not implemented yet.");if(this.kernelSize=Uv(t.kernelSize,e,"kernelSize"),this.strides=Uv(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,bg(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,yg(this.dataFormat),this.activation=Iv(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=my(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Yy(t.biasConstraint),this.biasRegularizer=Lv(t.biasRegularizer),this.activityRegularizer=Lv(t.activityRegularizer),this.dilationRate=Uv(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Bm("dilationRate must be a number or an array of a single number for 1D convolution, but received "+"".concat(JSON.stringify(this.dilationRate)));if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Bm("dilationRate must be a number or array of two numbers for 2D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Bm("dilationRate must be a number or array of three numbers for 3D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}static verifyArgs(e){if(Gm("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!ag(e.kernelSize,"number",1,3))throw new Bm("BaseConv expects config.kernelSize to be number or number[] with "+"length 1, 2, or 3, but received ".concat(JSON.stringify(e.kernelSize),"."))}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Sv(this.activation),useBias:this.useBias,biasInitializer:fy(this.biasInitializer),biasRegularizer:_v(this.biasRegularizer),activityRegularizer:_v(this.activityRegularizer),biasConstraint:Ky(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Zv extends Qv{constructor(e,t){super(e,t),this.kernel=null,Zv.verifyArgs(t),this.filters=t.filters,rg(this.filters,"filters"),this.kernelInitializer=my(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Yy(t.kernelConstraint),this.kernelRegularizer=Lv(t.kernelRegularizer)}build(e){e=vy(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Bm("The channel dimension of the input should be defined. "+"Found ".concat(e[t]));const n=e[t],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return ms((()=>{let t;e=by(e);const n=null==this.bias?null:this.bias.read(),a=og(this.activation.getClassName());if(null!=a&&2===this.rank)t=Xv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)t=Kv(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Xv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Pm("convolutions greater than 3D are not implemented yet.");t=Yv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=vy(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){const e=Gv(n[r],this.kernelSize[r],this.padding,this.strides[r],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[r]);t.push(e)}let a=[e[0]];return"channelsLast"===this.dataFormat?(a=a.concat(t),a.push(this.filters)):(a.push(this.filters),a=a.concat(t)),a}getConfig(){const e={filters:this.filters,kernelInitializer:fy(this.kernelInitializer),kernelRegularizer:_v(this.kernelRegularizer),kernelConstraint:Ky(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new Bm("Convolution layer expected config.filters to be a 'number' > 0 "+"but got ".concat(JSON.stringify(e.filters)))}}class Jv extends Zv{constructor(e){super(2,e),Jv.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!ag(e.kernelSize,"number",1,2))throw new Bm("Conv2D expects config.kernelSize to be number or number[] with "+"length 1 or 2, but received ".concat(JSON.stringify(e.kernelSize),"."))}}Jv.className="Conv2D",Wo(Jv);class $v extends Zv{constructor(e){super(3,e),$v.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Bm("Conv3D expects config.kernelSize to be number or"+" [number, number, number], but received ".concat(JSON.stringify(e.kernelSize),"."))}}$v.className="Conv3D",Wo($v);class ex extends Jv{constructor(e){if(super(e),this.inputSpec=[new Ny({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Bm("Conv2DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(e){if(4!==(e=vy(e)).length)throw new Bm("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Bm("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ny({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return ms((()=>{let t=by(e);if(4!==t.shape.length)throw new Bm("Conv2DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(t.shape.length));const n=t.shape,a=n[0];let r,s;"channelsFirst"===this.dataFormat?(r=2,s=3):(r=1,s=2);const o=n[r],i=n[s],u=this.kernelSize[0],c=this.kernelSize[1],l=this.strides[0],h=this.strides[1],d=[a,Hv(o,l,u,this.padding),Hv(i,h,c,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Vh(t,[0,2,3,1]));let p=Hu(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Vh(p,[0,3,1,2])),null!=this.bias&&(p=jg(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=vy(e)).slice();let n,a,r;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3):(n=3,a=1,r=2);const s=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[a]=Hv(t[a],i,s,this.padding),t[r]=Hv(t[r],u,o,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}ex.className="Conv2DTranspose",Wo(ex);class tx extends $v{constructor(e){if(super(e),this.inputSpec=[new Ny({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Bm("Conv3DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(e){if(5!==(e=vy(e)).length)throw new Bm("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Bm("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ny({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return ms((()=>{let t=by(e);if(5!==t.shape.length)throw new Bm("Conv3DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(t.shape.length));const n=t.shape,a=n[0];let r,s,o;"channelsFirst"===this.dataFormat?(o=2,r=3,s=4):(o=1,r=2,s=3);const i=n[o],u=n[r],c=n[s],l=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[a,Hv(i,p,l,this.padding),Hv(u,f,h,this.padding),Hv(c,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Vh(t,[0,2,3,4,1]));let y=Ku(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Vh(y,[0,4,1,2,3])),null!==this.bias&&(y=jg(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=vy(e)).slice();let n,a,r,s;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3,s=4):(n=4,a=1,r=2,s=3);const o=this.kernelSize[0],i=this.kernelSize[1],u=this.kernelSize[2],c=this.strides[0],l=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[a]=Hv(t[a],c,o,this.padding),t[r]=Hv(t[r],l,i,this.padding),t[s]=Hv(t[s],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}tx.className="Conv3DTranspose",Wo(tx);class nx extends Zv{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Bm("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Bm("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Bm("SeparableConv".concat(this.rank,"D supports only padding modes: ")+"'same' and 'valid', but received ".concat(JSON.stringify(t.padding)));this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=my(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Lv(t.depthwiseRegularizer),this.depthwiseConstraint=Yy(t.depthwiseConstraint),this.pointwiseInitializer=my(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Lv(t.pointwiseRegularizer),this.pointwiseConstraint=Yy(t.pointwiseConstraint)}build(e){if((e=vy(e)).length<this.rank+2)throw new Bm("Inputs to SeparableConv".concat(this.rank,"D should have rank ")+"".concat(this.rank+2,", but received input shape: ")+"".concat(JSON.stringify(e)));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Bm("The channel dimension of the inputs should be defined, "+"but found ".concat(JSON.stringify(e[t])));const n=e[t],a=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let o=0;o<this.rank;++o)r.push(1);r.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Ny({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return ms((()=>{let t;if(e=by(e),1===this.rank)throw new Pm("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Vh(e,[0,2,3,1])),t=th(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=jg(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Vh(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=fy(this.depthwiseInitializer),e.pointwiseInitializer=fy(this.pointwiseInitializer),e.depthwiseRegularizer=_v(this.depthwiseRegularizer),e.pointwiseRegularizer=_v(this.pointwiseRegularizer),e.depthwiseConstraint=Ky(this.depthwiseConstraint),e.pointwiseConstraint=Ky(this.pointwiseConstraint),e}}nx.className="SeparableConv";class ax extends nx{constructor(e){super(2,e)}}ax.className="SeparableConv2D",Wo(ax);class rx extends Zv{constructor(e){super(1,e),rx.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!ag(e.kernelSize,"number",1,1))throw new Bm("Conv1D expects config.kernelSize to be number or number[] with "+"length 1, but received ".concat(JSON.stringify(e.kernelSize),"."))}}rx.className="Conv1D",Wo(rx);class sx extends Fy{constructor(e){super(e),"number"===typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return ms((()=>{if(e=by(e),"channelsLast"===this.dataFormat){const t=Mg(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Mg(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Mg(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Mg(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}sx.className="Cropping2D",Wo(sx);class ox extends Fy{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,yg(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,ng(dg,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return ms((()=>{let t=by(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Vh(t,[0,2,3,1]);const e=this.size[0]*n[2],a=this.size[1]*n[3],r="nearest"===this.interpolation?sp.resizeNearestNeighbor(t,[e,a]):sp.resizeBilinear(t,[e,a]);return Vh(r,[0,3,1,2])}{const e=this.size[0]*n[1],a=this.size[1]*n[2];return"nearest"===this.interpolation?sp.resizeNearestNeighbor(t,[e,a]):sp.resizeBilinear(t,[e,a])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}ox.className="UpSampling2D",Wo(ox);class ix extends Qv{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=my(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Yy(e.depthwiseConstraint),this.depthwiseRegularizer=Lv(e.depthwiseRegularizer)}build(e){if((e=vy(e)).length<4)throw new Bm("Inputs to DepthwiseConv2D should have rank 4. "+"Received input shape: ".concat(JSON.stringify(e),"."));const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Bm("The channel dimension of the inputs to DepthwiseConv2D should "+"be defined, but is not (".concat(e[t],")."));const n=e[t],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ms((()=>{let t=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0;return ms((()=>{null==r&&(r="channelsLast"),yg(r);let o=jv(e,r);if(4!==e.rank)throw new Bm("Input for depthwiseConv2d is required to be 4-D, but is instead "+"".concat(e.rank,"-D"));if(4!==t.rank)throw new Bm("depthwiseKernel is required to be 4-D, but is instead "+"".concat(t.rank,"-D"));return o=ec(o,t,n,"same"===a?"same":"valid","NHWC",s),"channelsFirst"===r&&(o=Vh(o,[0,3,1,2])),o}))}(e=by(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=jg(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=vy(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Gv(t,this.kernelSize[0],this.padding,this.strides[0]),s=Gv(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],a,r,s]:[e[0],r,s,a]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=fy(this.depthwiseInitializer),e.depthwiseRegularizer=_v(this.depthwiseRegularizer),e.depthwiseConstraint=Ky(this.depthwiseRegularizer),e}}function ux(e,t,n,a){if(Array.isArray(e)){if(null!=t||null!=n)throw new Bm("When inputs is an array, neither initialState or constants should be provided");null!=a&&(n=e.slice(e.length-a,e.length),e=e.slice(0,e.length-a)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function cx(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return ms((()=>{const u=t.shape.length;if(u<3)throw new Bm("Input should be at least 3D, but is ".concat(u,"D."));const c=[1,0].concat(Tg(2,u));if(t=Vh(t,c),null!=s)throw new Pm("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&(r=Co(Co(r,"bool"),"float32"),r.rank===u-1&&(r=Sc(r,-1)),r=Vh(r,c)),a&&(t=Kl(t,0),null!=r&&(r=Kl(r,0)));const l=[];let h,d=n;const p=t.shape[0],f=Lh(t);let m,g;null!=r&&(m=Lh(r));for(let t=0;t<p;++t){const n=f[t],a=ms((()=>e(n,d)));if(null==r)h=a[0],d=a[1];else{const e=ms((()=>{const e=m[t],n=qo(bl(e),e);return{output:Eo(Fo(a[0],e),Fo(d[0],n)),newStates:d.map(((t,r)=>Eo(Fo(a[1][r],e),Fo(t,n))))}}));h=e.output,d=e.newStates}i&&l.push(h)}if(i){g=bh(l,1)}return[h,g,d]}))}ix.className="DepthwiseConv2D",Wo(ix);class lx extends Fy{constructor(e){let t;if(super(e),null==e.cell)throw new Bm("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new bx({cells:e.cell}):e.cell,null==t.stateSize)throw new Bm("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Ny({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return Tg(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){gy(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let a;if(a=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const a of t)n.push([e[0],a]);return[a].concat(n)}return a}computeMask(e,t){return ms((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Pm("Constants support is not implemented in RNN yet.");gy(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Ny({shape:[t,null,...n]});const a=[e[0]].concat(e.slice(2));let r;if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!j(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new Bm("An initialState was passed that is not compatible with "+"cell.stateSize. Received stateSpec=".concat(this.stateSpec,"; ")+"However cell.stateSize is ".concat(this.cell.stateSize))}else this.stateSpec=r.map((e=>new Ny({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];ms((()=>{if(!this.stateful)throw new Mm("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Bm("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>il([n,e]))):this.states_=[il([n,this.cell.stateSize])];else if(null==e)gs(this.states_),null!=this.keptStates&&(gs(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>il([n,e]))):this.states_[0]=il([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Bm("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(e.length," state value(s). Input ")+"received: ".concat(e));!0===t?this.keptStates.push(this.states_.slice()):gs(this.states_);for(let t=0;t<this.states_.length;++t){const a=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,r];if(!j(a.shape,s))throw new Bm("State ".concat(t," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(s,", received shape=").concat(a.shape));this.states_[t]=a}}this.states_=this.states_.map((e=>ys(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=ux(e,n,a,this.numConstants);e=r.inputs,n=r.initialState,a=r.constants;let s=[],o=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Ny({shape:e.shape}));o=o.concat(this.stateSpec)}null!=a&&(t.constants=a,s=s.concat(a),this.numConstants=a.length);if(s[0]instanceof Sy){const n=[e].concat(s),a=this.inputSpec.concat(o),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,t);return this.inputSpec=r,i}return super.apply(e,t)}call(e,t){return ms((()=>{const n=null==t?null:t.mask,a=null==t?null:t.training;let r=null==t?null:t.initialState;e=by(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==s)throw new Bm("RNN Layer has ".concat(s," state(s) but was passed ")+"".concat(r.length," initial state(s)."));this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:a},i=cx(((e,t)=>{const n=this.cell.call([e].concat(t),o);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),u=i[0],c=i[1],l=i[2];this.stateful&&this.resetStates(l,a);const h=this.returnSequences?c:u;return this.returnState?[h].concat(l):h}))}getInitialState(e){return ms((()=>{let t=il(e.shape);return t=wc(t,[1,2]),t=_g(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Pg(t,[1,e]):t)):this.cell.stateSize>1?[Pg(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===lx.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=ib(t.cell,n);return new e(Object.assign(t,{cell:a}))}}lx.className="RNN",Wo(lx);class hx extends Fy{}class dx extends hx{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,rg(this.units,"units"),this.activation=Iv(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=my(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=my(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=my(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Lv(e.kernelRegularizer),this.recurrentRegularizer=Lv(e.recurrentRegularizer),this.biasRegularizer=Lv(e.biasRegularizer),this.kernelConstraint=Yy(e.kernelConstraint),this.recurrentConstraint=Yy(e.recurrentConstraint),this.biasConstraint=Yy(e.biasConstraint),this.dropout=Eg([1,Ig([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Eg([1,Ig([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=vy(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ms((()=>{if(2!==e.length)throw new Bm("SimpleRNNCell expects 2 input Tensors, got ".concat(e.length,"."));let n=e[1];e=e[0];const a=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=vx({ones:()=>bl(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=vx({ones:()=>bl(n),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,o=this.recurrentDropoutMask;r=Vg(null!=s?Fo(e,s):e,this.kernel.read()),null!=this.bias&&(r=jg(r,this.bias.read())),null!=o&&(n=Fo(n,o));let i=Eo(r,Vg(n,this.recurrentKernel.read()));return null!=this.activation&&(i=this.activation.apply(i)),[i,i]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Sv(this.activation),useBias:this.useBias,kernelInitializer:fy(this.kernelInitializer),recurrentInitializer:fy(this.recurrentInitializer),biasInitializer:fy(this.biasInitializer),kernelRegularizer:_v(this.kernelRegularizer),recurrentRegularizer:_v(this.recurrentRegularizer),biasRegularizer:_v(this.biasRegularizer),activityRegularizer:_v(this.activityRegularizer),kernelConstraint:Ky(this.kernelConstraint),recurrentConstraint:Ky(this.recurrentConstraint),biasConstraint:Ky(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}dx.className="SimpleRNNCell",Wo(dx);class px extends lx{constructor(e){e.cell=new dx(e),super(e)}call(e,t){return ms((()=>{null!=this.cell.dropoutMask&&(gs(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(gs(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return new e(t)}}px.className="SimpleRNN",Wo(px);class fx extends hx{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Bm("GRUCell does not support reset_after parameter set to true.");this.units=e.units,rg(this.units,"units"),this.activation=Iv(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Iv(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=my(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=my(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=my(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Lv(e.kernelRegularizer),this.recurrentRegularizer=Lv(e.recurrentRegularizer),this.biasRegularizer=Lv(e.biasRegularizer),this.kernelConstraint=Yy(e.kernelConstraint),this.recurrentConstraint=Yy(e.recurrentConstraint),this.biasConstraint=Yy(e.biasConstraint),this.dropout=Eg([1,Ig([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Eg([1,Ig([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=vy(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ms((()=>{if(2!==e.length)throw new Bm("GRUCell expects 2 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));const n=null!=t.training&&t.training;let a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=vx({ones:()=>bl(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=vx({ones:()=>bl(a),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,s=this.recurrentDropoutMask;let o,i,u;0<this.dropout&&this.dropout<1&&(e=Fo(e,r[0]));let c=Vg(e,this.kernel.read());this.useBias&&(c=jg(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=Fo(a,s[0]));const l=this.recurrentKernel.read(),[h,d]=fh(l,[2*this.units,this.units],l.rank-1),p=Vg(a,h),[f,m,g]=fh(c,3,c.rank-1),[y,b]=fh(p,2,p.rank-1);o=this.recurrentActivation.apply(Eo(f,y)),i=this.recurrentActivation.apply(Eo(m,b));const v=Vg(Fo(i,a),d);u=this.activation.apply(Eo(g,v));const x=Eo(Fo(o,a),Fo(Eo(1,jc(o)),u));return[x,x]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Sv(this.activation),recurrentActivation:Sv(this.recurrentActivation),useBias:this.useBias,kernelInitializer:fy(this.kernelInitializer),recurrentInitializer:fy(this.recurrentInitializer),biasInitializer:fy(this.biasInitializer),kernelRegularizer:_v(this.kernelRegularizer),recurrentRegularizer:_v(this.recurrentRegularizer),biasRegularizer:_v(this.biasRegularizer),activityRegularizer:_v(this.activityRegularizer),kernelConstraint:Ky(this.kernelConstraint),recurrentConstraint:Ky(this.recurrentConstraint),biasConstraint:Ky(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}fx.className="GRUCell",Wo(fx);class mx extends lx{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new fx(e),super(e)}call(e,t){return ms((()=>{null!=this.cell.dropoutMask&&(gs(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(gs(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}mx.className="GRU",Wo(mx);class gx extends hx{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,rg(this.units,"units"),this.activation=Iv(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Iv(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=my(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=my(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=my(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Lv(e.kernelRegularizer),this.recurrentRegularizer=Lv(e.recurrentRegularizer),this.biasRegularizer=Lv(e.biasRegularizer),this.kernelConstraint=Yy(e.kernelConstraint),this.recurrentConstraint=Yy(e.recurrentConstraint),this.biasConstraint=Yy(e.biasConstraint),this.dropout=Eg([1,Ig([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Eg([1,Ig([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=vy(e))[e.length-1];let a;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;a=new((t=class extends Qg{apply(t,a){const r=e.apply([n]),s=(new Jg).apply([n]),o=e.apply([2*n]);return Bg(Bg(r,s),o)}}).className="CustomInit",t)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return ms((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new Bm("LSTMCell expects 3 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));let a=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=vx({ones:()=>bl(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=vx({ones:()=>bl(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,o=this.recurrentDropoutMask;let i,u,c,l;0<this.dropout&&this.dropout<1&&(e=Fo(e,s[0]));let h=Vg(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=Fo(a,o[0])),h=Eo(h,Vg(a,this.recurrentKernel.read())),this.useBias&&(h=jg(h,this.bias.read()));const[d,p,f,m]=fh(h,4,h.rank-1);i=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(p),c=Eo(Fo(u,r),Fo(i,this.activation.apply(f))),l=this.recurrentActivation.apply(m);const g=Fo(l,this.activation.apply(c));return[g,g,c]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Sv(this.activation),recurrentActivation:Sv(this.recurrentActivation),useBias:this.useBias,kernelInitializer:fy(this.kernelInitializer),recurrentInitializer:fy(this.recurrentInitializer),biasInitializer:fy(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:_v(this.kernelRegularizer),recurrentRegularizer:_v(this.recurrentRegularizer),biasRegularizer:_v(this.biasRegularizer),activityRegularizer:_v(this.activityRegularizer),kernelConstraint:Ky(this.kernelConstraint),recurrentConstraint:Ky(this.recurrentConstraint),biasConstraint:Ky(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}gx.className="LSTMCell",Wo(gx);class yx extends lx{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new gx(e),super(e)}call(e,t){return ms((()=>{null!=this.cell.dropoutMask&&(gs(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(gs(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}yx.className="LSTM",Wo(yx);class bx extends hx{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return ms((()=>{let n=e.slice(1);const a=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?a.push(n.splice(0,e.stateSize.length)):a.push(n.splice(0,1));a.reverse();const r=[];let s;for(let o=0;o<this.cells.length;++o){const i=this.cells[o];n=a[o],s=0===o?[e[0]].concat(n):[s[0]].concat(n),s=i.call(s,t),r.push(s.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;gy(e)&&(e=e[0]),this.cells.forEach(((n,a)=>{wg("RNNCell_".concat(a),(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=[];for(const r of t.cells)a.push(ib(r,n));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return ky(e)}setWeights(e){const t=[];for(const n of this.cells){const a=n.weights.length,r=e.splice(a);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}Cy(t)}}function vx(e){const{ones:t,rate:n,training:a=!1,count:r=1,dropoutFunc:s}=e,o=()=>null!=s?s(t(),n):qg(t(),n),i=()=>Kg(o,t,a);if(!r||r<=1)return ys(i().clone());return Array(r).fill(void 0).map(i).map((e=>ys(e.clone())))}bx.className="StackedRNNCells",Wo(bx);var xx=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(n[a[r]]=e[a[r]])}return n};class wx extends lx{constructor(e){if(e.unroll)throw new Pm("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Pm("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Ny({ndim:5})]}call(e,t){return ms((()=>{if(null!=this.cell.dropoutMask&&(gs(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(gs(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Bm("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return ms((()=>{const{stateSize:t}=this.cell,n=e.shape,a=this.computeSingleOutputShape(n),r=il([a[0],...a.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]}))}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];ms((()=>{if(!this.stateful)throw new Mm("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)];if(null==n[0])throw new Bm("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>il(r))):this.states_=[il(r)];else if(null==e)gs(this.states_),null!=this.keptStates&&(gs(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>il(r))):this.states_[0]=il(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Bm("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(e.length," state value(s). Input ")+"received: ".concat(e));t?this.keptStates.push(this.states_.slice()):gs(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],a=r;if(!j(n.shape,a))throw new Bm("State ".concat(t," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(a,", received shape=").concat(n.shape));this.states_[t]=n}}this.states_=this.states_.map((e=>ys(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:a,padding:r,strides:s,dilationRate:o}=this.cell,i="channelsFirst"===t,u=e[i?3:2],c=e[i?4:3],l=Gv(u,a[0],r,s[0],o[0]),h=Gv(c,a[1],r,s[1],o[1]);return[...e.slice(0,2),...i?[n,l,h]:[l,h,n]]}}wx.className="ConvRNN2D";class Dx extends gx{constructor(e){const{filters:t,kernelSize:n,strides:a,padding:r,dataFormat:s,dilationRate:o}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,rg(this.filters,"filters"),this.kernelSize=Uv(n,2,"kernelSize"),this.kernelSize.forEach((e=>rg(e,"kernelSize"))),this.strides=Uv(a||1,2,"strides"),this.strides.forEach((e=>rg(e,"strides"))),this.padding=r||"valid",bg(this.padding),this.dataFormat=s||"channelsLast",yg(this.dataFormat),this.dilationRate=Uv(o||1,2,"dilationRate"),this.dilationRate.forEach((e=>rg(e,"dilationRate")))}build(e){var t;e=vy(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Bm("The channel dimension of the input should be defined. "+"Found ".concat(e[n]));const a=e[n],r=this.kernelSize.concat([a,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,a=this.filters;e=new((t=class extends Qg{apply(e,t){return zg([n.apply([a]),ul([a]),n.apply([2*a])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return ms((()=>{if(3!==e.length)throw new Bm("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));const n=t.training||!1,a=e[0],r=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=vx({ones:()=>bl(a),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=(e,t,n)=>t&&t[n]?Fo(t[n],e):e;let u=i(a,o,0),c=i(a,o,1),l=i(a,o,2),h=i(a,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=vx({ones:()=>bl(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=i(r,d,0),f=i(r,d,1),m=i(r,d,2),g=i(r,d,3);const[y,b,v,x]=fh(this.kernel.read(),4,3),[w,D,k,C]=this.useBias?fh(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,w,this.padding),c=this.inputConv(c,b,D,this.padding),l=this.inputConv(l,v,k,this.padding),h=this.inputConv(h,x,C,this.padding);const[N,S,E,I]=fh(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,N),f=this.recurrentConv(f,S),m=this.recurrentConv(m,E),g=this.recurrentConv(g,I);const T=this.recurrentActivation.apply(Eo(u,p)),F=this.recurrentActivation.apply(Eo(c,f)),A=Eo(Fo(F,s),Fo(T,this.activation.apply(Eo(l,m)))),R=Fo(this.recurrentActivation.apply(Eo(h,g)),this.activation.apply(A));return[R,R,A]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=xx(e,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),a)}inputConv(e,t,n,a){const r=Vu(e,t,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?jg(r,n,this.dataFormat):r}recurrentConv(e,t){return Vu(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Dx.className="ConvLSTM2DCell",Wo(Dx);class kx extends wx{constructor(e){const t=new Dx(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}kx.className="ConvLSTM2D",Wo(kx);class Cx extends Fy{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let a=0;a<this.noiseShape.length;++a)n.push(null==this.noiseShape[a]?t[a]:this.noiseShape[a]);return n}call(e,t){return ms((()=>{this.invokeCallHook(e,t);const n=by(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,a=this.getNoiseShape(n);return Kg((()=>qg(n,this.rate,a,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Cx.className="Dropout",Wo(Cx);class Nx extends Cx{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Nx.className="SpatialDropout1D",Wo(Nx);class Sx extends Fy{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,rg(this.units,"units"),this.activation=Iv(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=my(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=my(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Yy(e.kernelConstraint),this.biasConstraint=Yy(e.biasConstraint),this.kernelRegularizer=Lv(e.kernelRegularizer),this.biasRegularizer=Lv(e.biasRegularizer),this.activityRegularizer=Lv(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=vy(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=vy(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return ms((()=>{this.invokeCallHook(e,t);const n=by(e),a=og(this.activation.getClassName());let r;return null!=a?r=Vg(n,this.kernel.read(),a,this.bias?this.bias.read():null):(r=Vg(n,this.kernel.read()),null!=this.bias&&(r=jg(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:Sv(this.activation),useBias:this.useBias,kernelInitializer:fy(this.kernelInitializer),biasInitializer:fy(this.biasInitializer),kernelRegularizer:_v(this.kernelRegularizer),biasRegularizer:_v(this.biasRegularizer),activityRegularizer:_v(this.activityRegularizer),kernelConstraint:Ky(this.kernelConstraint),biasConstraint:Ky(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Sx.className="Dense",Wo(Sx);class Ex extends Fy{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=vy(e);for(const t of e.slice(1))if(null==t)throw new Bm('The shape of the input to "Flatten" is not fully defined '+"(got ".concat(e.slice(1),"). Make sure to pass a complete ")+'"input_shape" or "batch_input_shape" argument to the first layer in your model.');return[e[0],Sg(e,1)]}call(e,t){return ms((()=>{this.invokeCallHook(e,t);let n=by(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Vh(n,e)}return function(e){if(e.rank<=1)throw new Bm("batchFlatten requires a minimum rank of 2. Got rank: ".concat(e.rank,"."));const t=[e.shape[0],Sg(e.shape,1)];return yu(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Ex.className="Flatten",Wo(Ex);class Ix extends Fy{constructor(e){super(e),this.supportsMasking=!0,this.activation=Iv(e.activation)}call(e,t){return ms((()=>{this.invokeCallHook(e,t);const n=by(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Sv(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Ix.className="Activation",Wo(Ix);class Tx extends Fy{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return ms((()=>{return e=by(e),t=e,n=this.n,ms((()=>{if(2!==t.shape.length)throw new Bm("repeat() expects a rank-2 tensor, but received a "+"rank-".concat(t.shape.length," tensor."));return Pg(_g(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Tx.className="RepeatVector",Wo(Tx);class Fx extends Fy{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",a=t.slice();let r=1,s=null;for(let i=0;i<a.length;++i){const e=a[i];if(this.isUnknown(e)){if(null!==s)throw new Bm("Can only specifiy one unknown dimension.");s=i}else r*=e}const o=Sg(e);if(null!==s){if(0===r||o%r!==0)throw new Bm(n);a[s]=o/r}else if(o!==r)throw new Bm(n);return a}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return ms((()=>{this.invokeCallHook(e,t);const n=by(e),a=n.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return yu(n,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Fx.className="Reshape",Wo(Fx);class Ax extends Fy{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+"".concat(e.dims," instead."));const t=Tg(1,e.dims.length+1);if(!j(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Ny({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=vy(e)).slice();return this.dims.forEach(((n,a)=>{t[a+1]=e[n]})),t}call(e,t){return Vh(by(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Ax.className="Permute",Wo(Ax);class Rx extends Fy{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=by(e);return Xi(gl(n,this.maskValue),-1)}call(e,t){return ms((()=>{this.invokeCallHook(e,t);const n=by(e),a=Xi(gl(n,this.maskValue),-1,!0);return Fo(n,Co(a,n.dtype))}))}}Rx.className="Masking",Wo(Rx);class _x extends Fy{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(qm(e.inputLength))}this.inputDim=e.inputDim,rg(this.inputDim,"inputDim"),this.outputDim=e.outputDim,rg(this.outputDim,"outputDim"),this.embeddingsInitializer=my(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Lv(e.embeddingsRegularizer),this.activityRegularizer=Lv(e.activityRegularizer),this.embeddingsConstraint=Yy(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return ms((()=>this.maskZero?(e=by(e),gl(e,_o(e))):null))}computeOutputShape(e){if(e=vy(e),null==this.inputLength)return[...e,this.outputDim];const t=qm(this.inputLength);if(t.length!==e.length-1)throw new Bm('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(e));{let n=0;for(let a=0;a<t.length;++a){const r=t[a],s=e[a+1];if(null!=r&&null!=s&&r!==s)throw new Bm('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(e));null==r&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return ms((()=>{this.invokeCallHook(e,t);let n=by(e);"int32"!==n.dtype&&(n=Rg(n,"int32"));const a=Ug(this.embeddings.read(),yu(n,[n.size]));return yu(a,vy(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:fy(this.embeddingsInitializer),embeddingsRegularizer:_v(this.embeddingsRegularizer),activityRegularizer:_v(this.activityRegularizer),embeddingsConstraint:Ky(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}_x.className="Embedding",Wo(_x);class Ox extends Fy{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Pm}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let a=0;a<t.length;++a){const r=e[e.length-t.length+a],s=t[a];if(null==r||null==s||r<0||s<0)n.push(null);else if(1===r)n.push(s);else if(1===s)n.push(r);else{if(r!==s)throw new Bm("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[vy(e)]),e.length<2)throw new Bm("A merge layer should be called on an Array of at least 2 inputs."+" Got ".concat(e.length," input(s)."));let t=[];for(const r of e)null!=r&&null!==r[0]&&t.push(r[0]);if(t=eg(t),t.length>1)throw new Bm("Can not merge tensors with different batch sizes. "+"Got tensors with shapes: ".concat(JSON.stringify(e),"."));let n=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const t=null==e[r]?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const a=e.map((e=>e.length));-1===e.indexOf(null)&&1===eg(a).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return ms((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const a=Ig(n);for(let n of e){const e=n.rank;for(let t=0;t<a-e;++t)n=_g(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const s of e){const e=s.rank;if(null==e){const e=s.shape,a=e[0],r=e.slice(1).concat([a]);let o=yu(s,[a].concat(Sg(e.slice(1))));o=Vh(o,[1,0]),o=yu(o,r),t.push(o),n=!0}else if(e>1){const a=Tg(1,e).concat([0]);t.push(Vh(s,a)),n=!0}else t.push(s)}let a=this.mergeFunction(t);const r=a.rank;if(n)if(null==r){const e=a.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));a=yu(Vh(yu(a,[-1,t]),[1,0]),n)}else if(r>1){const e=[r-1].concat(Tg(0,r-1));a=Vh(a,e)}return a}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){const n=null==e[a]?null:e[a].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const a of e)null!=a&&null!==a[0]&&n.push(a[0]);return n=eg(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return ms((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Bm("`mask` should be an Array");if(!Array.isArray(e))throw new Bm("`inputs` should be an Array");if(t.length!==e.length)throw new Bm("The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths "+"(".concat(e.length," vs ").concat(t.length,")"));if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:Sc(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Qc(n,t[e]);return n}))}}class Lx extends Ox{constructor(e){super(e)}mergeFunction(e){return ms((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Eo(t,e[n]);return t}))}}Lx.className="Add",Wo(Lx);class Mx extends Ox{constructor(e){super(e)}mergeFunction(e){return ms((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Fo(t,e[n]);return t}))}}Mx.className="Multiply",Wo(Mx);class zx extends Ox{constructor(e){super(e)}mergeFunction(e){return ms((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Eo(t,e[n]);return Fo(1/e.length,t)}))}}zx.className="Average",Wo(zx);class Bx extends Ox{constructor(e){super(e)}mergeFunction(e){return ms((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Jo(t,e[n]);return t}))}}Bx.className="Maximum",Wo(Bx);class Px extends Ox{constructor(e){super(e)}mergeFunction(e){return ms((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=ll(t,e[n]);return t}))}}Px.className="Minimum",Wo(Px);class Wx extends Ox{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Bm("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const a of e)if(null!=a){t=!1;break}if(t)return;const n=[];for(let a=0;a<e.length;++a){const t=e[a].slice();t.splice(this.axis,1);let r=!1;for(const e of n)if(j(e,t)){r=!0;break}r||n.push(t)}if(n.length>1)throw new Bm("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return ms((()=>zg(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Bm("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(const r of t.slice(1)){if(null==n[a]||null==r[a]){n[a]=null;break}n[a]+=r[a]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Bm("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Bm("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Bm("Mismatch in the length of mask (".concat(t.length,") ")+"and the legnth of inputs (".concat(e.length,")"));return ms((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const a=[];for(let s=0;s<e.length;++s)null==t[s]?a.push(Co(bl(e[s]),"bool")):t[s].rank<e[s].rank?a.push(Sc(t[s],-1)):a.push(t[s]);const r=xu(a,this.axis);return Ki(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Vx(e,t){for(;e<0;)e+=t;return e}Wx.className="Concatenate",Wo(Wx);class Ux extends Ox{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){V(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Pm("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);if(t[a[0]]!==n[a[1]])throw new Bm("Dimension incompatibility: "+"".concat(t[a[0]]," !== ").concat(n[a[1]]))}mergeFunction(e){if(2!==e.length)throw new Bm("A `Dot` layer must be called on exactly 2 inputs, "+"but received ".concat(e.length," input(s)."));let t,n=e[0],a=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Vx(t,e[n].shape.length))):[Vx(this.axes,n.shape.length),Vx(this.axes,a.shape.length)],this.normalize&&(n=ub(n,t[0]),a=ub(a,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Pm("batchDot is not implemented for tensors of 4D or higher rank yet");if(V(e.shape.length>=2,(()=>"batchDot requires the rank of x to be >= 2, "+"but got ".concat(e.shape.length))),V(e.shape.length>=2,(()=>"batchDot requires the rank of y to be >= 2, "+"but got ".concat(t.shape.length))),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Pm("batchDot is not implemented for complex64-type Tensors yet.");const a=e.shape.length,r=t.shape.length;null==n&&(n=[a-1,r-2]);const s=n;return ms((()=>{let n,o;if(a>r){n=a-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=yu(t,t.shape.concat(e))}else if(r>a){n=r-a;const t=[];for(let e=0;e<n;++e)t.push(1);e=yu(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)o=s[0]===s[1]?wc(Fo(e,t),s[0]):wc(Fo(Vh(e,[1,0]),t),s[1]);else{const n=s[0]!==e.shape.length-1,a=s[1]===t.shape.length-1;o=wu(e,t,n,a)}if(n>0){let e;e=a>r?a+r-3:a-1;const t=[];for(let a=e;a<e+n;++a)t.push(a);o=yh(o,t)}return 1===o.shape.length&&(o=Sc(o,1)),o}))}(n,a,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Vx(this.axes,e.length),Vx(this.axes,t.length)],n}computeOutputShape(e){V(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Pm("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);t.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Ux.className="Dot",Wo(Ux);class Gx extends Fy{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return ms((()=>{this.invokeCallHook(e,t);const n=by(e);return Kg((()=>Eo(Wg(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}Gx.className="GaussianNoise",Wo(Gx);class Hx extends Fy{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ms((()=>{this.invokeCallHook(e,t);const n=by(e);if(this.rate>0&&this.rate<1){return Kg((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Fo(n,Wg(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}Hx.className="GaussianDropout",Wo(Hx);class jx extends Fy{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||by(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ms((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),a=()=>{const t=by(e),a=-1.7580993408473766;let r=_c(Wl(n),this.rate);r=Rg(r,"float32");const s=((1-this.rate)*(1+this.rate*a**2))**-.5,o=-s*a*this.rate,i=Eo(Fo(t,r),Fo(Eo(r,-1),a));return Eo(Fo(i,s),o)};return Kg(a,(()=>by(e)),t.training||!1)}return e}))}}function qx(e,t,n,a,r){let s,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===e.rank)s=Iu(e,t,n,a,r,o);else if(3===e.rank)s=Tu(e,t,n,a,r,o);else{if(4!==e.rank)throw new Pm("batchNormalization is not implemented for array of rank ".concat(e.rank," ")+"yet");s=Fu(e,t,n,a,r,o)}return s}function Kx(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return j(a.slice().sort(),Tg(0,e.rank-1))?function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return ms((()=>{const s=pl(e,a),o=s.mean,i=s.variance;return[qx(e,o,i,n,t,r),o,i]}))}(e,t,n,a,r):function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return ms((()=>{const s=pl(e,a),o=s.mean,i=s.variance,u=[];for(const t of Tg(0,e.rank))-1!==a.indexOf(t)?u.push(1):u.push(e.shape[t]);const c=yu(o,u),l=yu(i,u),h=null==t?null:yu(t,u),d=null==n?null:yu(n,u);return[qx(e,c,l,d,h,r),o,i]}))}(e,t,n,a,r)}jx.className="AlphaDropout",Wo(jx);class Xx extends Fy{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=my(e.betaInitializer||"zeros"),this.gammaInitializer=my(e.gammaInitializer||"ones"),this.movingMeanInitializer=my(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=my(e.movingVarianceInitializer||"ones"),this.betaConstraint=Yy(e.betaConstraint),this.gammaConstraint=Yy(e.gammaConstraint),this.betaRegularizer=Lv(e.betaRegularizer),this.gammaRegularizer=Lv(e.gammaRegularizer)}build(e){e=vy(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Bm("Axis ".concat(t," of input tensor should have a defined dimension but ")+"the layer received an input with shape "+"".concat(JSON.stringify(e),"."));this.inputSpec=[new Ny({ndim:e.length,axes:{[t]:n}})];const a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return ms((()=>{const n=null!=t.training&&t.training,a=by(e),r=a.shape,s=r.length,o=Tg(0,s),i=this.axis>=0?this.axis:this.axis+s;o.splice(i,1);const u=Um(1,s);u[i]=r[i];const c=o.slice();c.sort();const l=!j(c,Tg(0,s).slice(0,s-1));if(!n)return(()=>{if(l){const e=yu(this.movingMean.read(),u),t=yu(this.movingVariance.read(),u),n=this.center?yu(this.beta.read(),u):null,r=this.scale?yu(this.gamma.read(),u):null;return qx(a,e,t,n,r,this.epsilon)}return qx(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=Kx(a,this.gamma.read(),this.beta.read(),o,this.epsilon),f=(e,t,n)=>{ms((()=>{const a=1-n,r=e.read(),s=Fo(qo(r,t),a);e.write(qo(r,s))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:fy(this.betaInitializer),gammaInitializer:fy(this.gammaInitializer),movingMeanInitializer:fy(this.movingMeanInitializer),movingVarianceInitializer:fy(this.movingVarianceInitializer),betaRegularizer:_v(this.betaRegularizer),gammaRegularizer:_v(this.gammaRegularizer),betaConstraint:Ky(this.betaConstraint),gammaConstraint:Ky(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Xx.className="BatchNormalization",Wo(Xx);class Yx extends Fy{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received ".concat(this.axis))}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, "+"but received ".concat(JSON.stringify(this.axis)));for(const e of this.axis)if(!Number.isInteger(e))throw new Error("Expected axis to be an array of integers, "+"but received ".concat(JSON.stringify(this.axis)))}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=my(e.betaInitializer||"zeros"),this.gammaInitializer=my(e.gammaInitializer||"ones"),this.betaRegularizer=Lv(e.betaRegularizer),this.gammaRegularizer=Lv(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=vy(e)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error("Invalid axis: ".concat(r));if(this.axis.length!==eg(this.axis).length)throw new Error("Found duplicate axes in: ".concat(this.axis));const n=this.axis.map((t=>e[t])),a=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(e,t){const n=by(e),a=n.shape,r=a.length;return ms((()=>{let{mean:e,variance:t}=pl(n,this.axis,!0);const s=Um(1,r);for(const n of this.axis)s[n]=a[n];const o=e=>null!=e&&e.shape.length!==r?yu(e,s):e;let i=this.scale?o(this.gamma.read()):null,u=this.center?o(this.beta.read()):null;const c=[],l=[];for(let n=0;n<r;++n)-1!==this.axis.indexOf(n)?(c.push(a[n]),l.push(1)):(c.push(1),l.push(a[n]));return e=Ic(e,c),t=Ic(t,c),null!=i&&(i=Ic(i,l)),null!=u&&(u=Ic(u,l)),qx(n,e,t,u,i,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:fy(this.betaInitializer),gammaInitializer:fy(this.gammaInitializer),betaRegularizer:_v(this.betaRegularizer),gammaRegularizer:_v(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Yx.className="LayerNormalization",Wo(Yx);class Qx extends Fy{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Bm("ZeroPadding2D expects padding to be a length-2 array, but "+"received a length-".concat(e.padding.length," array."));let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Bm("ZeroPadding2D expects height padding to be a length-2 array, "+"but received a length-".concat(e.padding[0].length," array."));if(t=e.padding[0],2!==e.padding[1].length)throw new Bm("ZeroPadding2D expects width padding to be a length-2 array, "+"but received a length-".concat(e.padding[1].length," array."));n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Ny({ndim:4})]}computeOutputShape(e){let t,n;return e=vy(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return ms((()=>{return t=by(e),n=this.padding,a=this.dataFormat,ms((()=>{if(4!==t.rank)throw new Bm("temporalPadding expects input tensor to be 4-D, but received a "+"".concat(t.rank,"-D tensor."));if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Bm("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==a&&(a="channelsLast"),"channelsLast"!==a&&"channelsFirst"!==a)throw new Bm("Unknown data format: ".concat(a,". ")+"Supported data formats are 'channelsLast' and 'channelsFirst.");let e;return e="channelsFirst"===a?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],xl(t,e)}));var t,n,a}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Zx(e,t,n,a,r,s){return ms((()=>{let o;yg(r),vg(s),bg(a),null==n&&(n=[1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==s&&(s="max"),e=jv(e,r);const i="same"===a?"same":"valid";return o="max"===s?al(e,t,n,i):bu(e,t,n,i),"channelsFirst"===r&&(o=Vh(o,[0,3,1,2])),o}))}function Jx(e,t,n,a,r,s){return ms((()=>{let o;yg(r),vg(s),bg(a),null==n&&(n=[1,1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==s&&(s="max"),e=qv(e,r);const i="same"===a?"same":"valid";return o="max"===s?rl(e,t,n,i):vu(e,t,n,i),"channelsFirst"===r&&(o=Vh(o,[0,4,1,2,3])),o}))}Qx.className="ZeroPadding2D",Wo(Qx);class $x extends Fy{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new Bm("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(e.poolSize)));this.poolSize=e.poolSize}if(rg(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new Bm("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(e.strides)));this.strides=e.strides}rg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,bg(this.padding),this.inputSpec=[new Ny({ndim:3})]}computeOutputShape(e){const t=Gv((e=vy(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return ms((()=>{this.invokeCallHook(e,t),e=_g(by(e),2);const n=this.poolingFunction(by(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return yh(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class ew extends $x{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return yg(r),bg(a),Zx(e,t,n,a,r,"max")}}ew.className="MaxPooling1D",Wo(ew);class tw extends $x{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return yg(r),bg(a),Zx(e,t,n,a,r,"avg")}}tw.className="AveragePooling1D",Wo(tw);class nw extends Fy{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Bm("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+"".concat(e.strides.length,"."));this.strides=e.strides}else this.strides=[e.strides,e.strides];rg(this.poolSize,"poolSize"),rg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,yg(this.dataFormat),bg(this.padding),this.inputSpec=[new Ny({ndim:4})]}computeOutputShape(e){e=vy(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Gv(t,this.poolSize[0],this.padding,this.strides[0]),n=Gv(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return ms((()=>(this.invokeCallHook(e,t),this.poolingFunction(by(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class aw extends nw{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return yg(r),bg(a),Zx(e,t,n,a,r,"max")}}aw.className="MaxPooling2D",Wo(aw);class rw extends nw{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return yg(r),bg(a),Zx(e,t,n,a,r,"avg")}}rw.className="AveragePooling2D",Wo(rw);class sw extends Fy{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Bm("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+"".concat(e.strides.length,"."));this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];rg(this.poolSize,"poolSize"),rg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,yg(this.dataFormat),bg(this.padding),this.inputSpec=[new Ny({ndim:5})]}computeOutputShape(e){e=vy(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Gv(t,this.poolSize[0],this.padding,this.strides[0]),n=Gv(n,this.poolSize[1],this.padding,this.strides[1]),a=Gv(a,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,a]:[e[0],t,n,a,e[4]]}call(e,t){return ms((()=>(this.invokeCallHook(e,t),this.poolingFunction(by(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class ow extends sw{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return yg(r),bg(a),Jx(e,t,n,a,r,"max")}}ow.className="MaxPooling3D",Wo(ow);class iw extends sw{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return yg(r),bg(a),Jx(e,t,n,a,r,"avg")}}iw.className="AveragePooling3D",Wo(iw);class uw extends Fy{constructor(e){super(e),this.inputSpec=[new Ny({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Pm}}class cw extends uw{constructor(e){super(e||{})}call(e,t){return ms((()=>{const t=by(e);return ol(t,1)}))}}cw.className="GlobalAveragePooling1D",Wo(cw);class lw extends uw{constructor(e){super(e||{})}call(e,t){return ms((()=>{const t=by(e);return vc(t,1)}))}}lw.className="GlobalMaxPooling1D",Wo(lw);class hw extends Fy{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,yg(this.dataFormat),this.inputSpec=[new Ny({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Pm}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class dw extends hw{call(e,t){return ms((()=>{const t=by(e);return"channelsLast"===this.dataFormat?ol(t,[1,2]):ol(t,[2,3])}))}}dw.className="GlobalAveragePooling2D",Wo(dw);class pw extends hw{call(e,t){return ms((()=>{const t=by(e);return"channelsLast"===this.dataFormat?vc(t,[1,2]):vc(t,[2,3])}))}}pw.className="GlobalMaxPooling2D",Wo(pw);class fw extends Fy{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=ib(t.layer,n);delete t.layer;const r={layer:a};return Object.assign(r,t),new e(r)}}class mw extends fw{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=vy(e)).length<3)throw new Bm("TimeDistributed layer expects an input shape >= 3D, but received "+"input shape ".concat(JSON.stringify(e)));this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=vy(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),a=e[1];return[n[0],a].concat(n.slice(1))}call(e,t){return ms((()=>cx(((e,n)=>[by(this.layer.call(e,t)),[]]),e=by(e),[],!1,null,null,!1,!0)[1]))}}mw.className="TimeDistributed",Wo(mw);class gw extends fw{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=ib(n),t.goBackwards=!0!==t.goBackwards;const a={};var r;if(a.className=e.layer.getClassName(),a.config=t,this.backwardLayer=ib(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,ng(mg,"BidirectionalMergeMode",r),e.weights)throw new Pm("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,a,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(a=r.slice(1),t=r[0]):t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(a).concat(a.slice()):[t].concat(a).concat(a.slice()):jm(n)}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=ux(e,n,a,this.numConstants);if(e=r.inputs,n=r.initialState,a=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==a)return super.apply(e,t);const s=[],o=[];if(null!=n){const e=n.length;if(e%2>0)throw new Bm("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const a=n.map((e=>new Ny({shape:e.shape})));this.forwardLayer.stateSpec=a.slice(0,e/2),this.backwardLayer.stateSpec=a.slice(e/2),o.push(...a)}if(null!=a)throw new Pm("Support for constants in Bidirectional layers is not implemented yet.");const i=s[0]instanceof Sy;for(const u of s)if(u instanceof Sy!==i)throw new Bm("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[e].concat(s),a=this.inputSpec.concat(o),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,t);return this.inputSpec=r,i}return super.apply(e,t)}call(e,t){return ms((()=>{const n=t.initialState;let a,r,s,o;if(null==n)a=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),o=n.slice(n.length/2);a=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:o}))}return this.returnState&&(Array.isArray(a)&&(s=a.slice(1).concat(r.slice(1))),a=a[0],r=r[0]),this.returnSequences&&(r=Kl(r,1)),"concat"===this.mergeMode?o=zg([a,r]):"sum"===this.mergeMode?o=Eo(a,r):"ave"===this.mergeMode?o=Fo(.5,Eo(a,r)):"mul"===this.mergeMode?o=Fo(a,r):null==this.mergeMode&&(o=[a,r]),this.returnState?null==this.mergeMode?o.concat(s):[o].concat(s):o}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){wg(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),wg(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=ib(t.layer);if(delete t.layer,null!=t.numConstants)throw new Pm("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=t;return a.layer=n,new e(a)}}gw.className="Bidirectional",Wo(gw);class yw extends Fy{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return ms((()=>("float32"!==(e=by(e)).dtype&&(e=Rg(e,"float32")),Eo(Fo(e,this.scale),this.offset))))}}yw.className="Rescaling",Wo(yw);const{resizeBilinear:bw,cropAndResize:vw}=sp;class xw extends Fy{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,a,r,s,o,i){return ms((()=>{let u,c=!1;const l=[t/s,n/o,(a+t)/s,(r+n)/o],h=[];3===e.rank?(c=!0,u=bh([e])):u=e;for(let e=0;e<u.shape[0];e++)h.push(l);const d=ls(h,[h.length,4]),p=Ul(0,h.length,1,"int32"),f=vw(u,d,p,[a,r],"nearest");return Rg(c?by(Lh(f)):f,i)}))}upsize(e,t,n,a){return ms((()=>Rg(bw(e,[t,n]),a)))}call(e,t){return ms((()=>{const t=by(e),n=t.dtype,a=t.shape,r=a[a.length-3],s=a[a.length-2];let o=0;r!==this.height&&(o=Math.floor((r-this.height)/2));let i=0;return s!==this.width&&(i=Math.floor((s-this.width)/2),0===i&&(i=1)),o>=0&&i>=0?this.centerCrop(t,o,i,this.height,this.width,r,s,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=vy(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}xw.className="CenterCrop",Wo(xw);class ww extends Fy{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=vy(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return ms((()=>{let n;if("int32"!==(e=by(e)).dtype&&(e=Rg(e,"int32")),"undefined"!==typeof t.countWeights){if("count"!==this.outputMode)throw new Bm("countWeights is not used when outputMode !== count.\n              Received countWeights=".concat(t.countWeights));n=by(t.countWeights)}const a=vc(e),r=xc(e),s=Rc(this.numTokens,a).bufferSync().get(0),o=_c(r,0).bufferSync().get(0);if(!s||!o)throw new Bm("Input values must be between 0 < values <="+" numTokens with numTokens=".concat(this.numTokens));return function(e,t,n,a){let r=by(e);if("int32"!==r.dtype&&(r=Rg(r,"int32")),"int"===t)return r;const s=r.shape;if(0===r.rank&&(r=Sc(r,-1)),"oneHot"===t&&1!==r.shape[r.shape.length-1]&&(r=Sc(r,-1)),r.rank>2)throw new Bm("When outputMode is not int, maximum output rank is 2"+" Received outputMode ".concat(t," and input shape ").concat(s)+" which would result in output rank ".concat(r.rank,"."));const o=["multiHot","oneHot"].includes(t),i=r;let u;if(u=Ju(i,"undefined"!==typeof a&&"count"===t?a:[],n,o),"tfIdf"!==t)return u;if(a)return Fo(u,a);throw new Bm("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}ww.className="CategoryEncoding",Wo(ww);const Dw=new Set(["bilinear","nearest"]);class kw extends Fy{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!Dw.has(e.interpolation))throw new Bm("Invalid interpolation parameter: ".concat(e.interpolation," is not implemented"));this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=vy(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return ms((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return sp.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return sp.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error("Interpolation is ".concat(this.interpolation," but only ").concat([...Dw]," are supported"))}))}}kw.className="Resizing",Wo(kw);class Cw{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}Cw.className="RandomSeed";class Nw extends Fy{constructor(e){super(e),this.randomGenerator=new Cw(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}Nw.className="BaseRandomLayer";const Sw=new Set(["bilinear","nearest"]);class Ew extends Nw{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new Bm("Invalid factor: ".concat(this.factor,". Must be positive number or tuple of 2 numbers"));this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new Bm("factor must have values larger than -1. Got: ".concat(this.factor));if(this.widthUpper<this.widthLower)throw new Bm("factor cannot have upper bound less than lower bound.\n        Got upper bound: ".concat(this.widthUpper,".\n        Got lower bound: ").concat(this.widthLower,"\n      "));if(n){if(!Sw.has(n))throw new Bm("Invalid interpolation parameter: ".concat(n," is not implemented"));this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=vy(e))[2];return[this.imgHeight,-1,t]}call(e,t){return ms((()=>{const t=by(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=Wl([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*n;a=Math.round(a);const r=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return sp.resizeBilinear(e,r);case"nearest":return sp.resizeNearestNeighbor(e,r);default:throw new Error("Interpolation is ".concat(this.interpolation,"\n          but only ").concat([...Sw]," are supported"))}}))}}Ew.className="RandomWidth",Wo(Ew);var Iw,Tw;we().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(Iw||(Iw={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Tw||(Tw={}));const Fw={};function Aw(e){return Fw[e]}function Rw(e,t,n,a,r){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,o=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd,i=e<0?t.inputNames.length+e:e;if("tensor"===s.type)return _w(t.inputNames[i],n,a,r);if("tensors"===s.type){const s=t.inputs.slice(e,o);return t.inputNames.slice(e,o).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=s[t])||void 0===n?void 0:n.op)})).map((e=>_w(e,n,a,r)))}const u=_w(t.inputNames[i],n,a,r),c=u.dataSync();return"number"===s.type?c[0]:le(u.shape,c)}const o=t.attrParams[e];return o&&o.value}function _w(e,t,n,a){const[r,s]=zw(e,n);if(null!=a){const e=a.getHashTableHandleByName(r);if(null!=e)return e}const o=n.currentContextIds.find((e=>!!t[Mw(r,e)]));return void 0!==o?t[Mw(r,o)][s]:void 0}function Ow(e,t,n){return t[Mw(e,n.currentContextId)]}function Lw(e,t){const[n,a,r]=zw(e,t);return[Mw(n,t&&t.currentContextId),a,r]}function Mw(e,t){return t?"".concat(e,"-").concat(t):e}function zw(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const a=e.split(":");let r;if(1===a.length)r=[e,0,void 0];else{const e=a[0],t=3===a.length?a[1]:void 0;r=[e,Number(a[a.length-1]),t]}return n&&t.parseNodeNameCache.set(e,r),r}function Bw(e,t,n){let a=Rw("pad",e,t,n);if("explicit"===a){a=Rw("explicitPaddings",e,t,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)r[e][0]=a[2*e],r[e][1]=a[2*e+1];return r}return a}function Pw(e){return e.kept?e:No(e)}const Ww=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Vw=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Uw=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],Gw=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Hw=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],jw=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],qw=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],Kw=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Xw=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Yw=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],Qw=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],Zw=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],Jw=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],$w=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],eD=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],tD=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],nD=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],aD=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],rD=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class sD{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[o,i,u,c,l,h,d,p,f,m,g,y,b,v,x,w,D,k,C].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=e.node,a=[],r=[],s=[],o=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?a.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let i=[];const u=[];let c={},l={};null!=t&&(c=this.mapSignatureEntries(t.inputs),l=this.mapSignatureEntries(t.outputs));const h=Object.keys(o);h.forEach((e=>{const t=o[e];t.inputNames.forEach(((e,n)=>{const[a,,r]=Lw(e),s=o[a];if(null!=s.outputs){const e=s.outputs.indexOf(r);if(-1!==e){const r="".concat(a,":").concat(e);t.inputNames[n]=r}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(l).length?h.forEach((e=>{const t=o[e];0===t.children.length&&u.push(t)})):Object.keys(l).forEach((e=>{const[t]=Lw(e),n=o[t];null!=n&&(n.signatureKey=l[e],u.push(n))})),Object.keys(c).length>0?Object.keys(c).forEach((e=>{const[t]=Lw(e),n=o[t];n&&(n.signatureKey=c[e],i.push(n))})):i=a;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:o,inputs:i,outputs:u,weights:r,placeholders:a,signature:t,functions:d};return s.length>0&&(p.initNodes=s),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=Aw(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const a=n.type;let r;switch(n.type){case"string":r=iD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=iD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=yD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=yD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=cD(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=cD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=gD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=gD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=uD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=uD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=vD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=vD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=mD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=mD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=bD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=bD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=dD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=dD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=pD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=pD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=hD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=hD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: ".concat(n.type," for op: ").concat(e.op))}return t[n.name]={value:r,type:a},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let a={};null!=t&&(a=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const r=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=Lw(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:lD(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),a[t]=n}));Object.keys(a).forEach((e=>{const t=a[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=Lw(e),o=a[r];if(null!=o.outputs){const e=o.outputs.indexOf(s);if(-1!==e){const a="".concat(r,":").concat(e);t.inputNames[n]=a}}t.inputs.push(o),o.children.push(t)}))}));const o=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=Lw(o[e.name]),r=a[t];null!=r&&(r.defaultOutput=n,s.push(r))}));const i=this.mapArgsToSignature(e);return{nodes:a,inputs:r,outputs:s,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function oD(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=we().global;if("undefined"!==typeof t.atob)return t.atob(e);if("undefined"!==typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function iD(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e[t];return null!=r?oD(r.s,a):n}function uD(e,t,n){const a=e[t];return a?a.b:n}function cD(e,t,n){const a=e[t]||{},r=null!=a.i?a.i:null!=a.f?a.f:n;return"number"===typeof r?r:parseInt(r,10)}function lD(e){switch("string"===typeof e&&(e=Iw[e]),e){case Iw.DT_FLOAT:case Iw.DT_HALF:return"float32";case Iw.DT_INT32:case Iw.DT_INT64:case Iw.DT_INT8:case Iw.DT_UINT8:return"int32";case Iw.DT_BOOL:return"bool";case Iw.DT_DOUBLE:return"float32";case Iw.DT_STRING:return"string";case Iw.DT_COMPLEX64:case Iw.DT_COMPLEX128:return"complex64";default:return null}}function hD(e,t,n){const a=e[t];return a&&a.func?a.func.name:n}function dD(e,t,n){const a=e[t];return a&&a.type?lD(a.type):n}function pD(e,t,n){const a=e[t];return a&&a.list&&a.list.type?a.list.type.map((e=>lD(e))):n}function fD(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"===typeof e.size?e.size:parseInt(e.size,10))):[]}function mD(e,t,n){const a=e[t];return a&&a.shape?fD(a.shape):n}function gD(e,t,n){const a=e[t];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map((e=>"number"===typeof e?e:parseInt(e,10))):n}function yD(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e[t];return r&&r.list&&r.list.s?r.list.s.map((e=>oD(e,a))):n}function bD(e,t,n){const a=e[t];return a&&a.list&&a.list.shape?a.list.shape.map((e=>fD(e))):n}function vD(e,t,n){const a=e[t];return a&&a.list&&a.list.b?a.list.b:n}class xD{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return _w(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return _w(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return cD(this.node.rawAttrs,e,t);if(null!=n.s)return iD(this.node.rawAttrs,e,t);if(null!=n.b)return uD(this.node.rawAttrs,e,t);if(null!=n.shape)return mD(this.node.rawAttrs,e,t);if(null!=n.type)return dD(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return gD(this.node.rawAttrs,e,t);if(null!=n.list.s)return yD(this.node.rawAttrs,e,t);if(null!=n.list.shape)return bD(this.node.rawAttrs,e,t);if(null!=n.list.b)return vD(this.node.rawAttrs,e,t);if(null!=n.list.type)return pD(this.node.rawAttrs,e,t)}return t}}function wD(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!==typeof e&&"number"!==typeof t){V(e.length===t.length,(()=>n+" Shapes ".concat(e," and ").concat(t," must match")));for(let a=0;a<e.length;a++){const r=e[a],s=t[a];V(r<0||s<0||r===s,(()=>n+" Shapes ".concat(e," and ").concat(t," must match")))}}}function DD(e){return"number"!==typeof e&&!e.some((e=>e<0))}function kD(e,t,n){let a=CD(e,n);const r=!DD(a);if(r&&0===t.length)throw new Error("Tried to calculate elements of an empty list"+" with non-fully-defined elementShape: ".concat(a));if(r&&t.forEach((e=>{a=CD(e.shape,a)})),!DD(a))throw new Error("Non-fully-defined elementShape: ".concat(a));return a}function CD(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error("Incompatible ranks during merge: ".concat(e," vs. ").concat(t));const n=[];for(let a=0;a<e.length;++a){const r=e[a],s=t[a];if(r>=0&&s>=0&&r!==s)throw new Error("Incompatible shape during merge: ".concat(e," vs. ").concat(t));n[a]=r>=0?r:s}return n}class ND{constructor(e,t,n,a,r,s,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=s,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Lo(0),ys(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(e<0||e>=this.size())throw new Error("Tried to read from index ".concat(e,", but array size is: ").concat(this.size()));const t=this.tensors[e];if(t.cleared)throw new Error("TensorArray ".concat(this.name,": Could not read index ").concat(e," twice because it was cleared after a previous read ")+"(perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error("Tried to write to index ".concat(e,", but array is not resizeable and size is: ").concat(this.maxSize));const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,",\n          because the value dtype is ").concat(t.dtype,", but TensorArray dtype is ").concat(this.dtype,"."));if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),wD(this.elementShape,t.shape,"TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,".")),n.read)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,", because it has already been read."));if(n.written)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,", because it has already been written."));n.tensor=t,ys(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error("TensorArray ".concat(this.name,": could not write multiple tensors,")+"because the index size: ".concat(e.length," is not the same as tensors size: ").concat(t.length,"."));e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but gather requested dtype ").concat(t));if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return ls([],[0].concat(this.elementShape));const n=this.readMany(e);return wD(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),bh(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but concat requested dtype ").concat(e));if(0===this.size())return ls([],[0].concat(this.elementShape));const t=[];for(let a=0;a<this.size();a++)t.push(a);const n=this.readMany(t);return wD(this.elementShape,n[0].shape,"TensorArray shape mismatch: tensor array shape (".concat(this.elementShape,") vs first tensor shape (").concat(n[0].shape,")")),xu(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(t.dtype));if(e.length!==t.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(e.length," vs. ").concat(t.shape[0]));const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error("Max index must be < array size (".concat(n,"  vs. ").concat(this.maxSize,")"));this.writeMany(e,Lh(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(t.dtype));let n=0;const a=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(n,", and tensor's shape is: ").concat(t.shape));if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error("TensorArray's size is not equal to the size of lengths (".concat(this.maxSize," vs. ").concat(e.length,"), ")+"and the TensorArray is not marked as dynamically resizeable");const r=0===n?0:t.size/n,s=[];ms((()=>{t=yu(t,[1,n,r]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:a[n-1],0],i=[1,e[n],r];s[n]=yu(ku(t,o,i),this.elementShape)}return s}));const o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,s)}}class SD{get id(){return this.idTensor.id}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(e.dtype));wD(t,e.shape,"TensorList shape mismatch: "),ys(e)})),this.idTensor=Lo(0),this.maxNumElements=a,ys(this.idTensor)}copy(){return new SD([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));if(-1!==n&&this.tensors.length!==n)throw new Error("Operation expected a list with ".concat(n," elements but got a list with ").concat(this.tensors.length," elements."));wD(e,this.elementShape,"TensorList shape mismatch: ");const a=kD(this.elementShape,this.tensors,e);return ms((()=>{const e=this.tensors.map((e=>yu(e,a)));return bh(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=kD(this.elementShape,this.tensors,e),a=this.tensors.pop();return a.kept=!1,wD(a.shape,e,"TensorList shape mismatch: "),yu(a,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(this.elementDtype));if(wD(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");ys(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: ".concat(e));if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error("TensorListResize input size ".concat(e," is greater maxNumElement ").concat(this.maxNumElements,"."));const t=new SD([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(this.elementDtype));if(e<0||e>this.tensors.length)throw new Error("Trying to access element ".concat(e," in a list with ").concat(this.tensors.length," elements."));if(null==this.tensors[e])throw new Error("element at index ".concat(e," is null."));wD(this.tensors[e].shape,t,"TensorList shape mismatch: ");const a=kD(this.elementShape,this.tensors,t);return yu(this.tensors[e],a)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t.dtype,", but list elements ").concat(this.elementDtype));if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error("Trying to set element ".concat(e," in a list with max ").concat(this.maxNumElements," elements."));wD(this.elementShape,t.shape,"TensorList shape mismatch: "),ys(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));wD(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const a=kD(this.elementShape,this.tensors,n);return 0===e.length?ls([],[0].concat(a)):ms((()=>{const t=e.map((e=>yu(this.tensors[e],a)));return bh(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error("TensorList dtype is ".concat(this.elementDtype," but concat requested dtype ").concat(e));wD(this.elementShape,t,"TensorList shape mismatch: ");const n=kD(this.elementShape,this.tensors,t);return 0===this.size()?ls([],[0].concat(n)):ms((()=>{const e=this.tensors.map((e=>yu(e,n)));return xu(e,0)}))}}const ED=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const a=Rw("thenBranch",e,t,n),r=Rw("elseBranch",e,t,n),s=Rw("cond",e,t,n),o=Rw("args",e,t,n);return(await s.data())[0]?n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const a=Rw("body",e,t,n),r=Rw("cond",e,t,n),s=Rw("args",e,t,n),o=await n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),i=s.map((e=>e.id));let u=await o[0].data();o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let c=s;for(;u[0];){const e=c;c=await n.functionMap[a].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);const t=c.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[r].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return c}case"LoopCond":return[Pw(Rw("pred",e,t,n))];case"Switch":{const a=Rw("pred",e,t,n);let r=Rw("data",e,t,n);return r.kept||(r=Pw(r)),(await a.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const a=e.inputNames.find((e=>void 0!==_w(e,t,n)));if(a){return[Pw(_w(a,t,n))]}return}case"Enter":{const a=Rw("frameName",e,t,n),r=Rw("tensor",e,t,n);return n.enterFrame(a),[Pw(r)]}case"Exit":{const a=Rw("tensor",e,t,n);return n.exitFrame(),[Pw(a)]}case"NextIteration":{const a=Rw("tensor",e,t,n);return n.nextIteration(),[Pw(a)]}case"TensorArrayV3":{const a=Rw("size",e,t,n),r=Rw("dtype",e,t,n),s=Rw("elementShape",e,t,n),o=Rw("dynamicSize",e,t,n),i=Rw("clearAfterRead",e,t,n),u=Rw("identicalElementShapes",e,t,n),c=Rw("name",e,t,n),l=new ND(c,r,a,s,u,o,i);return n.addTensorArray(l),[l.idTensor,Lo(1)]}case"TensorArrayWriteV3":{const a=Rw("tensorArrayId",e,t,n),r=Rw("index",e,t,n),s=Rw("tensor",e,t,n),o=n.getTensorArray(a.id);return o.write(r,s),[o.idTensor]}case"TensorArrayReadV3":{const a=Rw("tensorArrayId",e,t,n),r=Rw("index",e,t,n);return[n.getTensorArray(a.id).read(r)]}case"TensorArrayGatherV3":{const a=Rw("tensorArrayId",e,t,n),r=Rw("indices",e,t,n),s=Rw("dtype",e,t,n);return[n.getTensorArray(a.id).gather(r,s)]}case"TensorArrayScatterV3":{const a=Rw("tensorArrayId",e,t,n),r=Rw("indices",e,t,n),s=Rw("tensor",e,t,n),o=n.getTensorArray(a.id);return o.scatter(r,s),[o.idTensor]}case"TensorArrayConcatV3":{const a=Rw("tensorArrayId",e,t,n),r=n.getTensorArray(a.id),s=Rw("dtype",e,t,n);return[r.concat(s)]}case"TensorArraySplitV3":{const a=Rw("tensorArrayId",e,t,n),r=Rw("tensor",e,t,n),s=Rw("lengths",e,t,n),o=n.getTensorArray(a.id);return o.split(s,r),[o.idTensor]}case"TensorArraySizeV3":{const a=Rw("tensorArrayId",e,t,n);return[Lo(n.getTensorArray(a.id).size(),"int32")]}case"TensorArrayCloseV3":{const a=Rw("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const a=Rw("tensorListId",e,t,n),r=Rw("index",e,t,n),s=Rw("tensor",e,t,n),o=n.getTensorList(a.id);return o.setItem(r,s),[o.idTensor]}case"TensorListGetItem":{const a=Rw("tensorListId",e,t,n),r=Rw("index",e,t,n),s=Rw("elementShape",e,t,n),o=Rw("elementDType",e,t,n);return[n.getTensorList(a.id).getItem(r,s,o)]}case"TensorListScatterV2":case"TensorListScatter":{const a=Rw("indices",e,t,n),r=function(e,t,n,a){if(t.length!==e.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(t.length," vs. ").concat(e.shape[0]));const r=Math.max(...t);if(null!=a&&-1!==a&&r>=a)throw new Error("Max index must be < array size (".concat(r,"  vs. ").concat(a,")"));const s=new SD([],n,e.dtype,a),o=Lh(e,0);return t.forEach(((e,t)=>{s.setItem(e,o[t])})),s}(Rw("tensor",e,t,n),a,Rw("elementShape",e,t,n),Rw("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const a=Rw("elementShape",e,t,n),r=Rw("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const o=Rw(s,e,t,n),i=function(e,t,n,a){return new SD([],e,t,a)}(a,r,0,"TensorListReserve"===e.op?-1:o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const a=Rw("tensorListId",e,t,n),r=Rw("indices",e,t,n),s=Rw("elementShape",e,t,n),o=Rw("elementDType",e,t,n);return[n.getTensorList(a.id).gather(r,o,s)]}case"TensorListStack":{const a=Rw("tensorListId",e,t,n),r=Rw("elementShape",e,t,n),s=Rw("elementDType",e,t,n),o=Rw("numElements",e,t,n);return[n.getTensorList(a.id).stack(r,s,o)]}case"TensorListFromTensor":{const a=function(e,t,n){const a=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: ".concat(e.shape));if(e.dtype!==n)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(n));wD(e.shape.slice(1),t,"TensorList shape mismatch: ");const r=Lh(e);return new SD(r,t,a)}(Rw("tensor",e,t,n),Rw("elementShape",e,t,n),Rw("elementDType",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const a=Rw("tensorListId",e,t,n),r=n.getTensorList(a.id),s=Rw("dtype",e,t,n),o=Rw("elementShape",e,t,n);return[r.concat(s,o)]}case"TensorListPushBack":{const a=Rw("tensorListId",e,t,n),r=Rw("tensor",e,t,n),s=n.getTensorList(a.id);return s.pushBack(r),[s.idTensor]}case"TensorListPopBack":{const a=Rw("tensorListId",e,t,n),r=Rw("elementShape",e,t,n),s=Rw("elementDType",e,t,n);return[n.getTensorList(a.id).popBack(r,s)]}case"TensorListSplit":{const a=Rw("tensor",e,t,n),r=Rw("elementShape",e,t,n),s=function(e,t,n){let a=0;const r=t.map((e=>(a+=e,a)));if(a!==e.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(a,", and tensor's shape is: ").concat(e.shape));const s=CD(e.shape.slice(1),n),o=0===a?0:e.size/a,i=ms((()=>{const n=[];e=yu(e,[1,a,o]);for(let a=0;a<t.length;++a){const i=[0,0===a?0:r[a-1],0],u=[1,t[a],o];n[a]=yu(ku(e,i,u),s)}return e.dispose(),n})),u=new SD([],n,e.dtype,t.length);for(let c=0;c<i.length;c++)u.setItem(c,i[c]);return u}(a,Rw("lengths",e,t,n),r);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{const a=Rw("tensorListId",e,t,n);return[Lo(n.getTensorList(a.id).size(),"int32")]}case"TensorListResize":{const a=Rw("tensorListId",e,t,n),r=Rw("size",e,t,n),s=n.getTensorList(a.id).resize(r);return n.addTensorList(s),[s.idTensor]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}};function ID(e,t,n){const[a,r]=Rw("fusedOps",e,t,n),s="biasadd"===a,o=!s,i="prelu"===r,u="fusedbatchnorm"===a,c=Rw("numArgs",e,t,n);if(s){if(i&&2!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&1!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const l=Rw("strides",e,t,n),h=Bw(e,t,n),d=Rw("dataFormat",e,t,n).toUpperCase(),p=Rw("dilations",e,t,n);let[f,m]=Rw("args",e,t,n);o&&(m=f,f=void 0);return{stride:l,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:Rw("leakyreluAlpha",e,t,n)}}function TD(e,t,n){return{boxes:Rw("boxes",e,t,n),scores:Rw("scores",e,t,n),maxOutputSize:Rw("maxOutputSize",e,t,n),iouThreshold:Rw("iouThreshold",e,t,n),scoreThreshold:Rw("scoreThreshold",e,t,n),softNmsSigma:Rw("softNmsSigma",e,t,n)}}class FD{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Lo(0),this.tensorMap=new Map,ys(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Lo(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),ms((()=>{const e=Lh(t),a=n.length,r=e.length;V(a===r,(()=>"The number of elements doesn't match, keys has "+"".concat(a," elements, the values has ").concat(r," ")+"elements."));for(let t=0;t<a;t++){const a=n[t],r=e[t];ys(r),this.tensorMap.set(a,r)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return ms((()=>{const e=[];for(let a=0;a<n.length;a++){const r=n[a],s=this.findWithDefault(r,t);e.push(s)}return bh(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error("Expect key dtype ".concat(this.keyDType,", but got ")+"".concat(e.dtype));if(t.dtype!==this.valueDType)throw new Error("Expect value dtype ".concat(this.valueDType,", but got ")+"".concat(t.dtype))}}function AD(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:ms;const s=((e,t,n)=>{switch(e.category){case"arithmetic":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[a.add(Rw("a",e,t,n),Rw("b",e,t,n))];case"AddN":return[a.addN(Rw("tensors",e,t,n))];case"FloorMod":case"Mod":return[a.mod(Rw("a",e,t,n),Rw("b",e,t,n))];case"Mul":return[a.mul(Rw("a",e,t,n),Rw("b",e,t,n))];case"RealDiv":case"Div":return[a.div(Rw("a",e,t,n),Rw("b",e,t,n))];case"DivNoNan":return[a.divNoNan(Rw("a",e,t,n),Rw("b",e,t,n))];case"FloorDiv":return[a.floorDiv(Rw("a",e,t,n),Rw("b",e,t,n))];case"Sub":return[a.sub(Rw("a",e,t,n),Rw("b",e,t,n))];case"Minimum":return[a.minimum(Rw("a",e,t,n),Rw("b",e,t,n))];case"Maximum":return[a.maximum(Rw("a",e,t,n),Rw("b",e,t,n))];case"Pow":return[a.pow(Rw("a",e,t,n),Rw("b",e,t,n))];case"SquaredDifference":return[a.squaredDifference(Rw("a",e,t,n),Rw("b",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"basic_math":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"Abs":case"ComplexAbs":return[a.abs(Rw("x",e,t,n))];case"Acos":return[a.acos(Rw("x",e,t,n))];case"Acosh":return[a.acosh(Rw("x",e,t,n))];case"Asin":return[a.asin(Rw("x",e,t,n))];case"Asinh":return[a.asinh(Rw("x",e,t,n))];case"Atan":return[a.atan(Rw("x",e,t,n))];case"Atan2":return[a.atan2(Rw("x",e,t,n),Rw("y",e,t,n))];case"Atanh":return[a.atanh(Rw("x",e,t,n))];case"Ceil":return[a.ceil(Rw("x",e,t,n))];case"Complex":return[a.complex(Rw("real",e,t,n),Rw("imag",e,t,n))];case"Cos":return[a.cos(Rw("x",e,t,n))];case"Cosh":return[a.cosh(Rw("x",e,t,n))];case"Elu":return[a.elu(Rw("x",e,t,n))];case"Erf":return[a.erf(Rw("x",e,t,n))];case"Exp":return[a.exp(Rw("x",e,t,n))];case"Expm1":return[a.expm1(Rw("x",e,t,n))];case"Floor":return[a.floor(Rw("x",e,t,n))];case"Log":return[a.log(Rw("x",e,t,n))];case"Log1p":return[a.log1p(Rw("x",e,t,n))];case"Imag":return[a.imag(Rw("x",e,t,n))];case"Neg":return[a.neg(Rw("x",e,t,n))];case"Reciprocal":return[a.reciprocal(Rw("x",e,t,n))];case"Real":return[a.real(Rw("x",e,t,n))];case"Relu":return[a.relu(Rw("x",e,t,n))];case"Round":return[a.round(Rw("x",e,t,n))];case"Selu":return[a.selu(Rw("x",e,t,n))];case"Sigmoid":return[a.sigmoid(Rw("x",e,t,n))];case"Sin":return[a.sin(Rw("x",e,t,n))];case"Sign":return[a.sign(Rw("x",e,t,n))];case"Sinh":return[a.sinh(Rw("x",e,t,n))];case"Softplus":return[a.softplus(Rw("x",e,t,n))];case"Sqrt":return[a.sqrt(Rw("x",e,t,n))];case"Square":return[a.square(Rw("x",e,t,n))];case"Tanh":return[a.tanh(Rw("x",e,t,n))];case"Tan":return[a.tan(Rw("x",e,t,n))];case"ClipByValue":return[a.clipByValue(Rw("x",e,t,n),Rw("clipValueMin",e,t,n),Rw("clipValueMax",e,t,n))];case"Relu6":return[a.relu6(Rw("x",e,t,n))];case"Rsqrt":return[a.rsqrt(_w(e.inputNames[0],t,n))];case"LeakyRelu":return[a.leakyRelu(Rw("x",e,t,n),Rw("alpha",e,t,n))];case"Prelu":return[a.prelu(Rw("x",e,t,n),Rw("alpha",e,t,n))];case"IsNan":return[a.isNaN(_w(e.inputNames[0],t,n))];case"IsInf":return[a.isInf(_w(e.inputNames[0],t,n))];case"IsFinite":return[a.isFinite(_w(e.inputNames[0],t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"control":return ED(e,t,n);case"convolution":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"Conv1D":{const r=Rw("stride",e,t,n),s=Rw("pad",e,t,n),o=Rw("dataFormat",e,t,n).toUpperCase(),i=Rw("dilation",e,t,n);return[a.conv1d(Rw("x",e,t,n),Rw("filter",e,t,n),r,s,o,i)]}case"Conv2D":{const r=Rw("strides",e,t,n),s=Bw(e,t,n),o=Rw("dataFormat",e,t,n).toUpperCase(),i=Rw("dilations",e,t,n);return[a.conv2d(Rw("x",e,t,n),Rw("filter",e,t,n),[r[1],r[2]],s,o,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:s,dataFormat:o,dilations:i,biasArg:u,preluArg:c,activationFunc:l,leakyreluAlpha:h}=ID(e,t,n);return[a.fused.conv2d({x:Rw("x",e,t,n),filter:Rw("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:u,activation:l,preluActivationWeights:c,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:s,dataFormat:o,dilations:i,biasArg:u,preluArg:c,activationFunc:l,leakyreluAlpha:h}=ID(e,t,n);return[a.fused.depthwiseConv2d({x:Rw("x",e,t,n),filter:Rw("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:u,activation:l,preluActivationWeights:c,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Rw("outputShape",e,t,n),s=Rw("strides",e,t,n),o=Bw(e,t,n);return[a.conv2dTranspose(Rw("x",e,t,n),Rw("filter",e,t,n),r,[s[1],s[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Rw("strides",e,t,n),s=Bw(e,t,n),o=Rw("dilations",e,t,n),i=Rw("dataFormat",e,t,n).toUpperCase();return[a.depthwiseConv2d(Rw("input",e,t,n),Rw("filter",e,t,n),[r[1],r[2]],s,i,[o[1],o[2]])]}case"Conv3D":{const r=Rw("strides",e,t,n),s=Rw("pad",e,t,n),o=Rw("dataFormat",e,t,n).toUpperCase(),i=Rw("dilations",e,t,n);return[a.conv3d(Rw("x",e,t,n),Rw("filter",e,t,n),[r[1],r[2],r[3]],s,o,[i[1],i[2],i[3]])]}case"AvgPool":{const r=Rw("strides",e,t,n),s=Rw("pad",e,t,n),o=Rw("kernelSize",e,t,n);return[a.avgPool(Rw("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s)]}case"MaxPool":{const r=Rw("strides",e,t,n),s=Rw("pad",e,t,n),o=Rw("kernelSize",e,t,n);return[a.maxPool(Rw("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{const r=Rw("strides",e,t,n),s=Rw("pad",e,t,n),o=Rw("kernelSize",e,t,n),i=Rw("includeBatchInIndex",e,t,n),{result:u,indexes:c}=a.maxPoolWithArgmax(Rw("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s,i);return[u,c]}case"AvgPool3D":{const r=Rw("strides",e,t,n),s=Rw("pad",e,t,n),o=Rw("kernelSize",e,t,n);return[a.avgPool3d(Rw("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{const r=Rw("strides",e,t,n),s=Rw("pad",e,t,n),o=Rw("kernelSize",e,t,n);return[a.maxPool3d(Rw("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{const r=Rw("strides",e,t,n),s=Rw("pad",e,t,n),o=Rw("dilations",e,t,n),i=r[1],u=r[2],c=o[1],l=o[2];return[a.dilation2d(Rw("x",e,t,n),Rw("filter",e,t,n),[i,u],s,[c,l],"NHWC")]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"creation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"Fill":{const r=Rw("shape",e,t,n),s=Rw("dtype",e,t,n),o=Rw("value",e,t,n);return[a.fill(r,o,s)]}case"LinSpace":{const r=Rw("start",e,t,n),s=Rw("stop",e,t,n),o=Rw("num",e,t,n);return[a.linspace(r,s,o)]}case"Multinomial":{const r=Rw("logits",e,t,n),s=Rw("numSamples",e,t,n),o=Rw("seed",e,t,n);return[a.multinomial(r,s,o)]}case"OneHot":{const r=Rw("indices",e,t,n),s=Rw("depth",e,t,n),o=Rw("onValue",e,t,n),i=Rw("offValue",e,t,n),u=Rw("dtype",e,t,n);return[a.oneHot(r,s,o,i,u)]}case"Ones":return[a.ones(Rw("shape",e,t,n),Rw("dtype",e,t,n))];case"OnesLike":return[a.onesLike(Rw("x",e,t,n))];case"RandomStandardNormal":return[a.randomStandardNormal(Rw("shape",e,t,n),Rw("dtype",e,t,n),Rw("seed",e,t,n))];case"RandomUniform":return[a.randomUniform(Rw("shape",e,t,n),Rw("minval",e,t,n),Rw("maxval",e,t,n),Rw("dtype",e,t,n))];case"RandomUniformInt":return[a.randomUniformInt(Rw("shape",e,t,n),Rw("minval",e,t,n),Rw("maxval",e,t,n),Rw("seed",e,t,n))];case"Range":{const r=Rw("start",e,t,n),s=Rw("stop",e,t,n),o=Rw("step",e,t,n);return[a.range(r,s,o,Rw("dtype",e,t,n))]}case"TruncatedNormal":{const r=Rw("shape",e,t,n),s=Rw("mean",e,t,n),o=Rw("stdDev",e,t,n),i=Rw("seed",e,t,n);return[a.truncatedNormal(r,s,o,Rw("dtype",e,t,n),i)]}case"Zeros":return[a.zeros(Rw("shape",e,t,n),Rw("dtype",e,t,n))];case"ZerosLike":return[a.zerosLike(Rw("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"dynamic":return async function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:N;switch(e.op){case"NonMaxSuppressionV5":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=TD(e,t,n),l=await r.image.nonMaxSuppressionWithScoreAsync(a,s,o,i,u,c);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=TD(e,t,n),c=Rw("padToMaxOutputSize",e,t,n),l=await r.image.nonMaxSuppressionPaddedAsync(a,s,o,i,u,c);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=TD(e,t,n);return[await r.image.nonMaxSuppressionAsync(a,s,o,i,u)]}case"Where":{const a=r.cast(Rw("condition",e,t,n),"bool"),s=[await r.whereAsync(a)];return a.dispose(),s}case"ListDiff":return r.setdiff1dAsync(Rw("x",e,t,n),Rw("y",e,t,n));default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n);case"evaluation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"LowerBound":{const r=Rw("sortedSequence",e,t,n),s=Rw("values",e,t,n);return[a.lowerBound(r,s)]}case"TopKV2":{const r=Rw("x",e,t,n),s=Rw("k",e,t,n),o=Rw("sorted",e,t,n),i=a.topk(r,s,o);return[i.values,i.indices]}case"UpperBound":{const r=Rw("sortedSequence",e,t,n),s=Rw("values",e,t,n);return[a.upperBound(r,s)]}case"Unique":{const r=Rw("x",e,t,n),s=a.unique(r);return[s.values,s.indices]}case"UniqueV2":{const r=Rw("x",e,t,n),s=Rw("axis",e,t,n),o=a.unique(r,s);return[o.values,o.indices]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"image":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"ResizeBilinear":{const r=Rw("images",e,t,n),s=Rw("size",e,t,n),o=Rw("alignCorners",e,t,n),i=Rw("halfPixelCenters",e,t,n);return[a.image.resizeBilinear(r,[s[0],s[1]],o,i)]}case"ResizeNearestNeighbor":{const r=Rw("images",e,t,n),s=Rw("size",e,t,n),o=Rw("alignCorners",e,t,n),i=Rw("halfPixelCenters",e,t,n);return[a.image.resizeNearestNeighbor(r,[s[0],s[1]],o,i)]}case"CropAndResize":{const r=Rw("image",e,t,n),s=Rw("boxes",e,t,n),o=Rw("boxInd",e,t,n),i=Rw("cropSize",e,t,n),u=Rw("method",e,t,n),c=Rw("extrapolationValue",e,t,n);return[a.image.cropAndResize(r,s,o,i,u,c)]}case"ImageProjectiveTransformV3":{const r=Rw("images",e,t,n),s=Rw("transforms",e,t,n),o=Rw("outputShape",e,t,n),i=Rw("fillValue",e,t,n),u=Rw("interpolation",e,t,n),c=Rw("fillMode",e,t,n);return[a.image.transform(r,s,u.toLowerCase(),c.toLowerCase(),i,o)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"graph":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=Rw("default",e,t,n);return[_w(e.name,t,n)||r];case"Placeholder":return[_w(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[Pw(Rw("x",e,t,n))];case"IdentityN":return Rw("x",e,t,n).map((e=>Pw(e)));case"Shape":return[a.tensor1d(Rw("x",e,t,n).shape,"int32")];case"ShapeN":return Rw("x",e,t,n).map((e=>a.tensor1d(e.shape)));case"Size":return[a.scalar(Rw("x",e,t,n).size,"int32")];case"Rank":return[a.scalar(Rw("x",e,t,n).rank,"int32")];case"NoOp":return[a.scalar(1)];case"Print":const s=Rw("x",e,t,n),o=Rw("data",e,t,n),i=Rw("message",e,t,n),u=Rw("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<o.length;e++)console.log(Array.prototype.slice.call(o[e].dataSync()).slice(0,u));return[s];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"logical":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"Equal":return[a.equal(Rw("a",e,t,n),Rw("b",e,t,n))];case"NotEqual":return[a.notEqual(Rw("a",e,t,n),Rw("b",e,t,n))];case"Greater":return[a.greater(Rw("a",e,t,n),Rw("b",e,t,n))];case"GreaterEqual":return[a.greaterEqual(Rw("a",e,t,n),Rw("b",e,t,n))];case"Less":return[a.less(Rw("a",e,t,n),Rw("b",e,t,n))];case"LessEqual":return[a.lessEqual(Rw("a",e,t,n),Rw("b",e,t,n))];case"LogicalAnd":return[a.logicalAnd(Rw("a",e,t,n),Rw("b",e,t,n))];case"LogicalNot":return[a.logicalNot(Rw("a",e,t,n))];case"LogicalOr":return[a.logicalOr(Rw("a",e,t,n),Rw("b",e,t,n))];case"Select":case"SelectV2":return[a.where(Rw("condition",e,t,n),Rw("a",e,t,n),Rw("b",e,t,n))];case"BitwiseAnd":return[a.bitwiseAnd(Rw("a",e,t,n),Rw("b",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"matrices":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[a.matMul(Rw("a",e,t,n),Rw("b",e,t,n),Rw("transposeA",e,t,n),Rw("transposeB",e,t,n))];case"Einsum":return[a.einsum(Rw("equation",e,t,n),...Rw("tensors",e,t,n))];case"Transpose":return[a.transpose(Rw("x",e,t,n),Rw("perm",e,t,n))];case"_FusedMatMul":const[r,s]=Rw("fusedOps",e,t,n),o="biasadd"===r,i="prelu"===s,u=Rw("numArgs",e,t,n),c=Rw("leakyreluAlpha",e,t,n);if(o){if(i&&2!==u)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==u)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,h]=Rw("args",e,t,n);return[a.fused.matMul({a:Rw("a",e,t,n),b:Rw("b",e,t,n),transposeA:Rw("transposeA",e,t,n),transposeB:Rw("transposeB",e,t,n),bias:l,activation:s,preluActivationWeights:h,leakyreluAlpha:c})];case"MatrixBandPart":return[a.linalg.bandPart(Rw("a",e,t,n),Rw("numLower",e,t,n),Rw("numUpper",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"normalization":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"EuclideanNorm":return[a.euclideanNorm(Rw("x",e,t,n),Rw("axis",e,t,n),Rw("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[a.batchNorm(Rw("x",e,t,n),Rw("mean",e,t,n),Rw("variance",e,t,n),Rw("offset",e,t,n),Rw("scale",e,t,n),Rw("epsilon",e,t,n))];case"LRN":return[a.localResponseNormalization(Rw("x",e,t,n),Rw("radius",e,t,n),Rw("bias",e,t,n),Rw("alpha",e,t,n),Rw("beta",e,t,n))];case"Softmax":return[a.softmax(Rw("x",e,t,n))];case"LogSoftmax":return[a.logSoftmax(Rw("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"ragged":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:s}=a.raggedGather(Rw("paramsNestedSplits",e,t,n),Rw("paramsDenseValues",e,t,n),Rw("indices",e,t,n),Rw("outputRaggedRank",e,t,n));return r.concat(s)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:s}=a.raggedRange(Rw("starts",e,t,n),Rw("limits",e,t,n),Rw("splits",e,t,n));return[r,s]}case"RaggedTensorToTensor":return[a.raggedTensorToTensor(Rw("shape",e,t,n),Rw("values",e,t,n),Rw("defaultValue",e,t,n),Rw("rowPartitionTensors",e,t,n),Rw("rowPartitionTypes",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"reduction":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"Max":{const r=Rw("axis",e,t,n),s=Rw("keepDims",e,t,n);return[a.max(Rw("x",e,t,n),r,s)]}case"Mean":{const r=Rw("axis",e,t,n),s=Rw("keepDims",e,t,n);return[a.mean(Rw("x",e,t,n),r,s)]}case"Min":{const r=Rw("axis",e,t,n),s=Rw("keepDims",e,t,n);return[a.min(Rw("x",e,t,n),r,s)]}case"Sum":{const r=Rw("axis",e,t,n),s=Rw("keepDims",e,t,n);return[a.sum(Rw("x",e,t,n),r,s)]}case"All":{const r=Rw("axis",e,t,n),s=Rw("keepDims",e,t,n);return[a.all(Rw("x",e,t,n),r,s)]}case"Any":{const r=Rw("axis",e,t,n),s=Rw("keepDims",e,t,n);return[a.any(Rw("x",e,t,n),r,s)]}case"ArgMax":{const r=Rw("axis",e,t,n);return[a.argMax(Rw("x",e,t,n),r)]}case"ArgMin":{const r=Rw("axis",e,t,n);return[a.argMin(Rw("x",e,t,n),r)]}case"Prod":{const r=Rw("axis",e,t,n),s=Rw("keepDims",e,t,n);return[a.prod(Rw("x",e,t,n),r,s)]}case"Cumprod":{const r=Rw("axis",e,t,n),s=Rw("exclusive",e,t,n),o=Rw("reverse",e,t,n);return[a.cumprod(Rw("x",e,t,n),r,s,o)]}case"Cumsum":{const r=Rw("axis",e,t,n),s=Rw("exclusive",e,t,n),o=Rw("reverse",e,t,n);return[a.cumsum(Rw("x",e,t,n),r,s,o)]}case"Bincount":const r=Rw("x",e,t,n),s=Rw("weights",e,t,n),o=Rw("size",e,t,n);return[a.bincount(r,s,o)];case"DenseBincount":{const r=Rw("x",e,t,n),s=Rw("weights",e,t,n),o=Rw("size",e,t,n),i=Rw("binaryOutput",e,t,n);return[a.denseBincount(r,s,o,i)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"slice_join":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"ConcatV2":case"Concat":{const r=Rw("n",e,t,n),s=Rw("axis",e,t,n);let o=Rw("tensors",e,t,n);return o=o.slice(0,r),[a.concat(o,s)]}case"Gather":{const r=Rw("x",e,t,n),s=Rw("indices",e,t,n);return[a.gather(r,a.cast(s,"int32"),0)]}case"GatherV2":{const r=Rw("axis",e,t,n),s=Rw("batchDims",e,t,n),o=Rw("x",e,t,n),i=Rw("indices",e,t,n);return[a.gather(o,a.cast(i,"int32"),r,s)]}case"Reverse":{const r=Rw("dims",e,t,n),s=[];for(let e=0;e<r.length;e++)r[e]&&s.push(e);const o=Rw("x",e,t,n);return[a.reverse(o,s)]}case"ReverseV2":{const r=Rw("axis",e,t,n),s=Rw("x",e,t,n);return[a.reverse(s,r)]}case"Slice":{const r=Rw("begin",e,t,n),s=Rw("size",e,t,n);return[a.slice(Rw("x",e,t,n),r,s)]}case"StridedSlice":{const r=Rw("begin",e,t,n),s=Rw("end",e,t,n),o=Rw("strides",e,t,n),i=Rw("beginMask",e,t,n),u=Rw("endMask",e,t,n),c=Rw("ellipsisMask",e,t,n),l=Rw("newAxisMask",e,t,n),h=Rw("shrinkAxisMask",e,t,n),d=Rw("x",e,t,n);return[a.stridedSlice(d,r,s,o,i,u,c,l,h)]}case"Pack":return ms((()=>{const r=Rw("axis",e,t,n),s=Rw("tensors",e,t,n),o=s[0].shape,i=a.squeeze(s[0]).shape,u=s.map((e=>{const t=j(e.shape,o);if(!t&&!j(a.squeeze(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:a.reshape(e,o)}));return[a.stack(u,r)]}));case"Unpack":{const r=Rw("axis",e,t,n),s=Rw("tensor",e,t,n);return a.unstack(s,r)}case"Tile":{const r=Rw("reps",e,t,n);return[a.tile(Rw("x",e,t,n),r)]}case"Split":case"SplitV":{const r=Rw("axis",e,t,n),s=Rw("numOrSizeSplits",e,t,n),o=Rw("x",e,t,n);return a.split(o,s,r)}case"ScatterNd":{const r=Rw("indices",e,t,n),s=Rw("values",e,t,n),o=Rw("shape",e,t,n);return[a.scatterND(r,s,o)]}case"GatherNd":{const r=Rw("x",e,t,n),s=Rw("indices",e,t,n);return[a.gatherND(r,s)]}case"SparseToDense":{const r=Rw("sparseIndices",e,t,n),s=Rw("outputShape",e,t,n),o=Rw("sparseValues",e,t,n),i=Rw("defaultValue",e,t,n);return[a.sparseToDense(r,o,s,o.dtype===i.dtype?i:a.cast(i,o.dtype))]}case"TensorScatterUpdate":{const r=Rw("indices",e,t,n),s=Rw("values",e,t,n),o=Rw("tensor",e,t,n);return[a.tensorScatterUpdate(o,r,s)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"sparse":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:s,emptyRowIndicator:o,reverseIndexMap:i}=a.sparse.sparseFillEmptyRows(Rw("indices",e,t,n),Rw("values",e,t,n),Rw("denseShape",e,t,n),Rw("defaultValue",e,t,n));return[r,s,o,i]}case"SparseReshape":{const{outputIndices:r,outputShape:s}=a.sparse.sparseReshape(Rw("inputIndices",e,t,n),Rw("inputShape",e,t,n),Rw("newShape",e,t,n));return[r,s]}case"SparseSegmentMean":return[a.sparse.sparseSegmentMean(Rw("data",e,t,n),Rw("indices",e,t,n),Rw("segmentIds",e,t,n))];case"SparseSegmentSum":return[a.sparse.sparseSegmentSum(Rw("data",e,t,n),Rw("indices",e,t,n),Rw("segmentIds",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"spectral":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"FFT":return[a.fft(Rw("x",e,t,n))];case"IFFT":return[a.ifft(Rw("x",e,t,n))];case"RFFT":return[a.rfft(Rw("x",e,t,n))];case"IRFFT":return[a.irfft(Rw("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"string":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"StaticRegexReplace":return[a.string.staticRegexReplace(Rw("input",e,t,n),Rw("pattern",e,t,n),Rw("rewrite",e,t,n),Rw("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:r,nGramsSplits:s}=a.string.stringNGrams(Rw("data",e,t,n),Rw("dataSplits",e,t,n),Rw("separator",e,t,n),Rw("nGramWidths",e,t,n),Rw("leftPad",e,t,n),Rw("rightPad",e,t,n),Rw("padWidth",e,t,n),Rw("preserveShortSequences",e,t,n));return[r,s]}case"StringSplit":{const{indices:r,values:s,shape:o}=a.string.stringSplit(Rw("input",e,t,n),Rw("delimiter",e,t,n),Rw("skipEmpty",e,t,n));return[r,s,o]}case"StringToHashBucketFast":return[a.string.stringToHashBucketFast(Rw("input",e,t,n),Rw("numBuckets",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"transformation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"Cast":return[a.cast(Rw("x",e,t,n),Rw("dtype",e,t,n))];case"ExpandDims":{const r=Rw("axis",e,t,n);return[a.expandDims(Rw("x",e,t,n),r)]}case"Squeeze":{const r=Rw("axis",e,t,n);return[a.squeeze(Rw("x",e,t,n),r)]}case"Reshape":return[a.reshape(Rw("x",e,t,n),Rw("shape",e,t,n))];case"EnsureShape":return[a.ensureShape(Rw("x",e,t,n),Rw("shape",e,t,n))];case"MirrorPad":return[a.mirrorPad(Rw("x",e,t,n),Rw("padding",e,t,n),Rw("mode",e,t,n))];case"PadV2":case"Pad":return[a.pad(Rw("x",e,t,n),Rw("padding",e,t,n),Rw("constantValue",e,t,n))];case"SpaceToBatchND":{const r=Rw("blockShape",e,t,n),s=Rw("paddings",e,t,n);return[a.spaceToBatchND(Rw("x",e,t,n),r,s)]}case"BatchToSpaceND":{const r=Rw("blockShape",e,t,n),s=Rw("crops",e,t,n);return[a.batchToSpaceND(Rw("x",e,t,n),r,s)]}case"DepthToSpace":{const r=Rw("blockSize",e,t,n),s=Rw("dataFormat",e,t,n).toUpperCase();return[a.depthToSpace(Rw("x",e,t,n),r,s)]}case"BroadcastTo":return[a.broadcastTo(Rw("x",e,t,n),Rw("shape",e,t,n))];case"BroadcastArgs":return[a.broadcastArgs(Rw("s0",e,t,n),Rw("s1",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"hash_table":return(async(e,t,n,a)=>{switch(e.op){case"HashTable":case"HashTableV2":{const r=a.getHashTableHandleByName(e.name);if(null!=r)return[r];{const r=Rw("keyDType",e,t,n),s=Rw("valueDType",e,t,n),o=new FD(r,s);return a.addHashTable(e.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=Rw("tableHandle",e,t,n,a),s=Rw("keys",e,t,n),o=Rw("values",e,t,n),i=a.getHashTableById(r.id);return[await i.import(s,o)]}case"LookupTableFind":case"LookupTableFindV2":{const r=Rw("tableHandle",e,t,n,a),s=Rw("keys",e,t,n),o=Rw("defaultValue",e,t,n),i=a.getHashTableById(r.id);return[await i.find(s,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=Rw("tableHandle",e,t,n,a);return[a.getHashTableById(r.id).tensorSize()]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}})(e,t,n,a);case"custom":const s=Aw(e.op);if(s&&s.customExecutor)return s.customExecutor(new xD(e,t,n));throw TypeError("Custom op ".concat(e.op," is not registered."));default:throw TypeError("Unknown op '".concat(e.op,"'. File an issue at ")+"https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}})(e,t,n);return ye(s)?s.then((e=>[].concat(e))):[].concat(s)}class RD{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4?arguments[4]:void 0;this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=a,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":"".concat(e.frameName,"-").concat(e.iterationId))).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function _D(e,t,n,a){const r=new Set,s=[];let o=null,i=null;const u=new Set,c=new Set(Object.keys(e).map((e=>zw(e)[0])));a=a||[];const l=new Set(a.map((e=>zw(e.name)[0]))),h=[...t];for(;h.length>0;){const e=h.pop();(PD(e)||WD(e)||VD(e))&&null==o&&(o=e,i=o.children.map((e=>e.name)).filter((e=>r.has(e)))),r.add(e.name),null==n[e.name]&&(c.has(e.name)||l.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),h.push(e))})):s.push(e.name)))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:s,dynamicNode:o,syncInputs:i}}function OD(e,t){const{usedNodes:n,inputs:a}=t,r=Object.keys(a).map((e=>zw(e)[0])).map((t=>e.nodes[t])),s=e.initNodes||[],o=e=>n.has("string"===typeof e?e:e.name);function i(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const u=i([...r,...e.weights,...s]).filter(o),c=i([...u,...Object.values(e.nodes)]).filter(o),l=new Map(c.map((e=>[e.name,e]))),h={};for(const m of c){h[m.name]=h[m.name]||0;for(const e of m.children)o(e)||(h[e.name]=Number.POSITIVE_INFINITY),h[e.name]=(h[e.name]||0)+1}const d=Object.entries(h).filter((e=>{let[,t]=e;return 0===t})).map((e=>{let[t]=e;return t})),p=[...d];for(;d.length>0;){const e=d.pop(),t=l.get(e);for(const n of t.children.filter(o))0===--h[n.name]&&(p.push(n.name),d.push(n.name))}const f=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),a=t.map((e=>e.name)),r=new Set(a);for(;a.length>0;){const e=a.pop(),t=n.get(e);for(const s of t.children)n.has(s.name)&&!r.has(s.name)&&(r.add(s.name),a.push(s.name))}const s=e.filter((e=>r.has(e.name)));return s}(p.map((e=>l.get(e))),u);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),a=new Set(t.map((e=>e.name))),r=e=>a.has("string"===typeof e?e:e.name),s=new Set(e.map((e=>e.name))),o=e=>s.has("string"===typeof e?e:e.name);for(const i of e){for(const e of i.children.filter(o)){if(!n.has(e.name))throw new LD("Child ".concat(e.name," of node ").concat(i.name," is unreachable."));if(n.get(i.name)>n.get(e.name))throw new LD("Node ".concat(i.name," is scheduled to run after its child ").concat(e.name,"."))}if(!r(i))for(const e of i.inputs){if(!n.has(e.name))throw new LD("Input ".concat(e.name," of node ").concat(i.name," is unreachable."));if(n.get(e.name)>n.get(i.name))throw new LD("Node ".concat(i.name," is scheduled to run before its input ").concat(e.name,"."))}}}(f,u),f}class LD extends Error{constructor(e){super("NodesExecutionOrderError: ".concat(e))}}const MD=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),zD=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),BD=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function PD(e){return MD.has(e.op)}function WD(e){return zD.has(e.op)}function VD(e){return BD.has(e.op)}class UD{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?"".concat(t,":").concat(e.defaultOutput):t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new UD(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),a=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(e,t){const n=_D(e,t,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:s}=n;if(null!=r)throw new Error("This execution contains the node '".concat(r.name,"', which has ")+"the dynamic op '".concat(r.op,"'. Please use ")+"model.executeAsync() instead. Alternatively, to avoid the "+"dynamic ops, specify the inputs [".concat(s,"]"));if(a.length>0){const n=t.map((e=>e.name)),r=Object.keys(e);throw new Error("Cannot compute the outputs [".concat(n,"] from the provided inputs ")+"[".concat(r,"]. Missing the following inputs: [").concat(a,"]"))}const o=OD(this.graph,n),i=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,a=e.map(((e,t)=>PD(e)?n:t)),r=e=>{const n=a[t.get(e.name)];return null==n?-1:n},s=e.map(((e,t)=>e.children.map(r).reduce(((e,t)=>Math.max(e,t)),a[t]))),o=new Map;for(let i=0;i<e.length;++i){const t=s[i];if(t===n)continue;const a=e[i],r=e[t];o.has(r.name)||o.set(r.name,[]),o.get(r.name).push(a)}return o}(o);return{orderedNodes:o,nodeLiveUntilMap:i}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return ys(t),t}cloneTensorList(e){if(!e)return null;return e.map((e=>this.cloneAndKeepTensor(e)))}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((e=>{let[t,n]=e;return[t,this.cloneTensorList(n)]})))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const a=n.map((e=>this.graph.nodes[zw(e)[0]])),r=t.map((e=>zw(e)[0])),s=new Set(r);let o=r.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const i=this.getCompilationKey(a,o);let u=this.compiledMap.get(i);null==u&&(u=this.compile(e,o),this.compiledMap.set(i,u));try{this.keepIntermediateTensors=we().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const c={},l={};return ms((()=>{const n=new RD(this.weightMap,c,l,this.functionExecutorMap,this.parseNodeNameCache),a=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[r,s]=zw(t,n),o=[];o[s]=e[t],a[r]=o,this.keepIntermediateTensors&&(this.clonedTensorsMap[r]=this.cloneTensorList(o))}));const r=this.getFrozenTensorIds(a),{orderedNodes:o,nodeLiveUntilMap:i}=u;for(const e of o){if(a[e.name])continue;const t=AD(e,a,n,this._resourceManager);if(ye(t))throw new Error("The execution of the op '".concat(e.op,"' returned a promise. ")+"Please use model.executeAsync() instead.");a[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,a,n,r,s,i.get(e.name))}return null==this.parent&&n.dispose(r),t.map((e=>_w(e,a,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,a,r,s,o){if(!PD(t)&&!s.has(e)){for(const a of n[e])null!=a&&(o[a.id]=(o[a.id]||0)+t.children.length);for(const e of t.inputs){if(PD(e))continue;const t=Ow(e.name,n,a);if(null!=t)for(const e of t){if(!e||e.kept||r.has(e.id))continue;const t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,a,r,s){function o(e){return PD(e)||r.has(e.name)}if(!PD(e)&&null!=s)for(const i of s){if(o(i))continue;const e=Ow(i.name,t,n);for(const t of e)!t||t.kept||a.has(t.id)||t.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=we().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const s=new RD(this.weightMap,a,r,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(e,s,t,n),i=t.map((e=>_w(e,o,s))),u=i.map((e=>e.id)),c=Object.keys(e).map((t=>e[t].id)),l=new Set([...u,...c,...this.weightIds]);return Object.values(o).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||l.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(l),i}async executeFunctionAsync(e,t,n){const a=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(a,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,a){const r=Object.keys(e),s=r.map((e=>this.graph.nodes[zw(e)[0]])),o=n.map((e=>zw(e)[0])),i=new Set(o);let u=o.map((e=>this.graph.nodes[e]));0===u.length&&(u=this._outputs);const{usedNodes:c,missingInputs:l,dynamicNode:h,syncInputs:d}=_D(e,u,this.weightMap,this._initNodes),p=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=zw(t),r=[];r[a]=e[t],f[n]=r}));const m={},g=this.getFrozenTensorIds(f),y={};for(;p.length>0;){const e=this.processStack(s,p,t,f,y,g,i,m,c);await Promise.all(e)}null!=h||a||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=u.filter((e=>!PD(e)&&!_w(e.name,f,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=h&&(e="Alternatively, to avoid the dynamic ops, use model.execute() "+"and specify the inputs [".concat(d,"]")),new Error("Cannot compute the outputs [".concat(b,"] from the provided ")+"inputs [".concat(r,"]. Consider providing the following inputs: ")+"[".concat(l,"]. ").concat(e))}return f}processStack(e,t,n,a,r,s,o,i,u){const c=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let l="";if("Enter"===e.node.op&&Rw("isConstant",e.node,a,n)&&([l]=Lw(e.node.name,n)),null==a[e.node.name]){const h=AD(e.node,a,n,this._resourceManager);l||([l]=Lw(e.node.name,n));const d=n.currentContext;ye(h)?c.push(h.then((c=>(a[l]=c,this.keepIntermediateTensors&&(this.clonedTensorsMap[l]=this.cloneTensorList(c)),n.currentContext=d,this.checkTensorForDisposal(l,e.node,a,n,s,o,i),this.processChildNodes(e.node,t,n,a,r,u),c)))):(a[l]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[l]=this.cloneTensorList(h)),this.checkTensorForDisposal(l,e.node,a,n,s,o,i),this.processChildNodes(e.node,t,n,a,r,u))}else this.processChildNodes(e.node,t,n,a,r,u)}return c}processChildNodes(e,t,n,a,r,s){e.children.forEach((e=>{const[o]=Lw(e.name,n);!r[o]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!_w(e,a,n)))&&(r[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!_w(e,a,n)))&&(r[o]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[a]=zw(t),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){const e=r.attrParams.shape.value;V(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>"The shape of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be [".concat(e,"], but was ")+"[".concat(n.shape,"]")))}r.attrParams.dtype&&r.attrParams.dtype.value&&V(n.dtype===r.attrParams.dtype.value,(()=>"The dtype of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be "+"".concat(r.attrParams.dtype.value,", but was ").concat(n.dtype)))}))}mapInputs(e){var t,n;const a={};for(const r in e){const s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[r];null!=s?a[s.name]=e[r]:a[r]=e[r]}return a}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=zw(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error("The dict provided in model.execute(dict) has "+"keys: [".concat(t,"] that are not part of graph"))}mapOutputs(e){return e.map((e=>{var t,n;const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=a?a.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=zw(e);if(!this.graph.nodes[t])throw new Error("The output '".concat(e,"' is not found in the graph"))}))}}class GD{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}const HD="?tfjs-format=file",jD="model.json";class qD{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e;this.modelUrl=t,this.loadOptions=n,this.version="n/a",this.io=a,null==n&&(this.loadOptions={}),this.resourceManager=new GD}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error("Found more than one (".concat(t.length,") load handlers for ")+"URL '".concat([e],"'"));this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return ye(e)?e.then((e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e))):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await Es(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let a=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(a=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=a,this.version="".concat(n.versions.producer,".").concat(n.versions.minConsumer),this.executor=new UD(sD.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=sD.Instance.transformGraph(e.modelInitializer);this.initializer=new UD(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"===typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error("Cannot find any save handlers for URL '".concat(e,"'"));if(t.length>1)throw new Error("Found more than one (".concat(t.length,") save handlers for ")+"URL '".concat(e,"'"));e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t={};return(e instanceof Ir?[e]:e).forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof Ir)&&!Array.isArray(e)){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const a=n[t];null!=a.resourceId&&(e[t]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error("Input tensor count mismatch, the graph model has ".concat(this.inputNodes.length-n," non-resource placeholders, while there are ").concat(e.length," input tensors provided."));let a=0;return this.inputNodes.reduce(((t,n)=>{var r,s,o;const i=null===(o=null===(s=null===(r=this.signature)||void 0===r?void 0:r.inputs)||void 0===s?void 0:s[n])||void 0===o?void 0:o.resourceId;return t[n]=null!=i?this.resourceIdToCapturedInput[i]:e[a++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let a=0;a<n.length;a++){const r=t[n[a]];this.resourceIdToCapturedInput[r.resourceId]=e[a]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&gs(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function KD(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e;if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==n&&(n={}),n.fromTFHub&&"string"===typeof t&&(t=function(e){e.endsWith("/")||(e+="/");return"".concat(e).concat(jD).concat(HD)}(t));const r=new qD(t,n,a);return await r.load(),r}function XD(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(a.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(JD(e)){const r=Array.isArray(e)?[]:{};a.add(e);for(const s in e){const o=XD(e[s],t,n,a);r[s]=o}return a.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error("Can't recurse into non-iterable type: ".concat(e))}return n.set(e,r.value),r.value}function YD(e){return QD(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:ZD)}function QD(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const a=e[0];if(n.has(a))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(JD(a)){const r=Array.isArray(a)?[]:{};n.add(a);for(const s in a){const a=QD(e.map((e=>e[s])),t,n);r[s]=a}return n.delete(a),r}throw new Error("Can't recurse into non-iterable type: ".concat(a))}return r.value}function ZD(e){return null===e?null:JD(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function JD(e){let t=!1;if(we().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:a}=n(551);t=e instanceof a}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof Ir)&&!(e instanceof Promise)&&!t)}function $D(e){return function(e,t){return XD(e,t)}(e,ek)}function ek(e){return e instanceof Ir?{value:e.clone(),recurse:!1}:JD(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class tk{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class nk extends tk{constructor(){super(nk.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let a=0;a<n;a++)t[a]=this.get(this.wrap(this.begin+a));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function ak(e){return new ik(e)}function rk(e,t){return new bk(e,t)}nk.INITIAL_CAPACITY=32;class sk{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new fk(this,e)}filter(e){return new dk(this,e)}map(e){return new pk(this,e)}mapAsync(e){return new mk(this,e)}serialMapAsync(e){return new mk(this,e).serial()}flatmap(e){return new yk(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e){return new hk(this,e,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:ZD;return this.rowMajorBatch(e,t).map((e=>YD(e,n)))}concatenate(e,t){return new bk(new ok([this,e]),t)}take(e){return e<0||null==e?this:new lk(this,e)}skip(e){return e<0||null==e?this:new ck(this,e)}prefetch(e){return new xk(this,e)}shuffle(e,t){return new wk(this,e,t)}serial(){return new uk(this)}}class ok extends sk{constructor(e){super(),this.items=e,this.trav=0}summary(){return"Array of ".concat(this.items.length," items")}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:$D(e),done:!1}}}class ik extends sk{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message="Error thrown while iterating through a dataset: ".concat(e.message),e}}}class uk extends sk{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Serial")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class ck extends sk{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Skip")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;gs(e.value)}return this.upstream.next()}}class lk extends sk{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return"".concat(this.upstream.summary()," -> Take")}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class hk extends sk{constructor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> RowMajorBatch")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class dk extends sk{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Filter")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;gs(e.value)}}}class pk extends sk{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> Map")}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Gr(e.value),n=this.transform(e.value),a=Gr(n);for(const r of t)Ur(r,a)||r.dispose();return{value:n,done:!1}}}class fk extends sk{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> handleErrors")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class mk extends sk{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> AsyncMap")}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Gr(e.value),n=await this.transform(e.value),a=Gr(n);for(const r of t)Ur(r,a)||r.dispose();return{value:n,done:!1}}}class gk extends sk{constructor(){super(),this.outputQueue=new nk,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class yk extends gk{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> Flatmap")}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Gr(e.value),n=this.transform(e.value),a=Gr(n);this.outputQueue.pushAll(n);for(const r of t)Ur(r,a)||r.dispose();return!0}}class bk extends sk{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"".concat("TODO: fill in upstream of chained summaries"," -> Chained")}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var vk;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(vk||(vk={}));class xk extends sk{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new tk(t)}summary(){return"".concat(this.upstream.summary()," -> Prefetch")}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class wk extends xk{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=_l.alea(n||hr().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Dk{constructor(){this.size=null}batch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let a;return V(e>0,(()=>"batchSize needs to be positive, but it is\n      ".concat(e))),a=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),kk((async()=>(await n.iterator()).columnMajorBatch(e,t,Ck)),a)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,kk((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,kk((async()=>(await t.iterator()).filter((t=>ms((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return kk((async()=>(await t.iterator()).map((t=>ms((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return kk((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return kk((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,kk((async()=>rk(ak((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,kk((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError("`Dataset.shuffle()` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for `tf.Tensor`s), consider setting "+"bufferSize to the dataset size (".concat(this.size," elements)"));const a=this,r=_l.alea(t||hr().toString());return kk((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await a.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,kk((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function kk(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends Dk{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Ck(e){if(null===e)return null;if(function(e){return null==e||null===(t=e)||"object"!==typeof t&&"function"!==typeof t||Array.isArray(e)||"object"===typeof e&&e instanceof Ir||fr(e);var t}(e[0])){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Ir?bh(e):ls(e)}(e),recurse:!1}}return{value:null,recurse:!0}}Dk.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");function Nk(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&V("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors in the CPU backend.")))}))}const Sk=Bh;class Ek extends L{nextDataId(){return Ek.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new O(this,ps())}write(e,t,n){this.firstUse&&(this.firstUse=!1,we().get("IS_NODE")&&Ba("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&ae(n[0])){const r=n.map((e=>dr(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,a,r){this.data.set(e,{values:t,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){return zp(this.readSync(n.real.dataId),this.readSync(n.imag.dataId))}return function(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error("Unknown dtype ".concat(t))}(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>pr(e)));return ko(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return ko(e.shape,e.dtype,t)}makeOutput(e,t,n){return ps().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=hr();e();return{kernelMs:hr()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Nk([e],"where");const t=this.readSync(e.dataId);return Sk(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Ek.nextDataId=0;function Ik(e){return(t,n,a)=>{const r=ee(n,t.length);for(let s=0;s<t.length;++s)r[s]=e(t[s],a);return r}}function Tk(e,t,n){return Fk(e,Ik(t),n)}function Fk(e,t,n){return a=>{let{inputs:r,attrs:s,backend:o}=a;const{x:i}=r;Nk(i,e);const u=o,c=u.data.get(i.dataId).values;let l;if("string"===i.dtype){if(!Array.isArray(c))throw new Error("String tensor's value was not an instance of Array");l=bf(c)}else l=c;const h=n||i.dtype,d=t(l,h,s);return u.makeTensorInfo(i.shape,h,d)}}bs("cpu",(()=>new Ek),1);const Ak=Tk(Ct,(e=>e>=0?e:Math.exp(e)-1)),Rk={kernelName:Ct,backendName:"cpu",kernelFunc:Ak};function _k(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const Ok={kernelName:Vt,backendName:"cpu",kernelFunc:_k};function Lk(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a;Nk([r],"leakyRelu");const o=H(r.shape),i=n.data.get(r.dataId).values,u=$("float32",o);for(let c=0;c<i.length;c++)u[c]=i[c]<0?s*i[c]:i[c];return n.makeTensorInfo(r.shape,"float32",u)}const Mk={kernelName:Kt,backendName:"cpu",kernelFunc:Lk};function zk(e){return(t,n,a,r,s)=>{const o=Zo(t,n),i=o.length,u=ue(o),c=$(s,H(o)),l=t.length,h=n.length,d=ue(t),p=ue(n),f=Yo(t,o),m=Yo(n,o);if(f.length+m.length===0)for(let g=0;g<c.length;++g)c[g]=e(a[g%a.length],r[g%r.length]);else for(let g=0;g<c.length;++g){const t=ge(g,i,u),n=t.slice(-l);f.forEach((e=>n[e]=0));const s=me(n,l,d),o=t.slice(-h);m.forEach((e=>o[e]=0));const y=me(o,h,p);c[g]=e(a[s],r[y])}return[c,o]}}const Bk=zk(((e,t)=>e<0?t*e:e));function Pk(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t;Nk([a,r],"prelu");const s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,[i,u]=Bk(a.shape,r.shape,s,o,"float32");return n.makeTensorInfo(u,"float32",i)}const Wk={kernelName:Tn,backendName:"cpu",kernelFunc:Pk},Vk=Tk(zn,(e=>Math.max(0,e))),Uk={kernelName:zn,backendName:"cpu",kernelFunc:Vk},Gk=Tk(Gn,(e=>Math.min(Math.max(0,e),6))),Hk={kernelName:Gn,backendName:"cpu",kernelFunc:Gk},jk=Ik((e=>1/(1+Math.exp(-e)))),qk=Tk(na,(e=>1/(1+Math.exp(-e)))),Kk={kernelName:na,backendName:"cpu",kernelFunc:qk};function Xk(e,t,n,a,r){if("linear"===n)return _k({inputs:{x:t},backend:e});if("relu"===n)return Vk({inputs:{x:t},backend:e});if("elu"===n)return Ak({inputs:{x:t},backend:e});if("relu6"===n)return Gk({inputs:{x:t},backend:e});if("prelu"===n)return Pk({inputs:{x:t,alpha:a},backend:e});if("leakyrelu"===n)return Lk({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return qk({inputs:{x:t},backend:e});throw new Error("Activation ".concat(n," has not been implemented for the CPU backend."))}function Yk(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,i=n.makeTensorInfo(a.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",s),imag:n.makeTensorInfo(r.shape,"float32",o)},i}const Qk={kernelName:Je,backendName:"cpu",kernelFunc:Yk};function Zk(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){return Yk({inputs:{real:Zk(e,t,"float32"),imag:Zk(e,t,"float32")},backend:e})}const a=de(H(t),n);return e.makeTensorInfo(t,n,a)}function Jk(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.real,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const $k={kernelName:Ln,backendName:"cpu",kernelFunc:Jk};function eC(e,t,n,a){if("int32"===a){return[t,"int32",Int32Array.from(e)]}if("bool"===a){const a=lr([0],n),[r,s]=zk(((e,t)=>e!==t?1:0))(t,[],e,a,"bool");return[s,"bool",r]}throw new Error("Error in Cast: failed to cast ".concat(n," to ").concat(a))}function tC(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dtype:s}=a;if("complex64"===s){if("complex64"===r.dtype)return _k({inputs:{x:r},backend:n});const e=Zk(n,r.shape,r.dtype),t=tC({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=Yk({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),a}if("complex64"===r.dtype){const e=Jk({inputs:{input:r},backend:n}),t=tC({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!te(r.dtype,s)){const e=_k({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}const o=n.data.get(r.dataId).values,[i,u,c]=eC(o,r.shape,r.dtype,s);return n.makeTensorInfo(i,u,c)}const nC={kernelName:Ye,backendName:"cpu",kernelFunc:tC};function aC(e,t,n,a){return null==n?n=>{let{inputs:r,backend:s}=n;const{a:o,b:i}=r,u=s;Nk([o,i],e);const c=u.data.get(o.dataId).values,l=u.data.get(i.dataId).values,h="string"===o.dtype?bf(c):c,d="string"===o.dtype?bf(l):l,p=a||o.dtype,[f,m]=t(o.shape,i.shape,h,d,p);return u.makeTensorInfo(m,p,f)}:e=>{let{inputs:r,backend:s}=e;const{a:o,b:i}=r,u=s;if("complex64"===o.dtype||"complex64"===i.dtype){const e=tC({inputs:{x:o},backend:u,attrs:{dtype:"complex64"}}),t=u.data.get(e.dataId),a=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,s=u.data.get(a.dataId).values,c=u.data.get(r.dataId).values,l=tC({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),h=u.data.get(l.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=u.data.get(d.dataId).values,m=u.data.get(p.dataId).values,[g,y,b]=n(o.shape,i.shape,s,c,f,m),v=u.makeTensorInfo(b,"float32",g),x=u.makeTensorInfo(b,"float32",y),w=Yk({inputs:{real:v,imag:x},backend:u});return u.disposeIntermediateTensorInfo(e),u.disposeIntermediateTensorInfo(l),u.disposeIntermediateTensorInfo(v),u.disposeIntermediateTensorInfo(x),w}{const e=u.data.get(o.dataId).values,n=u.data.get(i.dataId).values,r=a||o.dtype,[s,c]=t(o.shape,i.shape,e,n,r);return u.makeTensorInfo(c,r,s)}}}function rC(e){return(t,n,a,r,s,o)=>{const i=Zo(t,n),u=H(i),c=i.length,l=ue(i),h=$("float32",u),d=$("float32",u),p=Yo(t,i),f=Yo(n,i),m=zp(a,r),g=zp(s,o),y=t.length,b=ue(t),v=n.length,x=ue(n);if(p.length+f.length===0)for(let w=0;w<h.length;w++){const t=w%m.length,n=w%g.length,a=e(m[2*t],m[2*t+1],g[2*n],g[2*n+1]);h[w]=a.real,d[w]=a.imag}else for(let w=0;w<h.length;w++){const t=ge(w,c,l),n=t.slice(-y);p.forEach((e=>n[e]=0));const a=me(n,y,b),r=t.slice(-v);f.forEach((e=>r[e]=0));const s=me(r,v,x),o=e(m[2*a],m[2*a+1],g[2*s],g[2*s+1]);h[w]=o.real,d[w]=o.imag}return[h,d,i]}}const sC=zk(((e,t)=>e+t)),oC=rC(((e,t,n,a)=>({real:e+n,imag:t+a}))),iC=aC(Te,sC,oC),uC={kernelName:Te,backendName:"cpu",kernelFunc:iC};function cC(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,o=H(r.shape),i=Q(s,o),u=H(i);V(o===u,(()=>"The new shape (".concat(i,") has ").concat(u," elements and the old ")+"shape (".concat(r.shape,") has ").concat(o," elements. The new shape and old ")+"shape must have the same number of elements.")),n.incRef(r.dataId);const c=n.data.get(r.dataId);if(null!=c.complexTensorInfos){const e=c.complexTensorInfos.real,t=c.complexTensorInfos.imag;e.shape=i,t.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}const lC={kernelName:Bn,backendName:"cpu",kernelFunc:cC};function hC(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:o,transposeB:i}=a;Nk([r,s],"matMul");const u=r.shape.length,c=s.shape.length,l=o?r.shape[u-2]:r.shape[u-1],h=i?s.shape[c-1]:s.shape[c-2],d=o?r.shape[u-1]:r.shape[u-2],p=i?s.shape[c-2]:s.shape[c-1],f=r.shape.slice(0,-2),m=s.shape.slice(0,-2),g=H(f),y=H(m),b=Zo(r.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,p]);V(l===h,(()=>"Error in matMul: inner shapes (".concat(l,") and (")+"".concat(h,") of Tensors with shapes ").concat(r.shape," and ")+"".concat(s.shape," and transposeA=").concat(o)+" and transposeB=".concat(i," must match.")));const v=i?[y,p,h]:[y,h,p],x=cC({inputs:{x:r},backend:n,attrs:{shape:o?[g,l,d]:[g,d,l]}}),w=cC({inputs:{x:s},backend:n,attrs:{shape:v}}),D=o?x.shape[1]:x.shape[2],k=o?x.shape[2]:x.shape[1],C=i?w.shape[1]:w.shape[2],N=Math.max(g,y),S=n.data.get(x.dataId).values,E=n.data.get(w.dataId).values,I=ue(x.shape),T=ue(w.shape),[F,A,R]=o?[I[0],1,I[1]]:[I[0],I[1],1],[_,O,L]=i?[1,T[1],T[0]]:[T[1],1,T[0]],M=k*C,z=ko([N,k,C],x.dtype),B=z.values,P=n.blockSize;for(let W=0;W<N;W++){const e=W%g,t=W%y;for(let n=0;n<k;n+=P){const a=Math.min(n+P,k);for(let r=0;r<C;r+=P){const s=Math.min(r+P,C);for(let o=0;o<D;o+=P){const i=Math.min(o+P,D);for(let u=n;u<a;u++)for(let n=r;n<s;n++){let a=0;for(let r=o;r<i;r++){a+=S[e*F+u*A+r*R]*E[r*_+n*O+t*L]}B[W*M+(u*C+n)]+=a}}}}}return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,z.dtype,z.values)}const dC={kernelName:He,backendName:"cpu",kernelFunc:hC};const pC={kernelName:La,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:h}=a;let d,p,f;const m=[];d=hC({inputs:{a:r,b:s},attrs:{transposeA:u,transposeB:c},backend:n}),o&&(p=iC({inputs:{a:d,b:o},backend:n}),m.push(d),d=p),l&&(f=Xk(n,d,l,i,h),m.push(d),d=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return d}};function fC(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const mC={kernelName:Se,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;Nk(t,"abs");let a=new Float32Array(H(t.shape));return a=fC(n.data.get(t.dataId).values),n.makeOutput(a,t.shape,t.dtype)}},gC=Tk(Ee,(e=>Math.acos(e))),yC={kernelName:Ee,backendName:"cpu",kernelFunc:gC},bC=Tk(Ie,(e=>Math.acosh(e))),vC={kernelName:Ie,backendName:"cpu",kernelFunc:bC};const xC={kernelName:Fe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,a=t;Nk(t,"addN");const r=a.map((e=>n.data.get(e.dataId).values)),s=ko(a[0].shape,a[0].dtype),o=s.values;for(let i=0;i<a.length;i++){const e=r[i];for(let t=0;t<o.length;t++)o[t]+=e[t]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function wC(e,t,n,a,r){const s=t.length,o=H(t),i=ue(t),u=ue(r),c=$(n,H(r));for(let l=0;l<o;++l){const t=ge(l,s,i),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[a[e]];c[me(n,s,u)]=e[l]}return c}function DC(e){const{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{perm:s}=n;Nk(r,"transpose");const o=r.shape.length,i=new Array(o);for(let c=0;c<i.length;c++)i[c]=r.shape[s[c]];const u=wC(a.data.get(r.dataId).values,r.shape,r.dtype,s,i);return{dataId:a.write(u,i,r.dtype),shape:i,dtype:r.dtype}}const kC={kernelName:Ea,backendName:"cpu",kernelFunc:DC};const CC={kernelName:Ae,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;Nk(r,"all");const i=Z(s,r.shape);let u=i;const c=gc(u,r.shape.length);let l=r;null!=c&&(l=DC({inputs:{x:r},backend:n,attrs:{perm:c}}),u=bc(u.length,r.shape.length)),mc("all",u,l.shape.length);const[h,d]=pc(l.shape,u),p=H(d),f=de(H(h),l.dtype),m=n.data.get(l.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const a=m[e+n];t=t&&a}f[y]=t}null!=c&&n.disposeIntermediateTensorInfo(l);const g=n.makeTensorInfo(h,l.dtype,f);if(o){const e=cC({inputs:{x:g},backend:n,attrs:{shape:fc(h,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const NC={kernelName:Re,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;Nk(r,"any");const i=Z(s,r.shape);let u=i;const c=gc(u,r.shape.length);let l=r;null!=c&&(l=DC({inputs:{x:r},backend:n,attrs:{perm:c}}),u=bc(u.length,r.shape.length)),mc("any",u,l.shape.length);const[h,d]=pc(l.shape,u),p=H(d),f=de(H(h),l.dtype),m=n.data.get(l.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const a=m[e+n];t=t||a}f[y]=t}null!=c&&n.disposeIntermediateTensorInfo(l);const g=n.makeTensorInfo(h,l.dtype,f);if(o){const e=cC({inputs:{x:g},backend:n,attrs:{shape:fc(h,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const SC={kernelName:_e,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;Nk(r,"argMax");let o=Z(s,r.shape);const i=gc(o,r.shape.length);let u=r;const c=[];null!=i&&(u=DC({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(u),o=bc(o.length,u.shape.length)),o=[o[0]],mc("argMax",o,u.shape.length);const[l,h]=pc(u.shape,o),d=de(H(l),"int32"),p=H(h),f=n.data.get(u.dataId).values;for(let m=0;m<d.length;++m){const e=m*p;let t=f[e],n=0;for(let a=0;a<p;++a){const r=f[e+a];r>t&&(t=r,n=a)}d[m]=n}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l,"int32",d)}};const EC={kernelName:Oe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;Nk(r,"argMin");let o=Z(s,r.shape);const i=gc(o,r.shape.length);let u=r;const c=[];null!=i&&(u=DC({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(u),o=bc(o.length,u.shape.length)),o=[o[0]],mc("argMin",o,u.shape.length);const[l,h]=pc(u.shape,o),d=de(H(l),"int32"),p=H(h),f=n.data.get(u.dataId).values;for(let m=0;m<d.length;++m){const e=m*p;let t=f[e],n=0;for(let a=0;a<p;++a){const r=f[e+a];r<t&&(t=r,n=a)}d[m]=n}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l,"int32",d)}},IC=Tk(Le,(e=>Math.asin(e))),TC={kernelName:Le,backendName:"cpu",kernelFunc:IC},FC=Tk(Me,(e=>Math.asinh(e))),AC={kernelName:Me,backendName:"cpu",kernelFunc:FC},RC=Tk(ze,(e=>Math.atan(e))),_C={kernelName:ze,backendName:"cpu",kernelFunc:RC},OC=zk(((e,t)=>Math.atan2(e,t))),LC=aC(Pe,OC),MC={kernelName:Pe,backendName:"cpu",kernelFunc:LC},zC=Tk(Be,(e=>Math.atanh(e))),BC={kernelName:Be,backendName:"cpu",kernelFunc:zC};function PC(e,t,n,a,r,s){const o=r.strideHeight,i=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,l=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=ko(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],v=r.outShape[3];for(let x=0;x<r.batchSize;++x){const t=x*y,n=x*a[0];for(let m=0;m<r.inChannels;++m)for(let y=0;y<r.outHeight;++y){const x=y*o-d,w=Math.max(0,x),D=Math.min(r.inHeight,l+x),k=t+y*b;for(let t=0;t<r.outWidth;++t){const o=t*i-p,l=Math.max(0,o),d=Math.min(r.inWidth,h+o);let y=f,b=0,x=0;for(let t=w;t<D;t+=u){const r=n+t*a[1];for(let t=l;t<d;t+=c){const n=e[r+t*a[2]+m];"max"===s&&n>y?y=n:"avg"===s&&(b+=n,x++)}if(isNaN(y))break}g[k+t*v+m]="avg"===s?b/x:y}}}return m}function WC(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=ko(a.outShape,"int32"),i=a.strideHeight,u=a.strideWidth,c=a.dilationHeight,l=a.dilationWidth,h=a.effectiveFilterHeight,d=a.effectiveFilterWidth,p=a.padInfo.top,f=a.padInfo.left,m=ko(t,n,e);for(let g=0;g<a.batchSize;++g)for(let e=0;e<a.inChannels;++e)for(let t=0;t<a.outHeight;++t){const n=t*i-p;let y=n;for(;y<0;)y+=c;const b=Math.min(a.inHeight,h+n);for(let i=0;i<a.outWidth;++i){const h=i*u-f;let p=h;for(;p<0;)p+=l;const v=Math.min(a.inWidth,d+h);let x=Number.NEGATIVE_INFINITY,w=-1;for(let t=y;t<b;t+=c){const o=t-n;for(let n=p;n<v;n+=l){const i=n-h,u=m.get(g,t,n,e);u>x&&(x=u,w=r?s?((g*a.inHeight+t)*a.inWidth+n)*a.inChannels+e:(t*a.inWidth+n)*a.inChannels+e:o*d+i)}}o.set(w,g,t,i,e)}}return o}function VC(e,t,n,a,r,s){const o=r.strideDepth,i=r.strideHeight,u=r.strideWidth,c=r.dilationDepth,l=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=ko(r.outShape,n),x=v.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],D=r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[3]*r.outShape[4],C=r.outShape[4];for(let N=0;N<r.batchSize;++N){const t=N*w,n=N*a[0];for(let v=0;v<r.inChannels;++v)for(let w=0;w<r.outDepth;++w){const N=w*o-m;let S=N;for(;S<0;)S+=c;const E=Math.min(r.inDepth,d+N),I=t+w*D;for(let t=0;t<r.outHeight;++t){const o=t*i-g;let d=o;for(;d<0;)d+=l;const m=Math.min(r.inHeight,p+o),w=I+t*k;for(let t=0;t<r.outWidth;++t){const o=t*u-y;let i=o;for(;i<0;)i+=h;const p=Math.min(r.inWidth,f+o),g=w+t*C;let D=b,k=0,N=0;for(let t=S;t<E;t+=c){const r=n+t*a[1];for(let t=d;t<m;t+=l){const n=r+t*a[2];for(let t=i;t<p;t+=h){const r=e[n+t*a[3]+v];if("max"===s&&r>D?D=r:"avg"===s&&(k+=r,N++),isNaN(D))break}if(isNaN(D))break}if(isNaN(D))break}x[g+v]="avg"===s?k/Math.max(N,1):D}}}}return v}const UC={kernelName:We,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;Nk(r,"avgPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:u}=a;V(pu(o,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const c=au(r.shape,s,o,1,i,u);let l;if(1===c.filterWidth&&1===c.filterHeight&&j(c.inShape,c.outShape))l=_k({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=ue(r.shape),a=PC(e,r.shape,r.dtype,t,c,"avg");l=n.makeTensorInfo(c.outShape,r.dtype,a.values)}return l}};const GC={kernelName:Ue,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:u,dataFormat:c}=a;Nk(r,"avgPool3d");const l=ru(r.shape,s,o,1,i,u,c),h=VC(n.data.get(r.dataId).values,r.shape,r.dtype,ue(r.shape),l,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};const HC={kernelName:Ge,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:o,strides:i,pad:u,dimRoundingMode:c}=a;Nk([r,s],"avgPool3DGrad");const l=ru(s.shape,o,i,1,u,c),h=l.strideDepth,d=l.strideHeight,p=l.strideWidth,f=l.filterDepth,m=l.filterHeight,g=l.filterWidth,y=l.dilationDepth,b=l.dilationHeight,v=l.dilationWidth,x=l.effectiveFilterDepth,w=l.effectiveFilterHeight,D=l.effectiveFilterWidth,k=x-1-l.padInfo.front,C=D-1-l.padInfo.left,N=w-1-l.padInfo.top,S=ko(s.shape,"float32"),E=1/(f*m*g),I=n.bufferSync(r);for(let T=0;T<l.batchSize;++T)for(let e=0;e<l.inChannels;++e)for(let t=0;t<l.inDepth;++t)for(let n=0;n<l.inHeight;++n)for(let a=0;a<l.inWidth;++a){const r=t-k,s=n-N,o=a-C;let i=0;for(let t=0;t<x;t+=y){const n=(r+t)/h;if(!(n<0||n>=l.outDepth||Math.floor(n)!==n))for(let t=0;t<w;t+=b){const a=(s+t)/d;if(!(a<0||a>=l.outHeight||Math.floor(a)!==a))for(let t=0;t<D;t+=v){const r=(o+t)/p;if(r<0||r>=l.outWidth||Math.floor(r)!==r)continue;i+=I.get(T,n,a,r,e)}}}S.set(i*E,T,t,n,a,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const jC={kernelName:Ve,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s;Nk([r,s],"avgPoolGrad");const{filterSize:i,strides:u,pad:c}=a,l=au(o.shape,i,u,1,c),h=l.strideHeight,d=l.strideWidth,p=l.filterHeight,f=l.filterWidth,m=l.dilationHeight,g=l.dilationWidth,y=l.effectiveFilterHeight,b=l.effectiveFilterWidth,v=b-1-l.padInfo.left,x=y-1-l.padInfo.top,w=ko(o.shape,"float32"),D=1/(p*f),k=n.data.get(r.dataId).values,C=ko(r.shape,"float32",k);for(let N=0;N<l.batchSize;++N)for(let e=0;e<l.inChannels;++e)for(let t=0;t<l.inHeight;++t)for(let n=0;n<l.inWidth;++n){const a=t-x,r=n-v;let s=0;for(let t=0;t<y;t+=m){const n=(a+t)/h;if(!(n<0||n>=l.outHeight||Math.floor(n)!==n))for(let t=0;t<b;t+=g){const a=(r+t)/d;if(a<0||a>=l.outWidth||Math.floor(a)!==a)continue;s+=C.get(N,n,a,e)}}w.set(s*D,N,t,n,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const qC={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,scale:s,offset:o,mean:i,variance:u}=t;V(i.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),V(null==o||i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),V(null==s||i.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Nk([r,i,u,s,o],"batchNorm");let{varianceEpsilon:c}=a;null==c&&(c=.001);const l=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,d=n.data.get(u.dataId).values,p=s?n.data.get(s.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(l.length),g=f.length,y=p.length,b=d.length,v=h.length;let x=0,w=0,D=0,k=0;for(let C=0;C<l.length;++C)m[C]=f[x++]+(l[C]-h[w++])*p[D++]/Math.sqrt(d[k++]+c),x>=g&&(x=0),w>=v&&(w=0),D>=y&&(D=0),k>=b&&(k=0);return n.makeTensorInfo(r.shape,r.dtype,m)}};function KC(e,t,n,a,r){const s=Pi(a,t,n),o=H(n),i=ue(a);if(s){const n=Wi(t,i);return"string"===r?e.slice(n,n+o):e.subarray(n,n+o)}const u=ko(a,r,"string"===r?bf(e):e),c=ko(n,r);for(let l=0;l<c.size;++l){const e=c.indexToLoc(l),n=e.map(((e,n)=>e+t[n]));c.set(u.get(...n),...e)}return"string"===r?vf(c.values):c.values}function XC(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:o}=a;Nk(r,"slice");const[i,u]=Vi(r,s,o);Ei(r,i,u);const c=KC(n.data.get(r.dataId).values,i,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,c)}const YC={kernelName:Jn,backendName:"cpu",kernelFunc:XC};const QC={kernelName:je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:o}=a;Nk([r],"batchToSpaceND");const i=s.reduce(((e,t)=>e*t)),u=kp(r.shape,s,i),c=Cp(u.length,s.length),l=Np(r.shape,s,i),h=Sp(o,s.length),d=Ep(l,o,s.length),p=cC({inputs:{x:r},backend:n,attrs:{shape:u}}),f=DC({inputs:{x:p},backend:n,attrs:{perm:c}}),m=cC({inputs:{x:f},backend:n,attrs:{shape:l}}),g=XC({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function ZC(e,t,n,a,r){const s=H(a),o=de(r,n);for(let i=0;i<e.length;i++){const n=e[i];if(n<0)throw new Error("Input x must be non-negative!");n>=r||(o[n]+=s>0?t[i]:1)}return o}function JC(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e.shape[0],s=e.shape[1],o=ko([r,n],t.dtype);for(let i=0;i<r;i++)for(let r=0;r<s;r++){const s=e.get(i,r);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(a?o.set(1,i,s):t.size>0?o.set(o.get(i,s)+t.get(i,r),i,s):o.set(o.get(i,s)+1,i,s))}return o}const $C={kernelName:qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o}=a,i=ZC(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,i)}},eN=zk(((e,t)=>e&t)),tN=aC(Ke,eN),nN={kernelName:Ke,backendName:"cpu",kernelFunc:tN};const aN={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,i=Zo(Array.from(s),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},rN=Ik((e=>Math.ceil(e))),sN=Fk(Qe,rN),oN={kernelName:Qe,backendName:"cpu",kernelFunc:sN},iN=Tk(Ze,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),uN={kernelName:Ze,backendName:"cpu",kernelFunc:iN},cN={kernelName:$e,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(H(t.shape)),r=n.data.get(t.dataId),s=r.complexTensorInfos.real,o=r.complexTensorInfos.imag,i=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values;for(let c=0;c<i.length;c++){const e=i[c],t=u[c];a[c]=Math.hypot(e,t)}return n.makeOutput(a,t.shape,"float32")}};function lN(e,t,n,a){const r=ee(n,H(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{const n=H(e.shape);r.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{const s="string"===n?bf(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const i=n*t[1]+a;for(let t=0;t<e.shape[1];++t)r[i+t]=s[o++]}a+=e.shape[1]}))}return r}function hN(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.imag,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const dN={kernelName:Gt,backendName:"cpu",kernelFunc:hN};function pN(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=Z(r,t[0].shape)[0];pp(t.map((e=>e.shape)),s);let o=fp(t.map((e=>e.shape)),s);if(0===H(o))return n.makeTensorInfo(o,t[0].dtype,[]);const i=t.filter((e=>H(e.shape)>0));if(1===i.length)return _k({inputs:{x:i[0]},backend:n});if("complex64"===i[0].dtype){const e=i.map((e=>Jk({inputs:{input:e},backend:n}))),t=i.map((e=>hN({inputs:{input:e},backend:n}))),a=pN({inputs:e,backend:n,attrs:{axis:s}}),r=pN({inputs:t,backend:n,attrs:{axis:s}}),o=Yk({inputs:{real:a,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),o}const u=i.map((e=>{const t=H(e.shape.slice(s));return cC({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),c=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=fp(u.map((e=>e.shape)),1);const l=1===u[0].shape[0],h=lN(c,o,t[0].dtype,l),d=fp(i.map((e=>e.shape)),s),p=n.makeTensorInfo(d,t[0].dtype,h);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const fN={kernelName:et,backendName:"cpu",kernelFunc:pN};function mN(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dataFormat:u,dilations:c,dimRoundingMode:l}=a;Nk([r,s],"conv2d");const h=mu(u),d=su(r.shape,s.shape,o,c,i,l,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,v="channelsLast"===d.dataFormat,x=new Cr(d.outShape,r.dtype),w=ue(r.shape),D=ue(s.shape),k=w[0],C=v?w[1]:w[2],N=v?w[2]:1,S=v?1:w[1],E=x.strides[0],I=v?x.strides[1]:x.strides[2],T=v?x.strides[2]:1,F=v?1:x.strides[1],A=n.data.get(r.dataId).values,R=n.data.get(s.dataId).values,_=x.values;for(let O=0;O<d.batchSize;++O){const e=O*k,t=O*E;for(let n=0;n<d.outHeight;++n){const a=t+n*I,r=n*d.strideHeight-b;for(let t=0;t<p;++t){const n=r+t*m;if(n<0||n>=d.inHeight)continue;const s=t*D[0],o=e+n*C;for(let e=0;e<d.outWidth;++e){const t=a+e*T,n=e*d.strideWidth-y;for(let e=0;e<f;++e){const a=n+e*g;if(a<0||a>=d.inWidth)continue;const r=o+a*N;let i=s+e*D[1];for(let e=0;e<d.inChannels;++e){const n=A[r+e*S];for(let e=0;e<d.outChannels;++e)_[t+e*F]+=n*R[i+e];i+=d.outChannels}}}}}}return n.makeTensorInfo(x.shape,x.dtype,_)}const gN={kernelName:tt,backendName:"cpu",kernelFunc:mN};const yN={kernelName:nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:i,dataFormat:u,dimRoundingMode:c,filterShape:l}=a;Nk([r,s],"conv2dBackpropFilter");const h=mu(u),d=su(r.shape,l,o,1,i,c,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new Cr(d.filterShape,"float32"),v=d.padInfo.left,x=d.padInfo.top,w=n.data.get(r.dataId).values,D=n.data.get(s.dataId).values,k=new Cr(r.shape,r.dtype,w),C=new Cr(s.shape,s.dtype,D);for(let N=0;N<m;++N){const e=Math.max(0,Math.ceil((x-N)/p)),t=Math.min(d.outHeight,(d.inHeight+x-N)/p);for(let n=0;n<g;++n){const a=Math.max(0,Math.ceil((v-n)/f)),r=Math.min(d.outWidth,(d.inWidth+v-n)/f);for(let s=0;s<d.inChannels;++s)for(let o=0;o<d.outChannels;++o){let i=0;for(let u=0;u<d.batchSize;++u)for(let c=e;c<t;++c){const e=N+c*p-x;for(let t=a;t<r;++t){const a=n+t*f-v;i+=y?k.get(u,e,a,s)*C.get(u,c,t,o):k.get(u,s,e,a)*C.get(u,o,c,t)}}b.set(i,N,n,s,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const bN={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:o,strides:i,pad:u,dataFormat:c,dimRoundingMode:l}=a;Nk([r,s],"conv2dBackpropInput");const h=ue(s.shape),d=ue(r.shape);let p=mu(c);const f=su(o,s.shape,i,1,u,l,!1,p),m=new Cr(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,b=n.data.get(s.dataId).values,[v,x,w]=h,{batchSize:D,filterHeight:k,filterWidth:C,inChannels:N,inHeight:S,inWidth:E,outChannels:I,outHeight:T,outWidth:F,strideHeight:A,strideWidth:R}=f;p=f.dataFormat;const _=k-1-f.padInfo.top,O=C-1-f.padInfo.left,L="channelsLast"===p,M=m.strides[0],z=L?m.strides[1]:m.strides[2],B=L?m.strides[2]:1,P=L?1:m.strides[1],W=d[0],V=L?d[1]:d[2],U=L?d[2]:1,G=L?1:d[1];for(let H=0;H<D;++H)for(let e=0;e<N;++e)for(let t=0;t<S;++t){const n=t-_,a=Math.max(0,Math.ceil(n/A)),r=Math.min(T,(k+n)/A);for(let s=0;s<E;++s){const o=s-O,i=Math.max(0,Math.ceil(o/R)),u=Math.min(F,(C+o)/R);let c=0;for(let t=a;t<r;++t){const a=t*A-n;for(let n=i;n<u;++n){const r=W*H+V*t+U*n,s=v*(k-1-a)+x*(C-1-(n*R-o))+w*e;for(let e=0;e<I;++e){c+=y[r+G*e]*b[s+e]}}}g[M*H+z*t+B*s+P*e]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const vN={kernelName:rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:u}=a;Nk([r,s],"conv3d");const c=ou(r.shape,s.shape,o,u,i),{filterDepth:l,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=c,y=g.front,b=g.left,v=g.top,x=new Cr(c.outShape,r.dtype),w=n.data.get(r.dataId).values,D=n.data.get(s.dataId).values,k=x.values,C=ue(r.shape),N=ue(s.shape);for(let S=0;S<c.batchSize;++S){const e=S*C[0],t=S*x.strides[0];for(let n=0;n<c.outDepth;++n){const a=t+n*x.strides[1],r=n*c.strideDepth-y;for(let t=0;t<l;++t){const n=r+t*p;if(n<0||n>=c.inDepth)continue;const s=t*N[0],o=e+n*C[1];for(let e=0;e<c.outHeight;++e){const t=a+e*x.strides[2],n=e*c.strideHeight-v;for(let e=0;e<h;++e){const a=n+e*f;if(a<0||a>=c.inHeight)continue;const r=s+e*N[1],i=o+a*C[2];for(let e=0;e<c.outWidth;++e){const n=t+e*c.outChannels,a=e*c.strideWidth-b;for(let e=0;e<d;++e){const t=a+e*m;if(t<0||t>=c.inWidth)continue;const s=r+e*N[2],o=i+t*c.inChannels;let u=s;for(let e=0;e<c.inChannels;++e){const t=w[o+e];for(let e=0;e<c.outChannels;++e)k[n+e]+=t*D[u+e];u+=c.outChannels}}}}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const xN={kernelName:st,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:i,filterShape:u}=a;Nk([r,s],"conv3dBackpropFilterV2");const c=ue(r.shape),l=ue(s.shape),h=ou(r.shape,u,o,1,i),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Cr(h.filterShape,"float32"),v=b.values,[x,w,D,k]=b.strides,C=n.data.get(s.dataId).values,[N,S,E,I]=l,T=n.data.get(r.dataId).values,[F,A,R,_]=c,O=h.padInfo.front,L=h.padInfo.left,M=h.padInfo.top;for(let z=0;z<m;++z){const e=Math.max(0,Math.ceil((O-z)/d)),t=Math.min(h.outDepth,(h.inDepth+O-z)/d),n=z*x;for(let a=0;a<g;++a){const r=Math.max(0,Math.ceil((M-a)/p)),s=Math.min(h.outHeight,(h.inHeight+M-a)/p),o=a*w+n;for(let n=0;n<y;++n){const i=Math.max(0,Math.ceil((L-n)/f)),u=Math.min(h.outWidth,(h.inWidth+L-n)/f),c=n*D+o;for(let o=0;o<h.inChannels;++o){const l=o*k+c;for(let c=0;c<h.outChannels;++c){let m=0;for(let l=0;l<h.batchSize;++l){const h=l*F,g=l*N;for(let l=e;l<t;++l){const e=(z+l*d-O)*A+h,t=l*S+g;for(let l=r;l<s;++l){const r=(a+l*p-M)*R+e,s=l*E+t;for(let e=i;e<u;++e){const t=e*I+s;m+=T[(n+e*f-L)*_+r+o]*C[t+c]}}}}v[l+c]=m}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const wN={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:o,strides:i,inputShape:u}=a;Nk([r],"conv3dBackpropInputV2");const c=ue(r.shape),l=ue(s.shape),h=ou(u,s.shape,i,1,o),d=new Cr(h.inShape,"float32"),p=d.values,[f,m,g,y]=d.strides,b=n.data.get(r.dataId).values,[v,x,w,D]=c,k=n.data.get(s.dataId).values,[C,N,S,E]=l,{batchSize:I,filterDepth:T,filterHeight:F,filterWidth:A,inChannels:R,inDepth:_,inHeight:O,inWidth:L,outChannels:M,outDepth:z,outHeight:B,outWidth:P,strideDepth:W,strideHeight:V,strideWidth:U}=h,G=T-1-h.padInfo.front,H=F-1-h.padInfo.top,j=A-1-h.padInfo.left;for(let q=0;q<I;++q)for(let e=0;e<R;++e)for(let t=0;t<_;++t){const n=t-G,a=Math.max(0,Math.ceil(n/W)),r=Math.min(z,(T+n)/W);for(let s=0;s<O;++s){const o=s-H,i=Math.max(0,Math.ceil(o/V)),u=Math.min(B,(F+o)/V);for(let c=0;c<L;++c){const l=c-j,h=Math.max(0,Math.ceil(l/U)),d=Math.min(P,(A+l)/U);let I=0;for(let t=a;t<r;++t){const a=t*W-n;for(let n=i;n<u;++n){const r=n*V-o;for(let s=h;s<d;++s){const o=v*q+x*t+w*n+D*s,i=C*(T-1-a)+N*(F-1-r)+S*(A-1-(s*U-l))+E*e;for(let e=0;e<M;++e){I+=b[o+e]*k[i+e]}}}}p[f*q+m*t+g*s+y*c+e]=I}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},DN=Tk(it,(e=>Math.cos(e))),kN={kernelName:it,backendName:"cpu",kernelFunc:DN},CN=Tk(ut,(e=>Math.cosh(e))),NN={kernelName:ut,backendName:"cpu",kernelFunc:CN};const SN={kernelName:ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:o}=t,{cropSize:i,method:u,extrapolationValue:c}=a,[l,h,d,p]=r.shape,f=s.shape[0],[m,g]=i,y=ko([f,m,g,p],"float32"),b=n.data.get(s.dataId).values,v=n.data.get(o.dataId).values,x=n.data.get(r.dataId).values,w=ue(r.shape),D=ue(y.shape);for(let k=0;k<f;k++){const e=4*k,t=b[e],n=b[e+1],a=b[e+2],r=b[e+3],s=v[k];if(s>=l)continue;const o=m>1?(a-t)*(h-1)/(m-1):0,i=g>1?(r-n)*(d-1)/(g-1):0;for(let l=0;l<m;l++){const e=m>1?t*(h-1)+l*o:.5*(t+a)*(h-1);if(e<0||e>h-1)for(let t=0;t<g;t++)for(let e=0;e<p;e++){const n=e+t*D[2]+l*D[1]+k*D[0];y.values[n]=c}else if("bilinear"===u){const t=Math.floor(e),a=Math.ceil(e),o=e-t;for(let e=0;e<g;e++){const u=g>1?n*(d-1)+e*i:.5*(n+r)*(d-1);if(u<0||u>d-1){for(let t=0;t<p;t++){const n=t+e*D[2]+l*D[1]+k*D[0];y.values[n]=c}continue}const h=Math.floor(u),f=Math.ceil(u),m=u-h;for(let n=0;n<p;n++){let r=n+h*w[2]+t*w[1]+s*w[0];const i=x[r];r=n+f*w[2]+t*w[1]+s*w[0];const u=x[r];r=n+h*w[2]+a*w[1]+s*w[0];const c=x[r];r=n+f*w[2]+a*w[1]+s*w[0];const d=i+(u-i)*m,p=c+(x[r]-c)*m;r=n+e*D[2]+l*D[1]+k*D[0],y.values[r]=d+(p-d)*o}}}else for(let t=0;t<g;++t){const a=g>1?n*(d-1)+t*i:.5*(n+r)*(d-1);if(a<0||a>d-1){for(let e=0;e<p;e++){const n=e+t*D[2]+l*D[1]+k*D[0];y.values[n]=c}continue}const o=Math.round(a),u=Math.round(e);for(let e=0;e<p;e++){const n=e+o*w[2]+u*w[1]+s*w[0],a=e+t*D[2]+l*D[1]+k*D[0];y.values[a]=x[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const EN={kernelName:ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;Nk(r,"cumprod");const u=gc([s],r.shape.length);let c=r;null!=u&&(c=DC({inputs:{x:r},backend:n,attrs:{perm:u}}));const l=bc(1,r.shape.length)[0];if(l!==c.shape.length-1)throw new Error("backend.cumprod in CPU expects an inner-most "+"axis=".concat(c.shape.length-1," but got axis=").concat(l));const h=zr(c.dtype,"int32"),d=he(H(c.shape),h),p=n.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=i?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<p.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)d[t]=o?1:p[t];else{const n=m(y,e-1);d[t]=o?p[n]*d[n]:p[t]*d[n]}}const g=n.makeTensorInfo(c.shape,h,d);if(null!=u){const e=DC({inputs:{x:g},backend:n,attrs:{perm:yc(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(c),e}return g}};const IN={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;Nk(r,"cumsum");const u=gc([s],r.shape.length);let c=r;null!=u&&(c=DC({inputs:{x:r},backend:n,attrs:{perm:u}}));const l=bc(1,r.shape.length)[0];if(l!==c.shape.length-1)throw new Error("backend.cumsum in CPU expects an inner-most "+"axis=".concat(c.shape.length-1," but got axis=").concat(l));const h=zr(c.dtype,"int32"),d=de(H(c.shape),h),p=n.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=i?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<p.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)d[t]=o?0:p[t];else{const n=m(y,e-1);d[t]=o?p[n]+d[n]:p[t]+d[n]}}const g=n.makeTensorInfo(c.shape,h,d);if(null!=u){const e=DC({inputs:{x:g},backend:n,attrs:{perm:yc(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(c),e}return g}};const TN={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o,binaryOutput:i}=a;if(1===r.shape.length){const e=ZC(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,e)}if(2===r.shape.length){const e=JC(n.bufferSync(r),n.bufferSync(s),o,i);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};const FN={kernelName:pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:o}=a;V("NHWC"===o,(()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got ".concat(o)));const i=r.shape[0],u=r.shape[1],c=r.shape[2],l=r.shape[3],h=u*s,d=c*s,p=l/(s*s),f=n.data.get(r.dataId).values,m=new Float32Array(i*h*d*p);let g=0;for(let y=0;y<i;++y)for(let e=0;e<h;++e){const t=Math.floor(e/s),n=e%s;for(let e=0;e<d;++e){const a=Math.floor(e/s),r=(n*s+e%s)*p;for(let e=0;e<p;++e){const n=e+r+l*(a+c*(t+u*y));m[g++]=f[n]}}}return n.makeTensorInfo([i,h,d,p],r.dtype,m)}};function AN(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:u,dimRoundingMode:c}=a;Nk([r,s],"depthwiseConv2DNative");const l=ue(r.shape),h=ue(s.shape);let d=u;null==d&&(d=[1,1]),V(pu(o,d),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(o," and dilations '").concat(d,"'")));const p=su(r.shape,s.shape,o,d,i,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=p,v=b.left,x=b.top,w=p.outChannels/p.inChannels,D=new Cr(p.outShape,r.dtype),k=n.data.get(r.dataId).values,C=n.data.get(s.dataId).values,N=D.values;for(let S=0;S<p.batchSize;++S){const e=S*l[0],t=S*D.strides[0];for(let n=0;n<p.outHeight;++n){const a=t+n*D.strides[1],r=n*p.strideHeight-x;for(let t=0;t<f;++t){const n=r+t*g;if(n<0||n>=p.inHeight)continue;const s=t*h[0],o=e+n*l[1];for(let e=0;e<p.outWidth;++e){const t=a+e*D.strides[2],n=e*p.strideWidth-v;for(let e=0;e<m;++e){const a=n+e*y;if(a<0||a>=p.inWidth)continue;const r=s+e*h[1],i=o+a*p.inChannels;let u=t,c=r;for(let e=0;e<p.inChannels;++e){const t=k[i+e];for(let e=0;e<w;++e)N[u+e]+=t*C[c+e];u+=w,c+=w}}}}}}return n.makeTensorInfo(D.shape,D.dtype,D.values)}const RN={kernelName:ft,backendName:"cpu",kernelFunc:AN};const _N={kernelName:mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:c,filterShape:l}=a;Nk([r,s],"depthwiseConv2dNativeBackpropFilter");const h=su(r.shape,l,o,i,u,c,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new Cr(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,v=h.outChannels/h.inChannels,x=n.data.get(r.dataId).values,w=new Cr(r.shape,r.dtype,x),D=n.data.get(s.dataId).values,k=new Cr(s.shape,s.dtype,D);for(let C=0;C<f;++C){const e=Math.max(0,Math.ceil((b-C)/d)),t=Math.min(h.outHeight,(h.inHeight+b-C)/d);for(let n=0;n<m;++n){const a=Math.max(0,Math.ceil((y-n)/p)),r=Math.min(h.outWidth,(h.inWidth+y-n)/p);for(let s=0;s<h.outChannels;++s){const o=Math.trunc(s/v),i=s%v;let u=0;for(let c=0;c<h.batchSize;++c)for(let i=e;i<t;++i){const e=C+i*d-b;for(let t=a;t<r;++t){const a=n+t*p-y;u+=w.get(c,e,a,o)*k.get(c,i,t,s)}}g.set(u,C,n,o,i)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const ON={kernelName:gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:c,inputShape:l}=a;Nk([r,s],"depthwiseConv2DNativeBackpropInput");const h=ue(r.shape),d=ue(s.shape),p=su(l,s.shape,o,i,u,c,!0),f=new Cr(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,v=n.data.get(r.dataId).values,[x,w,D]=h,k=n.data.get(s.dataId).values,[C,N,S]=d,{batchSize:E,filterHeight:I,filterWidth:T,inChannels:F,inHeight:A,inWidth:R,outChannels:_,outHeight:O,outWidth:L,strideHeight:M,strideWidth:z}=p,B=I-1-p.padInfo.top,P=T-1-p.padInfo.left,W=_/F;for(let V=0;V<E;++V)for(let e=0;e<F;++e)for(let t=0;t<A;++t){const n=t-B,a=Math.max(0,Math.ceil(n/M)),r=Math.min(O,(I+n)/M);for(let s=0;s<R;++s){const o=s-P,i=Math.max(0,Math.ceil(o/z)),u=Math.min(L,(T+o)/z);let c=0;for(let t=a;t<r;++t){const a=t*M-n;for(let n=i;n<u;++n){const r=x*V+w*t+D*n,s=C*(I-1-a)+N*(T-1-(n*z-o))+S*e;for(let t=0;t<W;++t){c+=v[r+(e*W+t)]*k[s+t]}}}m[g*V+y*t+b*s+e]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const LN={kernelName:yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=H(a.shape),s=n.data.get(a.dataId).values,o=ko([r,r],a.dtype),i=o.values;for(let c=0;c<s.length;c++)i[c*r+c]=s[c];const u=[...a.shape,...a.shape];return n.makeTensorInfo(u,o.dtype,o.values)}},MN={kernelName:bt,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:s}=t,{strides:o,pad:i,dilations:u}=a,c=n,l=c.data.get(r.dataId).values,h=r.shape.length,d=c.data.get(s.dataId).values,p=s.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:v,padInfo:x,strideHeight:w,strideWidth:D,filterHeight:k,filterWidth:C,dilationHeight:N,dilationWidth:S,outShape:E}=nu(r.shape,s.shape,o,i,"NHWC",u),I=H(E),T=E.length,F=ee(r.dtype,I);for(let A=0;A<f;++A)for(let e=0;e<b;++e){const t=e*w-x.top;for(let n=0;n<v;++n){const a=n*D-x.left;for(let o=0;o<y;++o){let i=Number.MIN_SAFE_INTEGER;for(let e=0;e<k;++e){const n=t+e*N;if(n>=0&&n<m)for(let t=0;t<C;++t){const u=a+t*S;if(u>=0&&u<g){const a=me([A,n,u,o],h,ue(r.shape)),c=me([e,t,o],p,ue(s.shape)),f=l[a]+d[c];f>i&&(i=f)}}}F[me([A,e,n,o],T,ue(E))]=i}}}return{dataId:c.write(lr(F,r.dtype),E,r.dtype),shape:E,dtype:r.dtype}}},zN={kernelName:xt,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:s,dy:o}=t,{strides:i,pad:u,dilations:c}=a,l=n,h=le(r.shape,l.data.get(r.dataId).values),d=le(s.shape,l.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:v,strideHeight:x,strideWidth:w,filterHeight:D,filterWidth:k,dilationHeight:C,dilationWidth:N,outShape:S}=nu(r.shape,s.shape,i,u,"NHWC",c);V(o.rank===S.length,(()=>"Error in ".concat(xt,", dy ")+"must have the same rank as output ".concat(S.length,", but got ")+"".concat(o.rank)));const E=le(S,l.data.get(o.dataId).values),I=pe(s.shape,s.dtype);for(let T=0;T<p;++T)for(let e=0;e<y;++e){const t=e*x-v.top;for(let n=0;n<b;++n){const a=n*w-v.left;for(let r=0;r<g;++r){let s=Number.MIN_SAFE_INTEGER,o=0,i=0;for(let e=0;e<D;++e){const n=t+e*C;if(n>=0&&n<f)for(let t=0;t<k;++t){const u=a+t*N;if(u>=0&&u<m){const a=h[T][n][u][r]+d[e][t][r];a>s&&(s=a,o=e,i=t)}}}I[o][i][r]+=E[T][e][n][r]}}}return{dataId:l.write(lr(I,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},BN={kernelName:vt,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:s,dy:o}=t,{strides:i,pad:u,dilations:c}=a,l=n,h=le(r.shape,l.data.get(r.dataId).values),d=le(s.shape,l.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:v,strideHeight:x,strideWidth:w,filterHeight:D,filterWidth:k,dilationHeight:C,dilationWidth:N,outShape:S}=nu(r.shape,s.shape,i,u,"NHWC",c);V(o.rank===S.length,(()=>"Error in ".concat(vt,", dy ")+"must have the same rank as output ".concat(S.length,", but got ")+"".concat(o.rank)));const E=le(S,l.data.get(o.dataId).values),I=pe(r.shape,r.dtype);for(let T=0;T<p;++T)for(let e=0;e<y;++e){const t=e*x-v.top;for(let n=0;n<b;++n){const a=n*w-v.left;for(let r=0;r<g;++r){let s=Number.MIN_SAFE_INTEGER,o=t<0?0:t,i=a<0?0:a;for(let e=0;e<D;++e){const n=t+e*C;if(n>=0&&n<f)for(let t=0;t<k;++t){const u=a+t*N;if(u>=0&&u<m){const a=h[T][n][u][r]+d[e][t][r];a>s&&(s=a,o=n,i=u)}}}I[T][o][i][r]+=E[T][e][n][r]}}}return{dataId:l.write(lr(I,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};const PN={kernelName:wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{canvas:s,options:o}=a,{contextOptions:i,imageOptions:u}=o||{},c=(null===u||void 0===u?void 0:u.alpha)||1,l=(null===i||void 0===i?void 0:i.contextType)||"2d";if("2d"!==l)throw new Error("Context type ".concat(i.contextType," is not supported by the CPU backend."));const h=s.getContext(l,(null===i||void 0===i?void 0:i.contextAttributes)||{});if(null==h)throw new Error("Could not get the context with ".concat(l," type."));const[d,p]=r.shape.slice(0,2),f=2===r.shape.length?1:r.shape[2],m=n.data.get(r.dataId).values,g="float32"===r.dtype?255:1,y=new Uint8ClampedArray(p*d*4);for(let v=0;v<d*p;++v){const e=[0,0,0,255*c];for(let n=0;n<f;n++){const t=m[v*f+n];if("float32"===r.dtype){if(t<0||t>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(t,"."))}else if("int32"===r.dtype&&(t<0||t>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(t,"."));1===f?(e[0]=t*g,e[1]=t*g,e[2]=t*g):e[n]=t*g}const t=4*v;y[t+0]=Math.round(e[0]),y[t+1]=Math.round(e[1]),y[t+2]=Math.round(e[2]),y[t+3]=Math.round(e[3])}s.width=p,s.height=d;const b=new ImageData(y,p,d);return h.putImageData(b,0,0),r}},WN=zk(((e,t)=>e*t)),VN=rC(((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n}))),UN=aC(bn,WN,VN),GN={kernelName:bn,backendName:"cpu",kernelFunc:UN};function HN(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;let i;Nk(r,"sum"),i="bool"===r.dtype?tC({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):_k({inputs:{x:r},backend:n});const u=i.shape.length,c=Z(s,i.shape),l=gc(c,u);let h=c,d=i;null!=l&&(d=DC({inputs:{x:i},backend:n,attrs:{perm:l}}),h=bc(h.length,u)),mc("sum",h,d.shape.length);const[p,f]=pc(d.shape,h);let m=Zk(n,p,zr(d.dtype,"int32"));const g=H(f),y=n.data.get(m.dataId).values,b=n.data.get(d.dataId).values;for(let v=0;v<y.length;++v){const e=v*g;let t=0;for(let n=0;n<g;++n)t+=b[e+n];y[v]=t}if(o){const e=m;m=cC({inputs:{x:m},backend:n,attrs:{shape:fc(m.shape,c)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(i),null!=l&&n.disposeIntermediateTensorInfo(d),m}const jN={kernelName:sa,backendName:"cpu",kernelFunc:HN};const qN={kernelName:kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:o,summedDims:i,idDims:u}=Yp(r,s.length);Zp(o.length,u,s);const{path:c,steps:l}=Jp(i,u),h=l.length;let d=null,p=o.length;const f=[];for(let m=0;m<h;++m){for(const e of l[m]){const{permutationIndices:t,expandDims:a}=Qp(p,u[e]);let r;$p(t)?r=s[e]:(r=DC({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),f.push(r));const o=r.shape.slice();for(let e=0;e<a.length;++e)o.splice(a[e],0,1);j(r.shape,o)||(r=cC({inputs:{x:r},backend:n,attrs:{shape:o}}),f.push(r)),null===d?d=r:(d=UN({inputs:{a:r,b:d},backend:n}),f.push(d))}m<h-1&&(c[m]>=0&&(d=HN({inputs:{x:d},backend:n,attrs:{axis:c[m]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}};const KN={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:a,y:r}=t;Nk([a,r],"eluGrad");const s=new Float32Array(H(r.shape)),o=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values;for(let u=0;u<o.length;++u){const e=o[u];s[u]=e>=0?i[u]:i[u]*(e+1)}return n.makeTensorInfo(r.shape,"float32",s)}},XN=zk(((e,t)=>e===t?1:0)),YN=aC(Et,XN,null,"bool"),QN={kernelName:Et,backendName:"cpu",kernelFunc:YN},ZN=Ap,JN=Rp,$N=_p,eS=Op,tS=Lp,nS=Mp,aS=Tk(St,(e=>{const t=Math.sign(e),n=Math.abs(e),a=1/(1+ZN*n);return t*(1-((((nS*a+tS)*a+eS)*a+$N)*a+JN)*a*Math.exp(-n*n))})),rS={kernelName:St,backendName:"cpu",kernelFunc:aS},sS=Ik((e=>Math.exp(e))),oS=Fk(It,sS,"float32"),iS={kernelName:It,backendName:"cpu",kernelFunc:oS};function uS(e){const{inputs:t,backend:n,attrs:a}=e,{input:r}=t,{dim:s}=a,o=r.shape.length,i=r.shape.slice();let u=s;return s<0&&(V(-(o+1)<=s,(()=>"Axis must be in the interval [".concat(-(o+1),", ").concat(o,"]"))),u=o+s+1),i.splice(u,0,1),cC({inputs:{x:r},backend:n,attrs:{shape:i}})}const cS={kernelName:Tt,backendName:"cpu",kernelFunc:uS},lS=Ik((e=>Math.expm1(e))),hS=Fk(Ft,lS),dS={kernelName:Ft,backendName:"cpu",kernelFunc:hS},pS=zk(((e,t)=>e/t)),fS=aC(Dt,pS),mS={kernelName:Dt,backendName:"cpu",kernelFunc:fS},gS=zk(((e,t)=>e-t)),yS=rC(((e,t,n,a)=>({real:e-n,imag:t-a}))),bS=aC(wa,gS,yS),vS={kernelName:wa,backendName:"cpu",kernelFunc:bS};function xS(e,t,n){const a=e.shape,r=a[0],s=a[1],o=n.data.get(e.dataId),i=o.complexTensorInfos.real,u=o.complexTensorInfos.imag,c=[r,s],l=H(c),h=$("float32",l),d=$("float32",l);for(let g=0;g<r;g++){const e=XC({inputs:{x:i},backend:n,attrs:{begin:[g,0],size:[1,s]}}),a=XC({inputs:{x:u},backend:n,attrs:{begin:[g,0],size:[1,s]}}),r=Yk({inputs:{real:e,imag:a},backend:n}),{real:o,imag:c}=wS(r,t,n),l=zp(o,c);for(let t=0;t<s;t++){const e=Vp(l,t);h[g*s+t]=e.real,d[g*s+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r)}const p=n.makeTensorInfo(c,"float32",h),f=n.makeTensorInfo(c,"float32",d),m=Yk({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function wS(e,t,n){const a=H(e.shape),r=n.data.get(e.dataId),s=n.data.get(r.complexTensorInfos.real.dataId).values,o=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0===((i=a)&i-1)){const r=DS(s,o,a,t,n),i=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(i,"float32",r.real),t=n.makeTensorInfo(i,"float32",r.imag),s=n.makeTensorInfo([],"float32",cr(a,"float32")),o=_k({inputs:{x:s},backend:n}),u=mS.kernelFunc({inputs:{a:e,b:s},backend:n}),c=mS.kernelFunc({inputs:{a:t,b:o},backend:n}),l=n.data.get(u.dataId).values,h=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),{real:l,imag:h}}return r}{const e=function(e,t,n){const a=new Float32Array(2*t);for(let r=0;r<t;r++){let s=0,o=0;for(let a=0;a<t;a++){const i=Hp(r*a,t,n),u=Vp(e,a);s+=u.real*i.real-u.imag*i.imag,o+=u.real*i.imag+u.imag*i.real}n&&(s/=t,o/=t),Up(a,s,o,r)}return a}(zp(s,o),a,t);return Bp(e)}var i}function DS(e,t,n,a,r){if(1===n)return{real:e,imag:t};const s=zp(e,t),o=n/2,i=Pp(s),u=i.real,c=i.imag,l=[u.length],h=r.makeTensorInfo(l,"float32",u),d=r.makeTensorInfo(l,"float32",c),p=Yk({inputs:{real:h,imag:d},backend:r}),f=Wp(s),m=f.real,g=f.imag,y=[m.length],b=r.makeTensorInfo(y,"float32",m),v=r.makeTensorInfo(y,"float32",g),x=Yk({inputs:{real:b,imag:v},backend:r}),w=DS(u,c,o,a,r),D=w.real,k=w.imag,C=[D.length],N=r.makeTensorInfo(C,"float32",D),S=r.makeTensorInfo(C,"float32",k),E=Yk({inputs:{real:N,imag:S},backend:r}),I=DS(m,g,o,a,r),T=I.real,F=I.imag,A=[T.length],R=r.makeTensorInfo(A,"float32",T),_=r.makeTensorInfo(A,"float32",F),O=Yk({inputs:{real:R,imag:_},backend:r}),L=Gp(n,a),M=[L.real.length],z=r.makeTensorInfo(M,"float32",L.real),B=r.makeTensorInfo(M,"float32",L.imag),P=Yk({inputs:{real:z,imag:B},backend:r}),W=UN({inputs:{a:P,b:O},backend:r}),V=iC({inputs:{a:E,b:W},backend:r}),U=bS({inputs:{a:E,b:W},backend:r}),G=Jk({inputs:{input:V},backend:r}),H=Jk({inputs:{input:U},backend:r}),j=hN({inputs:{input:V},backend:r}),q=hN({inputs:{input:U},backend:r}),K=pN({inputs:[G,H],backend:r,attrs:{axis:0}}),X=pN({inputs:[j,q],backend:r,attrs:{axis:0}}),Y=r.data.get(K.dataId).values,Q=r.data.get(X.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(X),{real:Y,imag:Q}}const kS={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=H(a.shape),s=a.shape[a.shape.length-1],o=cC({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),i=xS(o,!1,n),u=cC({inputs:{x:i},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),u}};function CS(e){const{backend:t,attrs:n}=e,{shape:a,value:r,dtype:s}=n,o=s||se(r),i=ee(o,H(a));return function(e,t){e.fill(t)}(i,r),t.makeTensorInfo(a,o,i)}const NS={kernelName:Rt,backendName:"cpu",kernelFunc:CS};const SS={kernelName:_t,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,s=a,o=$(r.dtype,H(r.shape)),[i,u,c,l]=r.shape,h=s.data.get(r.dataId).values;for(let d=0;d<i;d++){const e=d*c*u*l;for(let t=0;t<u;t++){const n=t*(c*l);for(let t=0;t<c;t++){const a=t*l;for(let r=0;r<l;r++){const s=Math.round(c-t-1),i=e+n+a+r;let u=h[i];if(s>=0&&s<c){u=h[e+n+s*l+r]}o[i]=u}}}}return{dataId:s.write(o,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},ES=Ik((e=>Math.floor(e))),IS=Fk(Ot,ES),TS={kernelName:Ot,backendName:"cpu",kernelFunc:IS},FS=zk(((e,t)=>Math.floor(e/t))),AS=aC(Lt,FS,null,"int32"),RS={kernelName:Lt,backendName:"cpu",kernelFunc:AS};const _S={kernelName:Ma,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a;let m=mN({inputs:{x:r,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d}});if(o){const e=m;if("NCHW"===l&&1===o.shape.length&&1!==o.shape[0]){const e=cC({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=iC({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=iC({inputs:{a:m,b:o},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===l&&"prelu"===p&&1===i.shape.length&&1!==i.shape[0]){const e=cC({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=Xk(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=Xk(n,m,p,i,f);n.disposeIntermediateTensorInfo(e)}return m}};const OS={kernelName:za,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a;let m=AN({inputs:{x:r,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d}});if(o){const e=m;m=iC({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=Xk(n,m,p,i,f),n.disposeIntermediateTensorInfo(e)}return m}};function LS(e,t,n,a,r,s,o,i,u){const c=ko([a,s],n);for(let l=0;l<a;l++){const n=[];let a=0;for(let t=0;t<r;t++){const s=e[l*r+t];a+=s*o[t],n.push(s)}if(a<0||a>=u/s)throw new Error("Invalid indices: ".concat(n," does not index into ").concat(i));for(let e=0;e<s;e++)c.values[l*s+e]=t.get(...t.indexToLoc(a*s+e))}return c}const MS={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=H(a.shape),o=r.shape,i=o[o.length-1],[u,c,l,h]=Ip(a,r);if(0===c)return n.makeTensorInfo(u,a.dtype,[]);const d=LS(n.data.get(r.dataId).values,n.bufferSync(a),a.dtype,c,i,l,h,a.shape,s);return n.makeTensorInfo(u,a.dtype,d.values)}};function zS(e,t,n){const a=ko(n,e.dtype);for(let r=0;r<a.size;++r){const n=a.indexToLoc(r).slice(),s=n[0],o=n[2],i=t.locToIndex([s,o]);n[2]=t.values[i];const u=e.locToIndex(n);0<=u&&u<e.values.length&&(a.values[r]=e.values[u])}return a}const BS={kernelName:zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:o,batchDims:i}=a;Nk([r,s],"gatherV2");const u=Z(o,r.shape)[0],c=n.data.get(s.dataId).values,l=r.shape[u];for(let v=0;v<c.length;++v){const e=c[v];V(e<=l-1&&e>=0,(()=>"GatherV2: the index value ".concat(e," is not in [0, ").concat(l-1,"]")))}let h=i;null==i&&(h=0);const d=H(s.shape),p=yf(r,s,u,h),f=cC({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=cC({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=n.bufferSync(m),b=zS(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}},PS=zk(((e,t)=>e>t?1:0)),WS=aC(Pt,PS,null,"bool"),VS={kernelName:Pt,backendName:"cpu",kernelFunc:WS},US=zk(((e,t)=>e>=t?1:0)),GS=aC(Wt,US,null,"bool"),HS={kernelName:Wt,backendName:"cpu",kernelFunc:GS};const jS={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=H(a.shape),s=a.shape[a.shape.length-1],o=cC({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),i=xS(o,!0,n),u=cC({inputs:{x:i},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),u}},qS=Tk(Ht,(e=>Number.isFinite(e)?1:0),"bool"),KS={kernelName:Ht,backendName:"cpu",kernelFunc:qS},XS=Tk(jt,(e=>Math.abs(e)===1/0?1:0),"bool"),YS={kernelName:jt,backendName:"cpu",kernelFunc:XS},QS=Tk(qt,(e=>Number.isNaN(e)?1:0),"bool"),ZS={kernelName:qt,backendName:"cpu",kernelFunc:QS},JS=zk(((e,t)=>e<t?1:0)),$S=aC(Xt,JS,null,"bool"),eE={kernelName:Xt,backendName:"cpu",kernelFunc:$S},tE=zk(((e,t)=>e<=t?1:0)),nE=aC(Yt,tE,null,"bool"),aE={kernelName:Yt,backendName:"cpu",kernelFunc:nE};function rE(e,t,n){const a=(t-e)/(n-1),r=de(n,"float32");r[0]=e;for(let s=1;s<r.length;s++)r[s]=r[s-1]+a;return r}const sE={kernelName:Qt,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,o=rE(a,r,s);return t.makeTensorInfo([o.length],"float32",o)}},oE=Ik((e=>Math.log(e))),iE=Fk(Zt,oE),uE={kernelName:Zt,backendName:"cpu",kernelFunc:iE},cE=Tk(Jt,(e=>Math.log1p(e))),lE={kernelName:Jt,backendName:"cpu",kernelFunc:cE},hE=zk(((e,t)=>e&&t)),dE=aC($t,hE,null,"bool"),pE={kernelName:$t,backendName:"cpu",kernelFunc:dE},fE=Tk(en,(e=>e?0:1),"bool"),mE={kernelName:en,backendName:"cpu",kernelFunc:fE},gE=zk(((e,t)=>e||t)),yE=aC(tn,gE,null,"bool"),bE={kernelName:tn,backendName:"cpu",kernelFunc:yE};const vE={kernelName:nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:o,alpha:i,beta:u}=a;Nk(r,"LRN");const c=r.shape[3],l=c-1,h=n.data.get(r.dataId).values,d=H(r.shape),p=new Float32Array(d);function f(e){const t=e%c;let n=e-t+Math.max(0,t-s);const a=e-t+Math.min(t+s,l);let r=0;for(;n<=a;n++){const e=h[n];r+=e*e}return r}for(let m=0;m<d;m++){const e=f(m),t=h[m]*Math.pow(o+i*e,-u);p[m]=t}return n.makeTensorInfo(r.shape,r.dtype,p)}};const xE={kernelName:an,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:o}=t,{depthRadius:i,bias:u,alpha:c,beta:l}=a;Nk(o,"LRNGrad");const h=H(o.shape),d=o.shape[3],p=n.data.get(o.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let b=0;b<y;b++){const e=b%d,t=b-e+Math.max(0,e-i),n=b-e+Math.min(d,e+i+1);let a=0;for(let r=t;r<n;r++)a+=Math.pow(f[r],2);a=c*a+u;for(let r=t;r<n;r++){let e=-2*c*l*f[r]*m[b]/a;b===r&&(e+=Math.pow(a,-l)),e*=p[b],g[r]+=e}}return n.makeTensorInfo(o.shape,r.dtype,g)}};function wE(e,t,n,a){const r=$(a,H(n));for(let s=0;s<r.length;++s){const n=s*t;let a=e[n];for(let r=0;r<t;++r){const t=e[n+r];(Number.isNaN(t)||t>a)&&(a=t)}r[s]=a}return r}function DE(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:o}=a,i=n;let u=r.shape;const c=u.length,l=Z(s,u);let h=l;const d=gc(h,c);let p=i.data.get(r.dataId).values;if(null!=d){const e=new Array(c);for(let t=0;t<e.length;t++)e[t]=u[d[t]];p=wC(p,u,r.dtype,d,e),h=bc(h.length,c),u=e}Nk(r,"max"),mc("max",h,c);const[f,m]=pc(u,h),g=wE(p,H(m),f,r.dtype),y=i.write(g,f,r.dtype);let b=f;if(o){b=fc(f,l)}return{dataId:y,shape:b,dtype:r.dtype}}const kE={kernelName:rn,backendName:"cpu",kernelFunc:DE},CE=zk(((e,t)=>Math.max(e,t))),NE=aC(sn,CE),SE={kernelName:sn,backendName:"cpu",kernelFunc:NE};const EE={kernelName:on,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;Nk(r,"maxPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:u}=a;V(pu(o,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const c=au(r.shape,s,o,1,i,u);let l;if(1===c.filterWidth&&1===c.filterHeight&&j(c.inShape,c.outShape))l=_k({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=ue(r.shape),a=PC(e,r.shape,r.dtype,t,c,"max");l=n.makeTensorInfo(c.outShape,r.dtype,a.values)}return l}};const IE={kernelName:cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:u,dataFormat:c}=a;Nk(r,"maxPool3d");const l=ru(r.shape,s,o,1,i,u,c),h=VC(n.data.get(r.dataId).values,r.shape,r.dtype,ue(r.shape),l,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};const TE={kernelName:ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:o,strides:i,pad:u,dimRoundingMode:c}=a;Nk([r,s],"maxPool3DGrad");const l=ru(s.shape,o,i,1,u,c),h=function(e,t){const n=ko(t.outShape,"int32"),a=t.strideDepth,r=t.strideHeight,s=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,l=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*a-d;let v=b;for(;v<0;)v+=o;const x=Math.min(t.inDepth,c+b);for(let a=0;a<t.outHeight;++a){const c=a*r-p;let d=c;for(;d<0;)d+=i;const w=Math.min(t.inHeight,l+c);for(let r=0;r<t.outWidth;++r){const p=r*s-f;let D=p;for(;D<0;)D+=u;const k=Math.min(t.inWidth,h+p);let C=Number.NEGATIVE_INFINITY,N=-1;for(let t=v;t<x;t+=o){const n=t-b;for(let a=d;a<w;a+=i){const r=a-c;for(let s=D;s<k;s+=u){const o=s-p,i=e.get(m,t,a,s,g);i>=C&&(C=i,N=n*l*h+r*l+o)}}}n.set(N,m,y,a,r,g)}}}return n}(n.bufferSync(s),l),d=l.strideDepth,p=l.strideHeight,f=l.strideWidth,m=l.dilationDepth,g=l.dilationHeight,y=l.dilationWidth,b=l.effectiveFilterDepth,v=l.effectiveFilterHeight,x=l.effectiveFilterWidth,w=b-1-l.padInfo.front,D=x-1-l.padInfo.left,k=v-1-l.padInfo.top,C=ko(s.shape,"float32"),N=n.bufferSync(r);for(let S=0;S<l.batchSize;++S)for(let e=0;e<l.inChannels;++e)for(let t=0;t<l.inDepth;++t)for(let n=0;n<l.inHeight;++n)for(let a=0;a<l.inWidth;++a){const r=t-w,s=n-k,o=a-D;let i=0;for(let t=0;t<b;t+=m){const n=(r+t)/d;if(!(n<0||n>=l.outDepth||Math.floor(n)!==n))for(let a=0;a<v;a+=g){const r=(s+a)/p;if(!(r<0||r>=l.outHeight||Math.floor(r)!==r))for(let s=0;s<x;s+=y){const u=(o+s)/f;if(u<0||u>=l.outWidth||Math.floor(u)!==u)continue;const c=b*v*x-1-h.get(S,n,r,u,e)===t*v*x+a*x+s?1:0;if(0===c)continue;i+=N.get(S,n,r,u,e)*c}}}C.set(i,S,t,n,a,e)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};const FE={kernelName:un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:o}=t,i=s;Nk([s,o],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:h}=a,d=au(i.shape,u,c,1,l,h),p=n.data.get(i.dataId).values,f=ko(d.outShape,i.dtype,WC(p,i.shape,i.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,v=d.effectiveFilterHeight,x=d.effectiveFilterWidth,w=x-1-d.padInfo.left,D=v-1-d.padInfo.top,k=ko(i.shape,"float32"),C=n.data.get(r.dataId).values,N=ko(r.shape,"float32",C);for(let S=0;S<d.batchSize;++S)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){const a=t-D,r=n-w;let s=0;for(let t=0;t<v;t+=y){const n=(a+t)/m;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let a=0;a<x;a+=b){const o=(r+a)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const i=v*x-1-f.get(S,n,o,e)===t*x+a?1:0;if(0===i)continue;s+=N.get(S,n,o,e)*i}}k.set(s,S,t,n,e)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};const AE={kernelName:hn,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{filterSize:s,strides:o,pad:i,includeBatchInIndex:u}=n,c=a;Nk(r,"MaxPoolWithArgmax");const l=c.data.get(r.dataId).values,h=au(r.shape,s,o,[1,1],i),[d,p]=function(e,t,n,a,r){const s=PC(e,0,n,ue(t),r,"max"),o=WC(e,t,n,r,!0,a);return[s.values,o.values]}(l,r.shape,r.dtype,u,h),f=c.write(d,h.outShape,r.dtype),m=c.write(p,h.outShape,r.dtype);return[{dataId:f,shape:h.outShape,dtype:r.dtype},{dataId:m,shape:h.outShape,dtype:"int32"}]}};const RE={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=Z(s,r.shape),u=H(pc(r.shape,i)[1]),c=[],l=n.makeTensorInfo([],"float32",new Float32Array([u]));c.push(l);const h=tC({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});c.push(h);const d=fS({inputs:{a:h,b:l},backend:n});c.push(d);const p=HN({inputs:{x:d},backend:n,attrs:{axis:s,keepDims:o}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};const _E={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;Nk(r,"min");const i=Z(s,r.shape);let u=i;const c=gc(u,r.shape.length);let l=r;null!=c&&(l=DC({inputs:{x:r},backend:n,attrs:{perm:c}}),u=bc(u.length,r.shape.length)),mc("min",u,l.shape.length);const[h,d]=pc(l.shape,u),p=H(d),f=de(H(h),l.dtype),m=n.data.get(l.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const a=m[e+n];(Number.isNaN(a)||a<t)&&(t=a)}f[y]=t}null!=c&&n.disposeIntermediateTensorInfo(l);const g=n.makeTensorInfo(h,l.dtype,f);if(o){const e=cC({inputs:{x:g},backend:n,attrs:{shape:fc(h,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}},OE=zk(((e,t)=>Math.min(e,t))),LE=aC(fn,OE),ME={kernelName:fn,backendName:"cpu",kernelFunc:LE};const zE={kernelName:mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,mode:o}=a;Nk(r,"mirrorPad");const i=s.map(((e,t)=>e[0]+r.shape[t]+e[1])),u=s.map((e=>e[0])),c=s.map(((e,t)=>e[0]+r.shape[t])),l="reflect"===o?0:1,h=n.data.get(r.dataId).values,d=r.shape.length,p=ue(r.shape),f=H(i),m=i.length,g=ue(i),y=$(r.dtype,f);for(let b=0;b<f;b++){let e=ge(b,m,g);for(let n=0;n<m;n++)e[n]<u[n]?e[n]=2*u[n]-e[n]-l:e[n]>=c[n]&&(e[n]=2*(c[n]-1)-e[n]+l);e=e.map(((e,t)=>e-u[t]));const t=me(e,d,p);y[b]=h[t]}return{dataId:n.write(y,i,r.dtype),shape:i,dtype:r.dtype}}},BE=zk(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),PE=aC(gn,BE),WE={kernelName:gn,backendName:"cpu",kernelFunc:PE};function VE(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,o=r.shape.length;let i=s;if(-1===i&&(i=o-1),i!==o-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(o," and dim was ").concat(i));const u=Z([i],r.shape),c=DE({inputs:{x:r},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),l=fc(c.shape,u),h=cC({inputs:{x:c},backend:n,attrs:{shape:l}}),d=bS({inputs:{a:r,b:h},backend:n}),p=oS({inputs:{x:d},backend:n}),f=HN({inputs:{x:p},backend:n,attrs:{axis:u,keepDims:!1}}),m=cC({inputs:{x:f},backend:n,attrs:{shape:l}}),g=fS({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const UE={kernelName:ua,backendName:"cpu",kernelFunc:VE};const GE={kernelName:yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:o,normalized:i}=a;Nk(r,"multinomial");const u=i?r:VE({inputs:{logits:r},backend:n,attrs:{dim:-1}}),c=u.shape[0],l=u.shape[1],h=n.data.get(u.dataId).values,d=[c,s],p=de(H(d),"int32");for(let f=0;f<c;++f){const e=f*l,t=new Float32Array(l-1);t[0]=h[e];for(let r=1;r<t.length;++r)t[r]=t[r-1]+h[e+r];const n=_l.alea(o.toString()),a=f*s;for(let r=0;r<s;++r){const e=n();p[a+r]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){p[a+r]=n;break}}}return i||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(d,"int32",p)}};function HE(e,t,n){const a=cr(-1,n);return WN([],t,a,e,n)}const jE={kernelName:vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;Nk(a,"neg");const r=n.data.get(a.dataId).values,[s,o]=HE(r,a.shape,a.dtype);return n.makeTensorInfo(o,a.dtype,s)}},qE=vd;const KE={kernelName:wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=a;Nk(r,"NonMaxSuppression");const c=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,{selectedIndices:h}=qE(c,l,o,i,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},XE=xd;const YE={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:c}=a;Nk(r,"NonMaxSuppressionPadded");const l=n.data.get(r.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:p}=XE(l,h,o,i,u,c);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},QE=wd;const ZE={kernelName:kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=a;Nk(r,"NonMaxSuppressionWithScore");const l=n.data.get(r.dataId).values,h=n.data.get(s.dataId).values,d=o,p=i,f=u,m=c,{selectedIndices:g,selectedScores:y}=QE(l,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},JE=zk(((e,t)=>e!==t?1:0)),$E=aC(xn,JE,null,"bool"),eI={kernelName:xn,backendName:"cpu",kernelFunc:$E};const tI={kernelName:Nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:o,onValue:i,offValue:u}=a;Nk(r,"oneHot");const c=H(r.shape),l=new Float32Array(c*o);l.fill(u);const h=n.data.get(r.dataId).values;for(let d=0;d<c;++d)h[d]>=0&&h[d]<o&&(l[d*o+h[d]]=i);return n.makeTensorInfo([...r.shape,o],s,l)}};function nI(e){const{inputs:t,backend:n}=e,{x:a}=t;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){const e=Jk({inputs:{input:a},backend:n}),t=nI({inputs:{x:e},backend:n}),r=hN({inputs:{input:a},backend:n}),s=nI({inputs:{x:r},backend:n}),o=Yk({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}return CS({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}const aI={kernelName:Aa,backendName:"cpu",kernelFunc:nI};const rI={kernelName:Cn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=Jk({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=hN({inputs:{input:r},backend:a}),o=nI({inputs:{x:s},backend:a}),i=Yk({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}return CS({backend:a,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function sI(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return uS({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,o=t[0].dtype;t.forEach((e=>{U(s,e.shape,"All tensors passed to stack must have matching shapes"),V(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],u=pN({inputs:t.map((e=>{const t=uS({inputs:{input:e},backend:n,attrs:{dim:r}});return i.push(t),t})),backend:n,attrs:{axis:r}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const oI={kernelName:Sn,backendName:"cpu",kernelFunc:sI};const iI={kernelName:En,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:o}=a;Nk(r,"pad");const i=s.map(((e,t)=>e[0]+r.shape[t]+e[1])),u=s.map((e=>e[0])),c=n.data.get(r.dataId).values,l=H(r.shape),h=r.shape.length,d=ue(r.shape),p=H(i),f=i.length,m=ue(i),g=$(r.dtype,p);0!==o&&g.fill(o);for(let y=0;y<l;y++){g[me(ge(y,h,d).map(((e,t)=>e+u[t])),f,m)]=c[y]}return{dataId:n.write(g,i,r.dtype),shape:i,dtype:r.dtype}}},uI=zk(((e,t)=>Math.pow(e,t))),cI=aC(In,uI),lI={kernelName:In,backendName:"cpu",kernelFunc:cI};function hI(e,t,n,a){const[r,s]=pc(e,a),o=zr(t,"int32"),i=de(H(r),o),u=H(s);for(let c=0;c<i.length;++c){const e=c*u;let t=1;for(let a=0;a<u;++a)t*=n[e+a];i[c]=t}return{outVals:i,outShape:r,outDtype:o}}const dI={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;Nk(r,"prod");const i=r.shape.length,u=Z(s,r.shape),c=gc(u,i);let l=u,h=r;const d=[];null!=c&&(h=DC({inputs:{x:r},backend:n,attrs:{perm:c}}),d.push(h),l=bc(l.length,i));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=hI(h.shape,h.dtype,p,l);let y=m;return o&&(y=fc(m,u)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function pI(e,t,n,a){const r=[];let s=0;const o=t.length-1+n.length,i=new Array(o).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const a=e[n],r=n===e.length-1?t:e[n+1].length;if(0===a.length)throw new Error("Ragged splits may not be empty");if(a[0]<0)throw new Error("Ragged splits must be non-negative");if(a[a.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<a.length;++e)if(a[e-1]>a[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,a);let u=1;for(let c=0;c<t.length-1;++c){u*=t[c];const e=t[c+1];for(let t=1;t<u+1;++t)i[c].push(t*e)}for(let c=0;c<e.length;++c){let a=e[c],o=e[c]+1;for(let e=0;e<n.length;++e){const r=n[e],s=e+t.length-1;if(s>=0){const e=i[s],t=e[e.length-1]-r[a];for(let n=a;n<o;++n)i[s].push(r[n+1]+t)}a=r[a],o=r[o]}o!==a&&(r.push([a,o]),s+=o-a)}return{outSplits:i,valueSlices:r,numValues:s}}function fI(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let a=t;a<e.length;a++)n[t-1]*=e[a];return n}function mI(e,t,n,a,r){const s=t.slice();s[0]=r;const o=ee(n,H(s)),i=e.length;return function(e,t,n,a,r,s){const o=fI(t,2)[1],i=fI(s,2)[1];let u=0;for(const c of n)for(let t=c[0];t<c[1];++t){for(let n=0;n<a;++n)r[u*i+n]=e[t*o+n];++u}}(e,t,a,0===i?0:i/t[0],o,s),[o,s]}function gI(e,t,n,a,r,s,o,i){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,a)=>{if(e<0||e>=n){const r=ge(a,t.length,ue(t)).join(",");throw new Error("indices[".concat(r,"] = ").concat(e," is not in [0, ").concat(n,")"))}}))}(s,o,t[0][0]-1),0===a.length)throw new Error("params.rank must be nonzero");const u=a[0],{outSplits:c,valueSlices:l,numValues:h}=pI(s,o,e,u),d=function(e){const t=[];for(let n=0;n<e.length;++n){const a=ee("int32",e[n].length);t.push(a),e[n].forEach(((e,t)=>a[t]=e))}return t}(c),p=mI(n,a,r,l,h);return[d,p[0],p[1]]}const yI={kernelName:An,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:o}=t,{outputRaggedRank:i}=a,u=r.map((e=>n.data.get(e.dataId).values)),c=r.map((e=>e.shape)),l=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,[d,p,f]=gI(u,c,l,s.shape,s.dtype,h,o.shape),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}},bI=2147483647;function vI(e,t,n,a,r,s,o){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const i=0===t.length,u=0===r.length,c=0===o.length,l=[];i||l.push(t[0]),u||l.push(r[0]),c||l.push(o[0]);for(let m=1;m<l.length;++m)if(l[m]!==l[m-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===l.length?1:l[0],d=ee("int32",h+1);d[0]=0;for(let m=0;m<h;++m){const t=i?e[0]:e[m],n=u?a[0]:a[m],r=c?s[0]:s[m];if(0===r)throw new Error("Requires delta != 0");let o;if(r>0&&n<t||r<0&&n>t)o=0;else if(o=Math.ceil(Math.abs((n-t)/r)),o>bI)throw new Error("Requires ((limit - start) / delta) <= ".concat(bI));d[m+1]=d[m]+o}const p=ee(n,d[h]);let f=0;for(let m=0;m<h;++m){const t=d[m+1]-d[m];let n=i?e[0]:e[m];const a=c?s[0]:s[m];for(let e=0;e<t;++e)p[f++]=n,n+=a}return[d,p]}const xI={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:s}=t,o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,[c,l]=vI(o,a.shape,a.dtype,i,r.shape,u,s.shape);return[n.makeTensorInfo([c.length],"int32",c),n.makeTensorInfo([l.length],a.dtype,l)]}};var wI=mp;class DI{constructor(e,t,n,a,r,s,o,i,u,c){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=a,this.valuesDType=r,this.defaultValue=s,this.defaultValueShape=o,this.rowPartitionValues=i,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=yp(c),this.raggedRank=bp(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===wI.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===wI.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case wI.VALUE_ROWIDS:return DI.getMaxWidthValueRowID(t);case wI.ROW_SPLITS:return DI.getMaxWidthRowSplit(t);default:throw new Error("Cannot handle partition type ".concat(wI[this.getRowPartitionTypeByDimension(e-1)]))}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let a=0;a<t-1;++a){const t=e[a+1]-e[a];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,a=e[0],r=0;for(let s=1;s<t;++s){const t=e[s];t!==a&&(a=t,r=Math.max(s-n,r),n=s)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return CI(e,n)}calculateOutputSize(e){const t=this.valuesShape;vp(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=gp(this.raggedRank,n,t);a[0]<0&&(a[0]=e);for(let r=1;r<=this.raggedRank;++r)a[r]<0&&(a[r]=this.getMaxWidth(r));return a}calculateFirstParentOutputIndex(e,t,n){const a=Math.min(e,n),r=[];let s=0;for(let o=0;o<a;++o,s+=t)r.push(s);for(let o=a;o<e;++o)r.push(-1);return V(r.length===e,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(e,t,n,a){const r=e.length,s=[];for(let o=0;o<r-1;++o){const r=e[o+1]-e[o];let i=Math.min(a,r),u=t[o];-1===u&&(i=0);for(let e=0;e<i;++e)s.push(u),u+=n;for(let e=0;e<r-i;++e)s.push(-1)}if(r>0&&s.length!==e[r-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,a){const r=e.length,s=[];if(0===r)return[];let o=0,i=e[0];if(i>=t.length)throw new Error("Got currentValueRowId=".concat(i,", which is not less than ").concat(t.length));let u=t[i];s.push(u);for(let c=1;c<r;++c){const r=e[c];if(r===i)u>=0&&(++o,o<a?u+=n:u=-1);else{if(o=0,i=r,r>=t.length)throw new Error("Got nextValueRowId=".concat(r," which is not less than ").concat(t.length));u=t[r]}s.push(u)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,a){const r=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case wI.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,a);case wI.ROW_SPLITS:if(r.length-1>t.length)throw new Error("Row partition size is greater than output size: ".concat(r.length-1," > ").concat(t.length));return this.calculateOutputIndexRowSplit(r,t,n,a);default:throw new Error("Unsupported partition type: ".concat(wI[s]))}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case wI.FIRST_DIM_SIZE:return e[0];case wI.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case wI.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error("Cannot handle type ".concat(wI[t]))}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let s=n.length-2;s>=0;--s)n[s]=n[s+1]*t[s+1];const a=CI(t,!1),r=ee(this.valuesDType,H(a));if(n[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){s=this.calculateOutputIndex(e-1,s,n[e],t[e])}this.setOutput(this.raggedRank,s,r,a)}return[a,r]}setOutput(e,t,n,a){if(0===n.length)return;const r=this.values,s=n;let o=a.slice();o=o.slice(e+1);const i=H(o),u=t.length;let c=this.defaultValue;if(c.length!==i&&1!==c.length){const e=this.defaultValueShape;ms((()=>{const t=yu(c,e),n=Ou(t,o);c=n.dataSync()}))}let l=0,h=0,d=0;for(let p=0;p<=u;++p){let e=p<u?t[p]:-1;if(e!==d){if(h<d){const e=r.subarray(l*i);kI(s.subarray(h*i),e,(d-h)*i)}if(p>=u){const t=n.length;e=Math.floor(t/i)}if(e>d)if(1===this.defaultValue.length)s.subarray(d*i,e*i).fill(this.defaultValue[0]),d=e;else for(;e>d;){kI(s.slice(d*i),c,i),++d}e<0?(l=p+1,h=d):(l=p,h=d,d=h+1)}else++d}}}function kI(e,t,n){for(let a=0;a<n;a++)e[a]=t[a]}function CI(e,t){const n=[];for(let a of e){if(a<0){if(!t)throw new Error("Dimension ".concat(a," must be >= 0"));if(a<-1)throw new Error("Dimension ".concat(a," must be >= -1"));a=-1}n.push(a)}return n}function NI(e,t,n,a,r,s,o,i,u,c){return new DI(e,t,n,a,r,s,o,i,u,c).compute()}const SI={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:s,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:u}=a,c=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=i.map((e=>n.data.get(e.dataId).values)),p=i.map((e=>e.shape)),[f,m]=NI(c,r.shape,l,s.shape,s.dtype,h,o.shape,d,p,u);return n.makeTensorInfo(f,s.dtype,m)}};function EI(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return de(0,a);const r=de(Math.abs(Math.ceil((t-e)/n)),a);t<e&&1===n&&(n=-1),r[0]=e;for(let s=1;s<r.length;s++)r[s]=r[s-1]+n;return r}const II={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,dtype:s,step:o}=n,i=EI(a,r,o,s);return t.makeTensorInfo([i.length],s,i)}},TI=Tk(Mn,(e=>1/e)),FI={kernelName:Mn,backendName:"cpu",kernelFunc:TI};const AI={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:i}=a;Nk(r,"resizeBilinear");const u=ue(r.shape),[c,l]=i,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(H([h,c,l,f])),y=[s&&c>1?d-1:d,s&&l>1?p-1:p],b=[s&&c>1?c-1:c,s&&l>1?l-1:l];let v=0;const x=y[0]/b[0],w=y[1]/b[1];for(let D=0;D<h;D++)for(let e=0;e<c;e++){let t;t=o?x*(e+.5)-.5:x*e;const n=Math.max(0,Math.floor(t)),a=t-n,r=Math.min(d-1,Math.ceil(t)),s=D*u[0]+n*u[1],i=D*u[0]+r*u[1];for(let e=0;e<l;e++){let t;t=o?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,c=Math.min(p-1,Math.ceil(t)),l=s+n*u[2],h=i+n*u[2],d=s+c*u[2],y=i+c*u[2];for(let e=0;e<f;e++){const t=m[l+e],n=m[h+e],s=t+(m[d+e]-t)*r,o=s+(n+(m[y+e]-n)*r-s)*a;g[v++]=o}}}return n.makeTensorInfo([h,c,l,f],"float32",g)}};const RI={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a;Nk([s,r],"resizeBilinearGrad");const i=ue(r.shape),[u,c,l,h]=r.shape,[,d,p]=s.shape,f=new Float32Array(u*c*l*h),m=[o&&d>1?c-1:c,o&&p>1?l-1:l],g=[o&&d>1?d-1:d,o&&p>1?p-1:p],y=m[0]/g[0],b=m[1]/g[1],v=n.data.get(s.dataId).values;let x=0;for(let w=0;w<u;w++){const e=w*i[0];for(let t=0;t<d;t++){const n=t*y,a=Math.floor(n),r=Math.min(Math.ceil(n),c-1),s=e+a*i[1],o=e+r*i[1],u=n-a,d=1-u;for(let e=0;e<p;e++){const t=e*b,n=Math.floor(t),a=Math.min(Math.ceil(t),l-1),r=t-n,c=1-r,p=s+n*i[2],m=s+a*i[2],g=o+n*i[2],y=o+a*i[2],w=d*c,D=d*r,k=u*c,C=u*r;for(let e=0;e<h;e++){const t=v[x++];f[p+e]+=t*w,f[m+e]+=t*D,f[g+e]+=t*k,f[y+e]+=t*C}}}}return n.makeTensorInfo([u,l,c,h],"float32",f)}};const _I={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:i}=a;Nk(r,"resizeNearestNeighbor");const u=ue(r.shape),[c,l]=i,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(h*c*l*f),y=[s&&c>1?d-1:d,s&&l>1?p-1:p],b=[s&&c>1?c-1:c,s&&l>1?l-1:l],v=y[0]/b[0],x=y[1]/b[1];let w=0;for(let D=0;D<h;D++){const e=D*u[0];for(let t=0;t<c;t++){const n=o?v*(t+.5):v*t;let a=Math.min(d-1,s?Math.round(n):Math.floor(n));o&&(a=Math.max(0,a));const r=e+a*u[1];for(let e=0;e<l;e++){const t=o?x*(e+.5):x*e;let n=Math.min(p-1,s?Math.round(t):Math.floor(t));o&&(n=Math.max(0,n));const a=r+n*u[2];for(let e=0;e<f;e++){const t=m[a+e];g[w++]=t}}}}return n.makeTensorInfo([h,c,l,f],r.dtype,g)}};const OI={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a;Nk([s,r],"resizeNearestNeighborGrad");const i=ue(r.shape),u=ue(s.shape),[c,l,h,d]=r.shape,[,p,f]=s.shape,m=new Float32Array(c*l*h*d),g=n.data.get(s.dataId).values,y=[o&&p>1?l-1:l,o&&f>1?h-1:h],b=[o&&p>1?p-1:p,o&&f>1?f-1:f],v=y[0]/b[0],x=y[1]/b[1],w=1/v,D=1/x,k=2*Math.ceil(w)+2,C=2*Math.ceil(D)+2;for(let N=0;N<c;N++){const e=N*i[0];for(let t=0;t<l;t++){const n=e+t*i[1],a=Math.floor(t*w),r=Math.floor(a-k/2);for(let s=0;s<h;s++){const a=n+s*i[2],c=Math.floor(s*D),y=Math.floor(c-C/2);for(let n=0;n<d;n++){let i=0;for(let a=0;a<k;a++){const c=a+r;if(c<0||c>=p)continue;const d=e+c*u[1],m=c*v;if(t===Math.min(l-1,o?Math.round(m):Math.floor(m)))for(let e=0;e<C;e++){const t=e+y;if(t<0||t>=f)continue;const a=d+t*u[2],r=t*x;s===Math.min(h-1,o?Math.round(r):Math.floor(r))&&(i+=g[a+n])}}m[a+n]=i}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}};const LI={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a;Nk(r,"reverse");const o=r.shape.length,i=Z(s,r.shape);if(0===o)return _k({inputs:{x:r},backend:n});const u=new Cr(r.shape,r.dtype),c=n.bufferSync(r);for(let l=0;l<u.size;l++){const e=u.indexToLoc(l),t=e.slice();i.forEach((e=>t[e]=r.shape[e]-1-t[e])),u.set(c.get(...t),...e)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},MI={kernelName:Oa,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:s,fillValue:o,center:i}=n,u=a,c=$(r.dtype,H(r.shape)),[l,h,d,p]=r.shape,[f,m]=Dp(i,h,d),g=Math.sin(s),y=Math.cos(s),b=u.data.get(r.dataId).values;for(let v=0;v<l;v++){const e=v*d*h*p;for(let t=0;t<h;t++){const n=t*(d*p);for(let a=0;a<d;a++){const r=a*p;for(let s=0;s<p;s++){const i=[l,t,a,s],u=i[2],v=i[1];let x=(u-f)*y-(v-m)*g,w=(u-f)*g+(v-m)*y;x=Math.round(x+f),w=Math.round(w+m);let D=o;if("number"!==typeof o&&(D=3===s?255:o[s]),x>=0&&x<d&&w>=0&&w<h){D=b[e+w*(d*p)+x*p+s]}c[e+n+r+s]=D}}}}return{dataId:u.write(c,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},zI=Tk(jn,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),BI={kernelName:jn,backendName:"cpu",kernelFunc:zI},PI=Ik((e=>1/Math.sqrt(e))),WI=Fk(qn,PI),VI={kernelName:qn,backendName:"cpu",kernelFunc:WI};function UI(e,t,n,a,r,s,o,i,u,c){const l=[a/r,r],h=e.values,d=t.values;if(0===a)return ko(n,t.dtype);const p=u instanceof Cr?u:ko(l,t.dtype);"string"===typeof u||"number"===typeof u?p.values.fill(u):"boolean"===typeof u&&p.values.fill(+u);for(let f=0;f<s;f++){const e=[];let s=0;for(let t=0;t<o;t++){const n=h[f*o+t];e.push(n),s+=n*i[t]}if(s<0||s>=a/r)throw new Error("Invalid indices: ".concat(e," does not index into ").concat(n));for(let n=0;n<r;n++)c?p.values[s*r+n]+=d[f*r+n]:p.values[s*r+n]=0===t.rank?d[0]:d[f*r+n]}return p}const GI={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:o}=a,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:h}=Th(0,r,o),d=UI(n.bufferSync(r),n.bufferSync(s),o,h,c,u,i,l,0,!0);return n.makeTensorInfo(o,d.dtype,d.values)}};function HI(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<t?n=r+1:a=r;return a}function jI(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<=t?n=r+1:a=r;return a}const qI={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:o}=a,i=function(e,t,n,a,r,s){const o=ee("int32",n*r);for(let i=0;i<n;++i){const n=e.slice(i*a,(i+1)*a),u=i*r;for(let e=0;e<r;++e)o[u+e]="left"===s?HI(n,t[e+u]):jI(n,t[e+u])}return o}(n.data.get(r.dataId).values,n.data.get(s.dataId).values,r.shape[0],r.shape[1],s.shape[1],o);return n.makeTensorInfo(s.shape,"int32",i)}};const KI={kernelName:Qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t;Nk([a,r,s],"select");const o=a.shape.length,i=n.data.get(a.dataId).values,u=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,l=zr(r.dtype,s.dtype),h=de(H(r.shape),l);let d=0;const p=0===o||o>1||1===r.shape.length?1:H(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let e=0;e<p;e++)1===i[f]?h[d++]=u[f]:h[d++]=c[f];return n.makeTensorInfo(r.shape,l,h)}},XI=Tp,YI=Fp,QI=Tk(Zn,(e=>e>=0?YI*e:XI*(Math.exp(e)-1))),ZI={kernelName:Zn,backendName:"cpu",kernelFunc:QI},JI=Tk(ta,(e=>e<0?-1:e>0?1:0)),$I={kernelName:ta,backendName:"cpu",kernelFunc:JI},eT=Tk($n,(e=>Math.sin(e))),tT={kernelName:$n,backendName:"cpu",kernelFunc:eT},nT=Tk(ea,(e=>Math.sinh(e))),aT={kernelName:ea,backendName:"cpu",kernelFunc:nT},rT=Math.log(1.1920928955078125e-7)+2,sT=Tk(aa,(e=>{const t=e>-rT,n=e<rT,a=Math.exp(e);let r;return r=n?a:t?e:Math.log(1+a),r})),oT={kernelName:aa,backendName:"cpu",kernelFunc:sT};const iT={kernelName:oa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:o}=a;Nk([r],"spaceToBatchND");const i=H(s),u=[[0,0]];u.push(...o);for(let g=1+s.length;g<r.shape.length;++g)u.push([0,0]);const c=iI.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),l=kp(c.shape,s,i,!1),h=Cp(l.length,s.length,!1),d=Np(c.shape,s,i,!1),p=cC({inputs:{x:c},backend:n,attrs:{shape:l}}),f=DC({inputs:{x:p},backend:n,attrs:{perm:h}}),m=cC({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};function uT(e,t,n,a,r,s,o){const i=t[0],u=s[0],c=new Array(u),l=new Array(i),h=t[1];if(0===u){if(0!==i)throw new Error(nf(i));return[ee(n,0),[0,h],ee(r,0),c,l]}let d=!0,p=0;const f=new Array(u).fill(0);for(let g=0;g<i;++g){const t=e[g*h];if(t<0)throw new Error(af(g,t));if(t>=u)throw new Error(rf(g,t,u));++f[t],d=d&&t>=p,p=t}let m=!0;for(let g=0;g<u;++g){const e=0===f[g];c[g]=e,m=m&&!e,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){const t=e,n=a;for(let e=0;e<i;++e)l[e]=e;return[t,[i,h],n,c,l]}{const t=f[u-1],s=ee(n,t*h),d=ee(r,t),p=new Array(u).fill(0);for(let n=0;n<i;++n){const t=e[n*h],r=p[t],o=(0===t?0:f[t-1])+r;p[t]++;for(let a=0;a<h;++a)s[o*h+a]=e[n*h+a];d[o]=a[n],l[n]=o}for(let e=0;e<u;++e){if(0===p[e]){const t=0===e?0:f[e-1];s[t*h+0]=e;for(let e=1;e<h;++e)s[t*h+e]=0;d[t]=o}}return[s,[t,h],d,c,l]}}const cT={kernelName:ca,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n        ".concat(s.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Values must be a vector, saw:\n        ".concat(r.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.data.get(a.dataId).values,u=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,l=n.data.get(o.dataId).values[0],[h,d,p,f,m]=uT(i,a.shape,a.dtype,u,r.dtype,c,l);return[n.makeTensorInfo(d,a.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};function lT(e,t,n,a,r){const s=H(a),o=t[0],i=r.length,u=[];let c=1,l=-1;for(let m=0;m<i;++m){const e=r[m];if(-1===e){if(-1!==l)throw new Error(sf(l,m));l=m,u.push(1)}else{if(e<0)throw new Error(of(m,e));c*=e,u.push(e)}}if(-1!==l){if(c<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(s/c);if(c*e!==s)throw new Error(cf(a,u));u[l]=e}if(H(u)!==s)throw new Error(lf(a,u));const h=a.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*a[e+1]}const p=[];if(i>0){p[i-1]=1;for(let e=i-2;e>=0;--e)p[e]=p[e+1]*u[e+1]}const f=ee(n,o*i);for(let m=0;m<o;++m){let t=0;for(let n=0;n<h;++n)t+=e[m*h+n]*d[n];for(let e=0;e<i;++e)f[m*i+e]=Math.trunc(t/p[e]),t%=p[e]}return[f,[o,i],u]}const hT={kernelName:la,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape\n        ".concat(r.shape));if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(s.shape));const o=Array.from(n.data.get(r.dataId).values),i=n.data.get(a.dataId).values,u=Array.from(n.data.get(s.dataId).values),[c,l,h]=lT(i,a.shape,a.dtype,o,u);return[n.makeTensorInfo(l,a.dtype,c),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};function dT(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const i=a.length,u=[t[0],e.length/t[0]],c=u[1],l=i>0?r[i-1]+1:0;if(l<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=l;const d=ee(n,h.reduce(((e,t)=>e*t),1));if(0===i)return l>0&&d.fill(o),[d,h];if(l<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=r[p];for(;;){let t=0;if(f<i){if(t=r[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=l)throw new Error(pf(g,l));g>m&&d.fill(o,m*c,g*c);for(let n=p;n<f;++n){const t=a[n];if(t<0||t>=u[0])throw new Error(ff(n,a[n],u[0]));for(let n=0;n<c;n++)d[g*c+n]+=e[t*c+n]}if(s)for(let e=0;e<c;e++)d[g*c+e]/=f-p;if(p=f,++f,m=g+1,g=t,f>i)break}return m<l&&d.fill(o,m*c,l*c),[d,h]}const pT={kernelName:ha,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n          ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n          ".concat(s.shape));if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,[c,l]=dT(o,a.shape,a.dtype,i,u,!0);return n.makeTensorInfo(l,a.dtype,c)}};const fT={kernelName:da,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n         ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n         ".concat(s.shape));if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,[c,l]=dT(o,a.shape,a.dtype,i,u);return n.makeTensorInfo(l,a.dtype,c)}};const mT={kernelName:pa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:o}=t,{outputShape:i}=a,{sliceRank:u,numUpdates:c,sliceSize:l,strides:h,outputSize:d}=Th(0,r,i),p=!1,f=n.bufferSync(r);let m;switch(s.dtype){case"bool":m=UI(f,n.bufferSync(s),i,d,l,c,u,h,Boolean(n.data.get(o.dataId).values[0]),p);break;case"float32":m=UI(f,n.bufferSync(s),i,d,l,c,u,h,n.data.get(o.dataId).values[0],p);break;case"int32":m=UI(f,n.bufferSync(s),i,d,l,c,u,h,n.data.get(o.dataId).values[0],p);break;case"string":m=UI(f,n.bufferSync(s),i,d,l,c,u,h,pr(n.data.get(o.dataId).values[0]),p);break;default:throw new Error("Unsupported type ".concat(s.dtype))}return n.makeTensorInfo(i,m.dtype,m.values)}};const gT={kernelName:ia,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:o}=a,i=Z(o,r.shape)[0],u=tf(r,s,i),c=new Array(r.shape.length).fill(0),l=r.shape.slice();return u.map((e=>{const t=[...l];t[i]=e;const a=XC({inputs:{x:r},backend:n,attrs:{begin:c,size:t}});return c[i]+=e,a}))}},yT=Ik((e=>Math.sqrt(e))),bT=Tk(ra,(e=>Math.sqrt(e))),vT={kernelName:ra,backendName:"cpu",kernelFunc:bT},xT={kernelName:ma,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{x:a}=t,r=n;Nk(a,"square");const s=r.data.get(a.dataId).values,o=new Float32Array(s.length);for(let i=0;i<s.length;++i){const e=s[i];o[i]=e*e}return{dataId:r.write(o,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},wT=zk(((e,t)=>{const n=e-t;return n*n})),DT=aC(fa,wT),kT={kernelName:fa,backendName:"cpu",kernelFunc:DT},CT=Ik(((e,t)=>{const{pattern:n,replaceGlobal:a,rewrite:r}=t;return e.replace(new RegExp(n,a?"g":""),r)})),NT=Fk(ga,CT),ST={kernelName:ga,backendName:"cpu",kernelFunc:NT},ET=Tk(Ra,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),IT={kernelName:Ra,backendName:"cpu",kernelFunc:ET};function TT(e,t,n,a){const r=ko(e,t.dtype);for(let s=0;s<r.size;s++){const e=r.indexToLoc(s),o=new Array(e.length);for(let t=0;t<o.length;t++)o[t]=e[t]*n[t]+a[t];r.set(t.get(...o),...e)}return r}const FT={kernelName:ya,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:o,strides:i,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:h,shrinkAxisMask:d}=a;Nk(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:v,strides:x}=Ui(r.shape,s,o,i,u,c,l,h,d);let w;if(m)w=cC({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){V(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const e=Ti(b,v,x),t=XC({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});w=cC({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=TT(p,n.bufferSync(r),x,b);w=n.makeTensorInfo(f,e.dtype,e.values)}return w}};class AT{constructor(e,t,n,a,r,s){this.separator=dr(e),this.nGramWidths=t,this.leftPad=dr(n),this.rightPad=dr(a),this.padWidth=r,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,a,r,s){for(let o=0;o<r;++o){const i=this.getPadWidth(s),u=Math.max(0,i-o),c=Math.max(0,i-(r-(o+1))),l=s-(u+c),h=t+(u>0?0:o-i);let d=0;d+=u*this.leftPad.length;for(let t=0;t<l;++t)d+=e[h+t].length;d+=c*this.rightPad.length;d+=(u+c+l-1)*this.separator.length,n[a+o]=new Uint8Array(d);const p=n[a+o];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<l-1;++t)m(e[h+t]),m(this.separator);if(l>0){m(e[h+l-1]);for(let e=0;e<c;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<c-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error("First split value must be 0, got ".concat(e));for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error("Invalid split value ".concat(t[r],", must be in [").concat(e,", ").concat(n,"]"));e=t[r]}if(e!==n)throw new Error("Last split value must be data size. Expected ".concat(n,", got ").concat(e))}const r=a-1,s=ee("int32",a);if(0===n||0===a){const e=new Array(n);for(let t=0;t<=r;++t)s[t]=0;return[e,s]}s[0]=0;for(let i=1;i<=r;++i){const e=t[i]-t[i-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),s[i]=s[i-1]+n}const o=new Array(s[r]);for(let i=0;i<r;++i){const n=t[i];let a=s[i];if(this.nGramWidths.forEach((r=>{const s=t[i+1]-t[i],u=this.getNumNGrams(s,r);this.createNGrams(e,n,o,a,u,r),a+=u})),this.preserveShort&&a===s[i]){const r=t[i+1]-t[i];if(0===r)continue;const s=r+2*this.padWidth,u=1;this.createNGrams(e,n,o,a,u,s)}}return[o,s]}}function RT(e,t,n,a,r,s,o,i){return new AT(n,a,r,s,o,i).compute(e,t)}const _T={kernelName:ba,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:o,rightPad:i,padWidth:u,preserveShortSequences:c}=a,{data:l,dataSplits:h}=t,d=n.data.get(l.dataId).values,p=n.data.get(h.dataId).values,[f,m]=RT(d,p,r,s,o,i,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function OT(e,t,n,a){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)a.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let s=e.indexOf(r);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||a.push(t),s=(e=e.subarray(s+1)).indexOf(r)}return void(n&&0===e.length||a.push(e))}let r=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(r,s);n&&0===t.length||a.push(t),r=s+1}}function LT(e,t,n){const a=e.length,r=[];let s=0,o=0;const i=new Array(a);for(let d=0;d<a;++d){const a=r.length;OT(e[d],t,n,r);const u=r.length-a;i[d]=u,s+=u,o=Math.max(o,u)}const u=ee("int32",2*s),c=new Array(s),l=[a,o];let h=0;for(let d=0;d<a;++d)for(let e=0;e<i[d];++e)u[2*h]=d,u[2*h+1]=e,c[h]=r[h],++h;return[u,c,l]}const MT={kernelName:va,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: ".concat(s.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values[0],[c,l,h]=LT(i,u,r),d=l.length;return[n.makeTensorInfo([d,2],"int32",c),n.makeTensorInfo([d],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function zT(e,t){const n=ee("int32",e.length);for(let a=0;a<e.length;++a)n[a]=ur(e[a]).modulo(t).getLowBitsUnsigned();return n}const BT={kernelName:xa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=zT(n.data.get(s.dataId).values,r);return n.makeTensorInfo(s.shape,"int32",o)}},PT=Tk(Da,(e=>Math.tan(e))),WT={kernelName:Da,backendName:"cpu",kernelFunc:PT},VT=Tk(ka,(e=>Math.tanh(e)));const UT={kernelName:Xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:a,indices:r,updates:s}=t,{sliceRank:o,numUpdates:i,sliceSize:u,strides:c,outputSize:l}=Th(0,r,a.shape),h=n.bufferSync(r),d=n.bufferSync(s),p=n.bufferSync(a),f=UI(h,d,a.shape,l,u,i,o,c,p,!1);return n.makeTensorInfo(a.shape,f.dtype,f.values)}};function GT(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const a=ko(n,e.dtype);for(let r=0;r<a.values.length;++r){const t=a.indexToLoc(r),n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=t[a]%e.shape[a];const s=e.locToIndex(n);a.values[r]=e.values[s]}return a}const HT={kernelName:Ca,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;Nk(r,"tile");const o=GT(n.bufferSync(r),s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}},jT=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function qT(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;a>n;){if(a-n>600){const r=a-n+1,s=t-n+1,o=Math.log(r),i=.5*Math.exp(2*o/3),u=.5*Math.sqrt(o*i*(r-i)/r)*Math.sign(s-r/2);qT(e,t,Math.max(n,Math.floor(t-s*i/r+u)),Math.min(a,Math.floor(t+(r-s)*i/r+u)))}const r=e[t];let s=n,o=a;for(W(e,n,t),jT(e[a],r)>0&&W(e,n,a);s<o;){for(W(e,s,o),s++,o--;jT(e[s],r)<0;)s+=1;for(;jT(e[o],r)>0;)o-=1}0===jT(e[n],r)?W(e,n,o):(o+=1,W(e,o,a)),o<=t&&(n=o+1),t<=o&&(a=o-1)}}function KT(e,t,n,a,r){const s=t[t.length-1],[o,i]=[e.length/s,s],u=$(n,o*a),c=$("int32",o*a);for(let h=0;h<o;h++){const t=h*i,n=e.subarray(t,t+i);let s=new Array(n.length);n.forEach(((e,t)=>s[t]={value:e,index:t})),a<s.length&&(qT(s,a),s=s.slice(0,a)),r&&s.sort(jT);const o=h*a,l=u.subarray(o,o+a),d=c.subarray(o,o+a);for(let e=0;e<a;e++)l[e]=s[e].value,d[e]=s[e].index}const l=t.slice();return l[l.length-1]=a,[ko(l,n,u),ko(l,"int32",c)]}const XT={kernelName:Na,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:o}=a;Nk(r,"topk");const i=n.data.get(r.dataId).values,[u,c]=KT(i,r.shape,r.dtype,s,o);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}};const YT={kernelName:Sa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{image:r,transforms:s}=t,{interpolation:o,fillMode:i,fillValue:u,outputShape:c}=n,[l,h,d,p]=r.shape,[f,m]=null!=c?c:[h,d],g=[l,f,m,p],y=ue(r.shape),b=y[0],v=y[1],x=y[2],w=ue(g),D=w[0],k=w[1],C=w[2],N=$(r.dtype,H(g));N.fill(u);const S=a.data.get(r.dataId).values,E=a.data.get(s.dataId).values;for(let I=0;I<l;++I){const e=1===s.shape[0]?E:E.subarray(8*I,8*I+8);for(let t=0;t<f;++t)for(let n=0;n<m;++n)for(let a=0;a<p;++a){let r;const s=e[6]*n+e[7]*t+1;if(0===s)continue;const c=(e[0]*n+e[1]*t+e[2])/s,l=(e[3]*n+e[4]*t+e[5])/s,p=QT(c,d,i),f=QT(l,h,i);switch(o){case"nearest":r=JT(S,h,d,b,v,x,I,f,p,a,u);break;case"bilinear":r=$T(S,h,d,b,v,x,I,f,p,a,u);break;default:throw new Error("Error in Transform: Expect 'nearest' or "+"'bilinear', but got ".concat(o))}N[I*D+t*k+n*C+a]=r}return a.makeTensorInfo(g,r.dtype,N)}return{dataId:a.write(N,g,r.dtype),shape:r.shape,dtype:r.dtype}}};function QT(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return B(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return B(0,n,t-1)}(e,t);case"nearest":return function(e,t){return B(0,e,t-1)}(e,t);default:return function(e){return e}(e)}}function ZT(e,t,n,a,r,s,o,i,u,c,l){return 0<=i&&i<t&&0<=u&&u<n?e[o*a+i*r+u*s+c]:l}function JT(e,t,n,a,r,s,o,i,u,c,l){return ZT(e,t,n,a,r,s,o,Math.round(i),Math.round(u),c,l)}function $T(e,t,n,a,r,s,o,i,u,c,l){const h=Math.floor(i),d=Math.floor(u),p=h+1,f=d+1;return(p-i)*((f-u)*ZT(e,t,n,a,r,s,o,h,d,c,l)+(u-d)*ZT(e,t,n,a,r,s,o,h,f,c,l))+(i-h)*((f-u)*ZT(e,t,n,a,r,s,o,p,d,c,l)+(u-d)*ZT(e,t,n,a,r,s,o,p,f,c,l))}function eF(e,t,n,a){const r=Z(t,n)[0],s=[1,n[0],1];for(let f=0;f<r;f++)s[0]*=n[f];s[1]=n[r];for(let f=r+1;f<n.length;f++)s[2]*=n[f];const o=new Map,i=new Int32Array(n[r]),u=new Cr(s,a,e),c=[],l=1===s[0]&&1===s[2];for(let f=0;f<n[r];f++){let t;if(l)t=e[f].toString();else{const e=[];for(let t=0;t<s[0];t++)for(let n=0;n<s[2];n++)e.push(u.get(t,f,n));t=e.join(",")}const n=o.get(t);if(null!=n)i[f]=n;else{const e=o.size;o.set(t,e),i[f]=e,c.push(f)}}const h=s.slice();h[1]=o.size;const d=new Cr(h,a);c.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let a=0;a<s[2];a++)d.set(u.get(n,e,a),n,t,a)}));const p=n.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:i}}const tF={kernelName:Ia,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;Nk(s,"unique");const o=a.data.get(s.dataId).values,{outputValues:i,outputShape:u,indices:c}=eF(o,r,s.shape,s.dtype);return[a.makeTensorInfo(u,s.dtype,i),a.makeTensorInfo([c.length],"int32",c)]}};const nF={kernelName:Ta,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const o=r.shape.length,i=r.shape[s],u=new Array(o-1);let c=0;for(let p=0;p<o;p++)p!==s&&(u[c++]=r.shape[p]);const l=new Array(o).fill(0),h=r.shape.slice();h[s]=1;const d=new Array(i);for(let p=0;p<d.length;p++){l[s]=p;const e=XC({inputs:{x:r},backend:n,attrs:{begin:l,size:h}});d[p]=cC({inputs:{x:e},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(e)}return d}};const aF={kernelName:Fa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:o}=a;Nk(r,"unsortedSegmentSum");const i=[],u=[],c=r.shape.length-s.shape.length;let l=s;for(let d=0;d<c;++d){const e=uS({inputs:{input:l},backend:n,attrs:{dim:d+1}});l=e,u.push(e)}for(let d=0;d<o;++d){const e=cr(d,"int32"),t=n.makeTensorInfo([],"int32",e),a=YN({inputs:{a:t,b:l},backend:n}),s=tC({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),o=UN({inputs:{a:s,b:r},backend:n}),c=HN({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}});i.push(c),u.push(t),u.push(a),u.push(s),u.push(o),u.push(c)}const h=sI({inputs:i,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},rF=[pC,mC,yC,vC,uC,xC,CC,NC,SC,EC,TC,AC,_C,MC,BC,UC,GC,HC,jC,dC,qC,QC,$C,nN,aN,nC,oN,uN,Qk,cN,fN,gN,yN,bN,vN,xN,wN,kN,NN,SN,EN,IN,TN,FN,RN,_N,ON,LN,MN,zN,BN,PN,qN,Rk,KN,QN,rS,iS,cS,dS,kS,NS,SS,TS,RS,_S,OS,MS,BS,VS,HS,Ok,jS,dN,KS,YS,ZS,Mk,eE,aE,sE,uE,lE,pE,mE,bE,vE,xE,kE,SE,EE,IE,TE,FE,AE,RE,_E,ME,zE,WE,GE,GN,jE,KE,YE,ZE,eI,tI,rI,oI,iI,lI,Wk,dI,yI,xI,SI,II,$k,mS,FI,Uk,Hk,lC,AI,RI,_I,OI,LI,MI,BI,VI,GI,qI,KI,ZI,Kk,$I,tT,aT,YC,UE,oT,iT,cT,hT,pT,fT,mT,gT,vT,xT,kT,ST,IT,FT,_T,MT,BT,vS,jN,WT,{kernelName:ka,backendName:"cpu",kernelFunc:VT},UT,HT,XT,YT,kC,tF,nF,aF,aI];for(const n of rF)ja(n);const sF={},oF={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function iF(e,t){if(!(e in sF)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(we().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==e){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete sF[e]}),!1),we().getBool("SOFTWARE_WEBGL_ENABLED")&&(oF.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",oF)||n.getContext("experimental-webgl",oF);return n.getContext("webgl2",oF)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;sF[e]=n}const n=sF[e];return null==n||n.isContextLost()?(delete sF[e],iF(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),sF[e])}var uF,cF,lF;function hF(e,t){return[t,e]}function dF(e){const t=H(e);return K(Math.ceil(t/4))}function pF(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function fF(e,t){const n=e;let a,r,s,o,i,u,c,l,h,d;return 2===we().getNumber("WEBGL_VERSION")?(a=n.R32F,r=n.R16F,s=n.RGBA16F,o=n.RGBA32F,i=n.RED,c=4,l=1,h=n.HALF_FLOAT,d=n.FLOAT,u=n.RGBA8):(a=e.RGBA,r=e.RGBA,s=e.RGBA,o=n.RGBA,i=e.RGBA,c=4,l=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,u=e.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:l,textureTypeHalfFloat:h,textureTypeFloat:d}}function mF(e,t){const n=t();return we().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code ".concat(t)}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(uF||(uF={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(cF||(cF={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(lF||(lF={}));function gF(e){return!!(we().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function yF(e,t){return SF(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const bF=/ERROR: [0-9]+:([0-9]+):/g;function vF(e,t){const n=bF.exec(t);if(null==n)return console.log("Couldn't parse line number in error: ".concat(t)),void console.log(e);const a=+n[1],r=e.split("\n"),s=r.length.toString().length+2,o=r.map(((e,t)=>X((t+1).toString(),s)+e));let i=0;for(let h=0;h<o.length;h++)i=Math.max(o[h].length,i);const u=o.slice(0,a-1),c=o.slice(a-1,a),l=o.slice(a);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log("%c ".concat(X(c[0],i)),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join("\n"))}function xF(e,t){if(mF(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function wF(e,t,n,a,r,s,o){const i=e.getAttribLocation(t,n);return-1!==i&&(mF(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,a))),mF(e,(()=>e.vertexAttribPointer(i,r,e.FLOAT,!1,s,o))),mF(e,(()=>e.enableVertexAttribArray(i))),!0)}function DF(e,t,n,a){mF(e,(()=>function(e,t,n){EF(e,n),mF(e,(()=>e.activeTexture(e.TEXTURE0+n))),mF(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,a))),mF(e,(()=>e.uniform1i(n,a)))}function kF(e,t,n){mF(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),mF(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function CF(e,t){mF(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),mF(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function NF(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error ".concat(t)}}(e,t))}function SF(e,t,n){const a=mF(e,(()=>t()));if(null==a)throw new Error(n);return a}function EF(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n){const e="[gl.TEXTURE0, gl.TEXTURE".concat(n,"]");throw new Error("textureUnit must be in ".concat(e,"."))}}function IF(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return H(e.slice(0,e.length-t))}function TF(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function FF(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[IF(e),...TF(e)]),t}function AF(e){return e%2===0}function RF(e,t){if(j(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],a=t[t.length-1];if(n===a)return!0;if(AF(n)&&AF(a)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&AF(e[0])&&AF(t[0])}let _F,OF;function LF(e,t){return null!=e.getExtension(t)}function MF(e){try{if(null!=iF(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function zF(e){if(0===e)return!1;const t=iF(e);if(1!==e){if(LF(t,"EXT_color_buffer_float"))return BF(t);const e="EXT_color_buffer_half_float";if(LF(t,e)){const n=t.getExtension(e);return function(e,t){const n=fF(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a);const r=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(o),i}(t,n)}return!1}if(!LF(t,"OES_texture_float"))return!1;if(!LF(t,"WEBGL_color_buffer_float"))return!1;return BF(t)}function BF(e){const t=fF(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),r}function PF(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&V("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors ")+"in the WebGL backend."))}))}const WF=we();function VF(){let e,t,n,a,r,s,o,i,u,c;return 2===we().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",r="texture",s="outputColor",o="out vec4 outputColor;",i=we().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",u="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",r="texture2D",s="gl_FragColor",o="",i="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:r,output:s,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:u,defineRound:c}}function UF(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=ue(t);return a.map(((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / ").concat(t),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * ").concat(t):"index -= ".concat(e[r]," * ").concat(t);return"".concat(s,"; ").concat(o,";")})).join("")}function GF(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=ue(t);return a.map(((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / outShapeStrides[").concat(r,"]"),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * outShapeStrides[").concat(r,"]"):"index -= ".concat(e[r]," * outShapeStrides[").concat(r,"]");return"".concat(s,"; ").concat(o,";")})).join("")}function HF(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=function(e,t){const n=e.length,a=e.map((e=>"".concat(t,"[").concat(e,"]"))),r=new Array(n-1);r[n-2]=a[n-1];for(let s=n-3;s>=0;--s)r[s]="(".concat(r[s+1]," * ").concat(a[s+1],")");return r}(e.map(((e,t)=>t)),t);return a.map(((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / ").concat(a[r]),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * ").concat(a[r]):"index -= ".concat(e[r]," * ").concat(a[r]);return"".concat(s,"; ").concat(o,";")})).join("")}function jF(e){const t=ue(e).map((e=>e.toString()));return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ".concat(t[0]," + coords.y * ").concat(t[1]," + coords.z;\n  }\n")}WF.registerFlag("HAS_WEBGL",(()=>WF.getNumber("WEBGL_VERSION")>0)),WF.registerFlag("WEBGL_VERSION",(()=>MF(2)?2:MF(1)?1:0)),WF.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),WF.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===WF.get("WEBGL_VERSION"))),WF.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),WF.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),WF.registerFlag("WEBGL_PACK",(()=>WF.getBool("HAS_WEBGL"))),WF.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>WF.getBool("WEBGL_PACK"))),WF.registerFlag("WEBGL_PACK_CLIP",(()=>WF.getBool("WEBGL_PACK"))),WF.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>WF.getBool("WEBGL_PACK"))),WF.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>WF.getBool("WEBGL_PACK"))),WF.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>WF.getBool("WEBGL_PACK"))),WF.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>WF.getBool("WEBGL_PACK"))),WF.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>WF.getBool("WEBGL_PACK"))),WF.registerFlag("WEBGL_PACK_REDUCE",(()=>WF.getBool("WEBGL_PACK"))),WF.registerFlag("WEBGL_LAZILY_UNPACK",(()=>WF.getBool("WEBGL_PACK"))),WF.registerFlag("WEBGL_CONV_IM2COL",(()=>WF.getBool("WEBGL_PACK"))),WF.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>WF.getBool("WEBGL_PACK"))),WF.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==_F){const t=iF(e);_F=t.getParameter(t.MAX_TEXTURE_SIZE)}return _F}(WF.getNumber("WEBGL_VERSION")))),WF.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==OF){const t=iF(e);OF=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,OF)}(WF.getNumber("WEBGL_VERSION")))),WF.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=WF.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=iF(e);return t=LF(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:LF(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),WF.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>WF.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Jr())),WF.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=iF(e);if(1===e){if(!LF(t,"OES_texture_float"))return!1}else if(!LF(t,"EXT_color_buffer_float"))return!1;return BF(t)}(WF.getNumber("WEBGL_VERSION")))),WF.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!WF.getBool("WEBGL_FORCE_F16_TEXTURES")&&WF.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),WF.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>zF(WF.getNumber("WEBGL_VERSION")))),WF.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=WF.getNumber("WEBGL_VERSION"))&&null!=iF(e).fenceSync;var e})),WF.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>WF.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),WF.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!==typeof e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but "+"got ".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never "+"delete) or at least 0, but got ".concat(e,"."))})),WF.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Jr()?1:-1),(e=>{if("number"!==typeof e)throw new Error("WEBGL_FLUSH_THRESHOLD must be a number but got "+"".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_FLUSH_THRESHOLD must be -1 (indicating never "+"manual flush) or at least 0, but got ".concat(e,"."))})),WF.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),WF.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),WF.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),WF.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),WF.registerFlag("WEBGL_EXP_CONV",(()=>!1)),WF.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>WF.getBool("IS_TEST"))),WF.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),WF.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),WF.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),WF.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const qF="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:KF}=s;function XF(e,t,n){const a=[];if(e.forEach((e=>{const t=H(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push("uniform float ".concat(e.name).concat(t>1?"[".concat(t,"]"):"",";")):(a.push("uniform sampler2D ".concat(e.name,";")),a.push("uniform int offset".concat(e.name,";"))),n.enableShapeUniforms){const{uniformShape:t}=rA(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push("uniform int ".concat(e.name,"Shape;"));break;case 2:a.push("uniform ivec2 ".concat(e.name,"Shape;"));break;case 3:a.push("uniform ivec3 ".concat(e.name,"Shape;"));break;case 4:a.push("uniform ivec4 ".concat(e.name,"Shape;"))}a.push("uniform ivec2 ".concat(e.name,"TexShape;"))}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{a.push("uniform ".concat(e.type," ").concat(e.name).concat(e.arrayIndex?"[".concat(e.arrayIndex,"]"):"",";"))}));const r=a.join("\n"),s=e.map((e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3?arguments[3]:void 0,r="";r+=n?QF(e,a):YF(e,a);const s=e.shapeInfo.logicalShape,o=t.logicalShape;s.length<=o.length&&(r+=n?function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=KF(e.shapeInfo.logicalShape,t.logicalShape),u=aA(o),c=o-s;let l;const h=["x","y","z","w","u","v"];l=0===s?"":o<2&&i.length>=1?"coords = 0;":i.map((e=>"coords.".concat(h[e+c]," = 0;"))).join("\n");let d="";d=o<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords.".concat(h[t+c]))).join(", ");let p="return outputValue;";const f=1===H(e.shapeInfo.logicalShape),m=H(t.logicalShape),g=1===m;if(1!==s||f||g){if(f&&!g)p=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(i.length){const e=s-2,t=s-1;i.indexOf(e)>-1&&i.indexOf(t)>-1?p="return vec4(outputValue.x);":i.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 ".concat(r,"() {\n      ").concat(u," coords = getOutputCoords();\n      ").concat(l,"\n      vec4 outputValue = get").concat(a,"(").concat(d,");\n      ").concat(p,"\n    }\n  ")}(e,t):function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===u&&null==e.shapeInfo.flatOffset&&j(o,s))return"\n      float ".concat(r,"() {\n        return sampleTexture(").concat(n,", resultUV);\n      }\n    ");const c=aA(u),l=KF(e.shapeInfo.logicalShape,t.logicalShape),h=u-i;let d;const p=["x","y","z","w","u","v"];d=0===i?"":u<2&&l.length>=1?"coords = 0;":l.map((e=>"coords.".concat(p[e+h]," = 0;"))).join("\n");let f="";f=u<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords.".concat(p[t+h]))).join(", ");return"\n    float ".concat(r,"() {\n      ").concat(c," coords = getOutputCoords();\n      ").concat(d,"\n      return get").concat(a,"(").concat(f,");\n    }\n  ")}(e,t));return r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),o=t.texShape,i=VF(),u=function(e){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ".concat(e.texture2D,"(textureSampler, uv).r;\n    }\n  ")}(i);let c,l,h=function(e){const t="".concat(e.version,"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ").concat(e.varyingFs," vec2 resultUV;\n    ").concat(e.defineOutput,"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ").concat(e.defineSpecialNaN,"\n    ").concat(e.defineSpecialInf,"\n    ").concat(e.defineRound,"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ").concat(ZF,"\n    ").concat(JF,"\n    ").concat($F,"\n  ");return t}(i);t.isPacked?(c=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===a[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ".concat(a[1],".0);\n      }\n    ");if(1===a[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ".concat(a[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      return 2 * (resTexRC.x * ").concat(a[1]," + resTexRC.y);\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(j(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(".concat(a[0],", ").concat(a[1],"));\n      }\n    ");const r=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      int b = index / ").concat(s,";\n      index -= b * ").concat(s,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ")}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2);let o=s,i="",u="b, r, c";for(let c=2;c<e.length-1;c++)o*=e[e.length-c-1],i="\n      int b".concat(c," = index / ").concat(o,";\n      index -= b").concat(c," * ").concat(o,";\n    ")+i,u="b".concat(c,", ")+u;return"\n    ivec".concat(e.length," getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(").concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      ").concat(i,"\n\n      int b = index / ").concat(s,";\n      index -= b * ").concat(s,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec").concat(e.length,"(").concat(u,");\n    }\n  ")}(e,t,n)}}(t.logicalShape,o,n.enableShapeUniforms),l=function(e){return"\n    void setOutput(vec4 val) {\n      ".concat(e.output," = val;\n    }\n  ")}(i)):(c=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.x * ".concat(t[1],".0);\n      }\n    ");if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.y * ".concat(t[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      return resTexRC.x * ").concat(t[1]," + resTexRC.y;\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){if(j(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(".concat(t[0],", ").concat(t[1],"));\n      }\n    ");if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ");if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ");if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      int r = index / ").concat(e[1],";\n      int c = index - r * ").concat(e[1],";\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n){const t=GF(["r","c","d"],e);return"\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ".concat(t,"\n    return ivec3(r, c, d);\n  }\n")}const a=UF(["r","c","d"],e);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec3(r, c, d);\n    }\n  ")}(e,t,n);case 4:return function(e,t,n){if(n){const t=GF(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ".concat(t,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}const a=UF(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}(e,t,n);case 5:return function(e,t){const n=UF(["r","c","d","d2","d3"],e);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(".concat(t[0],",\n                             ").concat(t[1],"));\n\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  ")}(e,t);case 6:return function(e,t){const n=UF(["r","c","d","d2","d3","d4"],e);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  ")}(e,t);default:throw new Error("".concat(e.length,"-D output sampling is not yet supported"))}}(t.logicalShape,o,n.enableShapeUniforms),l=function(e){return"\n    void setOutput(float val) {\n      ".concat(e.output," = vec4(val, 0, 0, 0);\n    }\n  ")}(i)),n.packedInputs&&(h+=eA);return[h,u,l,r,c,s,n.userCode].join("\n")}function YF(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"float ".concat(a,"() {return ").concat(n,";}");const[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return"\n      float ".concat(a,"() {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const o=tA(n);if(t)return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");const[i,u]=e.shapeInfo.texShape;return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(i,", ").concat(u,", ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e,t);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int index) {\n        ").concat(nA(e),"\n      }\n    ");const r=e.shapeInfo.texShape,s=r[0],o=r[1];if(1===o&&1===s)return"\n      float ".concat(a,"(int index) {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const i=tA(n);if(1===o)return t?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[0]));\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / ").concat(s,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(1===s)return t?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / ").concat(o,".0, 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(t)return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(s,", ").concat(o,", index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape;if(null!=s&&j(n,s)){if(t)return"\n      float ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const e=s[0],n=s[1];return"\n    float ".concat(r,"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(n,".0, ").concat(e,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}const{newShape:o,keptDims:i}=J(n),u=o;if(u.length<n.length){const n=sA(e,u),a=["row","col"];return"\n      ".concat(YF(n,t),"\n      float ").concat(r,"(int row, int col) {\n        return ").concat(r,"(").concat(oA(a,i),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(").concat(n[1],", 1)));\n        ").concat(nA(e),"\n      }\n    ");const c=s[0],l=s[1],h=tA(a);if(1===l)return t?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(").concat(a,"TexShape[0]));\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ").concat(c,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(1===c)return t?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(").concat(a,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2((index + 0.5) / ").concat(l,".0, 0.5);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(t)return"\n      float ".concat(r,"(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(a,"Shape[1] + col + ").concat(h,";\n        vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");return"\n  float ".concat(r,"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ").concat(n[1]," + col + ").concat(h,";\n    vec2 uv = uvFromFlat(").concat(c,", ").concat(l,", index);\n    return sampleTexture(").concat(a,", uv);\n  }\n")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[1]*n[2],o=n[2],{newShape:i,keptDims:u}=J(n),c=i;if(c.length<n.length){const n=sA(e,c),a=["row","col","depth"];return"\n        ".concat(YF(n,t),"\n        float ").concat(r,"(int row, int col, int depth) {\n          return ").concat(r,"(").concat(oA(a,u),");\n        }\n      ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(").concat(s,", ").concat(o,", 1)));\n        ").concat(nA(e),"\n      }\n    ");const l=e.shapeInfo.texShape,h=l[0],d=l[1],p=e.shapeInfo.flatOffset;if(d===s&&null==p)return t?"\n      float ".concat(r,"(int row, int col, int depth) {\n        int stride1 = ").concat(a,"Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n        float ".concat(r,"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(").concat(o,", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(").concat(d,".0, ").concat(h,".0);\n          return sampleTexture(").concat(a,", uv);\n        }\n      ");if(d===o&&null==p)return t?"\n      float ".concat(r,"(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(").concat(a,"Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(").concat(n[1],", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(d,".0, ").concat(h,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");const f=tA(a);if(t)return"\n    float ".concat(r,"(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ").concat(a,"Shape[1] * ").concat(a,"Shape[2];\n      int stride1 = ").concat(a,"Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ").concat(f,";\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n      return sampleTexture(").concat(a,", uv);\n    }\n    ");return"\n      float ".concat(r,"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(s," + col * ").concat(o," + depth + ").concat(f,";\n        vec2 uv = uvFromFlat(").concat(h,", ").concat(d,", index);\n        return sampleTexture(").concat(a,", uv);\n      }\n  ")}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[3],o=n[2]*s,i=n[1]*o,{newShape:u,keptDims:c}=J(n);if(u.length<n.length){const n=sA(e,u),a=["row","col","depth","depth2"];return"\n      ".concat(YF(n,t),"\n      float ").concat(r,"(int row, int col, int depth, int depth2) {\n        return ").concat(r,"(").concat(oA(a,c),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(").concat(i,", ").concat(o,", ").concat(s,", 1)));\n        ").concat(nA(e),"\n      }\n    ");const l=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f="int stride2 = ".concat(a,"Shape[3];"),m="int stride1 = ".concat(a,"Shape[2] * stride2;"),g="int stride0 = ".concat(a,"Shape[1] * stride1;");if(p===i&&null==l)return t?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        ").concat(f,"\n        ").concat(m,"\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(").concat(o,", ").concat(s,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");if(p===s&&null==l)return t?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(a,"Shape[1] * ").concat(a,"Shape[2], ").concat(a,"Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(n[1]*n[2],", ").concat(n[2],", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const y=tA(a);if(t)return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ").concat(f,"\n      ").concat(m,"\n      ").concat(g,"\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index + ").concat(y,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i," + col * ").concat(o," +\n          depth * ").concat(s," + depth2;\n      vec2 uv = uvFromFlat(").concat(d,", ").concat(p,", index + ").concat(y,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],s=t[3]*r,o=t[2]*s,i=t[1]*o,{newShape:u,keptDims:c}=J(t);if(u.length<t.length){const t=sA(e,u),n=["row","col","depth","depth2","depth3"];return"\n      ".concat(YF(t),"\n      float ").concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        return ").concat(a,"(").concat(oA(n,c),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(i,", ").concat(o,", ").concat(s,", ").concat(r,")) +\n          depth3;\n        ").concat(nA(e),"\n      }\n    ");const l=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===i&&null==l)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(").concat(o,", ").concat(s,", ").concat(r,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(p===r&&null==l)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3],",\n               ").concat(t[2]*t[3],", ").concat(t[3],", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const f=tA(n);return"\n    float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i," + col * ").concat(o," + depth * ").concat(s," +\n          depth2 * ").concat(r," + depth3 + ").concat(f,";\n      vec2 uv = uvFromFlat(").concat(d,", ").concat(p,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:s}=J(t);if(r.length<t.length){const t=sA(e,r),n=["row","col","depth","depth2","depth3","depth4"];return"\n      ".concat(YF(t),"\n      float ").concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ").concat(a,"(").concat(oA(n,s),");\n      }\n    ")}const o=t[5],i=t[4]*o,u=t[3]*i,c=t[2]*u,l=t[1]*c;if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(l,", ").concat(c,", ").concat(u,", ").concat(i,")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(").concat(o,", 1)));\n        ").concat(nA(e),"\n      }\n    ");const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===l&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(").concat(c,", ").concat(u,", ").concat(i,", ").concat(o,")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(f===o&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3]*t[4],",\n               ").concat(t[2]*t[3]*t[4],",\n               ").concat(t[3]*t[4],",\n               ").concat(t[4],")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const m=tA(n);return"\n    float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(l," + col * ").concat(c," + depth * ").concat(u," +\n          depth2 * ").concat(i," + depth3 * ").concat(o," + depth4 + ").concat(m,";\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(f,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e);default:throw new Error("".concat(n.length,"-D input sampling")+" is not yet supported")}}function QF(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),a=VF();return"\n    vec4 ".concat(n,"() {\n      return ").concat(a.texture2D,"(").concat(t,", halfCR);\n    }\n  ")}(e);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,s=VF();if(t)return"\n    vec4 ".concat(a,"(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ");const o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return"\n    vec4 ".concat(a,"(int index) {\n      vec2 uv = packedUVfrom1D(\n        ").concat(o[0],", ").concat(o[1],", index);\n      return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,o=s[0],i=s[1],u=VF();if(null!=s&&j(n,s))return t?"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n\n        return ").concat(u.texture2D,"(").concat(a,", uv);\n      }\n    "):"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(i,".0, ").concat(o,".0);\n\n        return ").concat(u.texture2D,"(").concat(a,", uv);\n      }\n    ");if(t)return"\n    vec4 ".concat(r,"(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ").concat(u.texture2D,"(").concat(a,", uv);\n    }\n  ");const c=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],l=Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int row, int col) {\n      vec2 uv = packedUVfrom2D(").concat(l,", ").concat(c[0],", ").concat(c[1],", row, col);\n      return ").concat(u.texture2D,"(").concat(a,", uv);\n    }\n  ")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const a=[1,2],s=sA(e,n.slice(1)),o=["b","row","col"];return"\n        ".concat(QF(s,t),"\n        vec4 ").concat(r,"(int b, int row, int col) {\n          return ").concat(r,"(").concat(oA(o,a),");\n        }\n      ")}const i=VF();if(t)return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ");const u=o[0],c=o[1],l=Math.ceil(n[2]/2),h=l*Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ").concat(u,", ").concat(c,", ").concat(h,", ").concat(l,", b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ")}(e,t);default:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=VF();if(t)return"\n    vec4 ".concat(a,"(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(").concat(n,"Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(n,"Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ").concat(n,"Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ");const s=e.shapeInfo.logicalShape,o=s.length,i=e.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=u[0],l=u[1],h=Math.ceil(s[o-1]/2);let d=h*Math.ceil(s[o-2]/2),p="int b, int row, int col",f="b * ".concat(d," + (row / 2) * ").concat(h," + (col / 2)");for(let m=2;m<o-1;m++)p="int b".concat(m,", ")+p,d*=s[o-m-1],f="b".concat(m," * ").concat(d," + ")+f;return"\n    vec4 ".concat(a,"(").concat(p,") {\n      int index = ").concat(f,";\n      int texR = index / ").concat(l,";\n      int texC = index - texR * ").concat(l,";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(l,", ").concat(c,");\n      return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t)}}const ZF="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",JF="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",$F="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",eA="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function tA(e){return"offset".concat(e)}function nA(e){const t=e.name,n=H(e.shapeInfo.logicalShape);return n<2?"return ".concat(t,";"):"\n    for (int i = 0; i < ".concat(n,"; i++) {\n      if (i == index) {\n        return ").concat(t,"[i];\n      }\n    }\n  ")}function aA(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error("GPU for rank ".concat(e," is not yet supported"))}function rA(e,t,n){const{newShape:a,keptDims:r}=J(t),s=t.length,o=e&&3===s&&1===t[0],i=o?t.slice(1):a,u=!e&&s>1&&!j(t,n)&&a.length<s||o;return{useSqueezeShape:u,uniformShape:u?i:t,keptDims:r}}function sA(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function oA(e,t){return t.map((t=>e[t])).join(", ")}function iA(e,t,n,a){const r=n.map(((e,n)=>{const a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:a}})),s=r.map((e=>e.shapeInfo)),o={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},i=XF(r,o,t),u=function(e,t){const n=SF(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(mF(e,(()=>e.shaderSource(n,t))),mF(e,(()=>e.compileShader(n))),we().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw vF(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,i),c=e.createProgram(u);return we().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:i,webGLProgram:c,inShapeInfos:s,outShapeInfo:o,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(c),Object.assign({program:t,fragmentShader:u,source:i,webGLProgram:c,inShapeInfos:s,outShapeInfo:o},uA(e,t,c)))}function uA(e,t,n){const a=[],r=[];let s,o,i,u=null,c=null;c=e.getUniformLocation(n,"NAN",!1),1===we().getNumber("WEBGL_VERSION")&&(u=e.getUniformLocation(n,"INFINITY",!1));const l=!1;for(const h of t.variableNames){const r={name:h,uniform:e.getUniformLocation(n,h,l),offset:e.getUniformLocation(n,"offset".concat(h),l)};t.enableShapeUniforms&&(r.shape=e.getUniformLocation(n,"".concat(h,"Shape"),l),r.texShape=e.getUniformLocation(n,"".concat(h,"TexShape"),l)),a.push(r)}if(t.enableShapeUniforms&&(s=e.getUniformLocation(n,"outShape",l),i=e.getUniformLocation(n,"outShapeStrides",l),o=e.getUniformLocation(n,"outTexShape",l)),t.customUniforms)for(const h of t.customUniforms)r.push(e.getUniformLocation(n,h.name,l));return{variablesLocations:a,customUniformLocations:r,infLoc:u,nanLoc:c,outShapeLocation:s,outShapeStridesLocation:i,outTexShapeLocation:o}}function cA(e,t){if(e.length!==t.length)throw Error("Binary was compiled with ".concat(e.length," inputs, but ")+"was executed with ".concat(t.length," inputs"));e.forEach(((e,n)=>{const a=e.logicalShape,r=t[n],s=r.shape;if(!j(a,s))throw Error("Binary was compiled with different shapes than "+"the current args. Shapes ".concat(a," and ").concat(s," must match"));if(e.isUniform&&r.isUniform)return;const o=e.texShape,i=r.isUniform?null:r.texData.texShape;if(!j(o,i))throw Error("Binary was compiled with different texture shapes than the"+" current args. Shape ".concat(o," and ").concat(i," must match"))}))}function lA(e){return we().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class hA{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=uF.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=VF();this.outputShape=e,this.enableShapeUniforms=lA(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?GF(["r","c","d"],e):UF(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class dA{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=uF.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=VF();this.outputShape=e,this.enableShapeUniforms=lA(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?GF(["r","c","d"],e):UF(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class pA{constructor(e){this.variableNames=["A"],this.outTexUsage=cF.DOWNLOAD;const t=VF();this.outputShape=e,this.userCode="\n      ".concat(qF,"\n\n      void main() {\n        float x = getAAtOutCoords();\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}class fA{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=cF.DOWNLOAD;const t=VF();this.outputShape=e,this.userCode="\n      ".concat(qF,"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}const mA={R:0,G:1,B:2,A:3};class gA{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RGBA";this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=VF();this.outputShape=e,this.enableShapeUniforms=lA(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let s="";for(let o=0;o<n.length;o++){const e=n[o];s+="\n          if(offset == ".concat(o,") {\n            result = values[").concat(mA[e],"];\n          }")}this.userCode="\n      ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":jF(e),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ").concat(n.length,");\n\n        flatIndex = idiv(flatIndex, ").concat(n.length,", 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ").concat(a.texture2D,"(A, uv);\n          ").concat(s,"\n        }\n        ").concat(a.output," = vec4(").concat(r,", 0., 0., 0.);\n      }\n    ")}}class yA{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=VF();this.outputShape=e,this.enableShapeUniforms=lA(this.outputShape.length);let a="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let t=0;t<=1;t++){const r=2*s+t;a+="\n          localCoords = coords;\n          if(localCoords[2] + ".concat(t," < ").concat(this.enableShapeUniforms?"outShape[2]":"".concat(e[2]),") {\n          localCoords[2] += ").concat(t,";\n          if (localCoords[1] + ").concat(s," < ").concat(this.enableShapeUniforms?"outShape[1]":"".concat(e[1]),") {\n            localCoords[1] += ").concat(s,";\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ").concat(n.texture2D,"(A, uv);\n\n            if (offset == 0) {\n              result[").concat(r,"] = values[0];\n            } else if (offset == 1) {\n              result[").concat(r,"] = values[1];\n            } else if (offset == 2) {\n              result[").concat(r,"] = values[2];\n            } else {\n              result[").concat(r,"] = values[3];\n            }\n          }\n        }\n        ")}this.userCode="\n        ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":jF(e),"\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ").concat(a,"\n\n          ").concat(n.output," = ").concat(r,";\n        }\n    ")}}function bA(e){const t=VF();return function(e,t){const n=SF(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(mF(e,(()=>e.shaderSource(n,t))),mF(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,"".concat(t.version,"\n    precision highp float;\n    ").concat(t.attribute," vec3 clipSpacePos;\n    ").concat(t.attribute," vec2 uv;\n    ").concat(t.varyingVs," vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }"))}function vA(e){return function(e,t){const n=SF(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return mF(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),mF(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function xA(e){return function(e,t){const n=SF(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return mF(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),mF(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function wA(e,t,n,a,r,s){!function(e,t){const n=we().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){const n="[".concat(e,"x").concat(t,"]");throw new Error("Requested texture size "+n+" is invalid.")}if(e>n||t>n){const a="[".concat(e,"x").concat(t,"]"),r="[".concat(n,"x").concat(n,"]");throw new Error("Requested texture size "+a+" greater than WebGL maximum on this browser / GPU "+r+".")}}(t,n);const o=function(e){return SF(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),i=e.TEXTURE_2D;return mF(e,(()=>e.bindTexture(i,o))),mF(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),mF(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),mF(e,(()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST))),mF(e,(()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===we().getNumber("WEBGL_VERSION")?mF(e,(()=>e.texImage2D(i,0,a,t,n,0,r,s,null))):mF(e,(()=>e.texStorage2D(i,1,a,t,n))),mF(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:o,texShape:[n,t]}}function DA(e){return e.internalFormatFloat}function kA(e){return e.internalFormatHalfFloat}function CA(e){return e.downloadTextureFormat}function NA(e){return e.internalFormatPackedFloat}function SA(e){return e.internalFormatPackedHalfFloat}function EA(e,t,n,a,r,s,o,i){const u=e,c=new Float32Array(function(e,t){const[n,a]=pF(e,t);return n*a*4}(s,o));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}class IA{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=we().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){sF[e]=t}(t,e)):this.gl=iF(t),e=this.gl,2===we().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>mF(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>mF(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>mF(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>mF(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>mF(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>mF(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>mF(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>mF(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===we().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=yF(this.gl,e),LF(this.gl,t))this.textureHalfFloatExtension=yF(this.gl,t);else if(we().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),LF(this.gl,a))this.colorBufferHalfFloatExtension=yF(this.gl,a);else if(we().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",LF(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!LF(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=vA(this.gl),this.indexBuffer=xA(this.gl),this.framebuffer=function(e){return SF(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=fF(this.gl,this.textureHalfFloatExtension)}get debug(){return we().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;mF(e,(()=>e.finish())),mF(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),mF(e,(()=>e.deleteFramebuffer(this.framebuffer))),mF(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),mF(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),mF(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=hF(t,n);return wA(e,r,s,DA(a),a.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=hF(t,n);return wA(e,r,s,kA(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=hF(t,n);return wA(e,r,s,CA(a),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){mF(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===we().getNumber("WEBGL_VERSION")?mF(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):mF(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===we().getNumber("WEBGL_VERSION")?mF(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):mF(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),mF(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),function(e,t,n,a,r,s){let o,i,u;mF(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(o=new Uint8Array(n*a*4),i=e.UNSIGNED_BYTE,u=e.RGBA):(o=new Float32Array(n*a*4),i=e.FLOAT,u=s.internalFormatPackedFloat),o.set(r),2===we().getNumber("WEBGL_VERSION")?mF(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,a,e.RGBA,i,o))):mF(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,a,0,e.RGBA,i,o))),mF(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=pF(t,n);return wA(e,r,s,SA(a),e.RGBA,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=pF(t,n);return wA(e,r,s,NA(a),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(CF(this.gl,this.framebuffer),this.outputTexture=null),mF(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,a){const[r,s]=hF(t,n),o=new Uint8Array(t*n*4);return mF(e,(()=>e.readPixels(0,0,r,s,a.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,a,r,s){return EA(this.gl,e,0,0,0,r,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const a=e,r=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,r),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const a=function(e,t,n){const a=e.createBuffer();mF(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const r=16*t*n;return mF(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,r,e.STREAM_READ))),mF(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),mF(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(we().getBool("WEBGL_FENCE_API_ENABLED")){const a=e,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=a.clientWaitSync(r,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=r}else we().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,we().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const a=new Float32Array(t*n*4);return mF(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a))),a}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=bA(t));const n=function(e){return SF(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);mF(t,(()=>t.attachShader(n,this.vertexShader))),mF(t,(()=>t.attachShader(n,e))),function(e,t){if(mF(e,(()=>e.linkProgram(t))),!we().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const a=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&xF(t,a),a}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;mF(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){mF(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),wF(e,t,"clipSpacePos",n,3,20,0)&&wF(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(mF(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&xF(this.gl,this.program),mF(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?function(e,t,n){return SF(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),mF(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),DF(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[a,r]=pF(t,n);this.setOutputMatrixTextureDriver(e,a,r)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&xF(this.gl,this.program),NF(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}mF(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),mF(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=yF(this.gl,2===we().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===we().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===we().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await Y((()=>this.disposed||this.isQueryAvailable(e,we().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,we().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in we().platform&&(n=we().platform.setTimeoutCustom.bind(we().platform)),Y((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),kF(this.gl,e,this.framebuffer),this.debug&&NF(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(kF(this.gl,this.outputTexture,this.framebuffer),this.debug&&NF(this.gl)):CF(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const a=this.gl;kF(a,e,this.framebuffer),this.debug&&NF(a),this.outputTexture=e,mF(a,(()=>a.viewport(0,0,t,n))),mF(a,(()=>a.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),mF(this.gl,(()=>this.gl.scissor(e,t,n,a)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{mx:TA,XI:FA,Nk:AA,f6:RA,ct:_A,YG:OA,hH:LA,z3:MA,sG:zA,uM:BA,vS:PA,qB:WA,GG:VA,rq:UA,lg:GA,WR:HA,cu:jA,GE:qA,px:KA,jC:XA,He:YA,hE:QA,BF:ZA,Dk:JA,cl:$A,_B:eR,ub:tR,_f:nR,Ku:aR,qy:rR,Zy:sR,bu:oR,zv:iR,dH:uR,HS:cR,yH:lR,l3:hR,z9:dR,x6:pR,_m:fR,eW:mR,GK:gR,SP:yR,yr:bR,dl:vR,Dw:xR,xT:wR,_X:DR,wz:kR}=S;function CR(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>"".concat(e,".").concat(t)))}function NR(e,t){return 1===t?[e]:CR(e,t)}class SR{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=lA(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=NR("rc",this.rank),t=aA(this.rank),n=this.getOutOfBoundsCondition(e),a=this.getSetup(e),r=this.getOutput(e);this.userCode="\n        void main() {\n          ".concat(t," rc = getOutputCoords();\n\n          if(").concat(n,") {\n            setOutput(vec4(0));\n          } else {\n            ").concat(a,"\n\n            setOutput(vec4(").concat(r,"));\n          }\n        }\n      ")}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let r="".concat(0===n?"r":"rp1",", ").concat(0===a?"c":"cp1");for(let t=2;t<this.rank;t++)r="".concat(e[e.length-1-t],",")+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return"rc > ".concat(this.enableShapeUniforms?"outShape":this.outputShape[0]);let t="";for(let n=this.rank-2;n<this.rank;n++)t+="".concat(e[n]," >= ").concat(this.enableShapeUniforms?"outShape[".concat(n,"]"):this.outputShape[n]),n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?"outShape[".concat(this.rank," - 1]"):this.outputShape[this.rank-1],a=this.enableShapeUniforms?"outShape[".concat(this.rank," - 2]"):this.outputShape[this.rank-2];return"\n      int r = ".concat(t[0],";\n      int c = ").concat(t[1],";\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ").concat(n,";\n      bool rEdge = rp1 >= ").concat(a,";\n    ")}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){const e=this.enableShapeUniforms?"outShape":this.outputShape[0];return"getA(rc), (rc + 1 >= ".concat(e," ? 0. : getA(rc + 1)), 0, 0")}return"getA(".concat(t[0],"),\n            cEdge ? 0. : getA(").concat(t[1],"),\n            rEdge ? 0. : getA(").concat(t[2],"),\n            rEdge || cEdge ? 0. : getA(").concat(t[3],")")}}class ER{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=lA(this.outputShape.length);let n="";for(let a=0;a<4;a++){let e="thisRC = rc;";a%2===1&&(e+="thisRC.z += 1;"),a>1&&(e+="thisRC.y += 1;"),n+="\n        ".concat(e,"\n        ").concat(a>0?"if(thisRC.y < rows && thisRC.z < cols){":"","\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[").concat(a,"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ").concat(a>0?"}":"","\n      ")}this.userCode="\n      ".concat(function(e,t){const n=t?HF(["r","c","d"],"inputShape"):UF(["r","c","d"],e);return"\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ".concat(n,"\n      return ivec3(r, c, d);\n    }\n  ")}(t,this.enableShapeUniforms),"\n      ").concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":jF(e),"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ").concat(this.enableShapeUniforms?"outShape[1]":e[1],";\n        int cols = ").concat(this.enableShapeUniforms?"outShape[2]":e[2],";\n\n        ").concat(n,"\n\n        setOutput(result);\n      }\n    ")}}class IR{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const a=FR(t,n),r=AR(e,a,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const s=TR(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[r].pop();return this.usedTextures[r].push(e),e}let o;return a===lF.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===lF.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===lF.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===lF.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===lF.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(o),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),o}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;const r=FR(n,a),s=AR(t,r,a);s in this.freeTextures||(this.freeTextures[s]=[]);const o=TR(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),i=we().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==i&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const u=this.usedTextures[s],c=u&&u.indexOf(e);if(null==c||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[c]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used","".concat(this.numFreeTextures," / ").concat(this.numUsedTextures),"(".concat(e,")"));const t=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: ".concat(this._numBytesAllocated)),console.log("Bytes unused: ".concat(this._numBytesFree," (").concat(Math.round(100*t),"%)"))}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function TR(e,t,n,a,r){const s=function(e,t){switch(e){case lF.PACKED_2X2_FLOAT32:return NA(t);case lF.PACKED_2X2_FLOAT16:return SA(t);case lF.UNPACKED_FLOAT32:return DA(t);case lF.UNPACKED_FLOAT16:return kA(t);case lF.PACKED_4X1_UNSIGNED_BYTE:return CA(t);default:throw new Error("Unknown physical texture type ".concat(e))}}(t,a);let o;if(r){const[t,n]=pF(e[0],e[1]);o=t*n}else{const[t,n]=hF(e[0],e[1]);o=t*n}const i=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error("Unknown internal format ".concat(t))}(n,s);return o*i}function FR(e,t){if(e===cF.UPLOAD)return lF.PACKED_2X2_FLOAT32;if(e===cF.RENDER||null==e)return function(e){return we().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?lF.PACKED_2X2_FLOAT32:lF.UNPACKED_FLOAT32:e?lF.PACKED_2X2_FLOAT16:lF.UNPACKED_FLOAT16}(t);if(e===cF.DOWNLOAD||e===cF.PIXELS)return lF.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type ".concat(e))}function AR(e,t,n){return"".concat(e[0],"_").concat(e[1],"_").concat(t,"_").concat(n)}class RR{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=lA(this.outputShape.length),this.userCode="\n      float unaryOperation(float x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}const _R="if (isnan(x)) return x;",OR="return abs(x);";const LR=_R+"\n  return (x < 0.0) ? 0.0 : x;\n",MR=_R+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",zR="return x;";class BR{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=lA(this.outputShape.length),this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}class PR{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=lA(this.outputShape.length);const t=e.length,n=NR("rc",t),a=aA(t),r=function(e,t){if(1===e)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),o=t<=1?"rc":"vec2(".concat(s.join(","),")");this.userCode="\n      void main() {\n        ".concat(a," rc = getOutputCoords();\n        vec4 packedInput = getA(").concat(r,");\n\n        setOutput(getChannel(packedInput, ").concat(o,"));\n      }\n    ")}}const WR=Bh,VR={};const UR=we().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class GR extends L{nextDataId(){return GR.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!we().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof IA)t=e;else{const n=iF(we().getNumber("WEBGL_VERSION"),e);t=new IA(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=iF(we().getNumber("WEBGL_VERSION"));t=new IA(e),this.binaryCache=((n=we().getNumber("WEBGL_VERSION"))in VR||(VR[n]={}),VR[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new IR(this.gpgpu),this.numMBBeforeWarning=null==we().global.screen?1024:we().global.screen.height*we().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new O(this,ps())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,a,r,s){const o=this.makeTensorInfo(t,n),i=this.texData.get(o.dataId);i.isPacked=!1,i.texture={texture:e,texShape:[a,r]},i.texShape=[a,r];const u=FF(t),c=new gA(u,!1,s),l=this.runWebGLProgram(c,[o],n,[[a,r]]);return l.shape=t,i.texture=null,this.disposeIntermediateTensorInfo(o),l.dataId}write(e,t,n){if((we().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||we().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:cF.UPLOAD,refCount:1}),a}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,a,r){if(we().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:cF.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:r,slice:s,shape:o,isPacked:i}=t;if(null!=s){let t;t=i?new BR(o,zR):new RR(o,zR);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;const u=null!=this.activeTimers;let c,l;if(u&&(c=hr()),"complex64"===a){l=zp(this.readSync(r.real.dataId),this.readSync(r.imag.dataId))}else l=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=hr()-c),this.convertAndCacheOnCPU(e,l)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:a,slice:r,dtype:s,complexTensorInfos:o,isPacked:i}=t;if(null!=r){let t;t=i?new BR(a,zR):new RR(a,zR);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:s}],s),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(we().getBool("DEBUG")&&!we().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===we().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,c,l=null;if("complex64"!==s&&we().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);l=this.gpgpu.createBufferFromTexture(t.texture.texture,...dF(a))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]);c=zp(e[0],e[1])}else if(null==l)c=this.getValuesFromTexture(e);else{const e=H(a);c=this.gpgpu.downloadFloat32MatrixFromBuffer(l,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=l){const e=this.gpgpu.gl;mF(e,(()=>e.deleteBuffer(l)))}const h=this.convertAndCacheOnCPU(e,c),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&ps().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.texData.get(e),{values:a,shape:r,slice:s,dtype:o,isPacked:i,texture:u}=n;if("complex64"===o)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=i?new BR(r,zR):new RR(r,zR);const a=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:o}],o),s=this.readToGPU(a,t);return this.disposeIntermediateTensorInfo(a),s}if(null==u)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,t.customTexShape),l=ps().makeTensorFromTensorInfo(c),h=this.texData.get(c.dataId);return Object.assign({tensorRef:l},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>pr(e)));return ko(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return ko(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!gF(n)){if(we().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value ".concat(n," cannot be represented with your ")+"current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value ".concat(n," cannot be represented on this device."))}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:a}=this.texData.get(e),r=H(t);if(we().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),a=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...dF(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),s}const s=we().getBool("WEBGL_PACK")&&!0===a,o=s?FF(t):t,i=s?new fA(o):new pA(o),u=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),c=this.texData.get(u.dataId),l=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(u),l}timerAvailable(){return we().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=mr(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=mr(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(we().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);o.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>"".concat(e.name,": ").concat(e.ms))).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return we().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:hr(),endMs:null}}endTimer(e){return we().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=hr(),e)}async getQueryTime(e){if(we().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:a,usage:r,isPacked:s,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,u=this.dataRefCount.get(i);u>1?this.dataRefCount.set(i,u-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,r,s)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:UR;return we().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&H(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){Ba("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return WR(e.shape,t)}packedUnaryOp(e,t,n){const a=new BR(e.shape,t),r=this.compileAndRun(a,[e],n);return ps().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=uR(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(we().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,OR,e.dtype);const t=new RR(e.shape,OR),n=this.compileAndRun(t,[e]);return ps().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&ae(n[0])){const r=n.map((e=>dr(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){return ps().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new PR(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new SR(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[IF(e.shape),...TF(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},r=[IF(t),...TF(t)],s=new ER(r,n),o=[n],i=this.runWebGLProgram(s,[a],e.dtype,o,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:a,shape:r,dtype:s}=n;if(null!=t){V(H(r)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const o=FF(r);let i;i=a?new dA(o):new hA(o);const u=[null!=t?t:dF(o)];return{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:o,dtype:s,dataId:e}],s,u,!0,t).dataId}}runWebGLProgram(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5?arguments[5]:void 0;const o=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(o.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===uF.DENSE){const t=null!=s?s:dF(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===H(o.shape))return i.values=$(o.dtype,0),o;const u=[],c=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&H(t.shape)<=we().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!RF(n.shape,t.shape)){const e=t,a=t.shape;t.shape=n.shape,t=this.packedReshape(t,a),u.push(t),n=this.texData.get(t.dataId),e.shape=a}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(o.dataId);const l={shape:o.shape,texData:i,isUniform:!1},h=function(e,t,n){let a="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:o,uniformShape:i,keptDims:u}=rA(e.packedInputs,t.shape,s);let c="",l="",h="";if(1===i.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];c="".concat(e[0]>1,"_").concat(e[1]>1)}else if(2!==i.length||e.packedInputs){if(i.length>2&&!e.packedInputs){const e=ue(i);h="".concat(e[0]===s[1],"_").concat(e[e.length-1]===s[1])}}else l="".concat(i[0]>1,"_").concat(i[1]>1);const d=t.shape.length,p=2===i.length&&j(t.shape,s),f=1===H(t.shape),m=Yo(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&j(s,n.texData.texShape),y=e.packedInputs||i.length>2?"":"".concat(s[0]>1,"_").concat(s[1]>1);a+="".concat(d,"_").concat(g,"_").concat(o?u:"","_").concat(i.length,"_").concat(f,"_").concat(m,"_").concat(p,"_").concat(c,"_").concat(l,"_").concat(h,"_").concat(y,"_").concat(r)}else{const e=t.isUniform?"uniform":t.texData.texShape;a+="".concat(t.shape,"_").concat(e,"_").concat(r)}}));const r=e.userCode;let s=e.constructor.name;return s+="_"+a+"_"+r+"".concat(we().getNumber("WEBGL_VERSION")),s}(e,c,l),d=this.getAndSaveBinary(h,(()=>iA(this.gpgpu,e,c,l))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),we().get("ENGINE_COMPILE_ONLY")||function(e,t,n,a,r){t.program.enableShapeUniforms||(cA(t.inShapeInfos,n),cA([t.outShapeInfo],[a]));const s=a.texData.texture,o=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,o[0],o[1]):e.setOutputMatrixTexture(s.texture,o[0],o[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===we().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let u=0;u<n.length;++u){const a=n[u],{uniform:r,offset:s,shape:o,texShape:i}=t.variablesLocations[u];if(o){const{uniformShape:n}=rA(t.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(i&&e.gl.uniform2i(i,a.texData.texShape[0],a.texData.texShape[1]),null!=r)if(a.isUniform)if(H(a.shape)<2)e.gl.uniform1f(r,a.uniformValues[0]);else{let t=a.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(r,t)}else null!=a.texData.slice&&null!=s&&e.gl.uniform1i(s,a.texData.slice.flatOffset),e.setInputMatrixTexture(a.texData.texture.texture,r,u)}const i=t.outShapeLocation;if(i)switch(a.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(a.shape))}if(t.outShapeStridesLocation){const n=ue(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&r)for(let u=0;u<t.program.customUniforms.length;++u){const n=t.program.customUniforms[u],a=t.customUniformLocations[u],s=r[u];if("float"===n.type)e.gl.uniform1fv(a,s);else if("vec2"===n.type)e.gl.uniform2fv(a,s);else if("vec3"===n.type)e.gl.uniform3fv(a,s);else if("vec4"===n.type)e.gl.uniform4fv(a,s);else if("int"===n.type)e.gl.uniform1iv(a,s);else if("ivec2"===n.type)e.gl.uniform2iv(a,s);else if("ivec3"===n.type)e.gl.uniform3iv(a,s);else{if("ivec4"!==n.type)throw Error("uniform type ".concat(n.type," is not supported yet."));e.gl.uniform4iv(a,s)}}e.executeProgram()}(this.gpgpu,d,c,l,a),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=we().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=hr();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!we().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===r){const e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,a,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!we().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=ms((()=>{if(!we().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=we().getBool("DEBUG");we().set("DEBUG",!1);const t=this.abs(Lo(1e-8)).dataSync()[0];if(we().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:a,values:r,texture:s,usage:o,isPacked:i}=t;if(null!=s)return;const u=null!=this.activeTimers;let c;u&&(c=hr());let l=t.texShape;if(null==l&&(l=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=we().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=we().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(a===1/0&&we().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),t&&(n*=2,a*=2,1===(e=e.map(((t,n)=>n>=e.length-2?P(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=J(e);e=t.newShape}let r=H(e),s=null;e.length<=1&&r<=n?s=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?s=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);const o=null!=s&&Math.max(...s)>a&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(null==s||o)if(t){const t=IF(e);let n=2,a=2;e.length&&([n,a]=TF(e)),r=t*(n/2)*(a/2),s=K(r).map((e=>2*e))}else s=K(r);return s}(n,i),t.texShape=l),null!=r){const e=FF(n);let s,o=l[1],h=l[0];const d=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!i&&d||([o,h]=pF(l[0],l[1])),s=i?new yA(e,d):new gA(e,d);const p=d?[h,o]:l,f=this.makeTensorInfo(p,a),m=this.texData.get(f.dataId);m.usage=d?cF.PIXELS:cF.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),o,h,r);const g=[[h,o]],y=!0,b=this.runWebGLProgram(s,[f],a,g,y),v=this.texData.get(b.dataId);t.texShape=v.texShape,t.isPacked=v.isPacked,t.usage=v.usage,we().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=v.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=hr()-c)}else{const e=this.acquireTexture(l,o,a,i);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:a}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype ".concat(t))}(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: ".concat(e," MB, ")+"most likely due to a memory leak")}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*ne(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await dp(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw vF(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:a,nanLoc:r,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:i}=uA(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=a,e.nanLoc=r,e.outShapeLocation=s,e.outShapeStridesLocation=o,e.outTexShapeLocation=i}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:a,height:r,width:s,channels:o}=e,i=ps().backend;if(!i.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=i.writeTexture(a,t,n,r,s,o);return ps().makeTensorFromDataId(u,t,n,i)}}GR.nextDataId=0;$r()&&bs("webgl",(()=>new GR),2);const HR="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class jR{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Zo(t,n),this.enableShapeUniforms=lA(this.outputShape.length),this.userCode="\n      float binaryOperation(float a, float b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ")}}const qR="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class KR{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Zo(t,n);const r=this.outputShape.length;this.enableShapeUniforms=lA(r);let s="";if(a)if(0===r||1===H(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const e=aA(r);if(s="\n          ".concat(e," coords = getOutputCoords();\n        "),1===r)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+="\n            result.y = (coords + 1) >= ".concat(this.outputShape[0]," ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ");else{const e=NR("coords",r);this.enableShapeUniforms?s+="\n            bool nextRowOutOfBounds =\n              (".concat(e[r-2]," + 1) >= outShape[").concat(r," - 2];\n            bool nextColOutOfBounds =\n              (").concat(e[r-1]," + 1) >= outShape[").concat(r," - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          "):s+="\n            bool nextRowOutOfBounds =\n              (".concat(e[r-2]," + 1) >= ").concat(this.outputShape[r-2],";\n            bool nextColOutOfBounds =\n              (").concat(e[r-1]," + 1) >= ").concat(this.outputShape[r-1],";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          ")}}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ").concat(s,"\n\n        setOutput(result);\n      }\n    ")}}function XR(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const YR={kernelName:Vt,backendName:"webgl",kernelFunc:XR};function QR(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.makeTensorInfo(a.shape,"complex64"),o=n.texData.get(s.dataId),i=XR({inputs:{x:a},backend:n}),u=XR({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:u},s}const ZR={kernelName:Je,backendName:"webgl",kernelFunc:QR},JR="return (a < 0.) ? b * a : a;",$R="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const e_={kernelName:Kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a,o=n.makeTensorInfo([],"float32",cr(s,"float32")),i=we().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new KR($R,r.shape,o.shape):new jR(JR,r.shape,o.shape),u=n.runWebGLProgram(i,[r,o],"float32");return n.disposeIntermediateTensorInfo(o),u}},t_="return (a < 0.) ? b * a : a;",n_="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const a_={kernelName:Tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=we().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new KR(n_,a.shape,r.shape):new jR(t_,a.shape,r.shape);return n.runWebGLProgram(s,[a,r],"float32")}},r_="if (isnan(x)) return x;";function s_(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:a,dtype:r}=e;return e=>{let{inputs:s,backend:o}=e;const{x:i}=s,u=o,c=r||i.dtype;if(u.shouldExecuteOnCPU([i])&&null!=a){const e=u.texData.get(i.dataId),t=a(e.values,c);return u.makeTensorInfo(i.shape,c,t)}let l;return l=we().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new BR(i.shape,n):new RR(i.shape,t),u.runWebGLProgram(l,[i],c)}}function o_(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:a=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:o}=e;return e=>{let{inputs:i,backend:u}=e;const{a:c,b:l}=i,h=u;if(r&&"complex64"===c.dtype){const e=h.texData.get(c.dataId),n=h.texData.get(l.dataId),[a,r]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,a]=e,r={dataId:n.dataId,dtype:n.dtype,shape:c.shape},s={dataId:a.dataId,dtype:a.dtype,shape:l.shape},o=new jR(t,c.shape,l.shape);return h.runWebGLProgram(o,[r,s],zr(n.dtype,a.dtype))})),s=QR({inputs:{real:a,imag:r},backend:h});return h.disposeIntermediateTensorInfo(a),h.disposeIntermediateTensorInfo(r),s}const d=o||zr(c.dtype,l.dtype);if(("string"===c.dtype||"string"===l.dtype||h.shouldExecuteOnCPU([c,l]))&&null!=s){const e=h.texData.get(c.dataId).values,t=h.texData.get(l.dataId).values,n="string"===c.dtype?bf(e):e,a="string"===c.dtype?bf(t):t,[r,o]=s(c.shape,l.shape,n,a,d),i=h.makeTensorInfo(o,d);return h.texData.get(i.dataId).values=r,i}let p;return p=we().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new KR(n,c.shape,l.shape,a):new jR(t,c.shape,l.shape),h.runWebGLProgram(p,[c,l],d)}}function i_(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":LR;if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":MR;if("prelu"===e)return t?n_:t_;if("leakyrelu"===e)return t?$R:JR;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error("Activation ".concat(e," has not been implemented for the WebGL backend."))}class u_{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],u=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=lA(this.outputShape.length);const c=a?e[1]:e[2],l=Math.ceil(c/2),h=a?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",p=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";o&&(m=i?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(o,"\n        }"):u?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(o,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(o,"\n        }"),g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",v="rc.x";e[0]<t[0]?b="imod(rc.x, ".concat(e[0],")"):t[0]<e[0]&&(v="imod(rc.x, ".concat(t[0],")")),this.userCode="\n      ".concat(m,"\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ").concat(l,".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ").concat(b,";\n        int batchB = ").concat(v,";\n        for (int i = 0; i < ").concat(l,"; i++) {\n          vec4 a = getMatrixA(batchA, ").concat(h,");\n          vec4 b = getMatrixB(batchB, ").concat(d,");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (").concat(p[0]," * ").concat(f[0],");\n          result += (").concat(p[1]," * ").concat(f[1],");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ").concat(y,"\n\n        ").concat(g,"\n\n        setOutput(result);\n      }\n    ")}}const c_="return areal * breal - aimag * bimag;",l_="return areal * bimag + aimag * breal;";class h_{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Zo(t,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    ")}}const d_="return a * b;";function p_(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,s=zr(a.dtype,r.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),s=new h_(c_,a.shape,r.shape),o=new h_(l_,a.shape,r.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],u=n.runWebGLProgram(s,i,"float32"),c=n.runWebGLProgram(o,i,"float32"),l=QR({inputs:{real:u,imag:c},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),l}if(n.shouldExecuteOnCPU([a,r])){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),[o,i]=ZA(a.shape,r.shape,e.values,t.values,s),u=n.makeTensorInfo(i,s);return n.texData.get(u.dataId).values=o,u}let o;return o=we().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new KR(d_,a.shape,r.shape):new jR(d_,a.shape,r.shape),n.runWebGLProgram(o,[a,r],s)}const f_={kernelName:bn,backendName:"webgl",kernelFunc:p_};function m_(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,o=n,i=H(r.shape),u=Q(s,i),c=H(u);V(i===c,(()=>"The new shape (".concat(u,") has ").concat(c," elements and the old ")+"shape (".concat(r.shape,") has ").concat(i," elements. The new shape and old ")+"shape must have the same number of elements."));const l=o.texData.get(r.dataId);return!l.isPacked||RF(r.shape,u)||null!==l.texture&&RF(l.shape,u)?(o.incRef(r.dataId),{dataId:r.dataId,shape:u,dtype:r.dtype}):function(e,t,n){const a=[IF(e.shape),...TF(e.shape)],r={dtype:e.dtype,shape:a,dataId:e.dataId},s=[IF(t),...TF(t)],o=new ER(s,a),i=[a],u=n.runWebGLProgram(o,[r],e.dtype,i,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(r,u,o)}const g_={kernelName:Bn,backendName:"webgl",kernelFunc:m_};class y_{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];const o=4*Math.floor(n/4),i=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u="sumValue += dot(values * ".concat(q(e)?e.toPrecision(2):e,", ones);")}let c="";r%n>0&&(c="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return 0.0;\n        }\n      ")),this.userCode="\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ".concat(c,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(o,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(u,"\n        }\n\n        int inIdx = inOffset + ").concat(o,";\n        if (").concat(1===i,") {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ").concat(u,"\n        } else if (").concat(2===i,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ").concat(u,"\n        } else if (").concat(3===i,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ").concat(u,"\n        }\n        setOutput(sumValue);\n      }\n    ")}}class b_{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let u="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const c=4*Math.floor(n/4),l=n%4;let h="\n      if (".concat("sum"===t,") {\n        sumValue += dot(values, ones);\n      } else if (").concat("prod"===t,") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ").concat(i,"(values, minMaxValue);\n        if (").concat("min"===t," || ").concat("max"===t,") {\n          minMaxValue = ").concat(i,"(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    "),d="vec4";"all"===t?(o="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(o="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";r%n>0&&(p="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat(o,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ").concat(p,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        vec4 minMaxValue = vec4(").concat(o,");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ").concat(c,"; i += 4) {\n          int inIdx = inOffset + i;\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(h,"\n        }\n\n        int inIdx = inOffset + ").concat(c,";\n        if (").concat(1===l,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(h,"\n        } else if (").concat(2===l,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(h,"\n        } else if (").concat(3===l,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ").concat(h,"\n        }\n        setOutput(").concat(u,");\n      }\n    ")}}function v_(e,t,n,a){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],a=wp(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape);let s=e;for(let o=0;o<r.length;o++){const{inSize:i,windowSize:u,outSize:c}=r[o];let l,h;l="mean"===n?0===o?new y_({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:c},i):new y_({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:c}):new b_({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:c},n),h=s,s=a.runWebGLProgram(l,[s],t),h.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(h)}return s}class x_{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const a=aA(this.rank),r=function(e){const t=e.length;if(t>6)throw Error("Transpose for rank ".concat(t," is not yet supported"));const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let r=0;r<e.length;r++)a[e[r]]=n[r];return a.join()}(t);this.userCode="\n    void main() {\n      ".concat(a," resRC = getOutputCoords();\n      setOutput(getA(").concat(r,"));\n    }\n    ")}}class w_{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let c=0;c<n.length;c++)n[c]=e[t[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank ".concat(this.rank," is not yet supported."));const a=aA(this.rank),r=CR("rc",this.rank),s=new Array(this.rank);for(let c=0;c<t.length;c++)s[t[c]]=r[c];const o="vec2(".concat(s.slice(-2).join(),")"),i="++".concat(r[this.rank-1]," < ").concat(n[this.rank-1]),u="getChannel(getA(".concat(s.join(),"), ").concat(o,")");this.userCode="\n    void main() {\n      ".concat(a," rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ").concat(u,";\n      if(").concat(i,") {\n        result[1] = ").concat(u,";\n      }\n      --").concat(r[this.rank-1],";\n      if(++").concat(r[this.rank-2]," < ").concat(n[this.rank-2],") {\n        result[2] = ").concat(u,";\n        if(").concat(i,") {\n          result[3] = ").concat(u,";\n        }\n      }\n      setOutput(result);\n    }\n    ")}}function D_(e,t,n){const a=we().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new w_(e.shape,t):new x_(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function k_(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;return function(e,t,n,a){const r=t,s=e.shape.length,o=Z(r,e.shape);let i=o;const u=gc(i,s),c=null!=u;let l=e;c&&(l=D_(e,u,a),i=bc(i.length,s)),mc("sum",i,s);const[h,d]=pc(l.shape,i);let p=h;n&&(p=fc(h,o));const f=H(d),m=m_({inputs:{x:l},attrs:{shape:[H(e.shape)/f,f]},backend:a}),g=v_(m,Br(e.dtype),"sum",a),y=m_({inputs:{x:g},attrs:{shape:p},backend:a});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),c&&a.disposeIntermediateTensorInfo(l),y}(r,s,o,n)}const C_={kernelName:sa,backendName:"webgl",kernelFunc:k_};function N_(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{perm:s}=a,o=n,i=r.shape.length,u=new Array(i);for(let l=0;l<u.length;l++)u[l]=r.shape[s[l]];let c;if(o.shouldExecuteOnCPU([r])){const e=o.texData.get(r.dataId).values,t=DR(e,r.shape,r.dtype,s,u);c=o.makeTensorInfo(u,r.dtype);o.texData.get(c.dataId).values=t}else c=D_(r,s,o);return c}const S_={kernelName:Ea,backendName:"webgl",kernelFunc:N_};function E_(e){let{a:t,b:n,transposeA:a,transposeB:r,backend:s,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:u=0,activation:c=null}=e;const l=t.shape.length,h=n.shape.length,d=a?t.shape[l-2]:t.shape[l-1],p=r?n.shape[h-1]:n.shape[h-2],f=a?t.shape[l-1]:t.shape[l-2],m=r?n.shape[h-2]:n.shape[h-1],g=t.shape.slice(0,-2),y=n.shape.slice(0,-2),b=H(g),v=H(y),x=Zo(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([f,m]);V(d===p,(()=>"Error in matMul: inner shapes (".concat(d,") and (")+"".concat(p,") of Tensors with shapes ").concat(t.shape," and ")+"".concat(n.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const w=a?[b,d,f]:[b,f,d],D=r?[v,m,p]:[v,p,m],k=m_({inputs:{x:t},backend:s,attrs:{shape:w}}),C=m_({inputs:{x:n},backend:s,attrs:{shape:D}}),N=[k,C],S=Math.max(b,v),E=a?k.shape[1]:k.shape[2],I=null!=o,T=null!=i,F="leakyrelu"===c,A=null!=c?i_(c,!0):null;let R;if((1===f||1===m)&&E>1e3&&!1===(I||T||F||null!=A)){let e=k,t=C;a&&(e=N_({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),N.push(e)),r&&(t=N_({inputs:{x:C},backend:s,attrs:{perm:[0,2,1]}}),N.push(t));const n=1===m;let o=e;1!==m&&(o=m_({inputs:{x:e},backend:s,attrs:{shape:[S,E,1]}}),N.push(o));const i=1===m?2:1;let u=t;n&&(u=m_({inputs:{x:t},backend:s,attrs:{shape:[S,1,E]}}),N.push(u));const c=p_({inputs:{a:o,b:u},backend:s});R=k_({inputs:{x:c},backend:s,attrs:{axis:i,keepDims:!0}}),N.push(c)}else{const e=zr(t.dtype,n.dtype),c=new u_(w,D,[S,f,m],a,r,I,A,T,F),l=[k,C];if(null!=o&&l.push(o),T&&l.push(i),F){const e=s.makeTensorInfo([],"float32",cr(u,"float32"));l.push(e),N.push(e)}R=s.runWebGLProgram(c,l,e)}const _=m_({inputs:{x:R},backend:s,attrs:{shape:x}});N.push(R);for(const O of N)s.disposeIntermediateTensorInfo(O);return _}const I_={kernelName:La,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:h}=a;return E_({a:r,b:s,transposeA:u,transposeB:c,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:h,activation:l})}},T_="return abs(x);";const F_={kernelName:Se,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const e=n.texData.get(a.dataId),t=uR(e.values);return n.makeTensorInfo(a.shape,a.dtype,t)}let r;return r=we().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new BR(a.shape,T_):new RR(a.shape,T_),n.runWebGLProgram(r,[a],a.dtype)}},A_=s_({opSnippet:_R+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),R_={kernelName:Ee,backendName:"webgl",kernelFunc:A_},__=s_({opSnippet:_R+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),O_={kernelName:Ie,backendName:"webgl",kernelFunc:__},L_="return a + b;",M_=o_({opSnippet:L_,packedOpSnippet:L_,supportsComplex:!0,cpuKernelImpl:TA}),z_={kernelName:Te,backendName:"webgl",kernelFunc:M_};class B_{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>"T".concat(t)));const n=[];this.variableNames.forEach((e=>{n.push("float v".concat(e," = get").concat(e,"AtOutCoords();"))}));const a=this.variableNames.map((e=>"v".concat(e))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        float result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}class P_{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>"T".concat(t)));const n=[];this.variableNames.forEach((e=>{n.push("vec4 v".concat(e," = get").concat(e,"AtOutCoords();"))}));const a=this.variableNames.map((e=>"v".concat(e))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        vec4 result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}const W_={kernelName:Fe,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,r=n;if(1===r.length)return XR({inputs:{x:r[0]},backend:a});if(r.length>we().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:a}),s=e({inputs:r.slice(t),backend:a});return e({inputs:[n,s],backend:a})}const s=r.map((e=>e.dtype)).reduce(((e,t)=>zr(e,t))),o=r.map((e=>e.shape)),i=we().getBool("WEBGL_PACK")?new P_(r[0].shape,o):new B_(r[0].shape,o);return a.runWebGLProgram(i,r,s)}};const V_={kernelName:Ae,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=r.shape.length,u=Z(s,r.shape);let c=u;const l=gc(c,i);let h=r;null!=l&&(h=N_({inputs:{x:r},backend:n,attrs:{perm:l}}),c=bc(c.length,i)),mc("all",c,i);const[d,p]=pc(h.shape,c),f=m_({inputs:{x:h},backend:n,attrs:{shape:[-1,H(p)]}}),m=v_(f,f.dtype,"all",n);let g;if(o){g=m_({inputs:{x:m},backend:n,attrs:{shape:fc(d,u)}})}else g=m_({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=l&&n.disposeIntermediateTensorInfo(h),g}};const U_={kernelName:Re,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=r.shape.length,u=Z(s,r.shape);let c=u;const l=gc(c,i);let h=r;null!=l&&(h=N_({inputs:{x:r},backend:n,attrs:{perm:l}}),c=bc(c.length,i)),mc("any",c,i);const[d,p]=pc(h.shape,c),f=m_({inputs:{x:h},backend:n,attrs:{shape:[-1,H(p)]}}),m=v_(f,f.dtype,"any",n);let g;if(o){g=m_({inputs:{x:m},backend:n,attrs:{shape:fc(d,u)}})}else g=m_({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=l&&n.disposeIntermediateTensorInfo(h),g}};class G_{constructor(e,t,n){this.variableNames=["A"];const{windowSize:a,batchSize:r,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,s];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ".concat(a,";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          int inIdx = ").concat(i,";\n          float candidate = getA(batch, inIdx);\n          if (candidate ").concat(o," bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    ")}}class H_{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,V(e.length>2,(()=>"Packed arg".concat(n.charAt(0).toUpperCase()+n.slice(1)," supports only inputs with rank above 2.")));const r=e[e.length-1],s=Math.ceil(r/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),a||this.variableNames.push("bestIndicesA");const o=this.outputShape,i=o.length,u=aA(i),c=NR("coords",i);let l,h;if(1===s){h=i+1;const e=aA(h);l="\n        ".concat(e," sourceLocR = ").concat(e,"(").concat(c.join(),", 0);\n        ++").concat(c[i-1],";\n        ").concat(e," sourceLocG = ").concat(e,"(").concat(c.join(),", 0);\n        ++").concat(c[i-2],";\n        ").concat(e," sourceLocA = ").concat(e,"(").concat(c.join(),", 0);\n        --").concat(c[i-1],";\n        ").concat(e," sourceLocB = ").concat(e,"(").concat(c.join(),", 0);\n        --").concat(c[i-2],";")}else h=i,l="\n        ".concat(u," sourceLocR = coords;\n        ++").concat(c[i-1],";\n        ").concat(u," sourceLocG = coords;\n        ++").concat(c[i-2],";\n        ").concat(u," sourceLocA = coords;\n        --").concat(c[i-1],";\n        ").concat(u," sourceLocB = coords;\n        --").concat(c[i-2],";");const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),m=NR("sourceLocR",h-1).concat("inIdx.r"),g=NR("sourceLocG",h-1).concat("inIdx.g"),y=NR("sourceLocB",h-1).concat("inIdx.b"),b=NR("sourceLocA",h-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",x=a?"":"\n          inIdx = round(vec4(getBestIndicesAChannel(".concat(m.join(),"),\n                             getBestIndicesAChannel(").concat(g.join(),"),\n                             getBestIndicesAChannel(").concat(y.join(),"),\n                             getBestIndicesAChannel(").concat(b.join(),")));"),w="vec4(\n            getAChannel(".concat(m.join(),"),\n            hasNextCol ? getAChannel(").concat(g.join(),") : 0.,\n            hasNextRow ? getAChannel(").concat(y.join(),") : 0.,\n            hasNextRow && hasNextCol ? getAChannel(").concat(b.join(),") : 0.)"),D=a?"":"\n      float getBestIndicesAChannel(".concat(f.join(),") {\n        return getChannel(getBestIndicesA(").concat(d.join(),"),\n                                          vec2(").concat(d.slice(-2).join(),"));\n      }");this.userCode="\n      float getAChannel(".concat(f.join(),") {\n        return getChannel(getA(").concat(d.join(),"),\n                               vec2(").concat(d.slice(-2).join(),"));\n      }\n      ").concat(D,"\n      void main() {\n        ").concat(u," coords = getOutputCoords();\n        bool hasNextCol = ").concat(c[i-1]," < ").concat(o[i-1]-1,";\n        bool hasNextRow = ").concat(c[i-2]," < ").concat(o[i-2]-1,";\n        ").concat(l,"\n        ivec4 srcIdx = ivec4(sourceLocR").concat(p,", sourceLocG").concat(p,",\n          sourceLocB").concat(p,", sourceLocA").concat(p,") * ").concat(t,";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ").concat(w,";\n\n        for (int i = 0; i < ").concat(t,"; i++) {\n          inIdx = srcIdx;\n          ").concat(x,"\n          vec4 candidate = ").concat(w,";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(").concat(v,"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    ")}}function j_(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=t.shape[0],s=t.shape[1];null!=a&&(r=a.shape[0],s=a.shape[1]);const o=wp(s),i={windowSize:o,inSize:s,batchSize:r,outSize:Math.ceil(s/o)},u=new G_(i,n,null==a),c=[t];null!=a&&c.push(a);const l=e.runWebGLProgram(u,c,"int32");if(1===l.shape[1])return l;const h=j_(e,t,n,l);return e.disposeIntermediateTensorInfo(l),h}function q_(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const r=null!=a?a.shape:t.shape,s=wp(r[r.length-1]),o=new H_(r,s,n,null==a),i=null==a?[t]:[t,a],u=e.runWebGLProgram(o,i,"int32");if(u.shape.length===t.shape.length){const a=q_(e,t,n,u);return e.disposeIntermediateTensorInfo(u),a}return u}function K_(e,t,n,a){const r=[n];if(mc("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,t.shape.length),!we().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],s=e.texData.get(t.dataId);let o=t;null!==s&&s.isPacked&&(o=e.unpackTensor(t),n.push(o));const[i,u]=pc(o.shape,r),c=H(u),l=m_({inputs:{x:o},backend:e,attrs:{shape:[-1,c]}});n.push(l);const h=j_(e,l,a);n.push(h);const d=m_({inputs:{x:h},backend:e,attrs:{shape:i}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return q_(e,t,a)}const X_={kernelName:_e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let o=Z(s,r.shape);const i=gc(o,r.shape.length);let u=r;const c=[];null!=i&&(u=N_({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(u),o=bc(o.length,u.shape.length)),mc("argMax",[o[0]],u.shape.length);const l=K_(n,u,o[0],"max");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};const Y_={kernelName:Oe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let o=Z(s,r.shape);const i=gc(o,r.shape.length);let u=r;const c=[];null!=i&&(u=N_({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(u),o=bc(o.length,u.shape.length)),mc("argMin",[o[0]],u.shape.length);const l=K_(n,u,o[0],"min");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}},Q_=s_({opSnippet:_R+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Z_={kernelName:Le,backendName:"webgl",kernelFunc:Q_},J_=s_({opSnippet:_R+"return log(x + sqrt(x * x + 1.0));"}),$_={kernelName:Me,backendName:"webgl",kernelFunc:J_},eO=s_({opSnippet:_R+"\n  return atan(x);\n"}),tO={kernelName:ze,backendName:"webgl",kernelFunc:eO},nO=o_({opSnippet:HR+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+qR+"\n  return result;\n"}),aO={kernelName:Pe,backendName:"webgl",kernelFunc:nO},rO=s_({opSnippet:_R+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),sO={kernelName:Be,backendName:"webgl",kernelFunc:rO};class oO{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideHeight,i=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m="((batch  * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + d"),g="(xR * ".concat(e.inWidth," + xC) * ").concat(e.inChannels," + d");let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n        const ivec2 pads = ivec2(").concat(d,", ").concat(p,");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ").concat(l,";\n              wR += ").concat(u,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(h,";\n                wC += ").concat(c,") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ").concat(t," currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ").concat(a?r?m:g:"wR * ".concat(h," + wC"),";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let b="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(b="avgValue / max(count, 1.0)");const v=4*Math.floor(s/4),x=s%4,w="\n      if (".concat(f,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n      const ivec2 pads = ivec2(").concat(d,", ").concat(p,");\n      const float initializationValue = ").concat(y,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(y,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ").concat(l,";\n            wR += ").concat(u,") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(v,"; wC += 4) {\n            int xC = xCCorner + wC * ").concat(c,";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(c,", d),\n              getValue(batch, xR, xC + 2 * ").concat(c,", d),\n              getValue(batch, xR, xC + 3 * ").concat(c,", d)\n            );\n\n            ").concat(w,"\n          }\n\n          int xC = xCCorner + ").concat(v,";\n          if (").concat(1===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(2===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(c,", d),\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(3===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(c,", d),\n              getValue(batch, xR, xC + 2 * ").concat(c,", d),\n              initializationValue\n            );\n\n            ").concat(w,"\n          }\n        }\n        setOutput(").concat(b,");\n      }\n    ")}}class iO{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideDepth,i=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,l=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let v="0.0";if(b||(v="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec3 strides =\n            ivec3(".concat(o,", ").concat(i,", ").concat(u,");\n        const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ").concat(d,";\n              wD += ").concat(c,") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int wR = 0; wR < ").concat(p,";\n                wR += ").concat(l,") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int wC = 0; wC < ").concat(f,";\n                  wC += ").concat(h,") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ").concat(t," currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ").concat(a?r?"(((batch * ".concat(e.inDepth," + xD) * ").concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"((xD * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"wD * ".concat(p," * ").concat(f," +\n                      wR * ").concat(f," + wC"),";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let x="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(x="avgValue / max(count, 1.0)");const w=4*Math.floor(s/4),D=s%4,k="\n      if (".concat(b,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec3 strides =\n        ivec3(".concat(o,", ").concat(i,", ").concat(u,");\n      const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n      const float initializationValue = ").concat(v,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(v,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ").concat(d,";\n            wD += ").concat(c,") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(p,";\n            wR += ").concat(l,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(w,"; wC += 4) {\n              int xC = xCCorner + wC * ").concat(h,";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 3 * ").concat(h,", ch)\n              );\n\n              ").concat(k,"\n            }\n\n            int xC = xCCorner + ").concat(w,";\n            if (").concat(1===D,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(k,"\n            } else if (").concat(2===D,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(k,"\n            } else if (").concat(3===D,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(h,", ch),\n                initializationValue\n              );\n\n              ").concat(k,"\n            }\n          }\n        }\n        setOutput(").concat(x,");\n      }\n    ")}}const uO={kernelName:We,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;PF(r,"avgPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:u}=a;V(pu(o,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const c=au(r.shape,s,o,1,i,u);if(1===c.filterWidth&&1===c.filterHeight&&j(c.inShape,c.outShape))return XR({inputs:{x:r},backend:n});const l=new oO(c,"avg",!1);return n.runWebGLProgram(l,[r],"float32")}};const cO={kernelName:Ue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:u,dataFormat:c}=a,l=ru(r.shape,s,o,[1,1,1],i,u,c),h=new iO(l,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class lO{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=i-1-e.padInfo.top,l=u-1-e.padInfo.left,h=1/(t*n);this.userCode="\n      const ivec2 pads = ivec2(".concat(c,", ").concat(l,");\n      const float avgMultiplier = float(").concat(h,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(i,";\n            wR += ").concat(s,") {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(u,";\n            wC+= ").concat(o,") {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class hO{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=l-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*a);this.userCode="\n      const ivec3 pads = ivec3(".concat(p,", ").concat(f,", ").concat(m,");\n      const float avgMultiplier = float(").concat(g,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(l,";\n            wD += ").concat(i,") {\n          float dyD = float(dyDCorner + wD) / ").concat(r,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(h,";\n              wR += ").concat(u,") {\n            float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(d,";\n                wC += ").concat(c,") {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const dO={kernelName:Ge,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=a,h=ru(o.shape,i,u,[1,1,1],c,l),d=new hO(h);return n.runWebGLProgram(d,[r],o.dtype)}};const pO={kernelName:Ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s;PF([r,s],"avgPoolGrad");const{filterSize:i,strides:u,pad:c}=a,l=au(o.shape,i,u,1,c),h=new lO(l);return n.runWebGLProgram(h,[r],o.dtype)}};const fO={kernelName:He,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:o,transposeB:i}=a;return E_({a:r,b:s,transposeA:o,transposeB:i,backend:n})}};class mO{constructor(e,t,n,a,r,s){this.outputShape=[],this.variableNames=["x","mean","variance"],Zo(e,t),Zo(e,n);let o="0.0";null!=a&&(Zo(e,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";null!=r&&(Zo(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ".concat(o,";\n        float scale = ").concat(i,";\n        float inv = scale * inversesqrt(variance + float(").concat(s,"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    ")}}class gO{constructor(e,t,n,a,r,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Zo(e,t),Zo(e,n);let o="vec4(0.0)";null!=a&&(Zo(e,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";null!=r&&(Zo(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        vec4 offset = ".concat(o,";\n        vec4 scale = ").concat(i,";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(").concat(s,"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    ")}}const yO={kernelName:Mt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,mean:s,variance:o,offset:i,scale:u}=t;V(s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),V(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),V(null==u||s.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:c}=a;null==c&&(c=.001);const l=[r,s,o];let h=null;null!=i&&(h=i.shape,l.push(i));let d=null;null!=u&&(d=u.shape,l.push(u));const p=we().getBool("WEBGL_PACK_NORMALIZATION")?new gO(r.shape,s.shape,o.shape,h,d,c):new mO(r.shape,s.shape,o.shape,h,d,c);return n.runWebGLProgram(p,l,l[0].dtype)}};class bO{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=aA(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return vO.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error("Slicing for rank ".concat(e," is not yet supported"))}(this.rank);let a;const r=e.map(((e,t)=>"sourceLoc.".concat(vO[t]," = start[").concat(t,"] + coords.").concat(vO[t],";")));a="\n        ".concat(t," sourceLoc;\n        ").concat(t," coords = getOutputCoords();\n        ").concat(r.join("\n"),"\n      "),this.userCode="\n      void main() {\n        ".concat(a,"\n        setOutput(getSource(").concat(n,"));\n      }\n    ")}}const vO=["x","y","z","w","u","v"];class xO{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=aA(this.rank),n=NR("coords",this.rank),a=NR("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":"vec2(".concat(a.slice(-2).join(),")"),s="getChannel(getSource(".concat(a.join(),"), ").concat(r,")"),o="\n      result.x = ".concat(s,";\n      if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n        ++").concat(a[this.rank-1],";\n        result.y = ").concat(s,";\n        --").concat(a[this.rank-1],";\n      }\n    "),i=1===this.rank?"":"\n      --".concat(n[this.rank-1],";\n      if (++").concat(n[this.rank-2]," < ").concat(e[this.rank-2],") {\n        ++").concat(a[this.rank-2],";\n        result.z = ").concat(s,";\n        if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n          ++").concat(a[this.rank-1],";\n          result.w = ").concat(s,";\n        }\n      }\n    "),u=this.rank<=4?"sourceLoc = coords +\n            ".concat(t,"(").concat(e.map(((e,t)=>"start[".concat(t,"]"))).join(),");"):e.map(((e,t)=>"".concat(a[t]," = ").concat(n[t]," + start[").concat(t,"];"))).join("\n");this.userCode="\n      void main() {\n        ".concat(t," coords = getOutputCoords();\n        ").concat(t," sourceLoc;\n        ").concat(u,"\n        vec4 result = vec4(0.);\n        ").concat(o,"\n        ").concat(i,"\n        setOutput(result);\n      }\n    ")}}function wO(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:o}=a,[i,u]=Vi(r,s,o);if(Ei(r,i,u),0===H(u))return n.makeTensorInfo(u,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=cR(e.values,i,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,t)}const{isPacked:c}=n.texData.get(r.dataId),l=Pi(r.shape,i,u);if(c||!l){const e=we().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xO(u):new bO(u),t=[i];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,a){const r=a.texData.get(e.dataId),s=a.makeTensorInfo(n,e.dtype),o=a.texData.get(s.dataId);Object.assign(o,r),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=Wi(t,ue(e.shape));r.slice&&(i+=r.slice.flatOffset),o.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||e.dataId};const u=a.dataRefCount.get(o.slice.origDataId)||1;return a.dataRefCount.set(o.slice.origDataId,u+1),s}(r,i,u,n)}const DO={kernelName:Jn,backendName:"webgl",kernelFunc:wO},kO={kernelName:je,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:o}=a;V(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const i=s.reduce(((e,t)=>e*t)),u=kp(r.shape,s,i),c=Cp(u.length,s.length),l=Np(r.shape,s,i),h=Sp(o,s.length),d=Ep(l,o,s.length),p=[],f=m_({inputs:{x:r},backend:n,attrs:{shape:u}}),m=N_({inputs:{x:f},backend:n,attrs:{perm:c}}),g=m_({inputs:{x:m},backend:n,attrs:{shape:l}}),y=wO({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const CO={kernelName:qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o}=a,i=n.readSync(r.dataId),u=n.readSync(s.dataId),c=FA(i,u,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,c)}};const NO={kernelName:Ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,s=we().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=we().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([a,r])||1===o){const e=n.texData.get(a.dataId).values,t=n.texData.get(r.dataId).values,[s,o]=RA(a.shape,r.shape,e,t,a.dtype),i=n.makeTensorInfo(o,a.dtype);return n.texData.get(i.dataId).values=s,i}let i;return i=s?new KR("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",a.shape,r.shape,!1):new jR("\n  return float(int(a.r) & int(b.r));\n",a.shape,r.shape),n.runWebGLProgram(i,[a,r],a.dtype)}};const SO={kernelName:Xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.readSync(a.dataId),o=n.readSync(r.dataId),i=Zo(Array.from(s),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},EO=o_({opSnippet:"return float(a != b);",cpuKernelImpl:$A,dtype:"bool"}),IO={kernelName:xn,backendName:"webgl",kernelFunc:EO};function TO(e){const{inputs:t,backend:n}=e,{input:a}=t;return XR({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const FO={kernelName:Ln,backendName:"webgl",kernelFunc:TO};const AO={kernelName:Ye,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:r}=t,{x:s}=n,{dtype:o}=r;if("complex64"===o){if("complex64"===s.dtype)return XR({inputs:{x:s},backend:a});const t=il(s.shape),n=e({inputs:{x:s},backend:a,attrs:{dtype:"float32"}}),r=QR({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),r}if("complex64"===s.dtype){const t=TO({inputs:{input:s},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:o}});return a.disposeIntermediateTensorInfo(t),n}if(!te(s.dtype,o)){const e=XR({inputs:{x:s},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:o}}if(a.shouldExecuteOnCPU([s])){const e=a.texData.get(s.dataId).values,[t,n,r]=_A(e,s.shape,s.dtype,o);return a.makeTensorInfo(t,n,r)}if("int32"===o)return function(e,t){const n=new RR(e.shape,"return float(int(x));"),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(s,a);if("bool"===o){const e=a.makeTensorInfo([],"bool",$("bool",1)),t=EO({inputs:{a:s,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error("Error in Cast: failed to cast ".concat(s.dtype," to ").concat(o))}},RO="return ceil(x);",_O=s_({opSnippet:RO,packedOpSnippet:RO,cpuKernelImpl:OA}),OO={kernelName:Qe,backendName:"webgl",kernelFunc:_O};class LO{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class MO{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const zO={kernelName:Ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:s,clipValueMax:o}=a;let i;i=we().getBool("WEBGL_PACK_CLIP")?new MO(r.shape):new LO(r.shape);const u=[[s],[o]];return n.runWebGLProgram(i,[r],r.dtype,u)}};class BO{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function PO(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const WO={kernelName:$e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=n.texData.get(a.dataId),s=new BO(a.shape),o=[PO(a,r.complexTensorInfos.real),PO(a,r.complexTensorInfos.imag)];return n.runWebGLProgram(s,o,o[0].dtype)}};class VO{constructor(e){this.outputShape=[],this.outputShape=fp(e,1),this.variableNames=e.map(((e,t)=>"T".concat(t)));const t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];const n=["if (yC < ".concat(t[0],") setOutput(getT0(yR, yC));")];for(let s=1;s<t.length;s++){const e=t[s-1];n.push("else if (yC < ".concat(t[s],") ")+"setOutput(getT".concat(s,"(yR, yC-").concat(e,"));"))}const a=t.length,r=t[t.length-1];n.push("else setOutput(getT".concat(a,"(yR, yC-").concat(r,"));")),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ".concat(n.join("\n        "),"\n      }\n    ")}}class UO{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=fp(e,t);const n=this.outputShape,a=n.length,r=aA(a),s=NR("coords",a),o=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map(((e,t)=>"T".concat(t)));const i=new Array(e.length-1);i[0]=e[0][t];for(let f=1;f<i.length;f++)i[f]=i[f-1]+e[f][t];const u=o[t],c=o.slice(-2),l=o.join();let h="if (".concat(u," < ").concat(i[0],") {\n        return getChannel(\n            getT0(").concat(l,"), vec2(").concat(c.join(),"));\n        }");for(let f=1;f<i.length;f++){const e=i[f-1];h+="\n        if (".concat(u," < ").concat(i[f],"  && ").concat(u," >= ").concat(i[f-1],") {\n          return getChannel(\n            getT").concat(f,"(").concat(GO(o,u,e),"),\n            vec2(").concat(GO(c,u,e),"));\n        }")}const d=i.length,p=i[i.length-1];h+="\n        return getChannel(\n          getT".concat(d,"(").concat(GO(o,u,p),"),\n          vec2(").concat(GO(c,u,p),"));"),this.userCode="\n      float getValue(".concat(o.map((e=>"int "+e)),") {\n        ").concat(h,"\n      }\n\n      void main() {\n        ").concat(r," coords = getOutputCoords();\n        vec4 result = vec4(getValue(").concat(s,"), 0., 0., 0.);\n\n        ").concat(s[a-1]," = ").concat(s[a-1]," + 1;\n        if (").concat(s[a-1]," < ").concat(n[a-1],") {\n          result.g = getValue(").concat(s,");\n        }\n\n        ").concat(s[a-2]," = ").concat(s[a-2]," + 1;\n        if (").concat(s[a-2]," < ").concat(n[a-2],") {\n          result.a = getValue(").concat(s,");\n        }\n\n        ").concat(s[a-1]," = ").concat(s[a-1]," - 1;\n        if (").concat(s[a-2]," < ").concat(n[a-2]," &&\n            ").concat(s[a-1]," < ").concat(n[a-1],") {\n          result.b = getValue(").concat(s,");\n        }\n        setOutput(result);\n      }\n    ")}}function GO(e,t,n){const a=e.indexOf(t);return e.map(((e,t)=>t===a?"".concat(e," - ").concat(n):e)).join()}function HO(e){const{inputs:t,backend:n}=e,{input:a}=t;return XR({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const jO={kernelName:Gt,backendName:"webgl",kernelFunc:HO};function qO(e,t,n){const a=e[0].dtype;if("complex64"===a){const a=e.map((e=>TO({inputs:{input:e},backend:n}))),r=e.map((e=>HO({inputs:{input:e},backend:n}))),s=qO(a,t,n),o=qO(r,t,n),i=QR({inputs:{real:s,imag:o},backend:n});return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),i}let r=n.shouldExecuteOnCPU(e);if("string"===a&&(r=!0),r){const r=e.map((e=>{const a=H(e.shape.slice(t));return m_({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})})),s=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=fp(r.map((e=>e.shape)),1),i=1===r[0].shape[0],u=LA(s,o,a,i),c=fp(e.map((e=>e.shape)),t),l=n.makeTensorInfo(c,a,u);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const s=e.filter((e=>H(e.shape)>0)),o=we().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(1===s.length){const t=o?new RR(e[0].shape,zR):new BR(e[0].shape,zR);return n.runWebGLProgram(t,e,a)}const i=we().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>i){const e=[];for(let r=0;r<s.length;r+=i){const a=s.slice(r,r+i);e.push(qO(a,t,n))}const a=qO(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return a}if(o){const e=new UO(s.map((e=>e.shape)),t);return n.runWebGLProgram(e,s,a)}const{tensors2D:u,outShape:c}=function(e,t,n){const a=fp(e.map((e=>e.shape)),t),r=e.map((e=>m_({inputs:{x:e},attrs:{shape:[-1,H(e.shape.slice(t))]},backend:n})));return{tensors2D:r,outShape:a}}(s,t,n),l=new VO(u.map((e=>e.shape))),h=n.runWebGLProgram(l,u,a);u.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=m_({inputs:{x:h},attrs:{shape:c},backend:n});return n.disposeIntermediateTensorInfo(h),d}function KO(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=Z(r,t[0].shape)[0];pp(t.map((e=>e.shape)),s);const o=fp(t.map((e=>e.shape)),s);if(0===H(o))return n.makeTensorInfo(o,t[0].dtype,[]);const i=t.filter((e=>H(e.shape)>0));return 1===i.length?XR({inputs:{x:i[0]},backend:n}):qO(i,s,n)}const XO={kernelName:et,backendName:"webgl",kernelFunc:KO};class YO{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let v="",x="";n&&(v=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),x="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(v,"\n\n      const ivec2 strides = ivec2(").concat(i,", ").concat(u,");\n      const ivec2 pads = ivec2(").concat(s,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[").concat(b,"];\n\n        ivec2 xRCCorner =\n            ivec2(coords[").concat(g,"], coords[").concat(y,"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(h,"; wR++) {\n          int xR = xRCorner + wR * ").concat(c,";\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(d,"; wC++) {\n            int xC = xCCorner + wC * ").concat(l,";\n\n            if (xC < 0 || xC >= ").concat(e.inWidth,") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (").concat(m,") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (").concat(1===f,") {\n\n              if (").concat(m,") {\n                dotProd +=\n                    getX(batch, xR, xC, ").concat(p,") *\n                    getW(wR, wC, ").concat(p,", d2);\n              } else {\n                dotProd +=\n                    getX(batch, ").concat(p,", xR, xC) *\n                    getW(wR, wC, ").concat(p,", d2);\n              }\n\n            } else if (").concat(2===f,") {\n              vec2 wValues = vec2(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2)\n              );\n\n              if (").concat(m,") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (").concat(3===f,") {\n              vec3 wValues = vec3(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2),\n                getW(wR, wC, ").concat(p," + 2, d2)\n              );\n\n              if (").concat(m,") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1),\n                  getX(batch, xR, xC, ").concat(p," + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC),\n                  getX(batch, ").concat(p," + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ").concat(w,"\n        ").concat(x,"\n        setOutput(result);\n      }\n    ")}}class QO{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3(".concat(r,", ").concat(s,", ").concat(o,");\n      const ivec3 pads = ivec3(").concat(t,", ").concat(n,", ").concat(a,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(l,"; wF++) {\n          int xF = xFCorner + wF * ").concat(i,";\n\n          if (xF < 0 || xF >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(h,"; wR++) {\n            int xR = xRCorner + wR * ").concat(u,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(d,"; wC++) {\n              int xC = xCCorner + wC * ").concat(c,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (").concat(1===f,") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ").concat(p,") *\n                  getW(wF, wR, wC, ").concat(p,", d2);\n              } else if (").concat(2===f,") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (").concat(3===f,") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1),\n                  getX(batch, xF, xR, xC, ").concat(p," + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2),\n                  getW(wF, wR, wC, ").concat(p," + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class ZO{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=lA(this.outputShape.length);const s=e.padInfo.left,o=e.strideWidth,i=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,l=c;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let m=0;m<c;m++)h+="\n           vec4 xTexelC".concat(2*m,";\n           int xTexelC").concat(2*m,"Ready;\n           vec4 xTexelC").concat(2*m+1,";\n           int xTexelC").concat(2*m+1,"Ready;\n           vec4 xC").concat(m,";");h+="\n     for (int r = 0; r < ".concat(u,"; r++) {\n      for (int d1 = 0; d1 < ").concat(e.inChannels,"; d1 += 2) {\n       ");for(let m=0;m<c;m++)h+="\n           xTexelC".concat(2*m," = vec4(0.0);\n           xTexelC").concat(2*m,"Ready = 0;\n           xTexelC").concat(2*m+1," = vec4(0.0);\n           xTexelC").concat(2*m+1,"Ready = 0;\n           xC").concat(m," = vec4(0.0);");h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(l+1)/2;m++){const t=2*m;if(h+="\n           xC = xCCorner + ".concat(t*i,";\n           "),1===o){if(t<c&&(s%2===1?(h+="\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n               "),h+=1===i&&t>0?"\n                 xC".concat(t," = vec4(xTexelC").concat(t-2,".zw, xTexelC").concat(t,".xy);\n                 "):"\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC".concat(t," = vec4(previous.zw, xTexelC").concat(t,".xy);\n                   } else {\n                     xC").concat(t," = vec4(0.0, 0.0, xTexelC").concat(t,".xy);\n                   }\n                   ")):h+="\n                 if (xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xC").concat(t," = xTexelC").concat(t,";\n                 "),t+1<c)){const e=s%2===0?P(i):i;i%2===0&&s%2===1||i%2!==0&&s%2!==1?(h+="\n                   xCOffset = xC + imod(pads[1], 2) + ".concat(e,";\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                     xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC").concat(t+1,".zw = vec2(0.0);\n                     }\n                     xTexelC").concat(t+1,"Ready = 1;\n                   }\n                   "),h+=i>1?"\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC".concat(t+1," = vec4(previous.zw, xTexelC").concat(t+1,".xy);\n                     } else {\n                      xC").concat(t+1," = vec4(0.0, 0.0, xTexelC").concat(t+1,".xy);\n                     }\n                     "):"\n                     xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".xy);\n                     ")):h+=1===e?"\n                     xC".concat(t+1," = xTexelC").concat(t,";\n                     "):"\n                     xCOffset = xC + ".concat(e,";\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                       xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC").concat(t+1,".zw = vec2(0.0);\n                       }\n                       xTexelC").concat(t+1,"Ready = 1;\n                     }\n\n                     xC").concat(t+1," = xTexelC").concat(t+1,";\n                     ")}}else t<c&&(s%2===1?(h+="\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n               "),t+1<c&&(h+="\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC".concat(t+1," = vec4(xTexelC").concat(t+1,".xy, final.xy);\n                 "))):(h+="\n                 if(xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(\n                   xTexelC").concat(t,".xy, xTexelC").concat(t+1,".xy);\n               "),t+1<c&&(h+="\n                   xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n                 "))));t<c&&(h+="\n             wTexel = getW(r, ".concat(t,", d1, d2);\n             dotProd += xC").concat(t,".xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ").concat(e.inChannels,") {\n               dotProd += xC").concat(t,".yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           "),t+1<c&&(h+="\n               wTexel = getW(r, ".concat(t+1,", d1, d2);\n               dotProd += xC").concat(t+1,".xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ").concat(e.inChannels,") {\n                 dotProd += xC").concat(t+1,".yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             ")))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",p="";n&&(d=a?"vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ".concat(n,"\n         }"):r?"vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ".concat(n,"\n         }"):"vec4 activation(vec4 x) {\n           ".concat(n,"\n         }"),p="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n       ".concat(d,"\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ").concat(h,"\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ").concat(f,"\n         ").concat(p,"\n         setOutput(result);\n       }\n     ")}}class JO{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=lA(this.outputShape.length);const{dataFormat:n}=t,a=VF(),r="channelsLast"===n,s=r?1:2,o=r?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":"if(blockIndex < ".concat(e[2]," && pos < ").concat(e[1],") {");let u="";for(let c=0;c<=1;c++)for(let e=0;e<=1;e++)u+="\n          blockIndex = rc.z + ".concat(e,";\n          pos = rc.y + ").concat(c,";\n\n          ").concat(i,"\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[").concat(s,"] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[").concat(o,"] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (").concat(r,") {\n                  innerDims = vec2(d1, ch);\n                  result[").concat(2*c+e,"] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[").concat(2*c+e,"] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ");this.userCode="\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ".concat(u,"\n\n        ").concat(a.output," = result;\n      }\n    ")}}function $O(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function eL(e){let{x:t,filter:n,convInfo:a,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:u=null}=e;const c=t.shape,l=r.texData.get(t.dataId),h=a.inChannels,d=c[0]*c[1]*c[2],p=a.outChannels,f="channelsLast"===a.dataFormat,m=!1;let g;const y=[];if(null!=o){const e=$O(o.shape,f);null!=e&&(o=m_({inputs:{x:o},backend:r,attrs:{shape:e}}),y.push(o))}if(null!=s){const e=$O(s.shape,f);null!=e&&(s=m_({inputs:{x:s},backend:r,attrs:{shape:e}}),y.push(s))}if(!((1===d||1===p)&&h>1e3)&&l.isPacked&&f&&null!=l.texture&&c[2]%2!==0&&j(l.shape.slice(-3),c.slice(-3))){const e=c[0]*c[1]*(c[2]+1),h={dataId:t.dataId,shape:[1,e,a.inChannels],dtype:t.dtype},d=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,V(RF(l.shape,h.shape),(()=>"packed reshape ".concat(l.shape," to ").concat(h.shape," isn't free")));const p=m_({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}});y.push(p);const f=E_({a:h,b:p,backend:r,transposeA:false,transposeB:m,bias:s,activation:u,preluActivationWeights:o,leakyreluAlpha:i}),b=r.texData.get(f.dataId);V(b.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=d,b.shape=a.outShape,g=XR({inputs:{x:f},backend:r}),g.shape=a.outShape,y.push(f)}else{const e=a.outHeight*a.outWidth,c=m_({inputs:{x:t},backend:r,attrs:{shape:f?[a.batchSize,e,a.inChannels]:[a.batchSize,a.inChannels,e]}}),l=m_({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}}),h=E_({a:f?c:l,b:f?l:c,transposeA:!f,transposeB:m,backend:r,bias:s,activation:u,preluActivationWeights:o,leakyreluAlpha:i});g=m_({inputs:{x:h},backend:r,attrs:{shape:a.outShape}}),y.push(c),y.push(l),y.push(h)}for(const b of y)r.disposeIntermediateTensorInfo(b);return g}function tL(e){let{x:t,filter:n,convInfo:a,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:u=null}=e;const{filterWidth:c,filterHeight:l,inChannels:h,outWidth:d,outHeight:p,dataFormat:f}=a,m="channelsLast"===f,g=c*l*h,y=p*d,b=[a.batchSize,g,y],v=[];if(null!=o){const e=$O(o.shape,m);null!=e&&(o=m_({inputs:{x:o},backend:r,attrs:{shape:e}}),v.push(o))}if(null!=s){const e=$O(s.shape,m);null!=e&&(s=m_({inputs:{x:s},backend:r,attrs:{shape:e}}),v.push(s))}const x=m_({inputs:{x:n},backend:r,attrs:{shape:[1,g,H(n.shape)/g]}});v.push(x);const w=new JO(b,a),D=[t.shape,[a.padInfo.top,a.padInfo.left],[a.strideHeight,a.strideWidth],[a.dilationHeight,a.dilationWidth],[a.inChannels],[a.filterWidth*a.inChannels],[a.outWidth]],k=r.runWebGLProgram(w,[t],"float32",D),C=m_({inputs:{x:k},backend:r,attrs:{shape:b}});v.push(k),v.push(C);const N=null!=s,S=null!=o,E="leakyrelu"===u,I=u?i_(u,!0):null,T=new u_(m?C.shape:x.shape,m?x.shape:C.shape,m?[a.batchSize,y,a.outChannels]:[a.batchSize,a.outChannels,y],!0,!1,N,I,S,E),F=m?[C,x]:[x,C];if(s&&F.push(s),S&&F.push(o),E){const e=r.makeTensorInfo([],"float32",cr(i,"float32"));F.push(e),v.push(e)}const A=r.runWebGLProgram(T,F,"float32"),R=m_({inputs:{x:A},backend:r,attrs:{shape:a.outShape}});v.push(A);for(const _ of v)r.disposeIntermediateTensorInfo(_);return R}const nL={kernelName:tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dataFormat:u,dilations:c,dimRoundingMode:l}=a,h=mu(u),d=su(r.shape,s.shape,o,c,i,l,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&we().getBool("WEBGL_EXP_CONV")){const e=new ZO(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[r,s],"float32",t)}else if(we().getBool("WEBGL_CONV_IM2COL"))p=tL({x:r,filter:s,convInfo:d,backend:n});else{const e=new YO(d);p=n.runWebGLProgram(e,[r,s],"float32")}else p=eL({x:r,filter:s,convInfo:d,backend:n});const f=m_({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class aL{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              ").concat(s?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);","\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class rL{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,u=s?1:2,c=s?2:3,l=s?3:1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[").concat(l,"];\n\n        ivec2 dyCorner = ivec2(coords[").concat(u,"], coords[").concat(c,"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n\n              if (").concat(s,") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class sL{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.padInfo.front,s=e.padInfo.top,o=e.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yF = 0; yF < ").concat(e.outDepth,"; yF++) {\n            int xF = wF + yF * ").concat(t," - ").concat(r,";\n\n            if (xF < 0 || xF >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n              int xR = wR + yR * ").concat(n," - ").concat(s,";\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n                int xC = wC + yC * ").concat(a," - ").concat(o,";\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class oL{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,u=n-1-e.padInfo.top,c=a-1-e.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3(".concat(i,", ").concat(u,", ").concat(c,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(t,"; wF++) {\n          float dyF = float(dyFCorner + wF) / ").concat(r,".0;\n\n          if (dyF < 0.0 || dyF >= ").concat(e.outDepth,".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ").concat(t," - 1 - wF;\n\n          for (int wR = 0; wR < ").concat(n,"; wR++) {\n            float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ").concat(n," - 1 - wR;\n\n            for (int wC = 0; wC < ").concat(a,"; wC++) {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ").concat(a," - 1 - wC;\n\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const iL={kernelName:nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:i,dataFormat:u,dimRoundingMode:c,filterShape:l}=a,h=mu(u),d=su(r.shape,l,o,1,i,c,!1,h),p=new aL(d);return n.runWebGLProgram(p,[r,s],"float32")}};class uL{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=lA(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,a=t-1-e.padInfo.top,r=n-1-e.padInfo.left;this.userCode="\n      const ivec2 pads = ivec2(".concat(a,", ").concat(r,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ").concat(e.outWidth,".0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ").concat(e.outWidth,".0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    ")}}const cL={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:o,strides:i,pad:u,dataFormat:c,dimRoundingMode:l}=a,h=mu(c),d=su(o,s.shape,i,1,u,l,!1,h);if(we().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[d.strideHeight,d.strideWidth]],t=new uL(d);return n.runWebGLProgram(t,[r,s],"float32",e)}{const e=new rL(d);return n.runWebGLProgram(e,[r,s],"float32")}}};const lL={kernelName:rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:u}=a,c=ou(r.shape,s.shape,o,u,i),l=new QO(c);return n.runWebGLProgram(l,[r,s],"float32")}};const hL={kernelName:st,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:i,filterShape:u}=a,c=ou(r.shape,u,o,1,i),l=new sL(c);return n.runWebGLProgram(l,[r,s],"float32")}};const dL={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:o,strides:i,inputShape:u}=a,c=ou(u,s.shape,i,1,o),l=new oL(c);return n.runWebGLProgram(l,[r,s],"float32")}},pL=s_({opSnippet:r_+"\n  return cos(x);\n",packedOpSnippet:"\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(qR,"\n  return result;\n")}),fL={kernelName:it,backendName:"webgl",kernelFunc:pL},mL=s_({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),gL={kernelName:ut,backendName:"webgl",kernelFunc:mL};class yL{constructor(e,t,n,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,o,i,u]=e,[c]=t,[l,h]=n;this.outputShape=[c,l,h,u];const d="bilinear"===a?1:0,[p,f]=["".concat(o-1,".0"),"".concat(i-1,".0")],[m,g,y]=l>1?["".concat((o-1)/(l-1)),"(y2-y1) * height_ratio","y1*".concat(p," + float(y)*(height_scale)")]:["0.0","0.0","0.5 * (y1+y2) * ".concat(p)],[b,v,x]=h>1?["".concat((i-1)/(h-1)),"(x2-x1) * width_ratio","x1*".concat(f," + float(x)*(width_scale)")]:["0.0","0.0","0.5 * (x1+x2) * ".concat(f)];this.userCode="\n      const float height_ratio = float(".concat(m,");\n      const float width_ratio = float(").concat(b,");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ").concat(s,") {\n          return;\n        }\n\n        float height_scale = ").concat(g,";\n        float width_scale = ").concat(v,";\n\n        float in_y = ").concat(y,";\n        if( in_y < 0.0 || in_y > ").concat(p," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n        float in_x = ").concat(x,";\n        if( in_x < 0.0 || in_x > ").concat(f," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(").concat(d," == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    ")}}const bL={kernelName:ht,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:o}=t,{cropSize:i,method:u,extrapolationValue:c}=a,l=new yL(r.shape,s.shape,i,u,c);return n.runWebGLProgram(l,[r,s,o],"float32")}};var vL;!function(e){e.Prod="*",e.Sum="+"}(vL||(vL={}));class xL{constructor(e,t,n,a){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,s=this.op===vL.Prod?"1.0":"0.0",o=n?s:"getX(".concat(wL(r,"coords",this.op),")"),i=this.outputShape[this.outputShape.length-1];let u="",c="";n?(u=a?"end != ".concat(i-1):"end != 0",c=a?"end + 1":"end - 1"):(u=a?"end + pow2 < ".concat(i):"end >= pow2",c=a?"end + pow2":"end - pow2"),this.userCode="\n      void main() {\n        ".concat(aA(r)," coords = getOutputCoords();\n        int end = ").concat(DL(r,"coords",this.op),";\n        float val = ").concat(o,";\n        int pow2 = int(pow(2.0, index));\n        if (").concat(u,") {\n          int idx = ").concat(c,";\n          ").concat(DL(r,"coords",this.op)," = idx;\n          val ").concat(this.op,"= getX(").concat(wL(r,"coords",this.op),");\n        }\n        setOutput(val);\n      }\n    ")}}function wL(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".x, ").concat(t,".y");if(3===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z");if(4===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z, ").concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function DL(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".y");if(3===e)return"".concat(t,".z");if(4===e)return"".concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function kL(e,t,n,a,r,s){const o=t.shape.length,i=gc([a],o);let u=t;null!=i&&(u=N_({inputs:{x:t},backend:n,attrs:{perm:i}}));const c=bc(1,o)[0];if(c!==o-1)throw new Error("WebGL cumprod shader expects an inner-most axis=".concat(t.shape.length-1," ")+"but got axis=".concat(a));const l=u.shape[c];let h=XR({inputs:{x:u},backend:n});for(let d=0;d<=Math.ceil(Math.log2(l))-1;d++){const t=new xL(e,u.shape,!1,s),a=[[d]],r=h;h=n.runWebGLProgram(t,[h],h.dtype,a),n.disposeIntermediateTensorInfo(r)}if(r){const t=new xL(e,u.shape,r,s),a=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(a)}if(null!=i){const e=N_({inputs:{x:h},backend:n,attrs:{perm:yc(i)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),e}return h}const CL={kernelName:ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;return kL(vL.Prod,r,n,s,o,i)}};const NL={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;return kL(vL.Sum,r,n,s,o,i)}};const SL={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o,binaryOutput:i}=a;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(s.dataId),a=FA(e,t,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,a)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(s),a=AA(e,t,o,i);return n.makeTensorInfo(a.shape,s.dtype,a.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};class EL{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ".concat(this.getHeightCoordString(),";\n      int w = ").concat(this.getWidthCoordString(),";\n      int d = ").concat(this.getDepthCoordString(),";\n\n      int in_h = h / ").concat(t,";\n      int offset_h = imod(h, ").concat(t,");\n      int in_w = w / ").concat(t,";\n      int offset_w = imod(w, ").concat(t,");\n      int offset_d = (offset_h * ").concat(t," + offset_w) *\n        ").concat(this.getOutputDepthSize(),";\n      int in_d = d + offset_d;\n\n      float result = ").concat(this.getInputSamplingString(),";\n      setOutput(result);\n    }\n  ")}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const IL={kernelName:pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:o}=a,i=r.shape[0],u=("NHWC"===o?r.shape[1]:r.shape[2])*s,c=("NHWC"===o?r.shape[2]:r.shape[3])*s,l=("NHWC"===o?r.shape[3]:r.shape[1])/(s*s),h=new EL("NHWC"===o?[i,u,c,l]:[i,l,u,c],s,o);return n.runWebGLProgram(h,[r],r.dtype)}};class TL{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=lA(this.outputShape.length);const s=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels;let u="",c="";n&&(u=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),c="result = activation(result);");const l=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(u,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(i,";\n        int q = d2 - d1 * ").concat(i,";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ").concat(s,"; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(o,"; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ").concat(l,"\n        ").concat(c,"\n        setOutput(result);\n      }\n    ")}}class FL{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=lA(this.outputShape.length);const s=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,l=e.filterWidth,h=l;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<l;g++)d+="\n          vec4 xTexelC".concat(2*g,";\n          int xTexelC").concat(2*g,"Ready;\n          vec4 xTexelC").concat(2*g+1,";\n          int xTexelC").concat(2*g+1,"Ready;\n          vec4 xC").concat(g,";");d+="\n    for (int r = 0; r < ".concat(c,"; r++) {\n      ");for(let g=0;g<l;g++)d+="\n          xTexelC".concat(2*g," = vec4(0.0);\n          xTexelC").concat(2*g,"Ready = 0;\n          xTexelC").concat(2*g+1," = vec4(0.0);\n          xTexelC").concat(2*g+1,"Ready = 0;\n          xC").concat(g," = vec4(0.0);");d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let g=0;g<(h+1)/2;g++){const e=2*g;if(d+="\n          xC = xCCorner + ".concat(e*u,";\n          "),1===i){if(e<l&&(o%2===1?(d+="\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n              "),d+=1===u&&e>0?"\n                xC".concat(e," = vec4(xTexelC").concat(e-2,".zw, xTexelC").concat(e,".xy);\n                "):"\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC".concat(e," = vec4(previous.zw, xTexelC").concat(e,".xy);\n                  } else {\n                    xC").concat(e," = vec4(0.0, 0.0, xTexelC").concat(e,".xy);\n                  }\n                  ")):d+="\n                if (xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xC").concat(e," = xTexelC").concat(e,";\n                "),e+1<l)){const t=o%2===0?P(u):u;u%2===0&&o%2===1||u%2!==0&&o%2!==1?(d+="\n                  xCOffset = xC + imod(pads[1], 2) + ".concat(t,";\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                    xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC").concat(e+1,".zw = vec2(0.0);\n                    }\n                    xTexelC").concat(e+1,"Ready = 1;\n                  }\n                  "),d+=u>1?"\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC".concat(e+1," = vec4(previous.zw, xTexelC").concat(e+1,".xy);\n                    } else {\n                     xC").concat(e+1," = vec4(0.0, 0.0, xTexelC").concat(e+1,".xy);\n                    }\n                    "):"\n                    xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".xy);\n                    ")):d+=1===t?"\n                    xC".concat(e+1," = xTexelC").concat(e,";\n                    "):"\n                    xCOffset = xC + ".concat(t,";\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                      xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC").concat(e+1,".zw = vec2(0.0);\n                      }\n                      xTexelC").concat(e+1,"Ready = 1;\n                    }\n\n                    xC").concat(e+1," = xTexelC").concat(e+1,";\n                    ")}}else e<l&&(o%2===1?(d+="\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n              "),e+1<l&&(d+="\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC".concat(e+1," = vec4(xTexelC").concat(e+1,".xy, final.xy);\n                "))):(d+="\n                if(xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(\n                  xTexelC").concat(e,".xy, xTexelC").concat(e+1,".xy);\n              "),e+1<l&&(d+="\n                  xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n                "))));e<l&&(d+="\n            wTexel = getW(r, ".concat(e,", d1, q);\n            dotProd += xC").concat(e," * vec4(wTexel.xz, wTexel.xz);\n          "),e+1<l&&(d+="\n              wTexel = getW(r, ".concat(e+1,", d1, q);\n              dotProd += xC").concat(e+1," * vec4(wTexel.xz, wTexel.xz);\n            ")))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=a?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(n,"\n        }"),f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(p,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(s,";\n        int q = d2 - d1 * ").concat(s,";\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ").concat(d,"\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ").concat(m,"\n        ").concat(f,"\n        setOutput(result);\n      }\n    ")}}const AL={kernelName:ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:u,dimRoundingMode:c}=a;let l=u;null==l&&(l=[1,1]),V(pu(o,l),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(o," and dilations '").concat(l,"'")));const h=su(r.shape,s.shape,o,l,i,c,!0);let d;d=we().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new FL(h):new TL(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[r,s],"float32",p)}};class RL{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ".concat(s," + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ").concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class _L{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode="\n      const ivec2 pads = ivec2(".concat(s,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ").concat(i,"; dm++) {\n              int d2 = d1 * ").concat(i," + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const OL={kernelName:mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:c,filterShape:l}=a,h=su(r.shape,l,o,i,u,c,!0),d=new RL(h);return n.runWebGLProgram(d,[r,s],"float32")}};const LL={kernelName:gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:c,inputShape:l}=a,h=su(l,s.shape,o,i,u,c,!0),d=new _L(h);return n.runWebGLProgram(d,[r,s],"float32")}};class ML{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const zL={kernelName:yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],s=H(a.shape),o=m_({inputs:{x:a},backend:n,attrs:{shape:[s]}}),i=new ML(s),u=n.runWebGLProgram(i,[o],o.dtype),c=m_({inputs:{x:u},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),c}};class BL{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:a,strideHeight:r,strideWidth:s,filterHeight:o,filterWidth:i,dilationHeight:u,dilationWidth:c}=e,{top:l,left:h}=a;this.userCode="\n      const ivec2 strides = ivec2(".concat(r,", ").concat(s,");\n      const ivec2 pads = ivec2(").concat(l,", ").concat(h,");\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ").concat(o,"; h++) {\n          int hIn = hBeg + h * ").concat(u,";\n\n          if (hIn >= 0 && hIn < ").concat(t,") {\n            for (int w = 0; w < ").concat(i,"; w++) {\n              int wIn = wBeg + w * ").concat(c,";\n\n              if (wIn >= 0 && wIn < ").concat(n,") {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    ")}}const PL={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:u}=a,c=nu(r.shape,s.shape,o,i,"NHWC",u);let l;const h=new BL(c);l=n.runWebGLProgram(h,[r,s],"float32");const d=m_({inputs:{x:l},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(l),d}};const WL={kernelName:kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:o,summedDims:i,idDims:u}=Yp(r,s.length);Zp(o.length,u,s);const{path:c,steps:l}=Jp(i,u),h=l.length;let d=null,p=o.length;const f=[];for(let m=0;m<h;++m){for(const e of l[m]){const{permutationIndices:t,expandDims:a}=Qp(p,u[e]);let r;$p(t)?r=s[e]:(r=N_({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),f.push(r));const o=r.shape.slice();for(let e=0;e<a.length;++e)o.splice(a[e],0,1);j(r.shape,o)||(r=m_({inputs:{x:r},backend:n,attrs:{shape:o}}),f.push(r)),null===d?d=r:(d=p_({inputs:{a:r,b:d},backend:n}),f.push(d))}m<h-1&&(c[m]>=0&&(d=k_({inputs:{x:d},backend:n,attrs:{axis:c[m]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}},VL=s_({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),UL={kernelName:Ct,backendName:"webgl",kernelFunc:VL},GL={kernelName:Nt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:r}=t,s=we().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new KR("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,r.shape):new jR("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,r.shape);return n.runWebGLProgram(s,[a,r],a.dtype)}},HL=o_({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:MA}),jL={kernelName:Et,backendName:"webgl",kernelFunc:HL},qL=s_({opSnippet:'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = '.concat(Ap,";\n  float a1 = ").concat(Rp,";\n  float a2 = ").concat(_p,";\n  float a3 = ").concat(Op,";\n  float a4 = ").concat(Lp,";\n  float a5 = ").concat(Mp,";\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n")}),KL={kernelName:St,backendName:"webgl",kernelFunc:qL},XL=s_({opSnippet:r_+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:zA,dtype:"float32"}),YL={kernelName:It,backendName:"webgl",kernelFunc:XL};function QL(e){const{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:s}=t,o=s.shape.length,i=s.shape.slice();let u=r;return r<0&&(V(-(o+1)<=r,(()=>"Axis must be in the interval [".concat(-(o+1),", ").concat(o,"]"))),u=o+r+1),i.splice(u,0,1),m_({inputs:{x:s},backend:a,attrs:{shape:i}})}const ZL={kernelName:Tt,backendName:"webgl",kernelFunc:QL},JL="return exp(x) - 1.0;",$L=s_({opSnippet:JL,packedOpSnippet:JL,cpuKernelImpl:BA}),eM={kernelName:Ft,backendName:"webgl",kernelFunc:$L};class tM{constructor(e,t,n){this.variableNames=["real","imag"];const a=t[1];this.outputShape=t;const r=n?"2.0 * ".concat(Math.PI):"-2.0 * ".concat(Math.PI),s=n?"".concat(a,".0"):"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error('FFT component must be either "real" or "imag", got '.concat(e,"."));o="return real * expI + imag * expR;"}this.userCode="\n      const float exponentMultiplier = ".concat(r,";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ").concat(o,"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(").concat(a,");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ").concat(s,";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    ")}}function nM(e,t,n){const a=n.texData.get(e.dataId),r=H(e.shape),s=e.shape[e.shape.length-1],o=m_({inputs:{x:e},backend:n,attrs:{shape:[r/s,s]}}),i=o.shape,u=new tM("real",i,t),c=new tM("imag",i,t),l=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:i},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:i}],h=n.runWebGLProgram(u,l,"float32"),d=n.runWebGLProgram(c,l,"float32"),p=QR({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=m_({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(p),f}const aM={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return nM(a,!1,n)}};class rM{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function sM(e){const{backend:t,attrs:n}=e,{shape:a,value:r}=n;let{dtype:s}=n;if(s=s||se(r),"string"===s){const e=ee(s,H(a));return e.fill(r),t.makeTensorInfo(a,s,e)}{const e=new rM(a,r),n=[[r]];return t.runWebGLProgram(e,[],s,n)}}const oM={kernelName:Rt,backendName:"webgl",kernelFunc:sM};class iM{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ".concat(t," - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ").concat(t,") {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const uM={kernelName:_t,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:a}=t,r=n,s=new iM(a.shape);return r.runWebGLProgram(s,[a],a.dtype)}},cM="return floor(x);",lM=s_({opSnippet:cM,packedOpSnippet:cM,cpuKernelImpl:PA}),hM={kernelName:Ot,backendName:"webgl",kernelFunc:lM},dM=o_({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),pM={kernelName:Lt,backendName:"webgl",kernelFunc:dM};class fM{constructor(e){this.variableNames=["A"];const t=VF(),[n,a]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(".concat(a,".0, ").concat(n,".0);\n\n        vec4 values = ").concat(t.texture2D,"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    ")}}class mM{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=VF(),[n,a]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(".concat(a,".0, ").concat(n,".0);\n            vec4 values = ").concat(t.texture2D,"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}const gM={kernelName:_a,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:r}=t;const{numChannels:s}=a,o="undefined"!==typeof HTMLVideoElement&&r instanceof HTMLVideoElement,i="undefined"!==typeof HTMLImageElement&&r instanceof HTMLImageElement,[u,c]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],l=[c,u],h=[c,u,s];if(i||o){const e=we().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=yM&&e===bM||(bM=e,yM=document.createElement("canvas").getContext("2d",{willReadFrequently:bM})),yM.canvas.width=u,yM.canvas.height=c,yM.drawImage(r,0,0,u,c),r=yM.canvas}const d=n.makeTensorInfo(l,"int32");n.texData.get(d.dataId).usage=cF.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);const p=we().getBool("WEBGL_PACK")?new mM(h):new fM(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let yM,bM=we().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const vM={kernelName:Ma,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a,m=mu(l),g=su(r.shape,s.shape,u,h,c,d,!1,m);let y;const b=[],v=null!=o,x=null!=i,w="leakyrelu"===p,D=()=>{const e=[r,s],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=m_({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(v&&e.push(t(o,l)),x&&e.push(t(i,l)),w){const t=n.makeTensorInfo([],"float32",cr(f,"float32"));e.push(t),b.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&we().getBool("WEBGL_EXP_CONV")){const e=p?i_(p,!0):null,t=new ZO(g,v,e,x,w),a=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],r=D();y=n.runWebGLProgram(t,r,"float32",a)}else if(we().getBool("WEBGL_CONV_IM2COL"))y=tL({x:r,filter:s,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else{const e=p?i_(p,!1):null,t=new YO(g,v,e,x,w),a=D();y=n.runWebGLProgram(t,a,"float32")}else y=eL({x:r,filter:s,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});const k=m_({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),k}};const xM={kernelName:za,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:u,pad:c,dilations:l,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=a,f=[];let m=l;null==m&&(m=[1,1]),V(pu(u,m),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(u," and dilations '").concat(m,"'")));const g=su(r.shape,s.shape,u,m,c,h,!0),y=we().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=d?i_(d,y):null,v=[r,s],x=null!=o,w=null!=i,D="leakyrelu"===d;if(x&&v.push(o),w&&v.push(i),D){const e=n.makeTensorInfo([],"float32",cr(p,"float32"));v.push(e),f.push(e)}let k;k=y?new FL(g,x,b,w,D):new TL(g,x,b,w,D);const C=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],N=n.runWebGLProgram(k,v,"float32",C);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};class wM{constructor(e,t,n,a){this.sliceDim=e,this.strides=t,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=n;const r=aA(n.length);let s="\n    int index;";for(let o=0;o<this.sliceDim;o++)s+="\n          index = round(getIndices(coords[0], ".concat(o,"));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ").concat(this.paramsShape[o],";\n          flattenIndex += index * ").concat(this.strides[o],";");this.userCode="\n         void main() {\n          ".concat(r," coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ").concat(s,"\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      ")}}const DM={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=r.shape,o=s[s.length-1],i=H(a.shape),[u,c,l,h]=Ip(a,r),d=m_({inputs:{x:r},backend:n,attrs:{shape:[c,o]}}),p=m_({inputs:{x:a},backend:n,attrs:{shape:[H(a.shape)/l,l]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(a),s=WA(e,t,a.dtype,c,o,l,h,a.shape,i);return n.makeTensorInfo(u,a.dtype,s.values)}const f=new wM(o,h,[c,l],a.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),g=m_({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};class kM{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=aA(this.rank),a=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let a=0;a<e.length;a++)2===a?n.push("index"):n.push("".concat(t[a]));return n.join()}(e);this.userCode="\n      void main() {\n        ".concat(n," resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ").concat(e[2],") ? 1.0 : 0.0;\n        setOutput(inBounds * getA(").concat(a,"));\n      }\n    ")}}function CM(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:o,batchDims:i}=a,u=Z(o,r.shape)[0];if(we().get("DEBUG")){const e=n.readSync(s.dataId),t=r.shape[u];for(let n=0;n<e.length;++n){const a=e[n];V(a<=t-1&&a>=0,(()=>"GatherV2: the index value ".concat(a," is not in [0, ").concat(t-1,"]")))}}const c=yf(r,s,u,i),l=H(s.shape),h=[],d=m_({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=m_({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,l/c.batchSize]}});h.push(d),h.push(p);const f=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),a=VA(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c.outputShape,a.dtype,a.values)}const m=new kM(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const y=m_({inputs:{x:g},backend:n,attrs:{shape:c.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const NM={kernelName:zt,backendName:"webgl",kernelFunc:CM},SM=o_({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:UA,dtype:"bool"}),EM={kernelName:Pt,backendName:"webgl",kernelFunc:SM},IM=o_({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:GA}),TM={kernelName:Wt,backendName:"webgl",kernelFunc:IM};const FM={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return nM(a,!0,n)}},AM=s_({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),RM={kernelName:Ht,backendName:"webgl",kernelFunc:AM},_M=s_({opSnippet:"return float(isinf(x));",dtype:"bool"}),OM={kernelName:jt,backendName:"webgl",kernelFunc:_M},LM=s_({opSnippet:"return float(isnan(x));",dtype:"bool"}),MM={kernelName:qt,backendName:"webgl",kernelFunc:LM},zM=o_({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:HA,dtype:"bool"}),BM={kernelName:Xt,backendName:"webgl",kernelFunc:zM},PM=o_({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:jA,dtype:"bool"}),WM={kernelName:Yt,backendName:"webgl",kernelFunc:PM};const VM={kernelName:Qt,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,o=qA(a,r,s);return t.makeTensorInfo([o.length],"float32",o)}},UM=s_({opSnippet:r_+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:KA}),GM={kernelName:Zt,backendName:"webgl",kernelFunc:UM},HM=s_({opSnippet:r_+"\n  return log(1.0 + x);\n"}),jM={kernelName:Jt,backendName:"webgl",kernelFunc:HM},qM=o_({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),KM={kernelName:$t,backendName:"webgl",kernelFunc:qM},XM=s_({opSnippet:"return float(!(x >= 1.0));"}),YM={kernelName:en,backendName:"webgl",kernelFunc:XM},QM=o_({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),ZM={kernelName:tn,backendName:"webgl",kernelFunc:QM};class JM{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[];const s=t,o=e[3]-1;let i;this.outputShape=e;const u="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(u,")"):1===r?"1.0/(".concat(u,")"):"exp(log(".concat(u,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -".concat(s,"; j <= ").concat(s,"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ").concat(o,") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ").concat(i,";\n        setOutput(val);\n      }\n    ")}}class $M{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,o=e[3]-1;let i;this.outputShape=e;const u="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(u,")"):1===r?"1.0/(".concat(u,")"):"exp(log(".concat(u,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ".concat(this.outputShape[3],";\n        bool hasNextRow = c < ").concat(this.outputShape[2],";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ").concat(s,";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ").concat(s,"; j <= ").concat(s,"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(").concat(o,"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ").concat(i,";\n        setOutput(result);\n      }\n    ")}}const ez={kernelName:nn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:o,alpha:i,beta:u}=a,c=we().getBool("WEBGL_PACK_NORMALIZATION")?new $M(r.shape,s,o,i,u):new JM(r.shape,s,o,i,u);return n.runWebGLProgram(c,[r],r.dtype)}};class tz{constructor(e,t,n,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=r,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ".concat(this.depth,"; ++d) {\n          int depthBegin = int(max(0.0, float(d - ").concat(t,")));\n          int depthEnd = int(min(float(").concat(this.depth,"),\n              float(d + ").concat(t," + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ").concat(this.depth,";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(").concat(a,") * norm + float(").concat(n,");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(").concat(a,")\n                * float(").concat(r,")\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ").concat(r,");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    ")}}const nz={kernelName:an,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:o}=t,{depthRadius:i,bias:u,alpha:c,beta:l}=a,h=new tz(r.shape,i,u,c,l);return n.runWebGLProgram(h,[r,s,o],r.dtype)}};function az(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:o}=a,i=r.shape.length,u=Z(s,r.shape);let c=u;const l=gc(c,i),h=null!=l,d=n.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(i);for(let n=0;n<t.length;n++)t[n]=r.shape[l[n]];const a=DR(e,r.shape,r.dtype,l,t);p=n.makeTensorInfo(t,r.dtype);n.texData.get(p.dataId).values=a}else p=D_(r,l,n);c=bc(c.length,i)}mc("max",c,i);const[f,m]=pc(p.shape,c);let g,y=f;if(o&&(y=fc(f,u)),d){const e=n.texData.get(p.dataId).values,t=XA(e,H(m),y,r.dtype);g=n.makeTensorInfo(y,r.dtype);n.texData.get(g.dataId).values=t}else g=function(e,t,n,a){const r=H(t),s=m_({inputs:{x:e},attrs:{shape:[H(e.shape)/r,r]},backend:a}),o=v_(s,e.dtype,"max",a),i=m_({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}(p,m,y,n);return h&&n.disposeIntermediateTensorInfo(p),g}const rz={kernelName:rn,backendName:"webgl",kernelFunc:az},sz=o_({opSnippet:HR+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+qR+"\n  return result;\n",cpuKernelImpl:YA}),oz={kernelName:sn,backendName:"webgl",kernelFunc:sz};const iz={kernelName:on,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;PF(r,"maxPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:u}=a;V(pu(o,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const c=au(r.shape,s,o,1,i,u);if(1===c.filterWidth&&1===c.filterHeight&&j(c.inShape,c.outShape))return XR({inputs:{x:r},backend:n});const l=new oO(c,"max",!1);return n.runWebGLProgram(l,[r],r.dtype)}};const uz={kernelName:cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:i,dataFormat:u,dimRoundingMode:c}=a,l=ru(r.shape,s,o,[1,1,1],i,c,u),h=new iO(l,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class cz{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,r=e.effectiveFilterHeight,s=e.effectiveFilterWidth,o=r-1-e.padInfo.top,i=s-1-e.padInfo.left,u=r*s-1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(r,";\n          wR += ").concat(a,") {\n          float dyR = float(dyRCorner + wR) / ").concat(t,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(s,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(n,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ").concat(u," - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ").concat(s," + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class lz{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.dilationDepth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=i-1-e.padInfo.front,h=u-1-e.padInfo.top,d=c-1-e.padInfo.left,p=i*u*c-1;this.userCode="\n      const ivec3 pads = ivec3(".concat(l,", ").concat(h,", ").concat(d,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(i,";\n           wD += ").concat(r,") {\n          float dyD = float(dyDCorner + wD) / ").concat(t,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(u,";\n              wR += ").concat(s,") {\n            float dyR = float(dyRCorner + wR) / ").concat(n,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(c,";\n                wC += ").concat(o,") {\n              float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ").concat(p," -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ").concat(u," * ").concat(c," +\n                  wR * ").concat(c," + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const hz={kernelName:ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=a,h=ru(o.shape,i,u,[1,1,1],c,l),d=new iO(h,"max",!0),p=n.runWebGLProgram(d,[o],o.dtype),f=new lz(h),m=n.runWebGLProgram(f,[r,p],o.dtype);return n.disposeIntermediateTensorInfo(p),m}};const dz={kernelName:un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:o}=t,i=s;PF([s,o],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:h}=a,d=au(i.shape,u,c,1,l,h),p=new oO(d,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),m=new cz(d),g=n.runWebGLProgram(m,[r,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}};const pz={kernelName:hn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{filterSize:s,strides:o,pad:i,includeBatchInIndex:u}=n,c=a;V(4===r.shape.length,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(r.shape.length,".")));const l=[1,1];V(pu(o,l),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(l,"'")));const h=au(r.shape,s,o,l,i),[d,p]=function(e,t,n,a){let r=new oO(n,"max",!1);const s=a.runWebGLProgram(r,[e],"float32");return r=new oO(n,"max",!0,!0,t),[s,a.runWebGLProgram(r,[e],"float32")]}(r,u,h,c);return[d,p]}};const fz={kernelName:dn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{keepDims:s,axis:o}=n,i=a,u=r.shape.length,c=Z(o,r.shape);let l=c;const h=gc(l,u),d=null!=h,p=i.shouldExecuteOnCPU([r]),f=[];let m=r;if(d){if(p){const e=i.texData.get(m.dataId).values,t=new Array(u);for(let a=0;a<t.length;a++)t[a]=r.shape[h[a]];const n=DR(e,r.shape,r.dtype,h,t);m=i.makeTensorInfo(t,r.dtype);i.texData.get(m.dataId).values=n}else m=D_(r,h,i);f.push(m),l=bc(l.length,u)}mc("sum",l,u);const[g,y]=pc(m.shape,l);let b=g;s&&(b=fc(g,c));const v=function(e,t,n,a){const r=H(t),s=m_({inputs:{x:e},attrs:{shape:[H(e.shape)/r,r]},backend:a}),o=v_(s,"float32","mean",a),i=m_({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}(m,y,b,i);for(const x of f)i.disposeIntermediateTensorInfo(x);return v}};const mz={kernelName:pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=r.shape.length,u=Z(s,r.shape);let c=u;const l=gc(c,i);let h=r;null!=l&&(h=N_({inputs:{x:r},backend:n,attrs:{perm:l}}),c=bc(c.length,r.shape.length)),mc("min",c,i);const[d,p]=pc(h.shape,c),f=m_({inputs:{x:h},backend:n,attrs:{shape:[-1,H(p)]}}),m=v_(f,f.dtype,"min",n);let g;if(o){g=m_({inputs:{x:m},backend:n,attrs:{shape:fc(d,u)}})}else g=m_({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=l&&n.disposeIntermediateTensorInfo(h),g}},gz=o_({opSnippet:HR+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+qR+"\n  return result;\n",cpuKernelImpl:QA}),yz={kernelName:fn,backendName:"webgl",kernelFunc:gz};class bz{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=aA(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),u="reflect"===n?0:1;this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(s,");\n      ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        for (int i = 0; i < ").concat(a,"; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ").concat(u,";\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ").concat(u,";\n          }\n        }\n        ").concat(r," coords = outC - start;\n        setOutput(getX(").concat(i,"));\n      }\n    "):"\n        int start = ".concat(s,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ").concat(u,";\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ").concat(u,";\n          }\n          setOutput(getX(outC - start));\n        }\n      ")}}class vz{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=aA(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=NR("rc",a),u=NR("source",a),c="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),l=1===a?"source":"vec2(".concat(u.slice(-2).join(),")"),h="reflect"===n?0:1;let d="";if(1===a){const e="\n        ".concat(r," source = rc;\n        if (source < start) {\n          source = start * 2 - source - ").concat(h,";\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ").concat(h,";\n        }\n        source -= start;\n      ");d="\n        ".concat(r," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(u.join(),"), ").concat(l,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(c,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(u.join(),"), ").concat(l,");\n        }\n      ")}else{const e="\n        ".concat(r," source = rc;\n        ").concat(r," lt = ").concat(r,"(lessThan(source, start));\n        ").concat(r," gte = ").concat(r,"(greaterThanEqual(source, end));\n        ").concat(r," orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ").concat(h,") +\n                gte * ((end - 1) * 2 - source + ").concat(h,");\n        source -= start;\n      ");d="\n        ".concat(r," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(u.join(),"), ").concat(l,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(c,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(u.join(),"), ").concat(l,");\n        }\n        rc = outputLoc;\n        ").concat(i[a-2]," += 1;\n        if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {\n          ").concat(e,"\n          result[2] = getChannel(getX(").concat(u.join(),"), ").concat(l,");\n          ").concat(i[a-1]," += 1;\n          if(").concat(c,") {\n            ").concat(e,"\n            result[3] = getChannel(getX(").concat(u.join(),"), ").concat(l,");\n          }\n        }\n      ")}this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(s,");\n      const ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(d,"\n        setOutput(result);\n      }\n    ")}}const xz={kernelName:mn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r}=t,{paddings:s,mode:o}=a,i=we().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new vz(r.shape,s,o):new bz(r.shape,s,o);return n.runWebGLProgram(i,[r],r.dtype)}},wz=o_({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+qR+"\n  return result;\n"}),Dz={kernelName:gn,backendName:"webgl",kernelFunc:wz};class kz{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ".concat(t-1,"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(").concat(t-1,"));\n      }\n    ")}}const Cz=o_({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),Nz={kernelName:Dt,backendName:"webgl",kernelFunc:Cz},Sz="return a - b;",Ez=o_({opSnippet:Sz,packedOpSnippet:Sz,supportsComplex:!0,cpuKernelImpl:vR}),Iz={kernelName:wa,backendName:"webgl",kernelFunc:Ez};function Tz(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,o=Z([s],r.shape),i=az({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),u=fc(i.shape,o),c=m_({inputs:{x:i},backend:n,attrs:{shape:u}}),l=Ez({inputs:{a:r,b:c},backend:n}),h=XL({inputs:{x:l},backend:n}),d=k_({inputs:{x:h},backend:n,attrs:{axis:o,keepDims:!1}}),p=m_({inputs:{x:d},backend:n,attrs:{shape:u}}),f=Cz({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const Fz={kernelName:ua,backendName:"webgl",kernelFunc:Tz};const Az={kernelName:yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:o,normalized:i}=a,u=i?r:Tz({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),c=u.shape[0],l=u.shape[1],h=new kz(c,l,s),d=[[o]],p=n.runWebGLProgram(h,[u],"int32",d);return i||n.disposeIntermediateTensorInfo(u),p}},Rz=_R+"\n  return -x;\n";const _z={kernelName:vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.texData.get(a.dataId),[t,r]=JA(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}let r;return r=we().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new BR(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new RR(a.shape,Rz),n.runWebGLProgram(r,[a],a.dtype)}},Oz=vd;const Lz={kernelName:wn,backendName:"webgl",kernelFunc:function(e){Ba("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=a,c=n.readSync(r.dataId),l=n.readSync(s.dataId),{selectedIndices:h}=Oz(c,l,o,i,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Mz=xd;const zz={kernelName:Dn,backendName:"webgl",kernelFunc:function(e){Ba("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:c}=a,l=n.readSync(r.dataId),h=n.readSync(s.dataId),{selectedIndices:d,validOutputs:p}=Mz(l,h,o,i,u,c);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},Bz=wd;const Pz={kernelName:kn,backendName:"webgl",kernelFunc:function(e){Ba("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=a,l=n.readSync(r.dataId),h=n.readSync(s.dataId),d=o,p=i,f=u,m=c,{selectedIndices:g,selectedScores:y}=Bz(l,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class Wz{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(".concat(a,"), float(").concat(n,"),\n                      float(index == coords.y)));\n      }\n    ")}}const Vz={kernelName:Nn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:o,onValue:i,offValue:u}=a,c=H(r.shape),l=new Wz(c,o,i,u),h=m_({inputs:{x:r},backend:n,attrs:{shape:[c]}}),d=n.runWebGLProgram(l,[h],s);n.disposeIntermediateTensorInfo(h);const p=m_({inputs:{x:d},backend:n,attrs:{shape:[...r.shape,o]}});return n.disposeIntermediateTensorInfo(d),p}};function Uz(e){const{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){const e=TO({inputs:{input:a},backend:n}),t=Uz({inputs:{x:e},backend:n}),r=HO({inputs:{input:a},backend:n}),s=Uz({inputs:{x:r},backend:n}),o=QR({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}return sM({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const Gz={kernelName:Aa,backendName:"webgl",kernelFunc:Uz};const Hz={kernelName:Cn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=TO({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=HO({inputs:{input:r},backend:a}),o=Uz({inputs:{x:s},backend:a}),i=QR({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}return sM({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}};const jz={kernelName:Sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return QL({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,o=t[0].dtype;t.forEach((e=>{U(s,e.shape,"All tensors passed to stack must have matching shapes"),V(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],u=KO({inputs:t.map((e=>{const t=QL({inputs:{input:e},backend:n,attrs:{dim:r}});return i.push(t),t})),backend:n,attrs:{axis:r}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class qz{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=aA(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(s,");\n      ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ").concat(r," coords = outC - start;\n          setOutput(getX(").concat(i,"));\n        }\n      }\n    "):"\n        int start = ".concat(s,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      ")}}class Kz{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=aA(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=NR("rc",a),u=NR("source",a),c="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),l=1===a?"source":"vec2(".concat(u.slice(-2).join(),")"),h=["".concat(r," rc = outputLoc;"),"".concat(i[a-1]," += 1;\n       if(").concat(c,") {\n      "),1===a?"":"}\n       rc = outputLoc;\n       ".concat(i[a-2]," += 1;\n       if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {"),1===a?"":"  ".concat(i[a-1]," += 1;\n         if(").concat(c,") {")],d=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===a?2:4;f<m;f++)p+="\n        ".concat(h[f],"\n        if (").concat(d,") {\n          result[").concat(f,"] = float(value);\n        } else {\n          ").concat(r," source = rc - start;\n          result[").concat(f,"] = getChannel(getX(").concat(u.join(),"), ").concat(l,");\n        }\n      ");p+=1===a?"} ":"}}",this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(s,");\n      const ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(p,"\n        setOutput(result);\n      }\n    ")}}const Xz=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:o}=a;if(0===H(r.shape)){const e=s.map(((e,t)=>e[0]+r.shape[t]+e[1]));return sM({backend:n,attrs:{shape:e,value:o,dtype:r.dtype}})}const i=we().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Kz(r.shape,s,o):new qz(r.shape,s,o),u=[[o]];return n.runWebGLProgram(i,[r],r.dtype,u)},Yz={kernelName:En,backendName:"webgl",kernelFunc:Xz},Qz=o_({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+qR+"\n  return result;\n"}),Zz={kernelName:In,backendName:"webgl",kernelFunc:Qz};const Jz={kernelName:Fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=r.shape.length,u=[],c=Z(s,r.shape);let l=c;const h=gc(l,i);let d,p=r;if(null!=h&&(p=N_({inputs:{x:r},backend:n,attrs:{perm:h}}),l=bc(l.length,i),u.push(p)),mc("prod",l,i),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:a,outDtype:r}=eR(p.shape,p.dtype,e,l);d=n.makeTensorInfo(a,r,t)}else{const[e,t]=pc(p.shape,l),a=H(t),s=m_({inputs:{x:p},backend:n,attrs:{shape:[-1,a]}}),o=v_(s,Br(r.dtype),"prod",n);d=m_({inputs:{x:o},backend:n,attrs:{shape:e}}),u.push(s),u.push(o)}if(o){u.push(d);const e=fc(d.shape,c);d=m_({inputs:{x:d},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};const $z={kernelName:An,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:o}=t,{outputRaggedRank:i}=a,u=r.map((e=>n.readSync(e.dataId))),c=r.map((e=>e.shape)),l=n.readSync(s.dataId),h=n.readSync(o.dataId),[d,p,f]=tR(u,c,l,s.shape,s.dtype,h,o.shape,i),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}};const eB={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:s}=t,o=n.readSync(a.dataId),i=n.readSync(r.dataId),u=n.readSync(s.dataId),[c,l]=nR(o,a.shape,a.dtype,i,r.shape,u,s.shape);return[n.makeTensorInfo([c.length],"int32",c),n.makeTensorInfo([l.length],a.dtype,l)]}};const tB={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:s,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:u}=a,c=n.readSync(r.dataId),l=n.readSync(s.dataId),h=n.readSync(o.dataId),d=i.map((e=>n.readSync(e.dataId))),p=i.map((e=>e.shape)),[f,m]=aR(c,r.shape,l,s.shape,s.dtype,h,o.shape,d,p,u);return n.makeTensorInfo(f,s.dtype,m)}},nB=e=>{const{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:o}=n,i=rR(a,r,s,o);return t.makeTensorInfo([i.length],o,i)},aB={kernelName:On,backendName:"webgl",kernelFunc:nB},rB=s_({opSnippet:"return 1.0 / x;"}),sB={kernelName:Mn,backendName:"webgl",kernelFunc:rB},oB=s_({opSnippet:_R+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),iB={kernelName:zn,backendName:"webgl",kernelFunc:oB},uB=s_({opSnippet:_R+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),cB={kernelName:Gn,backendName:"webgl",kernelFunc:uB};class lB{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const c=[a&&t>1?o-1:o,a&&n>1?i-1:i],l=[a&&t>1?t-1:t,a&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(c[0]/l[0],",\n          ").concat(c[1]/l[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    ")}}class hB{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const c=[a&&t>1?o-1:o,a&&n>1?i-1:i],l=[a&&t>1?t-1:t,a&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(c[0]/l[0],",\n          ").concat(c[1]/l[1],",\n          ").concat(c[1]/l[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(u-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    ")}}const dB={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:i}=a,[u,c]=i,l=we().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new hB(r.shape,u,c,s,o):new lB(r.shape,u,c,s,o);return n.runWebGLProgram(l,[r],"float32")}};class pB{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,s,o]=e,i=[n&&s>1?a-1:a,n&&o>1?r-1:r],u=[n&&s>1?s-1:s,n&&o>1?o-1:o],c=i[0]/u[0],l=i[1]/u[1],h=1/c,d=1/l,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(c,");\n        const float widthScale = float(").concat(l,");\n\n        const float invHeightScale = float(").concat(h,");\n        const float invWidthScale = float(").concat(d,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ").concat(a-1,".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ").concat(r-1,".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const fB={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a,i=new pB(s.shape,r.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class mB{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const c=[a&&t>1?o-1:o,a&&n>1?i-1:i],l=[a&&t>1?t-1:t,a&&n>1?n-1:n],h=a?"0.5":"0.0";let d;d=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(c[0]/l[0],",\n          ").concat(c[1]/l[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(h,")));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    ")}}class gB{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const c=[a&&t>1?o-1:o,a&&n>1?i-1:i],l=[a&&t>1?t-1:t,a&&n>1?n-1:n],h=a?"0.5":"0.0";let d;d=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(c[0]/l[0],",\n          ").concat(c[1]/l[1],",\n          ").concat(c[1]/l[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(h,")));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(u-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    ")}}const yB={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:i}=a,[u,c]=i,l=we().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new gB(r.shape,u,c,s,o):new mB(r.shape,u,c,s,o);return n.runWebGLProgram(l,[r],r.dtype)}};class bB{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,s,o]=e,i=[n&&s>1?a-1:a,n&&o>1?r-1:r],u=[n&&s>1?s-1:s,n&&o>1?o-1:o],c=i[0]/u[0],l=i[1]/u[1],h=1/c,d=1/l,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(c,");\n        const float widthScale = float(").concat(l,");\n\n        const float invHeightScale = float(").concat(h,");\n        const float invWidthScale = float(").concat(d,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(").concat(i[0],") *\n                (float(dyR) / float(").concat(u[0],"));\n\n            float sourceFracCol =\n                float(").concat(i[1],") *\n                  (float(dyC) / float(").concat(u[1],"));\n\n            int sourceNearestRow = int(min(\n                float(int(").concat(a,") - 1),\n                ").concat(n," ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(").concat(r,") - 1),\n                ").concat(n," ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const vB={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a,i=new bB(s.shape,r.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class xB{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));if(this.outputShape=e,1===n)return void(this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(".concat(e[0]," - coord - 1));\n        }\n      "));const a=e.map(((n,a)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - coords[").concat(n,"] - 1"):"coords[".concat(n,"]"))(a))).join(","),r=aA(n);this.userCode="\n      void main() {\n        ".concat(r," coords = getOutputCoords();\n        setOutput(getX(").concat(a,"));\n      }\n    ")}}class wB{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));this.outputShape=e;const a=NR("rc",n),r="".concat(a[n-1]," + 1 < ").concat(this.outputShape[n-1]),s="".concat(a[n-2]," + 1 < ").concat(this.outputShape[n-2]),o=aA(n);function i(n){const a=e.map(((a,r)=>function(n,a){return-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - ").concat(a[n]," - 1"):"".concat(a[n])}(r,n))),r=a.join(","),s=a.slice(-2).join(",");return"getChannel(getX(".concat(r,"), vec2(").concat(s,"))")}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(".concat(e[0]," - rc - 1),\n            ").concat(e[0]," - rc - 1);\n          if(").concat(r,"){\n              result.g = getChannel(getX(").concat(e[0]," - (rc  + 1) - 1),\n                ").concat(e[0]," - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      "):"\n        void main() {\n          ".concat(o," rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ").concat(function(e){return i(e)}(a.slice()),";\n          if(").concat(r,"){\n            result.g = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(a.slice()),";\n          }\n          if(").concat(s,") {\n            result.b = ").concat(function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(a.slice()),";\n            if(").concat(r,") {\n              result.a = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(a.slice()),";\n            }\n          }\n          setOutput(result);\n        }\n    ")}}const DB={kernelName:Hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,o=r.shape.length,i=Z(s,r.shape);if(0===o)return XR({inputs:{x:r},backend:n});const u=we().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new wB(r.shape,i):new xB(r.shape,i);return n.runWebGLProgram(u,[r],r.dtype)}};class kB{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],a=e[2];this.outputShape=e;let r="";r="number"===typeof t?"float outputValue = ".concat(t.toFixed(2),";"):"\n        vec3 fill = vec3(".concat(t.join(","),");\n        float outputValue = fill[coords[3]];"),this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ".concat(r,"\n          if(coordX >= 0 && coordX < ").concat(a," && coordY >= 0 && coordY < ").concat(n,") {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const CB={kernelName:Oa,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:s,fillValue:o,center:i}=n,u=a,c=new kB(r.shape,o),[l,h]=Dp(i,r.shape[1],r.shape[2]),d=[[l,h,Math.sin(s),Math.cos(s)]];return u.runWebGLProgram(c,[r],r.dtype,d)}},NB=s_({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),SB={kernelName:jn,backendName:"webgl",kernelFunc:NB},EB=s_({opSnippet:"return inversesqrt(x);",cpuKernelImpl:sR}),IB={kernelName:qn,backendName:"webgl",kernelFunc:EB};class TB{constructor(e,t,n,a,r,s){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const i=aA(r.length),u=aA(s.length);let c="";1===n?c="i":2===n&&(c="i, j");const l="getIndices(".concat(c,")");let h="";1===a?h="i":2===a&&(h="i, coords[1]");const d="getUpdates(".concat(h,")");let p="";o&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),m=t>1?"strides[j]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(u," coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ").concat(e,"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ").concat(t,"; j++) {\n              int index = round(").concat(l,");\n              flattenedIndex += index * ").concat(m,";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ").concat(d,";\n              found = true;\n            }\n          }\n          setOutput(mix(").concat(f,", sum, float(found)));\n        }\n      ")}}class FB{constructor(e,t,n,a,r,s){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;const i=aA(r.length),u=aA(s.length);let c="";1===n?c="i":2===n&&(c="i, j");const l="getIndices(".concat(c,")");let h="";1===a?h="i":2===a&&(h="i, coords[1]");const d="getUpdates(".concat(h,")");let p="";o&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),m=t>1?"strides[j]":"strides",g=t>1?"strides[j + 1]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(u," coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ").concat(e,"; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ").concat(t,"; j+=2) {\n              ivec4 index = round(").concat(l,");\n              flattenedIndex += index.xz * ").concat(m,";\n              if (j + 1 < ").concat(t,") {\n                flattenedIndex += index.yw * ").concat(g,";\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ").concat(d,";\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(").concat(f,", sum, found));\n        }\n      ")}}const AB={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:o}=a,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:h}=Th(0,r,o),d=[h/c,c];if(0===h)return n.makeTensorInfo(o,r.dtype);const p=m_({inputs:{x:r},backend:n,attrs:{shape:[u,i]}}),f=m_({inputs:{x:s},backend:n,attrs:{shape:[u,c]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=we().getBool("WEBGL_PACK")?new FB(u,i,p.shape.length,f.shape.length,l,d):new TB(u,i,p.shape.length,f.shape.length,l,d);const y=n.runWebGLProgram(g,[f,p,m],f.dtype),b=m_({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class RB{constructor(e,t,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const r="for (int i = 0; i < ".concat(Math.ceil(Math.log2(t+1)),"; ++i) { if (left >= right) break;"),s=2===we().getNumber("WEBGL_VERSION")?"while (left < right) {":r,o="left"===a?"<":"<=";this.userCode="\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ".concat(s,"\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ").concat(o," value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     ")}}const _B={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:o}=a,i=new RB(r.shape[0],r.shape[1],s.shape[1],o),u=[[r.shape[1]]];return n.runWebGLProgram(i,[r,s],"int32",u)}};class OB{constructor(e,t,n){let a,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error("Where for rank ".concat(n," is not yet supported"));if(1===n)r="resRC",a="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],o=[];for(let a=0;a<t.length;a++)o.push("".concat(n[a])),a<e&&s.push("".concat(n[a]));a=s.join(),r=o.join()}const s=aA(n);this.userCode="\n      void main() {\n        ".concat(s," resRC = getOutputCoords();\n        float cVal = getC(").concat(a,");\n        if (cVal >= 1.0) {\n          setOutput(getA(").concat(r,"));\n        } else {\n          setOutput(getB(").concat(r,"));\n        }\n      }\n    ")}}const LB={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,o=new OB(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(o,[a,r,s],zr(r.dtype,s.dtype))}},MB=s_({opSnippet:"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ".concat(Tp,";\n  float scale = ").concat(Fp,";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n")}),zB={kernelName:Zn,backendName:"webgl",kernelFunc:MB},BB=s_({opSnippet:r_+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:iR}),PB={kernelName:na,backendName:"webgl",kernelFunc:BB},WB=s_({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),VB={kernelName:ta,backendName:"webgl",kernelFunc:WB},UB=s_({opSnippet:r_+"\n  return sin(x);\n",packedOpSnippet:"\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(qR,"\n  return result;\n")}),GB={kernelName:$n,backendName:"webgl",kernelFunc:UB},HB=s_({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),jB={kernelName:ea,backendName:"webgl",kernelFunc:HB},qB=s_({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),KB={kernelName:aa,backendName:"webgl",kernelFunc:qB},XB={kernelName:oa,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:o}=a;V(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const i=s.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...o);for(let y=1+s.length;y<r.shape.length;++y)u.push([0,0]);const c=[],l=Xz({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),h=kp(l.shape,s,i,!1),d=Cp(h.length,s.length,!1),p=Np(l.shape,s,i,!1),f=m_({inputs:{x:l},backend:n,attrs:{shape:h}}),m=N_({inputs:{x:f},backend:n,attrs:{perm:d}}),g=m_({inputs:{x:m},backend:n,attrs:{shape:p}});return c.push(l),c.push(f),c.push(m),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};const YB={kernelName:ca,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n         ".concat(s.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n         ".concat(a.shape));if(1!==r.shape.length)throw new Error("Values must be a vector, saw:\n         ".concat(r.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.readSync(a.dataId),u=n.readSync(r.dataId),c=n.readSync(s.dataId),l=n.readSync(o.dataId)[0],[h,d,p,f,m]=lR(i,a.shape,a.dtype,u,r.dtype,c,l);return[n.makeTensorInfo(d,a.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};const QB={kernelName:la,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape ".concat(r.shape));if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(s.shape));const o=Array.from(n.readSync(r.dataId)),i=n.readSync(a.dataId),u=Array.from(n.readSync(s.dataId)),[c,l,h]=hR(i,a.shape,a.dtype,o,u);return[n.makeTensorInfo(l,a.dtype,c),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};const ZB={kernelName:ha,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n              ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n              ".concat(s.shape));const o=n.readSync(a.dataId),i=n.readSync(r.dataId),u=n.readSync(s.dataId),[c,l]=dR(o,a.shape,a.dtype,i,u,!0);return n.makeTensorInfo(l,a.dtype,c)}};const JB={kernelName:da,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n             ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n             ".concat(s.shape));const o=n.readSync(a.dataId),i=n.readSync(r.dataId),u=n.readSync(s.dataId),[c,l]=dR(o,a.shape,a.dtype,i,u);return n.makeTensorInfo(l,a.dtype,c)}};const $B={kernelName:pa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:o}=t,{outputShape:i}=a,{sliceRank:u,numUpdates:c,sliceSize:l,strides:h,outputSize:d}=Th(0,r,i),p=!1;if("string"===s.dtype){const e=n.bufferSync(r),t=n.bufferSync(s),a=pr(n.readSync(o.dataId)[0]),f=oR(e,t,i,d,l,c,u,h,a,p);return n.makeTensorInfo(i,f.dtype,f.values)}const f=new TB(c,u,r.shape.length,s.shape.length,h,[d,1],p),m=n.runWebGLProgram(f,[s,r,o],s.dtype),g=m_({inputs:{x:m},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(m),g}};const eP={kernelName:ia,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:o}=a,i=Z(o,r.shape)[0],u=tf(r,s,i),c=r.shape.length,l=new Array(c).fill(0),h=r.shape.slice();return u.map((e=>{const t=[...h];t[i]=e;const a=wO({inputs:{x:r},backend:n,attrs:{begin:l,size:t}});return l[i]+=e,a}))}},tP="return sqrt(x);",nP=s_({opSnippet:tP,packedOpSnippet:tP,cpuKernelImpl:pR}),aP={kernelName:ra,backendName:"webgl",kernelFunc:nP},rP={kernelName:ma,backendName:"webgl",kernelFunc:s_({opSnippet:"return x * x;"})},sP="return (a - b) * (a - b);",oP=o_({opSnippet:sP,packedOpSnippet:sP}),iP={kernelName:fa,backendName:"webgl",kernelFunc:oP};const uP={kernelName:ga,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");const s=bf(n.readSync(r.dataId)),o=fR(s,"string",a);return n.makeTensorInfo(r.shape,"string",o)}};const cP={kernelName:Ra,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,s=_R+"\n    return x > 0.0 ? 1.0 : float(".concat(n.alpha,");\n  "),o=new RR(r.shape,s);return a.runWebGLProgram(o,[r],r.dtype)}};class lP{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const a=n.length,r=aA(n.length),s=aA(n.length);let o="";if(1===a)o="coords * strides + begin";else{let e=0;o=n.map(((t,a)=>(e++,1===n.length?"coords * strides[".concat(a,"] + begin[").concat(a,"]"):"coords[".concat(e-1,"] * strides[").concat(a,"] + begin[").concat(a,"]")))).join(",")}this.userCode="\n      ".concat(r," begin = ").concat(r,"(").concat(e,");\n      ").concat(r," strides = ").concat(r,"(").concat(t,");\n\n      void main() {\n        ").concat(s," coords = getOutputCoords();\n        setOutput(getX(").concat(o,"));\n      }\n    ")}}const hP={kernelName:ya,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:o,strides:i,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:h,shrinkAxisMask:d}=a,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:v,strides:x}=Ui(r.shape,s,o,i,u,c,l,h,d);let w;if(m)w=m_({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){V(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const e=Ti(b,v,x),t=wO({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});w=m_({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=ko(r.shape,r.dtype,e),a=mR(p,t,x,b);w=n.makeTensorInfo(f,r.dtype,a.values)}else{const e=new lP(b,x,p);w=n.runWebGLProgram(e,[r],r.dtype)}}const D=m_({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),D}};const dP={kernelName:ba,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:o,rightPad:i,padWidth:u,preserveShortSequences:c}=a,{data:l,dataSplits:h}=t,d=n.readSync(l.dataId),p=n.readSync(h.dataId),[f,m]=gR(d,p,r,s,o,i,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};const pP={kernelName:va,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: ".concat(s.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.readSync(s.dataId),u=n.readSync(o.dataId)[0],[c,l,h]=yR(i,u,r),d=l.length;return[n.makeTensorInfo([d,2],"int32",c),n.makeTensorInfo([d],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};const fP={kernelName:xa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(s.dataId),i=bR(o,r);return n.makeTensorInfo(s.shape,"int32",i)}},mP=s_({opSnippet:"return tan(x);"}),gP={kernelName:Da,backendName:"webgl",kernelFunc:mP},yP=s_({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),bP={kernelName:ka,backendName:"webgl",kernelFunc:yP};const vP={kernelName:Xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{tensor:r,indices:s,updates:o}=t,{}=a,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:h}=Th(0,s,r.shape),d=[h/c,c];if(0===h)return n.makeTensorInfo(r.shape,s.dtype);const p=m_({inputs:{x:s},backend:n,attrs:{shape:[u,i]}}),f=m_({inputs:{x:o},backend:n,attrs:{shape:[u,c]}}),m=m_({inputs:{x:r},backend:n,attrs:{shape:d}}),g=new TB(u,i,p.shape.length,f.shape.length,l,d,!1,!0),y=n.runWebGLProgram(g,[f,p,m],m.dtype),b=m_({inputs:{x:y},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),b}};class xP{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const a=aA(this.rank),r=function(e){const t=e.length;if(t>5)throw Error("Tile for rank ".concat(t," is not yet supported"));if(1===t)return"imod(resRC, ".concat(e[0],")");const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let r=0;r<e.length;r++)a.push("imod(".concat(n[r],", ").concat(e[r],")"));return a.join()}(e);this.userCode="\n      void main() {\n        ".concat(a," resRC = getOutputCoords();\n        setOutput(getA(").concat(r,"));\n      }\n    ")}}function wP(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>pr(e))):e,a=ko(r.shape,r.dtype,t),o=xR(a,s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new xP(r.shape,s);return n.runWebGLProgram(o,[r],r.dtype)}const DP={kernelName:Ca,backendName:"webgl",kernelFunc:wP};class kP{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class CP{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function NP(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function SP(e){let t=1;for(;t<e;)t*=2;return t}const EP={kernelName:Na,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:o}=a,i=we().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=we().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=r.shape,l=c[c.length-1];if(n.shouldExecuteOnCPU([r])||l<i||s>u){const e=n.readSync(r.dataId),[t,a]=wR(e,c,r.dtype,s,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===s)return c[c.length-1]=0,[n.makeTensorInfo(c,r.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(1===l)return[r,sM({attrs:{shape:c,dtype:"int32",value:0},backend:n})];const h=n.texData.get(r.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(r):r,f=H(c)/l,m=m_({inputs:{x:p},attrs:{shape:[f,l]},backend:n});d&&NP(n,p);const g=SP(s),y=SP(l);let b=null;const v=()=>null===b?[m,m]:[m,b],x=(e,t,a)=>{const r=v(),s=new kP(a),o=[[l],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=b;b=n.runWebGLProgram(s,r,"int32",o),NP(n,i)};for(let N=1;N<g;N*=2){const e=2*N;for(let t=N;t>=1;t/=2)x(e,t,[f,y])}for(let N=y;N>g;N/=2){const e=v(),t=new CP([f,N/2]),a=[[l],[null===b?1:0],[g]],r=b;b=n.runWebGLProgram(t,e,"int32",a),NP(n,r);const s=g/2,o=2*s;for(let n=s;n>=1;n/=2)x(o,n,b.shape)}let w=b;b=wO({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),NP(n,w);let D=CM({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});NP(n,m);const k=c.slice(0,-1);k.push(s),w=b,b=m_({inputs:{x:b},attrs:{shape:k},backend:n}),NP(n,w);const C=D;return D=m_({inputs:{x:D},attrs:{shape:k},backend:n}),NP(n,C),[D,b]}};class IP{constructor(e,t,n,a,r,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const o="nearest"===n?1:2;let i;switch(a){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode="\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(".concat(i," == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ").concat(e," && 0 <= coordX && coordX < ").concat(t,") {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(").concat(r,");\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(").concat(r,");\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(").concat(t,"));\n                float mapY = mapCoord(inY, float(").concat(e,"));\n\n                if (").concat(o," == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        ")}}const TP={kernelName:Sa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,transforms:s}=t,{interpolation:o,fillMode:i,fillValue:u,outputShape:c}=a,[l,h,d,p]=r.shape,[f,m]=null!=c?c:[h,d],g=new IP(h,d,o,i,u,[l,f,m,p]);return n.runWebGLProgram(g,[r,s],"float32")}};const FP={kernelName:Ia,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;PF(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=a.readSync(s.dataId),{outputValues:i,outputShape:u,indices:c}=kR(o,r,s.shape,s.dtype);return[a.makeTensorInfo(u,s.dtype,i),a.makeTensorInfo([c.length],"int32",c)]}};const AP={kernelName:Ta,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const o=r,i=o.shape.length,u=r.shape[s],c=new Array(i-1);let l=0;for(let m=0;m<i;m++)m!==s&&(c[l++]=o.shape[m]);const h=[],d=new Array(i).fill(0),p=o.shape.slice();p[s]=1;const f=new Array(u);for(let m=0;m<f.length;m++){d[s]=m;const e=wO({inputs:{x:o},backend:n,attrs:{begin:d,size:p}}),t=m_({inputs:{x:e},backend:n,attrs:{shape:c}});f[m]=t,h.push(e)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class RP{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,a=e.batchSize,r=e.inSize,s=e.numSegments,o=s*Math.ceil(r/n);this.outputShape=[a,o];const i=4*Math.floor(n/4),u=n%4,c="\n        sumValue += dot(values, segFilter);\n    ";let l="";r%n>0&&(l="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      "));let h="";r%n>0&&(h="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return -1.0;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat("0.0",";\n\n      float getValue(int batch, int inIdx) {\n        ").concat(l,"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ").concat(h,"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ").concat(s,")) * float(").concat(n,"));\n        int currentSeg = int(mod(float(outIdx), float(").concat(s,")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ").concat(c,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===u,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ").concat(c,"\n        } else if (").concat(2===u,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ").concat(c,"\n        } else if (").concat(3===u,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ").concat(c,"\n        }\n        setOutput(").concat("sumValue",");\n      }\n    ")}}const _P={kernelName:Fa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:o}=a,i=r.shape.length,u=[];let c=0;const l=gc([c],i);let h=r;null!=l&&(h=N_({inputs:{x:r},backend:n,attrs:{perm:l}}),u.push(h),c=bc(1,i)[0]);const d=gf(h.shape,c,o),p=H([h.shape[c]]),f=m_({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});u.push(f);const m=Br(r.dtype),g=(e,t,a,r,s)=>{const o=e.shape[0],i=e.shape[1],c=mf(i,s),l=new RP({windowSize:c,inSize:i,batchSize:o,numSegments:s},t),h=n.compileAndRun(l,[e,a],r);if(u.push(h),h.shape[1]===s)return h;const d=nB({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),p=wP({inputs:{x:d},backend:n,attrs:{reps:[i/c]}});u.push(d),u.push(p);return g(h,t,p,r,s)},y=m_({inputs:{x:g(f,"unsortedSegmentSum",s,m,o)},backend:n,attrs:{shape:d}});let b=y;if(null!=l){u.push(y);const e=yc(l);b=N_({inputs:{x:b},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},OP=[I_,F_,R_,O_,z_,W_,V_,U_,X_,Y_,Z_,$_,tO,aO,sO,uO,cO,dO,pO,fO,yO,kO,CO,NO,SO,AO,OO,zO,ZR,WO,XO,nL,iL,cL,lL,hL,dL,fL,gL,bL,CL,NL,SL,IL,AL,OL,LL,zL,PL,WL,UL,GL,jL,KL,YL,ZL,eM,aM,oM,uM,hM,pM,gM,vM,xM,DM,NM,EM,TM,YR,FM,jO,RM,OM,MM,e_,BM,WM,VM,GM,jM,KM,YM,ZM,ez,nz,rz,oz,iz,uz,hz,dz,pz,fz,mz,yz,xz,Dz,Az,f_,_z,Lz,zz,Pz,IO,Vz,Hz,jz,Yz,Zz,a_,Jz,$z,eB,tB,aB,FO,Nz,sB,iB,cB,g_,dB,fB,yB,vB,DB,CB,SB,IB,AB,_B,LB,zB,PB,VB,GB,jB,DO,Fz,KB,XB,YB,QB,ZB,JB,$B,eP,aP,rP,iP,uP,cP,hP,dP,pP,fP,Iz,C_,gP,bP,vP,DP,EP,TP,S_,FP,AP,_P,Gz];for(const n of OP)ja(n);const LP=new(n(231)),MP=e=>e.normalize("NFD").replace(/[\u0300-\u036f]/g,"").toLowerCase(),zP=(e,t)=>{const n=new Set(t.map(MP)),a=LP.tokenize(e.toLowerCase()).filter((e=>"word"===e.tag||"number"===e.tag)).map((e=>e.value)),r=a.map((e=>((e,t)=>{const n=MP(e);if(t.has(n))return n;for(let a=n.length;a>0;a--){const e=n.slice(0,a);if(t.has(e))return e}for(let a of t)if(a.startsWith("##")&&a.slice(2)===n)return a;return n})(e,n)));return console.log("[DEBUG] Tokens originales: ".concat(a)),console.log("[DEBUG] Tokens con ra\xedces: ".concat(r)),r};var BP=n(579);const PP={tranquilo:"emocion_tranquilo",triste:"emocion_triste",enojado:"emocion_enojado",normal:"emocion_normal",aburrido:"emocion_aburrido",cansado:"emocion_cansado",estresado:"emocion_estresado"},WP=e=>e.normalize("NFD").replace(/[\u0300-\u036f]/g,"").toLowerCase(),VP=()=>{const[e,t]=(0,E.useState)(null),[n,a]=(0,E.useState)(null),[r,s]=(0,E.useState)([]),[o,i]=(0,E.useState)(""),[u,c]=(0,E.useState)([]),[l,h]=(0,E.useState)([]),[d,p]=(0,E.useState)(!1),[f,m]=(0,E.useState)(null),[g,y]=(0,E.useState)(!1),b=(0,E.useRef)(null);(0,E.useEffect)((()=>{(async()=>{try{const e=await KD("./model.json"),n=await fetch("./intents.json").then((e=>e.json())),r=await fetch("./vocabulario.json").then((e=>e.json()));n.intents=n.intents.map((e=>_(_({},e),{},{patterns:e.patterns.map((e=>WP(e)))}))),t(e),a(n),s(r.palabras||[]),h(r.etiquetas||[]),console.log("[DEBUG] Vocabulario cargado:",r.palabras)}catch(e){console.error("Error al cargar los datos:",e)}})()}),[]),(0,E.useEffect)((()=>{b.current&&(b.current.scrollTop=b.current.scrollHeight)}),[u]),(0,E.useEffect)((()=>{const e=()=>{if(!b.current)return;const{scrollTop:e,scrollHeight:t,clientHeight:n}=b.current;y(e+n<t-50)},t=b.current;return t&&t.addEventListener("scroll",e),()=>{t&&t.removeEventListener("scroll",e)}}),[]);const v=async t=>{if(!e||!n||0===r.length)return;const a=((e,t)=>{const n=WP(e);for(const a in t)if(n.includes(a))return t[a];return null})(t,PP);if(a){const e=n.intents.find((e=>e.tag===a));if(e){const t=e.responses[Math.floor(Math.random()*e.responses.length)];return void c((e=>[...e,{tipo:"bot",mensaje:t}]))}}const s=((e,t)=>{const n=t.map((e=>e.toLowerCase())),a=Array(n.length).fill(0);return e.forEach((e=>{const t=e.toLowerCase();let r=n.indexOf(t);-1===r&&(r=n.indexOf("##".concat(t))),-1!==r?(a[r]=1,console.log('[DEBUG] Token "'.concat(e,'" encontrado en \xedndice ').concat(r))):console.warn('[DEBUG] Token "'.concat(e,'" no encontrado en el vocabulario'))})),console.log("[DEBUG] Vector de bolsa de palabras generado: ".concat(a)),a})(zP(t,r),r),o=ls([s]);p(!0);try{if("emocion_feliz"===f){const e=n.intents.find((e=>"detalles_generales"===e.tag));if(e){const t=e.responses[Math.floor(Math.random()*e.responses.length)];return c((e=>[...e,{tipo:"bot",mensaje:t}])),void m(null)}}else if("emocion_tranquilo"===f){const e=n.intents.find((e=>"detalles_generales_tranquilo"===e.tag));if(e){const t=e.responses[Math.floor(Math.random()*e.responses.length)];return c((e=>[...e,{tipo:"bot",mensaje:t}])),void m(null)}}else if("emocion_enojado"===f){const e=n.intents.find((e=>"detalles_generales_enojado"===e.tag));if(e){const t=e.responses[Math.floor(Math.random()*e.responses.length)];return c((e=>[...e,{tipo:"bot",mensaje:t}])),void m(null)}}else if("emocion_normal"===f){const e=n.intents.find((e=>"detalles_generales_normal"===e.tag));if(e){const t=e.responses[Math.floor(Math.random()*e.responses.length)];return c((e=>[...e,{tipo:"bot",mensaje:t}])),void m(null)}}else if("emocion_cansado"===f){const e=n.intents.find((e=>"detalles_generales_cansado"===e.tag));if(e){const t=e.responses[Math.floor(Math.random()*e.responses.length)];return c((e=>[...e,{tipo:"bot",mensaje:t}])),void m(null)}}else if("emocion_estresado"===f){const e=n.intents.find((e=>"detalles_generales_estresado"===e.tag));if(e){const t=e.responses[Math.floor(Math.random()*e.responses.length)];return c((e=>[...e,{tipo:"bot",mensaje:t}])),void m(null)}}else if("happy_emotion"===f){const e=n.intents.find((e=>"general_details"===e.tag));if(e){const t=e.responses[Math.floor(Math.random()*e.responses.length)];return c((e=>[...e,{tipo:"bot",mensaje:t}])),void m(null)}}else if("calm_emotion"===f){const e=n.intents.find((e=>"general_details_calm"===e.tag));if(e){const t=e.responses[Math.floor(Math.random()*e.responses.length)];return c((e=>[...e,{tipo:"bot",mensaje:t}])),void m(null)}}else if("sad_emotion"===f){const e=n.intents.find((e=>"general_details_sad"===e.tag));if(e){const t=e.responses[Math.floor(Math.random()*e.responses.length)];return c((e=>[...e,{tipo:"bot",mensaje:t}])),void m(null)}}else if("angry_emotion"===f){const e=n.intents.find((e=>"general_details_angry"===e.tag));if(e){const t=e.responses[Math.floor(Math.random()*e.responses.length)];return c((e=>[...e,{tipo:"bot",mensaje:t}])),void m(null)}}else if("neutral_emotion"===f){const e=n.intents.find((e=>"general_details_normal"===e.tag));if(e){const t=e.responses[Math.floor(Math.random()*e.responses.length)];return c((e=>[...e,{tipo:"bot",mensaje:t}])),void m(null)}}else if("tired_emotion"===f){const e=n.intents.find((e=>"general_details_tired"===e.tag));if(e){const t=e.responses[Math.floor(Math.random()*e.responses.length)];return c((e=>[...e,{tipo:"bot",mensaje:t}])),void m(null)}}else if("stressed_emotion"===f){const e=n.intents.find((e=>"general_details_stressed"===e.tag));if(e){const t=e.responses[Math.floor(Math.random()*e.responses.length)];return c((e=>[...e,{tipo:"bot",mensaje:t}])),void m(null)}}const a=((e,t)=>{const n=WP(e);for(const a of t)for(const e of a.patterns)if(n.includes(e))return a;return null})(t,n.intents);if(a){const e=a.responses[Math.floor(Math.random()*a.responses.length)];return c((t=>[...t,{tipo:"bot",mensaje:e}])),void(a.context_set?m(a.context_set):m(null))}const r=e.predict(o),s=r.argMax(-1).dataSync()[0];if(r.dataSync()[s]>.75){const e=l[s],t=n.intents.find((t=>t.tag===e));if(t){const e=t.responses[Math.floor(Math.random()*t.responses.length)];c((t=>[...t,{tipo:"bot",mensaje:e}])),t.context_set?m(t.context_set):m(null)}else console.error("[ERROR] No se encontr\xf3 el intent para la etiqueta predicha."),c((e=>[...e,{tipo:"bot",mensaje:"Lo siento, no puedo procesar eso."}]))}else{const e=n.intents.flatMap((e=>e.patterns.map((t=>({tag:e.tag,pattern:t}))))),a=e.reduce(((e,n)=>{const a=((e,t)=>{const n=e.split(" "),a=t.split(" "),r=n.filter((e=>a.includes(e)));return r.length/Math.max(n.length,a.length)})(t,n.pattern);return a>e.similitud?_(_({},n),{},{similitud:a}):e}),{pattern:"",tag:"",similitud:0});if(a.similitud>.7){const e=n.intents.find((e=>e.tag===a.tag));if(e){const t=e.responses[Math.floor(Math.random()*e.responses.length)];c((e=>[...e,{tipo:"bot",mensaje:t}]))}else console.error("[ERROR] No se encontr\xf3 el intent en el fallback."),c((e=>[...e,{tipo:"bot",mensaje:"Lo siento, no entiendo eso."}]))}else c((e=>[...e,{tipo:"bot",mensaje:"Lo siento, no entiendo eso."}]))}}catch(i){console.error("Error durante la predicci\xf3n:",i)}finally{p(!1)}};return(0,BP.jsxs)("div",{className:"chat-container",style:{backgroundImage:"url('./background.jpg')",backgroundSize:"cover",backgroundPosition:"center",backgroundRepeat:"no-repeat",height:"100vh",width:"100vw"},children:[(0,BP.jsx)("h1",{className:"chat-title",children:"ChatXD"}),(0,BP.jsxs)("div",{ref:b,className:"chat-box",children:[u.map(((e,t)=>(0,BP.jsxs)("div",{className:"chat-message-container ".concat(e.tipo),children:[(0,BP.jsx)("img",{src:"usuario"===e.tipo?"./user-icon.png":"./bot-icon.png",alt:"usuario"===e.tipo?"Usuario":"Bot",className:"chat-avatar"}),(0,BP.jsx)("div",{className:"chat-message ".concat(e.tipo),children:e.mensaje})]},t))),d&&(0,BP.jsxs)("div",{className:"chat-message-container bot",children:[(0,BP.jsx)("img",{src:"/bot-icon.png",alt:"Bot",className:"chat-avatar"}),(0,BP.jsxs)("div",{className:"chat-message bot typing-indicator",children:[(0,BP.jsx)("span",{children:"."}),(0,BP.jsx)("span",{children:"."}),(0,BP.jsx)("span",{children:"."})]})]})]}),g&&(0,BP.jsx)("button",{onClick:()=>{b.current&&b.current.scrollTo({top:b.current.scrollHeight,behavior:"smooth"})},className:"scroll-button",children:"\u2193"}),(0,BP.jsxs)("form",{onSubmit:e=>{e.preventDefault(),o.trim()&&(c((e=>[...e,{tipo:"usuario",mensaje:o}])),v(o),i(""))},className:"chat-form",children:[(0,BP.jsx)("input",{type:"text",value:o,onChange:e=>i(e.target.value),placeholder:"Escribe tu mensaje...",className:"chat-input"}),(0,BP.jsx)("button",{type:"submit",className:"chat-submit",children:"Enviar"})]})]})},UP=e=>{e&&e instanceof Function&&n.e(488).then(n.bind(n,488)).then((t=>{let{getCLS:n,getFID:a,getFCP:r,getLCP:s,getTTFB:o}=t;n(e),a(e),r(e),s(e),o(e)}))};I.createRoot(document.getElementById("root")).render((0,BP.jsx)(E.StrictMode,{children:(0,BP.jsx)(VP,{})})),UP()})()})();
//# sourceMappingURL=main.dc665c8a.js.map