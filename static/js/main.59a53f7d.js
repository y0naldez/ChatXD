/*! For license information please see main.59a53f7d.js.LICENSE.txt */
(()=>{var e={980:e=>{"use strict";e.exports=function(){return/\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67)\uDB40\uDC7F|(?:\uD83E\uDDD1\uD83C\uDFFF\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFC-\uDFFF])|\uD83D\uDC68(?:\uD83C\uDFFB(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|[\u2695\u2696\u2708]\uFE0F|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))?|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])\uFE0F|\u200D(?:(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D[\uDC66\uDC67])|\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC)?|(?:\uD83D\uDC69(?:\uD83C\uDFFB\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69]))|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC69(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83E\uDDD1(?:\u200D(?:\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDE36\u200D\uD83C\uDF2B|\uD83C\uDFF3\uFE0F\u200D\u26A7|\uD83D\uDC3B\u200D\u2744|(?:(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\uD83C\uDFF4\u200D\u2620|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])\u200D[\u2640\u2642]|[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u2328\u23CF\u23ED-\u23EF\u23F1\u23F2\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB\u25FC\u2600-\u2604\u260E\u2611\u2618\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u2692\u2694-\u2697\u2699\u269B\u269C\u26A0\u26A7\u26B0\u26B1\u26C8\u26CF\u26D1\u26D3\u26E9\u26F0\u26F1\u26F4\u26F7\u26F8\u2702\u2708\u2709\u270F\u2712\u2714\u2716\u271D\u2721\u2733\u2734\u2744\u2747\u2763\u27A1\u2934\u2935\u2B05-\u2B07\u3030\u303D\u3297\u3299]|\uD83C[\uDD70\uDD71\uDD7E\uDD7F\uDE02\uDE37\uDF21\uDF24-\uDF2C\uDF36\uDF7D\uDF96\uDF97\uDF99-\uDF9B\uDF9E\uDF9F\uDFCD\uDFCE\uDFD4-\uDFDF\uDFF5\uDFF7]|\uD83D[\uDC3F\uDCFD\uDD49\uDD4A\uDD6F\uDD70\uDD73\uDD76-\uDD79\uDD87\uDD8A-\uDD8D\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA\uDECB\uDECD-\uDECF\uDEE0-\uDEE5\uDEE9\uDEF0\uDEF3])\uFE0F|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDE35\u200D\uD83D\uDCAB|\uD83D\uDE2E\u200D\uD83D\uDCA8|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83E\uDDD1(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83D\uDC69(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF6\uD83C\uDDE6|\uD83C\uDDF4\uD83C\uDDF2|\uD83D\uDC08\u200D\u2B1B|\u2764\uFE0F\u200D(?:\uD83D\uDD25|\uD83E\uDE79)|\uD83D\uDC41\uFE0F|\uD83C\uDFF3\uFE0F|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|[#\*0-9]\uFE0F\u20E3|\u2764\uFE0F|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|\uD83C\uDFF4|(?:[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270C\u270D]|\uD83D[\uDD74\uDD90])(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC08\uDC15\uDC3B\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE2E\uDE35\uDE36\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5]|\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD]|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF]|[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF84\uDF86-\uDF93\uDFA0-\uDFC1\uDFC5\uDFC6\uDFC8\uDFC9\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC07\uDC09-\uDC14\uDC16-\uDC3A\uDC3C-\uDC3E\uDC40\uDC44\uDC45\uDC51-\uDC65\uDC6A\uDC79-\uDC7B\uDC7D-\uDC80\uDC84\uDC88-\uDC8E\uDC90\uDC92-\uDCA9\uDCAB-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDDA4\uDDFB-\uDE2D\uDE2F-\uDE34\uDE37-\uDE44\uDE48-\uDE4A\uDE80-\uDEA2\uDEA4-\uDEB3\uDEB7-\uDEBF\uDEC1-\uDEC5\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0D\uDD0E\uDD10-\uDD17\uDD1D\uDD20-\uDD25\uDD27-\uDD2F\uDD3A\uDD3F-\uDD45\uDD47-\uDD76\uDD78\uDD7A-\uDDB4\uDDB7\uDDBA\uDDBC-\uDDCB\uDDD0\uDDE0-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6]|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26A7\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5-\uDED7\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDD77\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g}},353:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(N){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=a;var r={},s={};function o(e,t){var n,a,o;return t?(o=0<=(e>>>=0)&&e<256)&&(a=s[e])?a:(n=u(e,(0|e)<0?-1:0,!0),o&&(s[e]=n),n):(o=-128<=(e|=0)&&e<128)&&(a=r[e])?a:(n=u(e,e<0?-1:0,!1),o&&(r[e]=n),n)}function i(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=p)return D}else{if(e<=-f)return k;if(e+1>=f)return w}return e<0?i(-e,t).neg():u(e%d|0,e/d|0,t)}function u(e,t,a){return new n(e,t,a)}n.fromInt=o,n.fromNumber=i,n.fromBits=u;var c=Math.pow;function l(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return l(e.substring(1),t,n).neg();for(var r=i(c(n,8)),s=g,o=0;o<e.length;o+=8){var u=Math.min(8,e.length-o),h=parseInt(e.substring(o,o+u),n);if(u<8){var d=i(c(n,u));s=s.mul(d).add(i(h))}else s=(s=s.mul(r)).add(i(h))}return s.unsigned=t,s}function h(e,t){return"number"===typeof e?i(e,t):"string"===typeof e?l(e,t):u(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=l,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,m=o(1<<24),g=o(0);n.ZERO=g;var y=o(0,!0);n.UZERO=y;var b=o(1);n.ONE=b;var v=o(1,!0);n.UONE=v;var x=o(-1);n.NEG_ONE=x;var w=u(-1,2147483647,!1);n.MAX_VALUE=w;var D=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=D;var k=u(0,-2147483648,!1);n.MIN_VALUE=k;var C=n.prototype;C.toInt=function(){return this.unsigned?this.low>>>0:this.low},C.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},C.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(k)){var t=i(e),n=this.div(t),a=n.mul(t).sub(this);return n.toString(e)+a.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=i(c(e,6),this.unsigned),s=this,o="";;){var u=s.div(r),l=(s.sub(u.mul(r)).toInt()>>>0).toString(e);if((s=u).isZero())return l+o;for(;l.length<6;)l="0"+l;o=""+l+o}},C.getHighBits=function(){return this.high},C.getHighBitsUnsigned=function(){return this.high>>>0},C.getLowBits=function(){return this.low},C.getLowBitsUnsigned=function(){return this.low>>>0},C.getNumBitsAbs=function(){if(this.isNegative())return this.eq(k)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},C.isZero=function(){return 0===this.high&&0===this.low},C.eqz=C.isZero,C.isNegative=function(){return!this.unsigned&&this.high<0},C.isPositive=function(){return this.unsigned||this.high>=0},C.isOdd=function(){return 1===(1&this.low)},C.isEven=function(){return 0===(1&this.low)},C.equals=function(e){return a(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},C.eq=C.equals,C.notEquals=function(e){return!this.eq(e)},C.neq=C.notEquals,C.ne=C.notEquals,C.lessThan=function(e){return this.comp(e)<0},C.lt=C.lessThan,C.lessThanOrEqual=function(e){return this.comp(e)<=0},C.lte=C.lessThanOrEqual,C.le=C.lessThanOrEqual,C.greaterThan=function(e){return this.comp(e)>0},C.gt=C.greaterThan,C.greaterThanOrEqual=function(e){return this.comp(e)>=0},C.gte=C.greaterThanOrEqual,C.ge=C.greaterThanOrEqual,C.compare=function(e){if(a(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},C.comp=C.compare,C.negate=function(){return!this.unsigned&&this.eq(k)?k:this.not().add(b)},C.neg=C.negate,C.add=function(e){a(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,o=e.high>>>16,i=65535&e.high,c=e.low>>>16,l=0,d=0,p=0,f=0;return p+=(f+=s+(65535&e.low))>>>16,d+=(p+=r+c)>>>16,l+=(d+=n+i)>>>16,l+=t+o,u((p&=65535)<<16|(f&=65535),(l&=65535)<<16|(d&=65535),this.unsigned)},C.subtract=function(e){return a(e)||(e=h(e)),this.add(e.neg())},C.sub=C.subtract,C.multiply=function(e){if(this.isZero())return g;if(a(e)||(e=h(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(k))return e.isOdd()?k:g;if(e.eq(k))return this.isOdd()?k:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return i(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,s=this.low>>>16,o=65535&this.low,c=e.high>>>16,l=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,y=0,b=0,v=0;return b+=(v+=o*p)>>>16,y+=(b+=s*p)>>>16,b&=65535,y+=(b+=o*d)>>>16,f+=(y+=r*p)>>>16,y&=65535,f+=(y+=s*d)>>>16,y&=65535,f+=(y+=o*l)>>>16,f+=n*p+r*d+s*l+o*c,u((b&=65535)<<16|(v&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},C.mul=C.multiply,C.divide=function(e){if(a(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,r,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return v;s=y}else{if(this.eq(k))return e.eq(b)||e.eq(x)?k:e.eq(k)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:x:(r=this.sub(e.mul(n)),s=n.add(r.div(e)));if(e.eq(k))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(r=this;r.gte(e);){n=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(n)/Math.LN2),l=o<=48?1:c(2,o-48),d=i(n),p=d.mul(e);p.isNegative()||p.gt(r);)p=(d=i(n-=l,this.unsigned)).mul(e);d.isZero()&&(d=b),s=s.add(d),r=r.sub(p)}return s},C.div=C.divide,C.modulo=function(e){return a(e)||(e=h(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},C.mod=C.modulo,C.rem=C.modulo,C.not=function(){return u(~this.low,~this.high,this.unsigned)},C.and=function(e){return a(e)||(e=h(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},C.or=function(e){return a(e)||(e=h(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},C.xor=function(e){return a(e)||(e=h(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},C.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},C.shl=C.shiftLeft,C.shiftRight=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},C.shr=C.shiftRight,C.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},C.shru=C.shiftRightUnsigned,C.shr_u=C.shiftRightUnsigned,C.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},C.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},C.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},C.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},C.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,a){return a?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},730:(e,t,n)=>{"use strict";var a=n(43),r=n(853);function s(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=new Set,i={};function u(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(i[e]=t,e=0;e<t.length;e++)o.add(t[e])}var l=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),h=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},f={};function m(e,t,n,a,r,s,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=a,this.attributeNamespace=r,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=s,this.removeEmptyString=o}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function v(e,t,n,a){var r=g.hasOwnProperty(t)?g[t]:null;(null!==r?0!==r.type:a||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,a){if(null===t||"undefined"===typeof t||function(e,t,n,a){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!a&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,a))return!0;if(a)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,r,a)&&(n=null),a||null===r?function(e){return!!h.call(f,e)||!h.call(p,e)&&(d.test(e)?f[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):r.mustUseProperty?e[r.propertyName]=null===n?3!==r.type&&"":n:(t=r.attributeName,a=r.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(r=r.type)||4===r&&!0===n?"":""+n,a?e.setAttributeNS(a,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var x=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,w=Symbol.for("react.element"),D=Symbol.for("react.portal"),k=Symbol.for("react.fragment"),C=Symbol.for("react.strict_mode"),N=Symbol.for("react.profiler"),S=Symbol.for("react.provider"),E=Symbol.for("react.context"),I=Symbol.for("react.forward_ref"),T=Symbol.for("react.suspense"),F=Symbol.for("react.suspense_list"),A=Symbol.for("react.memo"),R=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var _=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var O=Symbol.iterator;function L(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=O&&e[O]||e["@@iterator"])?e:null}var M,z=Object.assign;function B(e){if(void 0===M)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);M=t&&t[1]||""}return"\n"+M+e}var P=!1;function W(e,t){if(!e||P)return"";P=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(c){var a=c}Reflect.construct(e,[],t)}else{try{t.call()}catch(c){a=c}e.call(t.prototype)}else{try{throw Error()}catch(c){a=c}e()}}catch(c){if(c&&a&&"string"===typeof c.stack){for(var r=c.stack.split("\n"),s=a.stack.split("\n"),o=r.length-1,i=s.length-1;1<=o&&0<=i&&r[o]!==s[i];)i--;for(;1<=o&&0<=i;o--,i--)if(r[o]!==s[i]){if(1!==o||1!==i)do{if(o--,0>--i||r[o]!==s[i]){var u="\n"+r[o].replace(" at new "," at ");return e.displayName&&u.includes("<anonymous>")&&(u=u.replace("<anonymous>",e.displayName)),u}}while(1<=o&&0<=i);break}}}finally{P=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?B(e):""}function V(e){switch(e.tag){case 5:return B(e.type);case 16:return B("Lazy");case 13:return B("Suspense");case 19:return B("SuspenseList");case 0:case 2:case 15:return e=W(e.type,!1);case 11:return e=W(e.type.render,!1);case 1:return e=W(e.type,!0);default:return""}}function U(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case k:return"Fragment";case D:return"Portal";case N:return"Profiler";case C:return"StrictMode";case T:return"Suspense";case F:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case E:return(e.displayName||"Context")+".Consumer";case S:return(e._context.displayName||"Context")+".Provider";case I:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case A:return null!==(t=e.displayName||null)?t:U(e.type)||"Memo";case R:t=e._payload,e=e._init;try{return U(e(t))}catch(n){}}return null}function G(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return U(t);case 8:return t===C?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t}return null}function H(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function j(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function q(e){e._valueTracker||(e._valueTracker=function(e){var t=j(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),a=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var r=n.get,s=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return r.call(this)},set:function(e){a=""+e,s.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return a},setValue:function(e){a=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function K(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),a="";return e&&(a=j(e)?e.checked?"true":"false":e.value),(e=a)!==n&&(t.setValue(e),!0)}function X(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Y(e,t){var n=t.checked;return z({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Q(e,t){var n=null==t.defaultValue?"":t.defaultValue,a=null!=t.checked?t.checked:t.defaultChecked;n=H(null!=t.value?t.value:n),e._wrapperState={initialChecked:a,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Z(e,t){null!=(t=t.checked)&&v(e,"checked",t,!1)}function J(e,t){Z(e,t);var n=H(t.value),a=t.type;if(null!=n)"number"===a?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===a||"reset"===a)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,H(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function $(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var a=t.type;if(!("submit"!==a&&"reset"!==a||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&X(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,a){if(e=e.options,t){t={};for(var r=0;r<n.length;r++)t["$"+n[r]]=!0;for(n=0;n<e.length;n++)r=t.hasOwnProperty("$"+e[n].value),e[n].selected!==r&&(e[n].selected=r),r&&a&&(e[n].defaultSelected=!0)}else{for(n=""+H(n),t=null,r=0;r<e.length;r++){if(e[r].value===n)return e[r].selected=!0,void(a&&(e[r].defaultSelected=!0));null!==t||e[r].disabled||(t=e[r])}null!==t&&(t.selected=!0)}}function ae(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(s(91));return z({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function re(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(s(92));if(te(n)){if(1<n.length)throw Error(s(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:H(n)}}function se(e,t){var n=H(t.value),a=H(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=a&&(e.defaultValue=""+a)}function oe(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ue(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ie(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ce,le,he=(le=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ce=ce||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ce.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,a){MSApp.execUnsafeLocalFunction((function(){return le(e,t)}))}:le);function de(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},fe=["Webkit","ms","Moz","O"];function me(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||pe.hasOwnProperty(e)&&pe[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var a=0===n.indexOf("--"),r=me(n,t[n],a);"float"===n&&(n="cssFloat"),a?e.setProperty(n,r):e[n]=r}}Object.keys(pe).forEach((function(e){fe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pe[t]=pe[e]}))}));var ye=z({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function be(e,t){if(t){if(ye[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(s(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(s(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(s(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(s(62))}}function ve(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var xe=null;function we(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var De=null,ke=null,Ce=null;function Ne(e){if(e=vr(e)){if("function"!==typeof De)throw Error(s(280));var t=e.stateNode;t&&(t=wr(t),De(e.stateNode,e.type,t))}}function Se(e){ke?Ce?Ce.push(e):Ce=[e]:ke=e}function Ee(){if(ke){var e=ke,t=Ce;if(Ce=ke=null,Ne(e),t)for(e=0;e<t.length;e++)Ne(t[e])}}function Ie(e,t){return e(t)}function Te(){}var Fe=!1;function Ae(e,t,n){if(Fe)return e(t,n);Fe=!0;try{return Ie(e,t,n)}finally{Fe=!1,(null!==ke||null!==Ce)&&(Te(),Ee())}}function Re(e,t){var n=e.stateNode;if(null===n)return null;var a=wr(n);if(null===a)return null;n=a[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(a=!a.disabled)||(a=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!a;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(s(231,t,typeof n));return n}var _e=!1;if(l)try{var Oe={};Object.defineProperty(Oe,"passive",{get:function(){_e=!0}}),window.addEventListener("test",Oe,Oe),window.removeEventListener("test",Oe,Oe)}catch(le){_e=!1}function Le(e,t,n,a,r,s,o,i,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(l){this.onError(l)}}var Me=!1,ze=null,Be=!1,Pe=null,We={onError:function(e){Me=!0,ze=e}};function Ve(e,t,n,a,r,s,o,i,u){Me=!1,ze=null,Le.apply(We,arguments)}function Ue(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ge(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function He(e){if(Ue(e)!==e)throw Error(s(188))}function je(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ue(e)))throw Error(s(188));return t!==e?null:e}for(var n=e,a=t;;){var r=n.return;if(null===r)break;var o=r.alternate;if(null===o){if(null!==(a=r.return)){n=a;continue}break}if(r.child===o.child){for(o=r.child;o;){if(o===n)return He(r),e;if(o===a)return He(r),t;o=o.sibling}throw Error(s(188))}if(n.return!==a.return)n=r,a=o;else{for(var i=!1,u=r.child;u;){if(u===n){i=!0,n=r,a=o;break}if(u===a){i=!0,a=r,n=o;break}u=u.sibling}if(!i){for(u=o.child;u;){if(u===n){i=!0,n=o,a=r;break}if(u===a){i=!0,a=o,n=r;break}u=u.sibling}if(!i)throw Error(s(189))}}if(n.alternate!==a)throw Error(s(190))}if(3!==n.tag)throw Error(s(188));return n.stateNode.current===n?e:t}(e))?qe(e):null}function qe(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=qe(e);if(null!==t)return t;e=e.sibling}return null}var Ke=r.unstable_scheduleCallback,Xe=r.unstable_cancelCallback,Ye=r.unstable_shouldYield,Qe=r.unstable_requestPaint,Ze=r.unstable_now,Je=r.unstable_getCurrentPriorityLevel,$e=r.unstable_ImmediatePriority,et=r.unstable_UserBlockingPriority,tt=r.unstable_NormalPriority,nt=r.unstable_LowPriority,at=r.unstable_IdlePriority,rt=null,st=null;var ot=Math.clz32?Math.clz32:function(e){return e>>>=0,0===e?32:31-(it(e)/ut|0)|0},it=Math.log,ut=Math.LN2;var ct=64,lt=4194304;function ht(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function dt(e,t){var n=e.pendingLanes;if(0===n)return 0;var a=0,r=e.suspendedLanes,s=e.pingedLanes,o=268435455&n;if(0!==o){var i=o&~r;0!==i?a=ht(i):0!==(s&=o)&&(a=ht(s))}else 0!==(o=n&~r)?a=ht(o):0!==s&&(a=ht(s));if(0===a)return 0;if(0!==t&&t!==a&&0===(t&r)&&((r=a&-a)>=(s=t&-t)||16===r&&0!==(4194240&s)))return t;if(0!==(4&a)&&(a|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=a;0<t;)r=1<<(n=31-ot(t)),a|=e[n],t&=~r;return a}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ft(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function mt(){var e=ct;return 0===(4194240&(ct<<=1))&&(ct=64),e}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function yt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-ot(t)]=n}function bt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var a=31-ot(n),r=1<<a;r&t|e[a]&t&&(e[a]|=t),n&=~r}}var vt=0;function xt(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var wt,Dt,kt,Ct,Nt,St=!1,Et=[],It=null,Tt=null,Ft=null,At=new Map,Rt=new Map,_t=[],Ot="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Lt(e,t){switch(e){case"focusin":case"focusout":It=null;break;case"dragenter":case"dragleave":Tt=null;break;case"mouseover":case"mouseout":Ft=null;break;case"pointerover":case"pointerout":At.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Rt.delete(t.pointerId)}}function Mt(e,t,n,a,r,s){return null===e||e.nativeEvent!==s?(e={blockedOn:t,domEventName:n,eventSystemFlags:a,nativeEvent:s,targetContainers:[r]},null!==t&&(null!==(t=vr(t))&&Dt(t)),e):(e.eventSystemFlags|=a,t=e.targetContainers,null!==r&&-1===t.indexOf(r)&&t.push(r),e)}function zt(e){var t=br(e.target);if(null!==t){var n=Ue(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ge(n)))return e.blockedOn=t,void Nt(e.priority,(function(){kt(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Bt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Yt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=vr(n))&&Dt(t),e.blockedOn=n,!1;var a=new(n=e.nativeEvent).constructor(n.type,n);xe=a,n.target.dispatchEvent(a),xe=null,t.shift()}return!0}function Pt(e,t,n){Bt(e)&&n.delete(t)}function Wt(){St=!1,null!==It&&Bt(It)&&(It=null),null!==Tt&&Bt(Tt)&&(Tt=null),null!==Ft&&Bt(Ft)&&(Ft=null),At.forEach(Pt),Rt.forEach(Pt)}function Vt(e,t){e.blockedOn===t&&(e.blockedOn=null,St||(St=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Wt)))}function Ut(e){function t(t){return Vt(t,e)}if(0<Et.length){Vt(Et[0],e);for(var n=1;n<Et.length;n++){var a=Et[n];a.blockedOn===e&&(a.blockedOn=null)}}for(null!==It&&Vt(It,e),null!==Tt&&Vt(Tt,e),null!==Ft&&Vt(Ft,e),At.forEach(t),Rt.forEach(t),n=0;n<_t.length;n++)(a=_t[n]).blockedOn===e&&(a.blockedOn=null);for(;0<_t.length&&null===(n=_t[0]).blockedOn;)zt(n),null===n.blockedOn&&_t.shift()}var Gt=x.ReactCurrentBatchConfig,Ht=!0;function jt(e,t,n,a){var r=vt,s=Gt.transition;Gt.transition=null;try{vt=1,Kt(e,t,n,a)}finally{vt=r,Gt.transition=s}}function qt(e,t,n,a){var r=vt,s=Gt.transition;Gt.transition=null;try{vt=4,Kt(e,t,n,a)}finally{vt=r,Gt.transition=s}}function Kt(e,t,n,a){if(Ht){var r=Yt(e,t,n,a);if(null===r)Ha(e,t,a,Xt,n),Lt(e,a);else if(function(e,t,n,a,r){switch(t){case"focusin":return It=Mt(It,e,t,n,a,r),!0;case"dragenter":return Tt=Mt(Tt,e,t,n,a,r),!0;case"mouseover":return Ft=Mt(Ft,e,t,n,a,r),!0;case"pointerover":var s=r.pointerId;return At.set(s,Mt(At.get(s)||null,e,t,n,a,r)),!0;case"gotpointercapture":return s=r.pointerId,Rt.set(s,Mt(Rt.get(s)||null,e,t,n,a,r)),!0}return!1}(r,e,t,n,a))a.stopPropagation();else if(Lt(e,a),4&t&&-1<Ot.indexOf(e)){for(;null!==r;){var s=vr(r);if(null!==s&&wt(s),null===(s=Yt(e,t,n,a))&&Ha(e,t,a,Xt,n),s===r)break;r=s}null!==r&&a.stopPropagation()}else Ha(e,t,a,null,n)}}var Xt=null;function Yt(e,t,n,a){if(Xt=null,null!==(e=br(e=we(a))))if(null===(t=Ue(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ge(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Xt=e,null}function Qt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Je()){case $e:return 1;case et:return 4;case tt:case nt:return 16;case at:return 536870912;default:return 16}default:return 16}}var Zt=null,Jt=null,$t=null;function en(){if($t)return $t;var e,t,n=Jt,a=n.length,r="value"in Zt?Zt.value:Zt.textContent,s=r.length;for(e=0;e<a&&n[e]===r[e];e++);var o=a-e;for(t=1;t<=o&&n[a-t]===r[s-t];t++);return $t=r.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function an(){return!1}function rn(e){function t(t,n,a,r,s){for(var o in this._reactName=t,this._targetInst=a,this.type=n,this.nativeEvent=r,this.target=s,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(r):r[o]);return this.isDefaultPrevented=(null!=r.defaultPrevented?r.defaultPrevented:!1===r.returnValue)?nn:an,this.isPropagationStopped=an,this}return z(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var sn,on,un,cn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},ln=rn(cn),hn=z({},cn,{view:0,detail:0}),dn=rn(hn),pn=z({},hn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Nn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==un&&(un&&"mousemove"===e.type?(sn=e.screenX-un.screenX,on=e.screenY-un.screenY):on=sn=0,un=e),sn)},movementY:function(e){return"movementY"in e?e.movementY:on}}),fn=rn(pn),mn=rn(z({},pn,{dataTransfer:0})),gn=rn(z({},hn,{relatedTarget:0})),yn=rn(z({},cn,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=z({},cn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),vn=rn(bn),xn=rn(z({},cn,{data:0})),wn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Dn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},kn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Cn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=kn[e])&&!!t[e]}function Nn(){return Cn}var Sn=z({},hn,{key:function(e){if(e.key){var t=wn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Dn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Nn,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),En=rn(Sn),In=rn(z({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Tn=rn(z({},hn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Nn})),Fn=rn(z({},cn,{propertyName:0,elapsedTime:0,pseudoElement:0})),An=z({},pn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Rn=rn(An),_n=[9,13,27,32],On=l&&"CompositionEvent"in window,Ln=null;l&&"documentMode"in document&&(Ln=document.documentMode);var Mn=l&&"TextEvent"in window&&!Ln,zn=l&&(!On||Ln&&8<Ln&&11>=Ln),Bn=String.fromCharCode(32),Pn=!1;function Wn(e,t){switch(e){case"keyup":return-1!==_n.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Vn(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Un=!1;var Gn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Gn[e.type]:"textarea"===t}function jn(e,t,n,a){Se(a),0<(t=qa(t,"onChange")).length&&(n=new ln("onChange","change",null,n,a),e.push({event:n,listeners:t}))}var qn=null,Kn=null;function Xn(e){Ba(e,0)}function Yn(e){if(K(xr(e)))return e}function Qn(e,t){if("change"===e)return t}var Zn=!1;if(l){var Jn;if(l){var $n="oninput"in document;if(!$n){var ea=document.createElement("div");ea.setAttribute("oninput","return;"),$n="function"===typeof ea.oninput}Jn=$n}else Jn=!1;Zn=Jn&&(!document.documentMode||9<document.documentMode)}function ta(){qn&&(qn.detachEvent("onpropertychange",na),Kn=qn=null)}function na(e){if("value"===e.propertyName&&Yn(Kn)){var t=[];jn(t,Kn,e,we(e)),Ae(Xn,t)}}function aa(e,t,n){"focusin"===e?(ta(),Kn=n,(qn=t).attachEvent("onpropertychange",na)):"focusout"===e&&ta()}function ra(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Yn(Kn)}function sa(e,t){if("click"===e)return Yn(t)}function oa(e,t){if("input"===e||"change"===e)return Yn(t)}var ia="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function ua(e,t){if(ia(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(a=0;a<n.length;a++){var r=n[a];if(!h.call(t,r)||!ia(e[r],t[r]))return!1}return!0}function ca(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function la(e,t){var n,a=ca(e);for(e=0;a;){if(3===a.nodeType){if(n=e+a.textContent.length,e<=t&&n>=t)return{node:a,offset:t-e};e=n}e:{for(;a;){if(a.nextSibling){a=a.nextSibling;break e}a=a.parentNode}a=void 0}a=ca(a)}}function ha(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?ha(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function da(){for(var e=window,t=X();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(a){n=!1}if(!n)break;t=X((e=t.contentWindow).document)}return t}function pa(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function fa(e){var t=da(),n=e.focusedElem,a=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&ha(n.ownerDocument.documentElement,n)){if(null!==a&&pa(n))if(t=a.start,void 0===(e=a.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var r=n.textContent.length,s=Math.min(a.start,r);a=void 0===a.end?s:Math.min(a.end,r),!e.extend&&s>a&&(r=a,a=s,s=r),r=la(n,s);var o=la(n,a);r&&o&&(1!==e.rangeCount||e.anchorNode!==r.node||e.anchorOffset!==r.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&((t=t.createRange()).setStart(r.node,r.offset),e.removeAllRanges(),s>a?(e.addRange(t),e.extend(o.node,o.offset)):(t.setEnd(o.node,o.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var ma=l&&"documentMode"in document&&11>=document.documentMode,ga=null,ya=null,ba=null,va=!1;function xa(e,t,n){var a=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;va||null==ga||ga!==X(a)||("selectionStart"in(a=ga)&&pa(a)?a={start:a.selectionStart,end:a.selectionEnd}:a={anchorNode:(a=(a.ownerDocument&&a.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:a.anchorOffset,focusNode:a.focusNode,focusOffset:a.focusOffset},ba&&ua(ba,a)||(ba=a,0<(a=qa(ya,"onSelect")).length&&(t=new ln("onSelect","select",null,t,n),e.push({event:t,listeners:a}),t.target=ga)))}function wa(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Da={animationend:wa("Animation","AnimationEnd"),animationiteration:wa("Animation","AnimationIteration"),animationstart:wa("Animation","AnimationStart"),transitionend:wa("Transition","TransitionEnd")},ka={},Ca={};function Na(e){if(ka[e])return ka[e];if(!Da[e])return e;var t,n=Da[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ca)return ka[e]=n[t];return e}l&&(Ca=document.createElement("div").style,"AnimationEvent"in window||(delete Da.animationend.animation,delete Da.animationiteration.animation,delete Da.animationstart.animation),"TransitionEvent"in window||delete Da.transitionend.transition);var Sa=Na("animationend"),Ea=Na("animationiteration"),Ia=Na("animationstart"),Ta=Na("transitionend"),Fa=new Map,Aa="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Ra(e,t){Fa.set(e,t),u(t,[e])}for(var _a=0;_a<Aa.length;_a++){var Oa=Aa[_a];Ra(Oa.toLowerCase(),"on"+(Oa[0].toUpperCase()+Oa.slice(1)))}Ra(Sa,"onAnimationEnd"),Ra(Ea,"onAnimationIteration"),Ra(Ia,"onAnimationStart"),Ra("dblclick","onDoubleClick"),Ra("focusin","onFocus"),Ra("focusout","onBlur"),Ra(Ta,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),u("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),u("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),u("onBeforeInput",["compositionend","keypress","textInput","paste"]),u("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var La="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ma=new Set("cancel close invalid load scroll toggle".split(" ").concat(La));function za(e,t,n){var a=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,a,r,o,i,u,c){if(Ve.apply(this,arguments),Me){if(!Me)throw Error(s(198));var l=ze;Me=!1,ze=null,Be||(Be=!0,Pe=l)}}(a,t,void 0,e),e.currentTarget=null}function Ba(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var a=e[n],r=a.event;a=a.listeners;e:{var s=void 0;if(t)for(var o=a.length-1;0<=o;o--){var i=a[o],u=i.instance,c=i.currentTarget;if(i=i.listener,u!==s&&r.isPropagationStopped())break e;za(r,i,c),s=u}else for(o=0;o<a.length;o++){if(u=(i=a[o]).instance,c=i.currentTarget,i=i.listener,u!==s&&r.isPropagationStopped())break e;za(r,i,c),s=u}}}if(Be)throw e=Pe,Be=!1,Pe=null,e}function Pa(e,t){var n=t[mr];void 0===n&&(n=t[mr]=new Set);var a=e+"__bubble";n.has(a)||(Ga(t,e,2,!1),n.add(a))}function Wa(e,t,n){var a=0;t&&(a|=4),Ga(n,e,a,t)}var Va="_reactListening"+Math.random().toString(36).slice(2);function Ua(e){if(!e[Va]){e[Va]=!0,o.forEach((function(t){"selectionchange"!==t&&(Ma.has(t)||Wa(t,!1,e),Wa(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Va]||(t[Va]=!0,Wa("selectionchange",!1,t))}}function Ga(e,t,n,a){switch(Qt(t)){case 1:var r=jt;break;case 4:r=qt;break;default:r=Kt}n=r.bind(null,t,n,e),r=void 0,!_e||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(r=!0),a?void 0!==r?e.addEventListener(t,n,{capture:!0,passive:r}):e.addEventListener(t,n,!0):void 0!==r?e.addEventListener(t,n,{passive:r}):e.addEventListener(t,n,!1)}function Ha(e,t,n,a,r){var s=a;if(0===(1&t)&&0===(2&t)&&null!==a)e:for(;;){if(null===a)return;var o=a.tag;if(3===o||4===o){var i=a.stateNode.containerInfo;if(i===r||8===i.nodeType&&i.parentNode===r)break;if(4===o)for(o=a.return;null!==o;){var u=o.tag;if((3===u||4===u)&&((u=o.stateNode.containerInfo)===r||8===u.nodeType&&u.parentNode===r))return;o=o.return}for(;null!==i;){if(null===(o=br(i)))return;if(5===(u=o.tag)||6===u){a=s=o;continue e}i=i.parentNode}}a=a.return}Ae((function(){var a=s,r=we(n),o=[];e:{var i=Fa.get(e);if(void 0!==i){var u=ln,c=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":u=En;break;case"focusin":c="focus",u=gn;break;case"focusout":c="blur",u=gn;break;case"beforeblur":case"afterblur":u=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=fn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=mn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Tn;break;case Sa:case Ea:case Ia:u=yn;break;case Ta:u=Fn;break;case"scroll":u=dn;break;case"wheel":u=Rn;break;case"copy":case"cut":case"paste":u=vn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=In}var l=0!==(4&t),h=!l&&"scroll"===e,d=l?null!==i?i+"Capture":null:i;l=[];for(var p,f=a;null!==f;){var m=(p=f).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&(null!=(m=Re(f,d))&&l.push(ja(f,m,p)))),h)break;f=f.return}0<l.length&&(i=new u(i,c,null,n,r),o.push({event:i,listeners:l}))}}if(0===(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||n===xe||!(c=n.relatedTarget||n.fromElement)||!br(c)&&!c[fr])&&(u||i)&&(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,u?(u=a,null!==(c=(c=n.relatedTarget||n.toElement)?br(c):null)&&(c!==(h=Ue(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(u=null,c=a),u!==c)){if(l=fn,m="onMouseLeave",d="onMouseEnter",f="mouse","pointerout"!==e&&"pointerover"!==e||(l=In,m="onPointerLeave",d="onPointerEnter",f="pointer"),h=null==u?i:xr(u),p=null==c?i:xr(c),(i=new l(m,f+"leave",u,n,r)).target=h,i.relatedTarget=p,m=null,br(r)===a&&((l=new l(d,f+"enter",c,n,r)).target=p,l.relatedTarget=h,m=l),h=m,u&&c)e:{for(d=c,f=0,p=l=u;p;p=Ka(p))f++;for(p=0,m=d;m;m=Ka(m))p++;for(;0<f-p;)l=Ka(l),f--;for(;0<p-f;)d=Ka(d),p--;for(;f--;){if(l===d||null!==d&&l===d.alternate)break e;l=Ka(l),d=Ka(d)}l=null}else l=null;null!==u&&Xa(o,i,u,l,!1),null!==c&&null!==h&&Xa(o,h,c,l,!0)}if("select"===(u=(i=a?xr(a):window).nodeName&&i.nodeName.toLowerCase())||"input"===u&&"file"===i.type)var g=Qn;else if(Hn(i))if(Zn)g=oa;else{g=ra;var y=aa}else(u=i.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(g=sa);switch(g&&(g=g(e,a))?jn(o,g,n,r):(y&&y(e,i,a),"focusout"===e&&(y=i._wrapperState)&&y.controlled&&"number"===i.type&&ee(i,"number",i.value)),y=a?xr(a):window,e){case"focusin":(Hn(y)||"true"===y.contentEditable)&&(ga=y,ya=a,ba=null);break;case"focusout":ba=ya=ga=null;break;case"mousedown":va=!0;break;case"contextmenu":case"mouseup":case"dragend":va=!1,xa(o,n,r);break;case"selectionchange":if(ma)break;case"keydown":case"keyup":xa(o,n,r)}var b;if(On)e:{switch(e){case"compositionstart":var v="onCompositionStart";break e;case"compositionend":v="onCompositionEnd";break e;case"compositionupdate":v="onCompositionUpdate";break e}v=void 0}else Un?Wn(e,n)&&(v="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(v="onCompositionStart");v&&(zn&&"ko"!==n.locale&&(Un||"onCompositionStart"!==v?"onCompositionEnd"===v&&Un&&(b=en()):(Jt="value"in(Zt=r)?Zt.value:Zt.textContent,Un=!0)),0<(y=qa(a,v)).length&&(v=new xn(v,e,null,n,r),o.push({event:v,listeners:y}),b?v.data=b:null!==(b=Vn(n))&&(v.data=b))),(b=Mn?function(e,t){switch(e){case"compositionend":return Vn(t);case"keypress":return 32!==t.which?null:(Pn=!0,Bn);case"textInput":return(e=t.data)===Bn&&Pn?null:e;default:return null}}(e,n):function(e,t){if(Un)return"compositionend"===e||!On&&Wn(e,t)?(e=en(),$t=Jt=Zt=null,Un=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return zn&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(a=qa(a,"onBeforeInput")).length&&(r=new xn("onBeforeInput","beforeinput",null,n,r),o.push({event:r,listeners:a}),r.data=b))}Ba(o,t)}))}function ja(e,t,n){return{instance:e,listener:t,currentTarget:n}}function qa(e,t){for(var n=t+"Capture",a=[];null!==e;){var r=e,s=r.stateNode;5===r.tag&&null!==s&&(r=s,null!=(s=Re(e,n))&&a.unshift(ja(e,s,r)),null!=(s=Re(e,t))&&a.push(ja(e,s,r))),e=e.return}return a}function Ka(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Xa(e,t,n,a,r){for(var s=t._reactName,o=[];null!==n&&n!==a;){var i=n,u=i.alternate,c=i.stateNode;if(null!==u&&u===a)break;5===i.tag&&null!==c&&(i=c,r?null!=(u=Re(n,s))&&o.unshift(ja(n,u,i)):r||null!=(u=Re(n,s))&&o.push(ja(n,u,i))),n=n.return}0!==o.length&&e.push({event:t,listeners:o})}var Ya=/\r\n?/g,Qa=/\u0000|\uFFFD/g;function Za(e){return("string"===typeof e?e:""+e).replace(Ya,"\n").replace(Qa,"")}function Ja(e,t,n){if(t=Za(t),Za(e)!==t&&n)throw Error(s(425))}function $a(){}var er=null,tr=null;function nr(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ar="function"===typeof setTimeout?setTimeout:void 0,rr="function"===typeof clearTimeout?clearTimeout:void 0,sr="function"===typeof Promise?Promise:void 0,or="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof sr?function(e){return sr.resolve(null).then(e).catch(ir)}:ar;function ir(e){setTimeout((function(){throw e}))}function ur(e,t){var n=t,a=0;do{var r=n.nextSibling;if(e.removeChild(n),r&&8===r.nodeType)if("/$"===(n=r.data)){if(0===a)return e.removeChild(r),void Ut(t);a--}else"$"!==n&&"$?"!==n&&"$!"!==n||a++;n=r}while(n);Ut(t)}function cr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function lr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var hr=Math.random().toString(36).slice(2),dr="__reactFiber$"+hr,pr="__reactProps$"+hr,fr="__reactContainer$"+hr,mr="__reactEvents$"+hr,gr="__reactListeners$"+hr,yr="__reactHandles$"+hr;function br(e){var t=e[dr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[fr]||n[dr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=lr(e);null!==e;){if(n=e[dr])return n;e=lr(e)}return t}n=(e=n).parentNode}return null}function vr(e){return!(e=e[dr]||e[fr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function xr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(s(33))}function wr(e){return e[pr]||null}var Dr=[],kr=-1;function Cr(e){return{current:e}}function Nr(e){0>kr||(e.current=Dr[kr],Dr[kr]=null,kr--)}function Sr(e,t){kr++,Dr[kr]=e.current,e.current=t}var Er={},Ir=Cr(Er),Tr=Cr(!1),Fr=Er;function Ar(e,t){var n=e.type.contextTypes;if(!n)return Er;var a=e.stateNode;if(a&&a.__reactInternalMemoizedUnmaskedChildContext===t)return a.__reactInternalMemoizedMaskedChildContext;var r,s={};for(r in n)s[r]=t[r];return a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=s),s}function Rr(e){return null!==(e=e.childContextTypes)&&void 0!==e}function _r(){Nr(Tr),Nr(Ir)}function Or(e,t,n){if(Ir.current!==Er)throw Error(s(168));Sr(Ir,t),Sr(Tr,n)}function Lr(e,t,n){var a=e.stateNode;if(t=t.childContextTypes,"function"!==typeof a.getChildContext)return n;for(var r in a=a.getChildContext())if(!(r in t))throw Error(s(108,G(e)||"Unknown",r));return z({},n,a)}function Mr(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Er,Fr=Ir.current,Sr(Ir,e),Sr(Tr,Tr.current),!0}function zr(e,t,n){var a=e.stateNode;if(!a)throw Error(s(169));n?(e=Lr(e,t,Fr),a.__reactInternalMemoizedMergedChildContext=e,Nr(Tr),Nr(Ir),Sr(Ir,e)):Nr(Tr),Sr(Tr,n)}var Br=null,Pr=!1,Wr=!1;function Vr(e){null===Br?Br=[e]:Br.push(e)}function Ur(){if(!Wr&&null!==Br){Wr=!0;var e=0,t=vt;try{var n=Br;for(vt=1;e<n.length;e++){var a=n[e];do{a=a(!0)}while(null!==a)}Br=null,Pr=!1}catch(r){throw null!==Br&&(Br=Br.slice(e+1)),Ke($e,Ur),r}finally{vt=t,Wr=!1}}return null}var Gr=[],Hr=0,jr=null,qr=0,Kr=[],Xr=0,Yr=null,Qr=1,Zr="";function Jr(e,t){Gr[Hr++]=qr,Gr[Hr++]=jr,jr=e,qr=t}function $r(e,t,n){Kr[Xr++]=Qr,Kr[Xr++]=Zr,Kr[Xr++]=Yr,Yr=e;var a=Qr;e=Zr;var r=32-ot(a)-1;a&=~(1<<r),n+=1;var s=32-ot(t)+r;if(30<s){var o=r-r%5;s=(a&(1<<o)-1).toString(32),a>>=o,r-=o,Qr=1<<32-ot(t)+r|n<<r|a,Zr=s+e}else Qr=1<<s|n<<r|a,Zr=e}function es(e){null!==e.return&&(Jr(e,1),$r(e,1,0))}function ts(e){for(;e===jr;)jr=Gr[--Hr],Gr[Hr]=null,qr=Gr[--Hr],Gr[Hr]=null;for(;e===Yr;)Yr=Kr[--Xr],Kr[Xr]=null,Zr=Kr[--Xr],Kr[Xr]=null,Qr=Kr[--Xr],Kr[Xr]=null}var ns=null,as=null,rs=!1,ss=null;function os(e,t){var n=Ac(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function is(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,ns=e,as=cr(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,ns=e,as=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Yr?{id:Qr,overflow:Zr}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Ac(18,null,null,0)).stateNode=t,n.return=e,e.child=n,ns=e,as=null,!0);default:return!1}}function us(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function cs(e){if(rs){var t=as;if(t){var n=t;if(!is(e,t)){if(us(e))throw Error(s(418));t=cr(n.nextSibling);var a=ns;t&&is(e,t)?os(a,n):(e.flags=-4097&e.flags|2,rs=!1,ns=e)}}else{if(us(e))throw Error(s(418));e.flags=-4097&e.flags|2,rs=!1,ns=e}}}function ls(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ns=e}function hs(e){if(e!==ns)return!1;if(!rs)return ls(e),rs=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!nr(e.type,e.memoizedProps)),t&&(t=as)){if(us(e))throw ds(),Error(s(418));for(;t;)os(e,t),t=cr(t.nextSibling)}if(ls(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(s(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){as=cr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}as=null}}else as=ns?cr(e.stateNode.nextSibling):null;return!0}function ds(){for(var e=as;e;)e=cr(e.nextSibling)}function ps(){as=ns=null,rs=!1}function fs(e){null===ss?ss=[e]:ss.push(e)}var ms=x.ReactCurrentBatchConfig;function gs(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(s(309));var a=n.stateNode}if(!a)throw Error(s(147,e));var r=a,o=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=r.refs;null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!==typeof e)throw Error(s(284));if(!n._owner)throw Error(s(290,e))}return e}function ys(e,t){throw e=Object.prototype.toString.call(t),Error(s(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function bs(e){return(0,e._init)(e._payload)}function vs(e){function t(t,n){if(e){var a=t.deletions;null===a?(t.deletions=[n],t.flags|=16):a.push(n)}}function n(n,a){if(!e)return null;for(;null!==a;)t(n,a),a=a.sibling;return null}function a(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function r(e,t){return(e=_c(e,t)).index=0,e.sibling=null,e}function o(t,n,a){return t.index=a,e?null!==(a=t.alternate)?(a=a.index)<n?(t.flags|=2,n):a:(t.flags|=2,n):(t.flags|=1048576,n)}function i(t){return e&&null===t.alternate&&(t.flags|=2),t}function u(e,t,n,a){return null===t||6!==t.tag?((t=zc(n,e.mode,a)).return=e,t):((t=r(t,n)).return=e,t)}function c(e,t,n,a){var s=n.type;return s===k?h(e,t,n.props.children,a,n.key):null!==t&&(t.elementType===s||"object"===typeof s&&null!==s&&s.$$typeof===R&&bs(s)===t.type)?((a=r(t,n.props)).ref=gs(e,t,n),a.return=e,a):((a=Oc(n.type,n.key,n.props,null,e.mode,a)).ref=gs(e,t,n),a.return=e,a)}function l(e,t,n,a){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Bc(n,e.mode,a)).return=e,t):((t=r(t,n.children||[])).return=e,t)}function h(e,t,n,a,s){return null===t||7!==t.tag?((t=Lc(n,e.mode,a,s)).return=e,t):((t=r(t,n)).return=e,t)}function d(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t)return(t=zc(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case w:return(n=Oc(t.type,t.key,t.props,null,e.mode,n)).ref=gs(e,null,t),n.return=e,n;case D:return(t=Bc(t,e.mode,n)).return=e,t;case R:return d(e,(0,t._init)(t._payload),n)}if(te(t)||L(t))return(t=Lc(t,e.mode,n,null)).return=e,t;ys(e,t)}return null}function p(e,t,n,a){var r=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n)return null!==r?null:u(e,t,""+n,a);if("object"===typeof n&&null!==n){switch(n.$$typeof){case w:return n.key===r?c(e,t,n,a):null;case D:return n.key===r?l(e,t,n,a):null;case R:return p(e,t,(r=n._init)(n._payload),a)}if(te(n)||L(n))return null!==r?null:h(e,t,n,a,null);ys(e,n)}return null}function f(e,t,n,a,r){if("string"===typeof a&&""!==a||"number"===typeof a)return u(t,e=e.get(n)||null,""+a,r);if("object"===typeof a&&null!==a){switch(a.$$typeof){case w:return c(t,e=e.get(null===a.key?n:a.key)||null,a,r);case D:return l(t,e=e.get(null===a.key?n:a.key)||null,a,r);case R:return f(e,t,n,(0,a._init)(a._payload),r)}if(te(a)||L(a))return h(t,e=e.get(n)||null,a,r,null);ys(t,a)}return null}function m(r,s,i,u){for(var c=null,l=null,h=s,m=s=0,g=null;null!==h&&m<i.length;m++){h.index>m?(g=h,h=null):g=h.sibling;var y=p(r,h,i[m],u);if(null===y){null===h&&(h=g);break}e&&h&&null===y.alternate&&t(r,h),s=o(y,s,m),null===l?c=y:l.sibling=y,l=y,h=g}if(m===i.length)return n(r,h),rs&&Jr(r,m),c;if(null===h){for(;m<i.length;m++)null!==(h=d(r,i[m],u))&&(s=o(h,s,m),null===l?c=h:l.sibling=h,l=h);return rs&&Jr(r,m),c}for(h=a(r,h);m<i.length;m++)null!==(g=f(h,r,m,i[m],u))&&(e&&null!==g.alternate&&h.delete(null===g.key?m:g.key),s=o(g,s,m),null===l?c=g:l.sibling=g,l=g);return e&&h.forEach((function(e){return t(r,e)})),rs&&Jr(r,m),c}function g(r,i,u,c){var l=L(u);if("function"!==typeof l)throw Error(s(150));if(null==(u=l.call(u)))throw Error(s(151));for(var h=l=null,m=i,g=i=0,y=null,b=u.next();null!==m&&!b.done;g++,b=u.next()){m.index>g?(y=m,m=null):y=m.sibling;var v=p(r,m,b.value,c);if(null===v){null===m&&(m=y);break}e&&m&&null===v.alternate&&t(r,m),i=o(v,i,g),null===h?l=v:h.sibling=v,h=v,m=y}if(b.done)return n(r,m),rs&&Jr(r,g),l;if(null===m){for(;!b.done;g++,b=u.next())null!==(b=d(r,b.value,c))&&(i=o(b,i,g),null===h?l=b:h.sibling=b,h=b);return rs&&Jr(r,g),l}for(m=a(r,m);!b.done;g++,b=u.next())null!==(b=f(m,r,g,b.value,c))&&(e&&null!==b.alternate&&m.delete(null===b.key?g:b.key),i=o(b,i,g),null===h?l=b:h.sibling=b,h=b);return e&&m.forEach((function(e){return t(r,e)})),rs&&Jr(r,g),l}return function e(a,s,o,u){if("object"===typeof o&&null!==o&&o.type===k&&null===o.key&&(o=o.props.children),"object"===typeof o&&null!==o){switch(o.$$typeof){case w:e:{for(var c=o.key,l=s;null!==l;){if(l.key===c){if((c=o.type)===k){if(7===l.tag){n(a,l.sibling),(s=r(l,o.props.children)).return=a,a=s;break e}}else if(l.elementType===c||"object"===typeof c&&null!==c&&c.$$typeof===R&&bs(c)===l.type){n(a,l.sibling),(s=r(l,o.props)).ref=gs(a,l,o),s.return=a,a=s;break e}n(a,l);break}t(a,l),l=l.sibling}o.type===k?((s=Lc(o.props.children,a.mode,u,o.key)).return=a,a=s):((u=Oc(o.type,o.key,o.props,null,a.mode,u)).ref=gs(a,s,o),u.return=a,a=u)}return i(a);case D:e:{for(l=o.key;null!==s;){if(s.key===l){if(4===s.tag&&s.stateNode.containerInfo===o.containerInfo&&s.stateNode.implementation===o.implementation){n(a,s.sibling),(s=r(s,o.children||[])).return=a,a=s;break e}n(a,s);break}t(a,s),s=s.sibling}(s=Bc(o,a.mode,u)).return=a,a=s}return i(a);case R:return e(a,s,(l=o._init)(o._payload),u)}if(te(o))return m(a,s,o,u);if(L(o))return g(a,s,o,u);ys(a,o)}return"string"===typeof o&&""!==o||"number"===typeof o?(o=""+o,null!==s&&6===s.tag?(n(a,s.sibling),(s=r(s,o)).return=a,a=s):(n(a,s),(s=zc(o,a.mode,u)).return=a,a=s),i(a)):n(a,s)}}var xs=vs(!0),ws=vs(!1),Ds=Cr(null),ks=null,Cs=null,Ns=null;function Ss(){Ns=Cs=ks=null}function Es(e){var t=Ds.current;Nr(Ds),e._currentValue=t}function Is(e,t,n){for(;null!==e;){var a=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==a&&(a.childLanes|=t)):null!==a&&(a.childLanes&t)!==t&&(a.childLanes|=t),e===n)break;e=e.return}}function Ts(e,t){ks=e,Ns=Cs=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(vi=!0),e.firstContext=null)}function Fs(e){var t=e._currentValue;if(Ns!==e)if(e={context:e,memoizedValue:t,next:null},null===Cs){if(null===ks)throw Error(s(308));Cs=e,ks.dependencies={lanes:0,firstContext:e}}else Cs=Cs.next=e;return t}var As=null;function Rs(e){null===As?As=[e]:As.push(e)}function _s(e,t,n,a){var r=t.interleaved;return null===r?(n.next=n,Rs(t)):(n.next=r.next,r.next=n),t.interleaved=n,Os(e,a)}function Os(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Ls=!1;function Ms(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function zs(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Bs(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Ps(e,t,n){var a=e.updateQueue;if(null===a)return null;if(a=a.shared,0!==(2&Iu)){var r=a.pending;return null===r?t.next=t:(t.next=r.next,r.next=t),a.pending=t,Os(e,n)}return null===(r=a.interleaved)?(t.next=t,Rs(a)):(t.next=r.next,r.next=t),a.interleaved=t,Os(e,n)}function Ws(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194240&n))){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,bt(e,n)}}function Vs(e,t){var n=e.updateQueue,a=e.alternate;if(null!==a&&n===(a=a.updateQueue)){var r=null,s=null;if(null!==(n=n.firstBaseUpdate)){do{var o={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===s?r=s=o:s=s.next=o,n=n.next}while(null!==n);null===s?r=s=t:s=s.next=t}else r=s=t;return n={baseState:a.baseState,firstBaseUpdate:r,lastBaseUpdate:s,shared:a.shared,effects:a.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Us(e,t,n,a){var r=e.updateQueue;Ls=!1;var s=r.firstBaseUpdate,o=r.lastBaseUpdate,i=r.shared.pending;if(null!==i){r.shared.pending=null;var u=i,c=u.next;u.next=null,null===o?s=c:o.next=c,o=u;var l=e.alternate;null!==l&&((i=(l=l.updateQueue).lastBaseUpdate)!==o&&(null===i?l.firstBaseUpdate=c:i.next=c,l.lastBaseUpdate=u))}if(null!==s){var h=r.baseState;for(o=0,l=c=u=null,i=s;;){var d=i.lane,p=i.eventTime;if((a&d)===d){null!==l&&(l=l.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var f=e,m=i;switch(d=t,p=n,m.tag){case 1:if("function"===typeof(f=m.payload)){h=f.call(p,h,d);break e}h=f;break e;case 3:f.flags=-65537&f.flags|128;case 0:if(null===(d="function"===typeof(f=m.payload)?f.call(p,h,d):f)||void 0===d)break e;h=z({},h,d);break e;case 2:Ls=!0}}null!==i.callback&&0!==i.lane&&(e.flags|=64,null===(d=r.effects)?r.effects=[i]:d.push(i))}else p={eventTime:p,lane:d,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===l?(c=l=p,u=h):l=l.next=p,o|=d;if(null===(i=i.next)){if(null===(i=r.shared.pending))break;i=(d=i).next,d.next=null,r.lastBaseUpdate=d,r.shared.pending=null}}if(null===l&&(u=h),r.baseState=u,r.firstBaseUpdate=c,r.lastBaseUpdate=l,null!==(t=r.shared.interleaved)){r=t;do{o|=r.lane,r=r.next}while(r!==t)}else null===s&&(r.shared.lanes=0);Mu|=o,e.lanes=o,e.memoizedState=h}}function Gs(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var a=e[t],r=a.callback;if(null!==r){if(a.callback=null,a=n,"function"!==typeof r)throw Error(s(191,r));r.call(a)}}}var Hs={},js=Cr(Hs),qs=Cr(Hs),Ks=Cr(Hs);function Xs(e){if(e===Hs)throw Error(s(174));return e}function Ys(e,t){switch(Sr(Ks,t),Sr(qs,e),Sr(js,Hs),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ue(null,"");break;default:t=ue(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Nr(js),Sr(js,t)}function Qs(){Nr(js),Nr(qs),Nr(Ks)}function Zs(e){Xs(Ks.current);var t=Xs(js.current),n=ue(t,e.type);t!==n&&(Sr(qs,e),Sr(js,n))}function Js(e){qs.current===e&&(Nr(js),Nr(qs))}var $s=Cr(0);function eo(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var to=[];function no(){for(var e=0;e<to.length;e++)to[e]._workInProgressVersionPrimary=null;to.length=0}var ao=x.ReactCurrentDispatcher,ro=x.ReactCurrentBatchConfig,so=0,oo=null,io=null,uo=null,co=!1,lo=!1,ho=0,po=0;function fo(){throw Error(s(321))}function mo(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ia(e[n],t[n]))return!1;return!0}function go(e,t,n,a,r,o){if(so=o,oo=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,ao.current=null===e||null===e.memoizedState?$o:ei,e=n(a,r),lo){o=0;do{if(lo=!1,ho=0,25<=o)throw Error(s(301));o+=1,uo=io=null,t.updateQueue=null,ao.current=ti,e=n(a,r)}while(lo)}if(ao.current=Jo,t=null!==io&&null!==io.next,so=0,uo=io=oo=null,co=!1,t)throw Error(s(300));return e}function yo(){var e=0!==ho;return ho=0,e}function bo(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===uo?oo.memoizedState=uo=e:uo=uo.next=e,uo}function vo(){if(null===io){var e=oo.alternate;e=null!==e?e.memoizedState:null}else e=io.next;var t=null===uo?oo.memoizedState:uo.next;if(null!==t)uo=t,io=e;else{if(null===e)throw Error(s(310));e={memoizedState:(io=e).memoizedState,baseState:io.baseState,baseQueue:io.baseQueue,queue:io.queue,next:null},null===uo?oo.memoizedState=uo=e:uo=uo.next=e}return uo}function xo(e,t){return"function"===typeof t?t(e):t}function wo(e){var t=vo(),n=t.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=e;var a=io,r=a.baseQueue,o=n.pending;if(null!==o){if(null!==r){var i=r.next;r.next=o.next,o.next=i}a.baseQueue=r=o,n.pending=null}if(null!==r){o=r.next,a=a.baseState;var u=i=null,c=null,l=o;do{var h=l.lane;if((so&h)===h)null!==c&&(c=c.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),a=l.hasEagerState?l.eagerState:e(a,l.action);else{var d={lane:h,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null};null===c?(u=c=d,i=a):c=c.next=d,oo.lanes|=h,Mu|=h}l=l.next}while(null!==l&&l!==o);null===c?i=a:c.next=u,ia(a,t.memoizedState)||(vi=!0),t.memoizedState=a,t.baseState=i,t.baseQueue=c,n.lastRenderedState=a}if(null!==(e=n.interleaved)){r=e;do{o=r.lane,oo.lanes|=o,Mu|=o,r=r.next}while(r!==e)}else null===r&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function Do(e){var t=vo(),n=t.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=e;var a=n.dispatch,r=n.pending,o=t.memoizedState;if(null!==r){n.pending=null;var i=r=r.next;do{o=e(o,i.action),i=i.next}while(i!==r);ia(o,t.memoizedState)||(vi=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,a]}function ko(){}function Co(e,t){var n=oo,a=vo(),r=t(),o=!ia(a.memoizedState,r);if(o&&(a.memoizedState=r,vi=!0),a=a.queue,Mo(Eo.bind(null,n,a,e),[e]),a.getSnapshot!==t||o||null!==uo&&1&uo.memoizedState.tag){if(n.flags|=2048,Ao(9,So.bind(null,n,a,r,t),void 0,null),null===Tu)throw Error(s(349));0!==(30&so)||No(n,t,r)}return r}function No(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=oo.updateQueue)?(t={lastEffect:null,stores:null},oo.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function So(e,t,n,a){t.value=n,t.getSnapshot=a,Io(t)&&To(e)}function Eo(e,t,n){return n((function(){Io(t)&&To(e)}))}function Io(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!ia(e,n)}catch(a){return!0}}function To(e){var t=Os(e,1);null!==t&&nc(t,e,1,-1)}function Fo(e){var t=bo();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:xo,lastRenderedState:e},t.queue=e,e=e.dispatch=Xo.bind(null,oo,e),[t.memoizedState,e]}function Ao(e,t,n,a){return e={tag:e,create:t,destroy:n,deps:a,next:null},null===(t=oo.updateQueue)?(t={lastEffect:null,stores:null},oo.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(a=n.next,n.next=e,e.next=a,t.lastEffect=e),e}function Ro(){return vo().memoizedState}function _o(e,t,n,a){var r=bo();oo.flags|=e,r.memoizedState=Ao(1|t,n,void 0,void 0===a?null:a)}function Oo(e,t,n,a){var r=vo();a=void 0===a?null:a;var s=void 0;if(null!==io){var o=io.memoizedState;if(s=o.destroy,null!==a&&mo(a,o.deps))return void(r.memoizedState=Ao(t,n,s,a))}oo.flags|=e,r.memoizedState=Ao(1|t,n,s,a)}function Lo(e,t){return _o(8390656,8,e,t)}function Mo(e,t){return Oo(2048,8,e,t)}function zo(e,t){return Oo(4,2,e,t)}function Bo(e,t){return Oo(4,4,e,t)}function Po(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Wo(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Oo(4,4,Po.bind(null,t,e),n)}function Vo(){}function Uo(e,t){var n=vo();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&mo(t,a[1])?a[0]:(n.memoizedState=[e,t],e)}function Go(e,t){var n=vo();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&mo(t,a[1])?a[0]:(e=e(),n.memoizedState=[e,t],e)}function Ho(e,t,n){return 0===(21&so)?(e.baseState&&(e.baseState=!1,vi=!0),e.memoizedState=n):(ia(n,t)||(n=mt(),oo.lanes|=n,Mu|=n,e.baseState=!0),t)}function jo(e,t){var n=vt;vt=0!==n&&4>n?n:4,e(!0);var a=ro.transition;ro.transition={};try{e(!1),t()}finally{vt=n,ro.transition=a}}function qo(){return vo().memoizedState}function Ko(e,t,n){var a=tc(e);if(n={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null},Yo(e))Qo(t,n);else if(null!==(n=_s(e,t,n,a))){nc(n,e,a,ec()),Zo(n,t,a)}}function Xo(e,t,n){var a=tc(e),r={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null};if(Yo(e))Qo(t,r);else{var s=e.alternate;if(0===e.lanes&&(null===s||0===s.lanes)&&null!==(s=t.lastRenderedReducer))try{var o=t.lastRenderedState,i=s(o,n);if(r.hasEagerState=!0,r.eagerState=i,ia(i,o)){var u=t.interleaved;return null===u?(r.next=r,Rs(t)):(r.next=u.next,u.next=r),void(t.interleaved=r)}}catch(c){}null!==(n=_s(e,t,r,a))&&(nc(n,e,a,r=ec()),Zo(n,t,a))}}function Yo(e){var t=e.alternate;return e===oo||null!==t&&t===oo}function Qo(e,t){lo=co=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Zo(e,t,n){if(0!==(4194240&n)){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,bt(e,n)}}var Jo={readContext:Fs,useCallback:fo,useContext:fo,useEffect:fo,useImperativeHandle:fo,useInsertionEffect:fo,useLayoutEffect:fo,useMemo:fo,useReducer:fo,useRef:fo,useState:fo,useDebugValue:fo,useDeferredValue:fo,useTransition:fo,useMutableSource:fo,useSyncExternalStore:fo,useId:fo,unstable_isNewReconciler:!1},$o={readContext:Fs,useCallback:function(e,t){return bo().memoizedState=[e,void 0===t?null:t],e},useContext:Fs,useEffect:Lo,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,_o(4194308,4,Po.bind(null,t,e),n)},useLayoutEffect:function(e,t){return _o(4194308,4,e,t)},useInsertionEffect:function(e,t){return _o(4,2,e,t)},useMemo:function(e,t){var n=bo();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var a=bo();return t=void 0!==n?n(t):t,a.memoizedState=a.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},a.queue=e,e=e.dispatch=Ko.bind(null,oo,e),[a.memoizedState,e]},useRef:function(e){return e={current:e},bo().memoizedState=e},useState:Fo,useDebugValue:Vo,useDeferredValue:function(e){return bo().memoizedState=e},useTransition:function(){var e=Fo(!1),t=e[0];return e=jo.bind(null,e[1]),bo().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var a=oo,r=bo();if(rs){if(void 0===n)throw Error(s(407));n=n()}else{if(n=t(),null===Tu)throw Error(s(349));0!==(30&so)||No(a,t,n)}r.memoizedState=n;var o={value:n,getSnapshot:t};return r.queue=o,Lo(Eo.bind(null,a,o,e),[e]),a.flags|=2048,Ao(9,So.bind(null,a,o,n,t),void 0,null),n},useId:function(){var e=bo(),t=Tu.identifierPrefix;if(rs){var n=Zr;t=":"+t+"R"+(n=(Qr&~(1<<32-ot(Qr)-1)).toString(32)+n),0<(n=ho++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=po++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},ei={readContext:Fs,useCallback:Uo,useContext:Fs,useEffect:Mo,useImperativeHandle:Wo,useInsertionEffect:zo,useLayoutEffect:Bo,useMemo:Go,useReducer:wo,useRef:Ro,useState:function(){return wo(xo)},useDebugValue:Vo,useDeferredValue:function(e){return Ho(vo(),io.memoizedState,e)},useTransition:function(){return[wo(xo)[0],vo().memoizedState]},useMutableSource:ko,useSyncExternalStore:Co,useId:qo,unstable_isNewReconciler:!1},ti={readContext:Fs,useCallback:Uo,useContext:Fs,useEffect:Mo,useImperativeHandle:Wo,useInsertionEffect:zo,useLayoutEffect:Bo,useMemo:Go,useReducer:Do,useRef:Ro,useState:function(){return Do(xo)},useDebugValue:Vo,useDeferredValue:function(e){var t=vo();return null===io?t.memoizedState=e:Ho(t,io.memoizedState,e)},useTransition:function(){return[Do(xo)[0],vo().memoizedState]},useMutableSource:ko,useSyncExternalStore:Co,useId:qo,unstable_isNewReconciler:!1};function ni(e,t){if(e&&e.defaultProps){for(var n in t=z({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}function ai(e,t,n,a){n=null===(n=n(a,t=e.memoizedState))||void 0===n?t:z({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var ri={isMounted:function(e){return!!(e=e._reactInternals)&&Ue(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var a=ec(),r=tc(e),s=Bs(a,r);s.payload=t,void 0!==n&&null!==n&&(s.callback=n),null!==(t=Ps(e,s,r))&&(nc(t,e,r,a),Ws(t,e,r))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var a=ec(),r=tc(e),s=Bs(a,r);s.tag=1,s.payload=t,void 0!==n&&null!==n&&(s.callback=n),null!==(t=Ps(e,s,r))&&(nc(t,e,r,a),Ws(t,e,r))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=ec(),a=tc(e),r=Bs(n,a);r.tag=2,void 0!==t&&null!==t&&(r.callback=t),null!==(t=Ps(e,r,a))&&(nc(t,e,a,n),Ws(t,e,a))}};function si(e,t,n,a,r,s,o){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(a,s,o):!t.prototype||!t.prototype.isPureReactComponent||(!ua(n,a)||!ua(r,s))}function oi(e,t,n){var a=!1,r=Er,s=t.contextType;return"object"===typeof s&&null!==s?s=Fs(s):(r=Rr(t)?Fr:Ir.current,s=(a=null!==(a=t.contextTypes)&&void 0!==a)?Ar(e,r):Er),t=new t(n,s),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ri,e.stateNode=t,t._reactInternals=e,a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,e.__reactInternalMemoizedMaskedChildContext=s),t}function ii(e,t,n,a){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,a),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,a),t.state!==e&&ri.enqueueReplaceState(t,t.state,null)}function ui(e,t,n,a){var r=e.stateNode;r.props=n,r.state=e.memoizedState,r.refs={},Ms(e);var s=t.contextType;"object"===typeof s&&null!==s?r.context=Fs(s):(s=Rr(t)?Fr:Ir.current,r.context=Ar(e,s)),r.state=e.memoizedState,"function"===typeof(s=t.getDerivedStateFromProps)&&(ai(e,t,s,n),r.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof r.getSnapshotBeforeUpdate||"function"!==typeof r.UNSAFE_componentWillMount&&"function"!==typeof r.componentWillMount||(t=r.state,"function"===typeof r.componentWillMount&&r.componentWillMount(),"function"===typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),t!==r.state&&ri.enqueueReplaceState(r,r.state,null),Us(e,n,r,a),r.state=e.memoizedState),"function"===typeof r.componentDidMount&&(e.flags|=4194308)}function ci(e,t){try{var n="",a=t;do{n+=V(a),a=a.return}while(a);var r=n}catch(s){r="\nError generating stack: "+s.message+"\n"+s.stack}return{value:e,source:t,stack:r,digest:null}}function li(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function hi(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}var di="function"===typeof WeakMap?WeakMap:Map;function pi(e,t,n){(n=Bs(-1,n)).tag=3,n.payload={element:null};var a=t.value;return n.callback=function(){Hu||(Hu=!0,ju=a),hi(0,t)},n}function fi(e,t,n){(n=Bs(-1,n)).tag=3;var a=e.type.getDerivedStateFromError;if("function"===typeof a){var r=t.value;n.payload=function(){return a(r)},n.callback=function(){hi(0,t)}}var s=e.stateNode;return null!==s&&"function"===typeof s.componentDidCatch&&(n.callback=function(){hi(0,t),"function"!==typeof a&&(null===qu?qu=new Set([this]):qu.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function mi(e,t,n){var a=e.pingCache;if(null===a){a=e.pingCache=new di;var r=new Set;a.set(t,r)}else void 0===(r=a.get(t))&&(r=new Set,a.set(t,r));r.has(n)||(r.add(n),e=Nc.bind(null,e,t,n),t.then(e,e))}function gi(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function yi(e,t,n,a,r){return 0===(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Bs(-1,1)).tag=2,Ps(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=r,e)}var bi=x.ReactCurrentOwner,vi=!1;function xi(e,t,n,a){t.child=null===e?ws(t,null,n,a):xs(t,e.child,n,a)}function wi(e,t,n,a,r){n=n.render;var s=t.ref;return Ts(t,r),a=go(e,t,n,a,s,r),n=yo(),null===e||vi?(rs&&n&&es(t),t.flags|=1,xi(e,t,a,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,Hi(e,t,r))}function Di(e,t,n,a,r){if(null===e){var s=n.type;return"function"!==typeof s||Rc(s)||void 0!==s.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Oc(n.type,null,a,t,t.mode,r)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=s,ki(e,t,s,a,r))}if(s=e.child,0===(e.lanes&r)){var o=s.memoizedProps;if((n=null!==(n=n.compare)?n:ua)(o,a)&&e.ref===t.ref)return Hi(e,t,r)}return t.flags|=1,(e=_c(s,a)).ref=t.ref,e.return=t,t.child=e}function ki(e,t,n,a,r){if(null!==e){var s=e.memoizedProps;if(ua(s,a)&&e.ref===t.ref){if(vi=!1,t.pendingProps=a=s,0===(e.lanes&r))return t.lanes=e.lanes,Hi(e,t,r);0!==(131072&e.flags)&&(vi=!0)}}return Si(e,t,n,a,r)}function Ci(e,t,n){var a=t.pendingProps,r=a.children,s=null!==e?e.memoizedState:null;if("hidden"===a.mode)if(0===(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Sr(_u,Ru),Ru|=n;else{if(0===(1073741824&n))return e=null!==s?s.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Sr(_u,Ru),Ru|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},a=null!==s?s.baseLanes:n,Sr(_u,Ru),Ru|=a}else null!==s?(a=s.baseLanes|n,t.memoizedState=null):a=n,Sr(_u,Ru),Ru|=a;return xi(e,t,r,n),t.child}function Ni(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Si(e,t,n,a,r){var s=Rr(n)?Fr:Ir.current;return s=Ar(t,s),Ts(t,r),n=go(e,t,n,a,s,r),a=yo(),null===e||vi?(rs&&a&&es(t),t.flags|=1,xi(e,t,n,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,Hi(e,t,r))}function Ei(e,t,n,a,r){if(Rr(n)){var s=!0;Mr(t)}else s=!1;if(Ts(t,r),null===t.stateNode)Gi(e,t),oi(t,n,a),ui(t,n,a,r),a=!0;else if(null===e){var o=t.stateNode,i=t.memoizedProps;o.props=i;var u=o.context,c=n.contextType;"object"===typeof c&&null!==c?c=Fs(c):c=Ar(t,c=Rr(n)?Fr:Ir.current);var l=n.getDerivedStateFromProps,h="function"===typeof l||"function"===typeof o.getSnapshotBeforeUpdate;h||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(i!==a||u!==c)&&ii(t,o,a,c),Ls=!1;var d=t.memoizedState;o.state=d,Us(t,a,o,r),u=t.memoizedState,i!==a||d!==u||Tr.current||Ls?("function"===typeof l&&(ai(t,n,l,a),u=t.memoizedState),(i=Ls||si(t,n,i,a,d,u,c))?(h||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||("function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"===typeof o.componentDidMount&&(t.flags|=4194308)):("function"===typeof o.componentDidMount&&(t.flags|=4194308),t.memoizedProps=a,t.memoizedState=u),o.props=a,o.state=u,o.context=c,a=i):("function"===typeof o.componentDidMount&&(t.flags|=4194308),a=!1)}else{o=t.stateNode,zs(e,t),i=t.memoizedProps,c=t.type===t.elementType?i:ni(t.type,i),o.props=c,h=t.pendingProps,d=o.context,"object"===typeof(u=n.contextType)&&null!==u?u=Fs(u):u=Ar(t,u=Rr(n)?Fr:Ir.current);var p=n.getDerivedStateFromProps;(l="function"===typeof p||"function"===typeof o.getSnapshotBeforeUpdate)||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(i!==h||d!==u)&&ii(t,o,a,u),Ls=!1,d=t.memoizedState,o.state=d,Us(t,a,o,r);var f=t.memoizedState;i!==h||d!==f||Tr.current||Ls?("function"===typeof p&&(ai(t,n,p,a),f=t.memoizedState),(c=Ls||si(t,n,c,a,d,f,u)||!1)?(l||"function"!==typeof o.UNSAFE_componentWillUpdate&&"function"!==typeof o.componentWillUpdate||("function"===typeof o.componentWillUpdate&&o.componentWillUpdate(a,f,u),"function"===typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(a,f,u)),"function"===typeof o.componentDidUpdate&&(t.flags|=4),"function"===typeof o.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof o.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),t.memoizedProps=a,t.memoizedState=f),o.props=a,o.state=f,o.context=u,a=c):("function"!==typeof o.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),a=!1)}return Ii(e,t,n,a,s,r)}function Ii(e,t,n,a,r,s){Ni(e,t);var o=0!==(128&t.flags);if(!a&&!o)return r&&zr(t,n,!1),Hi(e,t,s);a=t.stateNode,bi.current=t;var i=o&&"function"!==typeof n.getDerivedStateFromError?null:a.render();return t.flags|=1,null!==e&&o?(t.child=xs(t,e.child,null,s),t.child=xs(t,null,i,s)):xi(e,t,i,s),t.memoizedState=a.state,r&&zr(t,n,!0),t.child}function Ti(e){var t=e.stateNode;t.pendingContext?Or(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Or(0,t.context,!1),Ys(e,t.containerInfo)}function Fi(e,t,n,a,r){return ps(),fs(r),t.flags|=256,xi(e,t,n,a),t.child}var Ai,Ri,_i,Oi,Li={dehydrated:null,treeContext:null,retryLane:0};function Mi(e){return{baseLanes:e,cachePool:null,transitions:null}}function zi(e,t,n){var a,r=t.pendingProps,o=$s.current,i=!1,u=0!==(128&t.flags);if((a=u)||(a=(null===e||null!==e.memoizedState)&&0!==(2&o)),a?(i=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(o|=1),Sr($s,1&o),null===e)return cs(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(u=r.children,e=r.fallback,i?(r=t.mode,i=t.child,u={mode:"hidden",children:u},0===(1&r)&&null!==i?(i.childLanes=0,i.pendingProps=u):i=Mc(u,r,0,null),e=Lc(e,r,n,null),i.return=t,e.return=t,i.sibling=e,t.child=i,t.child.memoizedState=Mi(n),t.memoizedState=Li,e):Bi(t,u));if(null!==(o=e.memoizedState)&&null!==(a=o.dehydrated))return function(e,t,n,a,r,o,i){if(n)return 256&t.flags?(t.flags&=-257,Pi(e,t,i,a=li(Error(s(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(o=a.fallback,r=t.mode,a=Mc({mode:"visible",children:a.children},r,0,null),(o=Lc(o,r,i,null)).flags|=2,a.return=t,o.return=t,a.sibling=o,t.child=a,0!==(1&t.mode)&&xs(t,e.child,null,i),t.child.memoizedState=Mi(i),t.memoizedState=Li,o);if(0===(1&t.mode))return Pi(e,t,i,null);if("$!"===r.data){if(a=r.nextSibling&&r.nextSibling.dataset)var u=a.dgst;return a=u,Pi(e,t,i,a=li(o=Error(s(419)),a,void 0))}if(u=0!==(i&e.childLanes),vi||u){if(null!==(a=Tu)){switch(i&-i){case 4:r=2;break;case 16:r=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:r=32;break;case 536870912:r=268435456;break;default:r=0}0!==(r=0!==(r&(a.suspendedLanes|i))?0:r)&&r!==o.retryLane&&(o.retryLane=r,Os(e,r),nc(a,e,r,-1))}return mc(),Pi(e,t,i,a=li(Error(s(421))))}return"$?"===r.data?(t.flags|=128,t.child=e.child,t=Ec.bind(null,e),r._reactRetry=t,null):(e=o.treeContext,as=cr(r.nextSibling),ns=t,rs=!0,ss=null,null!==e&&(Kr[Xr++]=Qr,Kr[Xr++]=Zr,Kr[Xr++]=Yr,Qr=e.id,Zr=e.overflow,Yr=t),t=Bi(t,a.children),t.flags|=4096,t)}(e,t,u,r,a,o,n);if(i){i=r.fallback,u=t.mode,a=(o=e.child).sibling;var c={mode:"hidden",children:r.children};return 0===(1&u)&&t.child!==o?((r=t.child).childLanes=0,r.pendingProps=c,t.deletions=null):(r=_c(o,c)).subtreeFlags=14680064&o.subtreeFlags,null!==a?i=_c(a,i):(i=Lc(i,u,n,null)).flags|=2,i.return=t,r.return=t,r.sibling=i,t.child=r,r=i,i=t.child,u=null===(u=e.child.memoizedState)?Mi(n):{baseLanes:u.baseLanes|n,cachePool:null,transitions:u.transitions},i.memoizedState=u,i.childLanes=e.childLanes&~n,t.memoizedState=Li,r}return e=(i=e.child).sibling,r=_c(i,{mode:"visible",children:r.children}),0===(1&t.mode)&&(r.lanes=n),r.return=t,r.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=r,t.memoizedState=null,r}function Bi(e,t){return(t=Mc({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Pi(e,t,n,a){return null!==a&&fs(a),xs(t,e.child,null,n),(e=Bi(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Wi(e,t,n){e.lanes|=t;var a=e.alternate;null!==a&&(a.lanes|=t),Is(e.return,t,n)}function Vi(e,t,n,a,r){var s=e.memoizedState;null===s?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:a,tail:n,tailMode:r}:(s.isBackwards=t,s.rendering=null,s.renderingStartTime=0,s.last=a,s.tail=n,s.tailMode=r)}function Ui(e,t,n){var a=t.pendingProps,r=a.revealOrder,s=a.tail;if(xi(e,t,a.children,n),0!==(2&(a=$s.current)))a=1&a|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Wi(e,n,t);else if(19===e.tag)Wi(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}a&=1}if(Sr($s,a),0===(1&t.mode))t.memoizedState=null;else switch(r){case"forwards":for(n=t.child,r=null;null!==n;)null!==(e=n.alternate)&&null===eo(e)&&(r=n),n=n.sibling;null===(n=r)?(r=t.child,t.child=null):(r=n.sibling,n.sibling=null),Vi(t,!1,r,n,s);break;case"backwards":for(n=null,r=t.child,t.child=null;null!==r;){if(null!==(e=r.alternate)&&null===eo(e)){t.child=r;break}e=r.sibling,r.sibling=n,n=r,r=e}Vi(t,!0,n,null,s);break;case"together":Vi(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Gi(e,t){0===(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Hi(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Mu|=t.lanes,0===(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(s(153));if(null!==t.child){for(n=_c(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=_c(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function ji(e,t){if(!rs)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var a=null;null!==n;)null!==n.alternate&&(a=n),n=n.sibling;null===a?t||null===e.tail?e.tail=null:e.tail.sibling=null:a.sibling=null}}function qi(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,a=0;if(t)for(var r=e.child;null!==r;)n|=r.lanes|r.childLanes,a|=14680064&r.subtreeFlags,a|=14680064&r.flags,r.return=e,r=r.sibling;else for(r=e.child;null!==r;)n|=r.lanes|r.childLanes,a|=r.subtreeFlags,a|=r.flags,r.return=e,r=r.sibling;return e.subtreeFlags|=a,e.childLanes=n,t}function Ki(e,t,n){var a=t.pendingProps;switch(ts(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return qi(t),null;case 1:case 17:return Rr(t.type)&&_r(),qi(t),null;case 3:return a=t.stateNode,Qs(),Nr(Tr),Nr(Ir),no(),a.pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),null!==e&&null!==e.child||(hs(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,null!==ss&&(oc(ss),ss=null))),Ri(e,t),qi(t),null;case 5:Js(t);var r=Xs(Ks.current);if(n=t.type,null!==e&&null!=t.stateNode)_i(e,t,n,a,r),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!a){if(null===t.stateNode)throw Error(s(166));return qi(t),null}if(e=Xs(js.current),hs(t)){a=t.stateNode,n=t.type;var o=t.memoizedProps;switch(a[dr]=t,a[pr]=o,e=0!==(1&t.mode),n){case"dialog":Pa("cancel",a),Pa("close",a);break;case"iframe":case"object":case"embed":Pa("load",a);break;case"video":case"audio":for(r=0;r<La.length;r++)Pa(La[r],a);break;case"source":Pa("error",a);break;case"img":case"image":case"link":Pa("error",a),Pa("load",a);break;case"details":Pa("toggle",a);break;case"input":Q(a,o),Pa("invalid",a);break;case"select":a._wrapperState={wasMultiple:!!o.multiple},Pa("invalid",a);break;case"textarea":re(a,o),Pa("invalid",a)}for(var u in be(n,o),r=null,o)if(o.hasOwnProperty(u)){var c=o[u];"children"===u?"string"===typeof c?a.textContent!==c&&(!0!==o.suppressHydrationWarning&&Ja(a.textContent,c,e),r=["children",c]):"number"===typeof c&&a.textContent!==""+c&&(!0!==o.suppressHydrationWarning&&Ja(a.textContent,c,e),r=["children",""+c]):i.hasOwnProperty(u)&&null!=c&&"onScroll"===u&&Pa("scroll",a)}switch(n){case"input":q(a),$(a,o,!0);break;case"textarea":q(a),oe(a);break;case"select":case"option":break;default:"function"===typeof o.onClick&&(a.onclick=$a)}a=r,t.updateQueue=a,null!==a&&(t.flags|=4)}else{u=9===r.nodeType?r:r.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ie(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof a.is?e=u.createElement(n,{is:a.is}):(e=u.createElement(n),"select"===n&&(u=e,a.multiple?u.multiple=!0:a.size&&(u.size=a.size))):e=u.createElementNS(e,n),e[dr]=t,e[pr]=a,Ai(e,t,!1,!1),t.stateNode=e;e:{switch(u=ve(n,a),n){case"dialog":Pa("cancel",e),Pa("close",e),r=a;break;case"iframe":case"object":case"embed":Pa("load",e),r=a;break;case"video":case"audio":for(r=0;r<La.length;r++)Pa(La[r],e);r=a;break;case"source":Pa("error",e),r=a;break;case"img":case"image":case"link":Pa("error",e),Pa("load",e),r=a;break;case"details":Pa("toggle",e),r=a;break;case"input":Q(e,a),r=Y(e,a),Pa("invalid",e);break;case"option":default:r=a;break;case"select":e._wrapperState={wasMultiple:!!a.multiple},r=z({},a,{value:void 0}),Pa("invalid",e);break;case"textarea":re(e,a),r=ae(e,a),Pa("invalid",e)}for(o in be(n,r),c=r)if(c.hasOwnProperty(o)){var l=c[o];"style"===o?ge(e,l):"dangerouslySetInnerHTML"===o?null!=(l=l?l.__html:void 0)&&he(e,l):"children"===o?"string"===typeof l?("textarea"!==n||""!==l)&&de(e,l):"number"===typeof l&&de(e,""+l):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(i.hasOwnProperty(o)?null!=l&&"onScroll"===o&&Pa("scroll",e):null!=l&&v(e,o,l,u))}switch(n){case"input":q(e),$(e,a,!1);break;case"textarea":q(e),oe(e);break;case"option":null!=a.value&&e.setAttribute("value",""+H(a.value));break;case"select":e.multiple=!!a.multiple,null!=(o=a.value)?ne(e,!!a.multiple,o,!1):null!=a.defaultValue&&ne(e,!!a.multiple,a.defaultValue,!0);break;default:"function"===typeof r.onClick&&(e.onclick=$a)}switch(n){case"button":case"input":case"select":case"textarea":a=!!a.autoFocus;break e;case"img":a=!0;break e;default:a=!1}}a&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return qi(t),null;case 6:if(e&&null!=t.stateNode)Oi(e,t,e.memoizedProps,a);else{if("string"!==typeof a&&null===t.stateNode)throw Error(s(166));if(n=Xs(Ks.current),Xs(js.current),hs(t)){if(a=t.stateNode,n=t.memoizedProps,a[dr]=t,(o=a.nodeValue!==n)&&null!==(e=ns))switch(e.tag){case 3:Ja(a.nodeValue,n,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Ja(a.nodeValue,n,0!==(1&e.mode))}o&&(t.flags|=4)}else(a=(9===n.nodeType?n:n.ownerDocument).createTextNode(a))[dr]=t,t.stateNode=a}return qi(t),null;case 13:if(Nr($s),a=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(rs&&null!==as&&0!==(1&t.mode)&&0===(128&t.flags))ds(),ps(),t.flags|=98560,o=!1;else if(o=hs(t),null!==a&&null!==a.dehydrated){if(null===e){if(!o)throw Error(s(318));if(!(o=null!==(o=t.memoizedState)?o.dehydrated:null))throw Error(s(317));o[dr]=t}else ps(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;qi(t),o=!1}else null!==ss&&(oc(ss),ss=null),o=!0;if(!o)return 65536&t.flags?t:null}return 0!==(128&t.flags)?(t.lanes=n,t):((a=null!==a)!==(null!==e&&null!==e.memoizedState)&&a&&(t.child.flags|=8192,0!==(1&t.mode)&&(null===e||0!==(1&$s.current)?0===Ou&&(Ou=3):mc())),null!==t.updateQueue&&(t.flags|=4),qi(t),null);case 4:return Qs(),Ri(e,t),null===e&&Ua(t.stateNode.containerInfo),qi(t),null;case 10:return Es(t.type._context),qi(t),null;case 19:if(Nr($s),null===(o=t.memoizedState))return qi(t),null;if(a=0!==(128&t.flags),null===(u=o.rendering))if(a)ji(o,!1);else{if(0!==Ou||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(u=eo(e))){for(t.flags|=128,ji(o,!1),null!==(a=u.updateQueue)&&(t.updateQueue=a,t.flags|=4),t.subtreeFlags=0,a=n,n=t.child;null!==n;)e=a,(o=n).flags&=14680066,null===(u=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=u.childLanes,o.lanes=u.lanes,o.child=u.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=u.memoizedProps,o.memoizedState=u.memoizedState,o.updateQueue=u.updateQueue,o.type=u.type,e=u.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Sr($s,1&$s.current|2),t.child}e=e.sibling}null!==o.tail&&Ze()>Uu&&(t.flags|=128,a=!0,ji(o,!1),t.lanes=4194304)}else{if(!a)if(null!==(e=eo(u))){if(t.flags|=128,a=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),ji(o,!0),null===o.tail&&"hidden"===o.tailMode&&!u.alternate&&!rs)return qi(t),null}else 2*Ze()-o.renderingStartTime>Uu&&1073741824!==n&&(t.flags|=128,a=!0,ji(o,!1),t.lanes=4194304);o.isBackwards?(u.sibling=t.child,t.child=u):(null!==(n=o.last)?n.sibling=u:t.child=u,o.last=u)}return null!==o.tail?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=Ze(),t.sibling=null,n=$s.current,Sr($s,a?1&n|2:1&n),t):(qi(t),null);case 22:case 23:return hc(),a=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==a&&(t.flags|=8192),a&&0!==(1&t.mode)?0!==(1073741824&Ru)&&(qi(t),6&t.subtreeFlags&&(t.flags|=8192)):qi(t),null;case 24:case 25:return null}throw Error(s(156,t.tag))}function Xi(e,t){switch(ts(t),t.tag){case 1:return Rr(t.type)&&_r(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return Qs(),Nr(Tr),Nr(Ir),no(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 5:return Js(t),null;case 13:if(Nr($s),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(s(340));ps()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Nr($s),null;case 4:return Qs(),null;case 10:return Es(t.type._context),null;case 22:case 23:return hc(),null;default:return null}}Ai=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ri=function(){},_i=function(e,t,n,a){var r=e.memoizedProps;if(r!==a){e=t.stateNode,Xs(js.current);var s,o=null;switch(n){case"input":r=Y(e,r),a=Y(e,a),o=[];break;case"select":r=z({},r,{value:void 0}),a=z({},a,{value:void 0}),o=[];break;case"textarea":r=ae(e,r),a=ae(e,a),o=[];break;default:"function"!==typeof r.onClick&&"function"===typeof a.onClick&&(e.onclick=$a)}for(l in be(n,a),n=null,r)if(!a.hasOwnProperty(l)&&r.hasOwnProperty(l)&&null!=r[l])if("style"===l){var u=r[l];for(s in u)u.hasOwnProperty(s)&&(n||(n={}),n[s]="")}else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(i.hasOwnProperty(l)?o||(o=[]):(o=o||[]).push(l,null));for(l in a){var c=a[l];if(u=null!=r?r[l]:void 0,a.hasOwnProperty(l)&&c!==u&&(null!=c||null!=u))if("style"===l)if(u){for(s in u)!u.hasOwnProperty(s)||c&&c.hasOwnProperty(s)||(n||(n={}),n[s]="");for(s in c)c.hasOwnProperty(s)&&u[s]!==c[s]&&(n||(n={}),n[s]=c[s])}else n||(o||(o=[]),o.push(l,n)),n=c;else"dangerouslySetInnerHTML"===l?(c=c?c.__html:void 0,u=u?u.__html:void 0,null!=c&&u!==c&&(o=o||[]).push(l,c)):"children"===l?"string"!==typeof c&&"number"!==typeof c||(o=o||[]).push(l,""+c):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(i.hasOwnProperty(l)?(null!=c&&"onScroll"===l&&Pa("scroll",e),o||u===c||(o=[])):(o=o||[]).push(l,c))}n&&(o=o||[]).push("style",n);var l=o;(t.updateQueue=l)&&(t.flags|=4)}},Oi=function(e,t,n,a){n!==a&&(t.flags|=4)};var Yi=!1,Qi=!1,Zi="function"===typeof WeakSet?WeakSet:Set,Ji=null;function $i(e,t){var n=e.ref;if(null!==n)if("function"===typeof n)try{n(null)}catch(a){Cc(e,t,a)}else n.current=null}function eu(e,t,n){try{n()}catch(a){Cc(e,t,a)}}var tu=!1;function nu(e,t,n){var a=t.updateQueue;if(null!==(a=null!==a?a.lastEffect:null)){var r=a=a.next;do{if((r.tag&e)===e){var s=r.destroy;r.destroy=void 0,void 0!==s&&eu(t,n,s)}r=r.next}while(r!==a)}}function au(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var a=n.create;n.destroy=a()}n=n.next}while(n!==t)}}function ru(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"===typeof t?t(e):t.current=e}}function su(e){var t=e.alternate;null!==t&&(e.alternate=null,su(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[dr],delete t[pr],delete t[mr],delete t[gr],delete t[yr])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function ou(e){return 5===e.tag||3===e.tag||4===e.tag}function iu(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||ou(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function uu(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=$a));else if(4!==a&&null!==(e=e.child))for(uu(e,t,n),e=e.sibling;null!==e;)uu(e,t,n),e=e.sibling}function cu(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==a&&null!==(e=e.child))for(cu(e,t,n),e=e.sibling;null!==e;)cu(e,t,n),e=e.sibling}var lu=null,hu=!1;function du(e,t,n){for(n=n.child;null!==n;)pu(e,t,n),n=n.sibling}function pu(e,t,n){if(st&&"function"===typeof st.onCommitFiberUnmount)try{st.onCommitFiberUnmount(rt,n)}catch(i){}switch(n.tag){case 5:Qi||$i(n,t);case 6:var a=lu,r=hu;lu=null,du(e,t,n),hu=r,null!==(lu=a)&&(hu?(e=lu,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):lu.removeChild(n.stateNode));break;case 18:null!==lu&&(hu?(e=lu,n=n.stateNode,8===e.nodeType?ur(e.parentNode,n):1===e.nodeType&&ur(e,n),Ut(e)):ur(lu,n.stateNode));break;case 4:a=lu,r=hu,lu=n.stateNode.containerInfo,hu=!0,du(e,t,n),lu=a,hu=r;break;case 0:case 11:case 14:case 15:if(!Qi&&(null!==(a=n.updateQueue)&&null!==(a=a.lastEffect))){r=a=a.next;do{var s=r,o=s.destroy;s=s.tag,void 0!==o&&(0!==(2&s)||0!==(4&s))&&eu(n,t,o),r=r.next}while(r!==a)}du(e,t,n);break;case 1:if(!Qi&&($i(n,t),"function"===typeof(a=n.stateNode).componentWillUnmount))try{a.props=n.memoizedProps,a.state=n.memoizedState,a.componentWillUnmount()}catch(i){Cc(n,t,i)}du(e,t,n);break;case 21:du(e,t,n);break;case 22:1&n.mode?(Qi=(a=Qi)||null!==n.memoizedState,du(e,t,n),Qi=a):du(e,t,n);break;default:du(e,t,n)}}function fu(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Zi),t.forEach((function(t){var a=Ic.bind(null,e,t);n.has(t)||(n.add(t),t.then(a,a))}))}}function mu(e,t){var n=t.deletions;if(null!==n)for(var a=0;a<n.length;a++){var r=n[a];try{var o=e,i=t,u=i;e:for(;null!==u;){switch(u.tag){case 5:lu=u.stateNode,hu=!1;break e;case 3:case 4:lu=u.stateNode.containerInfo,hu=!0;break e}u=u.return}if(null===lu)throw Error(s(160));pu(o,i,r),lu=null,hu=!1;var c=r.alternate;null!==c&&(c.return=null),r.return=null}catch(l){Cc(r,t,l)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)gu(t,e),t=t.sibling}function gu(e,t){var n=e.alternate,a=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(mu(t,e),yu(e),4&a){try{nu(3,e,e.return),au(3,e)}catch(g){Cc(e,e.return,g)}try{nu(5,e,e.return)}catch(g){Cc(e,e.return,g)}}break;case 1:mu(t,e),yu(e),512&a&&null!==n&&$i(n,n.return);break;case 5:if(mu(t,e),yu(e),512&a&&null!==n&&$i(n,n.return),32&e.flags){var r=e.stateNode;try{de(r,"")}catch(g){Cc(e,e.return,g)}}if(4&a&&null!=(r=e.stateNode)){var o=e.memoizedProps,i=null!==n?n.memoizedProps:o,u=e.type,c=e.updateQueue;if(e.updateQueue=null,null!==c)try{"input"===u&&"radio"===o.type&&null!=o.name&&Z(r,o),ve(u,i);var l=ve(u,o);for(i=0;i<c.length;i+=2){var h=c[i],d=c[i+1];"style"===h?ge(r,d):"dangerouslySetInnerHTML"===h?he(r,d):"children"===h?de(r,d):v(r,h,d,l)}switch(u){case"input":J(r,o);break;case"textarea":se(r,o);break;case"select":var p=r._wrapperState.wasMultiple;r._wrapperState.wasMultiple=!!o.multiple;var f=o.value;null!=f?ne(r,!!o.multiple,f,!1):p!==!!o.multiple&&(null!=o.defaultValue?ne(r,!!o.multiple,o.defaultValue,!0):ne(r,!!o.multiple,o.multiple?[]:"",!1))}r[pr]=o}catch(g){Cc(e,e.return,g)}}break;case 6:if(mu(t,e),yu(e),4&a){if(null===e.stateNode)throw Error(s(162));r=e.stateNode,o=e.memoizedProps;try{r.nodeValue=o}catch(g){Cc(e,e.return,g)}}break;case 3:if(mu(t,e),yu(e),4&a&&null!==n&&n.memoizedState.isDehydrated)try{Ut(t.containerInfo)}catch(g){Cc(e,e.return,g)}break;case 4:default:mu(t,e),yu(e);break;case 13:mu(t,e),yu(e),8192&(r=e.child).flags&&(o=null!==r.memoizedState,r.stateNode.isHidden=o,!o||null!==r.alternate&&null!==r.alternate.memoizedState||(Vu=Ze())),4&a&&fu(e);break;case 22:if(h=null!==n&&null!==n.memoizedState,1&e.mode?(Qi=(l=Qi)||h,mu(t,e),Qi=l):mu(t,e),yu(e),8192&a){if(l=null!==e.memoizedState,(e.stateNode.isHidden=l)&&!h&&0!==(1&e.mode))for(Ji=e,h=e.child;null!==h;){for(d=Ji=h;null!==Ji;){switch(f=(p=Ji).child,p.tag){case 0:case 11:case 14:case 15:nu(4,p,p.return);break;case 1:$i(p,p.return);var m=p.stateNode;if("function"===typeof m.componentWillUnmount){a=p,n=p.return;try{t=a,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(g){Cc(a,n,g)}}break;case 5:$i(p,p.return);break;case 22:if(null!==p.memoizedState){wu(d);continue}}null!==f?(f.return=p,Ji=f):wu(d)}h=h.sibling}e:for(h=null,d=e;;){if(5===d.tag){if(null===h){h=d;try{r=d.stateNode,l?"function"===typeof(o=r.style).setProperty?o.setProperty("display","none","important"):o.display="none":(u=d.stateNode,i=void 0!==(c=d.memoizedProps.style)&&null!==c&&c.hasOwnProperty("display")?c.display:null,u.style.display=me("display",i))}catch(g){Cc(e,e.return,g)}}}else if(6===d.tag){if(null===h)try{d.stateNode.nodeValue=l?"":d.memoizedProps}catch(g){Cc(e,e.return,g)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===e)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;null===d.sibling;){if(null===d.return||d.return===e)break e;h===d&&(h=null),d=d.return}h===d&&(h=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:mu(t,e),yu(e),4&a&&fu(e);case 21:}}function yu(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(ou(n)){var a=n;break e}n=n.return}throw Error(s(160))}switch(a.tag){case 5:var r=a.stateNode;32&a.flags&&(de(r,""),a.flags&=-33),cu(e,iu(e),r);break;case 3:case 4:var o=a.stateNode.containerInfo;uu(e,iu(e),o);break;default:throw Error(s(161))}}catch(i){Cc(e,e.return,i)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function bu(e,t,n){Ji=e,vu(e,t,n)}function vu(e,t,n){for(var a=0!==(1&e.mode);null!==Ji;){var r=Ji,s=r.child;if(22===r.tag&&a){var o=null!==r.memoizedState||Yi;if(!o){var i=r.alternate,u=null!==i&&null!==i.memoizedState||Qi;i=Yi;var c=Qi;if(Yi=o,(Qi=u)&&!c)for(Ji=r;null!==Ji;)u=(o=Ji).child,22===o.tag&&null!==o.memoizedState?Du(r):null!==u?(u.return=o,Ji=u):Du(r);for(;null!==s;)Ji=s,vu(s,t,n),s=s.sibling;Ji=r,Yi=i,Qi=c}xu(e)}else 0!==(8772&r.subtreeFlags)&&null!==s?(s.return=r,Ji=s):xu(e)}}function xu(e){for(;null!==Ji;){var t=Ji;if(0!==(8772&t.flags)){var n=t.alternate;try{if(0!==(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Qi||au(5,t);break;case 1:var a=t.stateNode;if(4&t.flags&&!Qi)if(null===n)a.componentDidMount();else{var r=t.elementType===t.type?n.memoizedProps:ni(t.type,n.memoizedProps);a.componentDidUpdate(r,n.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}var o=t.updateQueue;null!==o&&Gs(t,o,a);break;case 3:var i=t.updateQueue;if(null!==i){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Gs(t,i,n)}break;case 5:var u=t.stateNode;if(null===n&&4&t.flags){n=u;var c=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&n.focus();break;case"img":c.src&&(n.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var l=t.alternate;if(null!==l){var h=l.memoizedState;if(null!==h){var d=h.dehydrated;null!==d&&Ut(d)}}}break;default:throw Error(s(163))}Qi||512&t.flags&&ru(t)}catch(p){Cc(t,t.return,p)}}if(t===e){Ji=null;break}if(null!==(n=t.sibling)){n.return=t.return,Ji=n;break}Ji=t.return}}function wu(e){for(;null!==Ji;){var t=Ji;if(t===e){Ji=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Ji=n;break}Ji=t.return}}function Du(e){for(;null!==Ji;){var t=Ji;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{au(4,t)}catch(u){Cc(t,n,u)}break;case 1:var a=t.stateNode;if("function"===typeof a.componentDidMount){var r=t.return;try{a.componentDidMount()}catch(u){Cc(t,r,u)}}var s=t.return;try{ru(t)}catch(u){Cc(t,s,u)}break;case 5:var o=t.return;try{ru(t)}catch(u){Cc(t,o,u)}}}catch(u){Cc(t,t.return,u)}if(t===e){Ji=null;break}var i=t.sibling;if(null!==i){i.return=t.return,Ji=i;break}Ji=t.return}}var ku,Cu=Math.ceil,Nu=x.ReactCurrentDispatcher,Su=x.ReactCurrentOwner,Eu=x.ReactCurrentBatchConfig,Iu=0,Tu=null,Fu=null,Au=0,Ru=0,_u=Cr(0),Ou=0,Lu=null,Mu=0,zu=0,Bu=0,Pu=null,Wu=null,Vu=0,Uu=1/0,Gu=null,Hu=!1,ju=null,qu=null,Ku=!1,Xu=null,Yu=0,Qu=0,Zu=null,Ju=-1,$u=0;function ec(){return 0!==(6&Iu)?Ze():-1!==Ju?Ju:Ju=Ze()}function tc(e){return 0===(1&e.mode)?1:0!==(2&Iu)&&0!==Au?Au&-Au:null!==ms.transition?(0===$u&&($u=mt()),$u):0!==(e=vt)?e:e=void 0===(e=window.event)?16:Qt(e.type)}function nc(e,t,n,a){if(50<Qu)throw Qu=0,Zu=null,Error(s(185));yt(e,n,a),0!==(2&Iu)&&e===Tu||(e===Tu&&(0===(2&Iu)&&(zu|=n),4===Ou&&ic(e,Au)),ac(e,a),1===n&&0===Iu&&0===(1&t.mode)&&(Uu=Ze()+500,Pr&&Ur()))}function ac(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,a=e.pingedLanes,r=e.expirationTimes,s=e.pendingLanes;0<s;){var o=31-ot(s),i=1<<o,u=r[o];-1===u?0!==(i&n)&&0===(i&a)||(r[o]=pt(i,t)):u<=t&&(e.expiredLanes|=i),s&=~i}}(e,t);var a=dt(e,e===Tu?Au:0);if(0===a)null!==n&&Xe(n),e.callbackNode=null,e.callbackPriority=0;else if(t=a&-a,e.callbackPriority!==t){if(null!=n&&Xe(n),1===t)0===e.tag?function(e){Pr=!0,Vr(e)}(uc.bind(null,e)):Vr(uc.bind(null,e)),or((function(){0===(6&Iu)&&Ur()})),n=null;else{switch(xt(a)){case 1:n=$e;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=at}n=Tc(n,rc.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function rc(e,t){if(Ju=-1,$u=0,0!==(6&Iu))throw Error(s(327));var n=e.callbackNode;if(Dc()&&e.callbackNode!==n)return null;var a=dt(e,e===Tu?Au:0);if(0===a)return null;if(0!==(30&a)||0!==(a&e.expiredLanes)||t)t=gc(e,a);else{t=a;var r=Iu;Iu|=2;var o=fc();for(Tu===e&&Au===t||(Gu=null,Uu=Ze()+500,dc(e,t));;)try{bc();break}catch(u){pc(e,u)}Ss(),Nu.current=o,Iu=r,null!==Fu?t=0:(Tu=null,Au=0,t=Ou)}if(0!==t){if(2===t&&(0!==(r=ft(e))&&(a=r,t=sc(e,r))),1===t)throw n=Lu,dc(e,0),ic(e,a),ac(e,Ze()),n;if(6===t)ic(e,a);else{if(r=e.current.alternate,0===(30&a)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var a=0;a<n.length;a++){var r=n[a],s=r.getSnapshot;r=r.value;try{if(!ia(s(),r))return!1}catch(i){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(r)&&(2===(t=gc(e,a))&&(0!==(o=ft(e))&&(a=o,t=sc(e,o))),1===t))throw n=Lu,dc(e,0),ic(e,a),ac(e,Ze()),n;switch(e.finishedWork=r,e.finishedLanes=a,t){case 0:case 1:throw Error(s(345));case 2:case 5:wc(e,Wu,Gu);break;case 3:if(ic(e,a),(130023424&a)===a&&10<(t=Vu+500-Ze())){if(0!==dt(e,0))break;if(((r=e.suspendedLanes)&a)!==a){ec(),e.pingedLanes|=e.suspendedLanes&r;break}e.timeoutHandle=ar(wc.bind(null,e,Wu,Gu),t);break}wc(e,Wu,Gu);break;case 4:if(ic(e,a),(4194240&a)===a)break;for(t=e.eventTimes,r=-1;0<a;){var i=31-ot(a);o=1<<i,(i=t[i])>r&&(r=i),a&=~o}if(a=r,10<(a=(120>(a=Ze()-a)?120:480>a?480:1080>a?1080:1920>a?1920:3e3>a?3e3:4320>a?4320:1960*Cu(a/1960))-a)){e.timeoutHandle=ar(wc.bind(null,e,Wu,Gu),a);break}wc(e,Wu,Gu);break;default:throw Error(s(329))}}}return ac(e,Ze()),e.callbackNode===n?rc.bind(null,e):null}function sc(e,t){var n=Pu;return e.current.memoizedState.isDehydrated&&(dc(e,t).flags|=256),2!==(e=gc(e,t))&&(t=Wu,Wu=n,null!==t&&oc(t)),e}function oc(e){null===Wu?Wu=e:Wu.push.apply(Wu,e)}function ic(e,t){for(t&=~Bu,t&=~zu,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-ot(t),a=1<<n;e[n]=-1,t&=~a}}function uc(e){if(0!==(6&Iu))throw Error(s(327));Dc();var t=dt(e,0);if(0===(1&t))return ac(e,Ze()),null;var n=gc(e,t);if(0!==e.tag&&2===n){var a=ft(e);0!==a&&(t=a,n=sc(e,a))}if(1===n)throw n=Lu,dc(e,0),ic(e,t),ac(e,Ze()),n;if(6===n)throw Error(s(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,wc(e,Wu,Gu),ac(e,Ze()),null}function cc(e,t){var n=Iu;Iu|=1;try{return e(t)}finally{0===(Iu=n)&&(Uu=Ze()+500,Pr&&Ur())}}function lc(e){null!==Xu&&0===Xu.tag&&0===(6&Iu)&&Dc();var t=Iu;Iu|=1;var n=Eu.transition,a=vt;try{if(Eu.transition=null,vt=1,e)return e()}finally{vt=a,Eu.transition=n,0===(6&(Iu=t))&&Ur()}}function hc(){Ru=_u.current,Nr(_u)}function dc(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,rr(n)),null!==Fu)for(n=Fu.return;null!==n;){var a=n;switch(ts(a),a.tag){case 1:null!==(a=a.type.childContextTypes)&&void 0!==a&&_r();break;case 3:Qs(),Nr(Tr),Nr(Ir),no();break;case 5:Js(a);break;case 4:Qs();break;case 13:case 19:Nr($s);break;case 10:Es(a.type._context);break;case 22:case 23:hc()}n=n.return}if(Tu=e,Fu=e=_c(e.current,null),Au=Ru=t,Ou=0,Lu=null,Bu=zu=Mu=0,Wu=Pu=null,null!==As){for(t=0;t<As.length;t++)if(null!==(a=(n=As[t]).interleaved)){n.interleaved=null;var r=a.next,s=n.pending;if(null!==s){var o=s.next;s.next=r,a.next=o}n.pending=a}As=null}return e}function pc(e,t){for(;;){var n=Fu;try{if(Ss(),ao.current=Jo,co){for(var a=oo.memoizedState;null!==a;){var r=a.queue;null!==r&&(r.pending=null),a=a.next}co=!1}if(so=0,uo=io=oo=null,lo=!1,ho=0,Su.current=null,null===n||null===n.return){Ou=1,Lu=t,Fu=null;break}e:{var o=e,i=n.return,u=n,c=t;if(t=Au,u.flags|=32768,null!==c&&"object"===typeof c&&"function"===typeof c.then){var l=c,h=u,d=h.tag;if(0===(1&h.mode)&&(0===d||11===d||15===d)){var p=h.alternate;p?(h.updateQueue=p.updateQueue,h.memoizedState=p.memoizedState,h.lanes=p.lanes):(h.updateQueue=null,h.memoizedState=null)}var f=gi(i);if(null!==f){f.flags&=-257,yi(f,i,u,0,t),1&f.mode&&mi(o,l,t),c=l;var m=(t=f).updateQueue;if(null===m){var g=new Set;g.add(c),t.updateQueue=g}else m.add(c);break e}if(0===(1&t)){mi(o,l,t),mc();break e}c=Error(s(426))}else if(rs&&1&u.mode){var y=gi(i);if(null!==y){0===(65536&y.flags)&&(y.flags|=256),yi(y,i,u,0,t),fs(ci(c,u));break e}}o=c=ci(c,u),4!==Ou&&(Ou=2),null===Pu?Pu=[o]:Pu.push(o),o=i;do{switch(o.tag){case 3:o.flags|=65536,t&=-t,o.lanes|=t,Vs(o,pi(0,c,t));break e;case 1:u=c;var b=o.type,v=o.stateNode;if(0===(128&o.flags)&&("function"===typeof b.getDerivedStateFromError||null!==v&&"function"===typeof v.componentDidCatch&&(null===qu||!qu.has(v)))){o.flags|=65536,t&=-t,o.lanes|=t,Vs(o,fi(o,u,t));break e}}o=o.return}while(null!==o)}xc(n)}catch(x){t=x,Fu===n&&null!==n&&(Fu=n=n.return);continue}break}}function fc(){var e=Nu.current;return Nu.current=Jo,null===e?Jo:e}function mc(){0!==Ou&&3!==Ou&&2!==Ou||(Ou=4),null===Tu||0===(268435455&Mu)&&0===(268435455&zu)||ic(Tu,Au)}function gc(e,t){var n=Iu;Iu|=2;var a=fc();for(Tu===e&&Au===t||(Gu=null,dc(e,t));;)try{yc();break}catch(r){pc(e,r)}if(Ss(),Iu=n,Nu.current=a,null!==Fu)throw Error(s(261));return Tu=null,Au=0,Ou}function yc(){for(;null!==Fu;)vc(Fu)}function bc(){for(;null!==Fu&&!Ye();)vc(Fu)}function vc(e){var t=ku(e.alternate,e,Ru);e.memoizedProps=e.pendingProps,null===t?xc(e):Fu=t,Su.current=null}function xc(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(32768&t.flags)){if(null!==(n=Ki(n,t,Ru)))return void(Fu=n)}else{if(null!==(n=Xi(n,t)))return n.flags&=32767,void(Fu=n);if(null===e)return Ou=6,void(Fu=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Fu=t);Fu=t=e}while(null!==t);0===Ou&&(Ou=5)}function wc(e,t,n){var a=vt,r=Eu.transition;try{Eu.transition=null,vt=1,function(e,t,n,a){do{Dc()}while(null!==Xu);if(0!==(6&Iu))throw Error(s(327));n=e.finishedWork;var r=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(s(177));e.callbackNode=null,e.callbackPriority=0;var o=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var a=e.eventTimes;for(e=e.expirationTimes;0<n;){var r=31-ot(n),s=1<<r;t[r]=0,a[r]=-1,e[r]=-1,n&=~s}}(e,o),e===Tu&&(Fu=Tu=null,Au=0),0===(2064&n.subtreeFlags)&&0===(2064&n.flags)||Ku||(Ku=!0,Tc(tt,(function(){return Dc(),null}))),o=0!==(15990&n.flags),0!==(15990&n.subtreeFlags)||o){o=Eu.transition,Eu.transition=null;var i=vt;vt=1;var u=Iu;Iu|=4,Su.current=null,function(e,t){if(er=Ht,pa(e=da())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var a=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(a&&0!==a.rangeCount){n=a.anchorNode;var r=a.anchorOffset,o=a.focusNode;a=a.focusOffset;try{n.nodeType,o.nodeType}catch(w){n=null;break e}var i=0,u=-1,c=-1,l=0,h=0,d=e,p=null;t:for(;;){for(var f;d!==n||0!==r&&3!==d.nodeType||(u=i+r),d!==o||0!==a&&3!==d.nodeType||(c=i+a),3===d.nodeType&&(i+=d.nodeValue.length),null!==(f=d.firstChild);)p=d,d=f;for(;;){if(d===e)break t;if(p===n&&++l===r&&(u=i),p===o&&++h===a&&(c=i),null!==(f=d.nextSibling))break;p=(d=p).parentNode}d=f}n=-1===u||-1===c?null:{start:u,end:c}}else n=null}n=n||{start:0,end:0}}else n=null;for(tr={focusedElem:e,selectionRange:n},Ht=!1,Ji=t;null!==Ji;)if(e=(t=Ji).child,0!==(1028&t.subtreeFlags)&&null!==e)e.return=t,Ji=e;else for(;null!==Ji;){t=Ji;try{var m=t.alternate;if(0!==(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var g=m.memoizedProps,y=m.memoizedState,b=t.stateNode,v=b.getSnapshotBeforeUpdate(t.elementType===t.type?g:ni(t.type,g),y);b.__reactInternalSnapshotBeforeUpdate=v}break;case 3:var x=t.stateNode.containerInfo;1===x.nodeType?x.textContent="":9===x.nodeType&&x.documentElement&&x.removeChild(x.documentElement);break;default:throw Error(s(163))}}catch(w){Cc(t,t.return,w)}if(null!==(e=t.sibling)){e.return=t.return,Ji=e;break}Ji=t.return}m=tu,tu=!1}(e,n),gu(n,e),fa(tr),Ht=!!er,tr=er=null,e.current=n,bu(n,e,r),Qe(),Iu=u,vt=i,Eu.transition=o}else e.current=n;if(Ku&&(Ku=!1,Xu=e,Yu=r),o=e.pendingLanes,0===o&&(qu=null),function(e){if(st&&"function"===typeof st.onCommitFiberRoot)try{st.onCommitFiberRoot(rt,e,void 0,128===(128&e.current.flags))}catch(t){}}(n.stateNode),ac(e,Ze()),null!==t)for(a=e.onRecoverableError,n=0;n<t.length;n++)r=t[n],a(r.value,{componentStack:r.stack,digest:r.digest});if(Hu)throw Hu=!1,e=ju,ju=null,e;0!==(1&Yu)&&0!==e.tag&&Dc(),o=e.pendingLanes,0!==(1&o)?e===Zu?Qu++:(Qu=0,Zu=e):Qu=0,Ur()}(e,t,n,a)}finally{Eu.transition=r,vt=a}return null}function Dc(){if(null!==Xu){var e=xt(Yu),t=Eu.transition,n=vt;try{if(Eu.transition=null,vt=16>e?16:e,null===Xu)var a=!1;else{if(e=Xu,Xu=null,Yu=0,0!==(6&Iu))throw Error(s(331));var r=Iu;for(Iu|=4,Ji=e.current;null!==Ji;){var o=Ji,i=o.child;if(0!==(16&Ji.flags)){var u=o.deletions;if(null!==u){for(var c=0;c<u.length;c++){var l=u[c];for(Ji=l;null!==Ji;){var h=Ji;switch(h.tag){case 0:case 11:case 15:nu(8,h,o)}var d=h.child;if(null!==d)d.return=h,Ji=d;else for(;null!==Ji;){var p=(h=Ji).sibling,f=h.return;if(su(h),h===l){Ji=null;break}if(null!==p){p.return=f,Ji=p;break}Ji=f}}}var m=o.alternate;if(null!==m){var g=m.child;if(null!==g){m.child=null;do{var y=g.sibling;g.sibling=null,g=y}while(null!==g)}}Ji=o}}if(0!==(2064&o.subtreeFlags)&&null!==i)i.return=o,Ji=i;else e:for(;null!==Ji;){if(0!==(2048&(o=Ji).flags))switch(o.tag){case 0:case 11:case 15:nu(9,o,o.return)}var b=o.sibling;if(null!==b){b.return=o.return,Ji=b;break e}Ji=o.return}}var v=e.current;for(Ji=v;null!==Ji;){var x=(i=Ji).child;if(0!==(2064&i.subtreeFlags)&&null!==x)x.return=i,Ji=x;else e:for(i=v;null!==Ji;){if(0!==(2048&(u=Ji).flags))try{switch(u.tag){case 0:case 11:case 15:au(9,u)}}catch(D){Cc(u,u.return,D)}if(u===i){Ji=null;break e}var w=u.sibling;if(null!==w){w.return=u.return,Ji=w;break e}Ji=u.return}}if(Iu=r,Ur(),st&&"function"===typeof st.onPostCommitFiberRoot)try{st.onPostCommitFiberRoot(rt,e)}catch(D){}a=!0}return a}finally{vt=n,Eu.transition=t}}return!1}function kc(e,t,n){e=Ps(e,t=pi(0,t=ci(n,t),1),1),t=ec(),null!==e&&(yt(e,1,t),ac(e,t))}function Cc(e,t,n){if(3===e.tag)kc(e,e,n);else for(;null!==t;){if(3===t.tag){kc(t,e,n);break}if(1===t.tag){var a=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof a.componentDidCatch&&(null===qu||!qu.has(a))){t=Ps(t,e=fi(t,e=ci(n,e),1),1),e=ec(),null!==t&&(yt(t,1,e),ac(t,e));break}}t=t.return}}function Nc(e,t,n){var a=e.pingCache;null!==a&&a.delete(t),t=ec(),e.pingedLanes|=e.suspendedLanes&n,Tu===e&&(Au&n)===n&&(4===Ou||3===Ou&&(130023424&Au)===Au&&500>Ze()-Vu?dc(e,0):Bu|=n),ac(e,t)}function Sc(e,t){0===t&&(0===(1&e.mode)?t=1:(t=lt,0===(130023424&(lt<<=1))&&(lt=4194304)));var n=ec();null!==(e=Os(e,t))&&(yt(e,t,n),ac(e,n))}function Ec(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Sc(e,n)}function Ic(e,t){var n=0;switch(e.tag){case 13:var a=e.stateNode,r=e.memoizedState;null!==r&&(n=r.retryLane);break;case 19:a=e.stateNode;break;default:throw Error(s(314))}null!==a&&a.delete(t),Sc(e,n)}function Tc(e,t){return Ke(e,t)}function Fc(e,t,n,a){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=a,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Ac(e,t,n,a){return new Fc(e,t,n,a)}function Rc(e){return!(!(e=e.prototype)||!e.isReactComponent)}function _c(e,t){var n=e.alternate;return null===n?((n=Ac(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Oc(e,t,n,a,r,o){var i=2;if(a=e,"function"===typeof e)Rc(e)&&(i=1);else if("string"===typeof e)i=5;else e:switch(e){case k:return Lc(n.children,r,o,t);case C:i=8,r|=8;break;case N:return(e=Ac(12,n,t,2|r)).elementType=N,e.lanes=o,e;case T:return(e=Ac(13,n,t,r)).elementType=T,e.lanes=o,e;case F:return(e=Ac(19,n,t,r)).elementType=F,e.lanes=o,e;case _:return Mc(n,r,o,t);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case S:i=10;break e;case E:i=9;break e;case I:i=11;break e;case A:i=14;break e;case R:i=16,a=null;break e}throw Error(s(130,null==e?e:typeof e,""))}return(t=Ac(i,n,t,r)).elementType=e,t.type=a,t.lanes=o,t}function Lc(e,t,n,a){return(e=Ac(7,e,a,t)).lanes=n,e}function Mc(e,t,n,a){return(e=Ac(22,e,a,t)).elementType=_,e.lanes=n,e.stateNode={isHidden:!1},e}function zc(e,t,n){return(e=Ac(6,e,null,t)).lanes=n,e}function Bc(e,t,n){return(t=Ac(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Pc(e,t,n,a,r){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=a,this.onRecoverableError=r,this.mutableSourceEagerHydrationData=null}function Wc(e,t,n,a,r,s,o,i,u){return e=new Pc(e,t,n,i,u),1===t?(t=1,!0===s&&(t|=8)):t=0,s=Ac(3,null,null,t),e.current=s,s.stateNode=e,s.memoizedState={element:a,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Ms(s),e}function Vc(e){if(!e)return Er;e:{if(Ue(e=e._reactInternals)!==e||1!==e.tag)throw Error(s(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Rr(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(s(171))}if(1===e.tag){var n=e.type;if(Rr(n))return Lr(e,n,t)}return t}function Uc(e,t,n,a,r,s,o,i,u){return(e=Wc(n,a,!0,e,0,s,0,i,u)).context=Vc(null),n=e.current,(s=Bs(a=ec(),r=tc(n))).callback=void 0!==t&&null!==t?t:null,Ps(n,s,r),e.current.lanes=r,yt(e,r,a),ac(e,a),e}function Gc(e,t,n,a){var r=t.current,s=ec(),o=tc(r);return n=Vc(n),null===t.context?t.context=n:t.pendingContext=n,(t=Bs(s,o)).payload={element:e},null!==(a=void 0===a?null:a)&&(t.callback=a),null!==(e=Ps(r,t,o))&&(nc(e,r,o,s),Ws(e,r,o)),o}function Hc(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function jc(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function qc(e,t){jc(e,t),(e=e.alternate)&&jc(e,t)}ku=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Tr.current)vi=!0;else{if(0===(e.lanes&n)&&0===(128&t.flags))return vi=!1,function(e,t,n){switch(t.tag){case 3:Ti(t),ps();break;case 5:Zs(t);break;case 1:Rr(t.type)&&Mr(t);break;case 4:Ys(t,t.stateNode.containerInfo);break;case 10:var a=t.type._context,r=t.memoizedProps.value;Sr(Ds,a._currentValue),a._currentValue=r;break;case 13:if(null!==(a=t.memoizedState))return null!==a.dehydrated?(Sr($s,1&$s.current),t.flags|=128,null):0!==(n&t.child.childLanes)?zi(e,t,n):(Sr($s,1&$s.current),null!==(e=Hi(e,t,n))?e.sibling:null);Sr($s,1&$s.current);break;case 19:if(a=0!==(n&t.childLanes),0!==(128&e.flags)){if(a)return Ui(e,t,n);t.flags|=128}if(null!==(r=t.memoizedState)&&(r.rendering=null,r.tail=null,r.lastEffect=null),Sr($s,$s.current),a)break;return null;case 22:case 23:return t.lanes=0,Ci(e,t,n)}return Hi(e,t,n)}(e,t,n);vi=0!==(131072&e.flags)}else vi=!1,rs&&0!==(1048576&t.flags)&&$r(t,qr,t.index);switch(t.lanes=0,t.tag){case 2:var a=t.type;Gi(e,t),e=t.pendingProps;var r=Ar(t,Ir.current);Ts(t,n),r=go(null,t,a,e,r,n);var o=yo();return t.flags|=1,"object"===typeof r&&null!==r&&"function"===typeof r.render&&void 0===r.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Rr(a)?(o=!0,Mr(t)):o=!1,t.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,Ms(t),r.updater=ri,t.stateNode=r,r._reactInternals=t,ui(t,a,e,n),t=Ii(null,t,a,!0,o,n)):(t.tag=0,rs&&o&&es(t),xi(null,t,r,n),t=t.child),t;case 16:a=t.elementType;e:{switch(Gi(e,t),e=t.pendingProps,a=(r=a._init)(a._payload),t.type=a,r=t.tag=function(e){if("function"===typeof e)return Rc(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===I)return 11;if(e===A)return 14}return 2}(a),e=ni(a,e),r){case 0:t=Si(null,t,a,e,n);break e;case 1:t=Ei(null,t,a,e,n);break e;case 11:t=wi(null,t,a,e,n);break e;case 14:t=Di(null,t,a,ni(a.type,e),n);break e}throw Error(s(306,a,""))}return t;case 0:return a=t.type,r=t.pendingProps,Si(e,t,a,r=t.elementType===a?r:ni(a,r),n);case 1:return a=t.type,r=t.pendingProps,Ei(e,t,a,r=t.elementType===a?r:ni(a,r),n);case 3:e:{if(Ti(t),null===e)throw Error(s(387));a=t.pendingProps,r=(o=t.memoizedState).element,zs(e,t),Us(t,a,null,n);var i=t.memoizedState;if(a=i.element,o.isDehydrated){if(o={element:a,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},t.updateQueue.baseState=o,t.memoizedState=o,256&t.flags){t=Fi(e,t,a,n,r=ci(Error(s(423)),t));break e}if(a!==r){t=Fi(e,t,a,n,r=ci(Error(s(424)),t));break e}for(as=cr(t.stateNode.containerInfo.firstChild),ns=t,rs=!0,ss=null,n=ws(t,null,a,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(ps(),a===r){t=Hi(e,t,n);break e}xi(e,t,a,n)}t=t.child}return t;case 5:return Zs(t),null===e&&cs(t),a=t.type,r=t.pendingProps,o=null!==e?e.memoizedProps:null,i=r.children,nr(a,r)?i=null:null!==o&&nr(a,o)&&(t.flags|=32),Ni(e,t),xi(e,t,i,n),t.child;case 6:return null===e&&cs(t),null;case 13:return zi(e,t,n);case 4:return Ys(t,t.stateNode.containerInfo),a=t.pendingProps,null===e?t.child=xs(t,null,a,n):xi(e,t,a,n),t.child;case 11:return a=t.type,r=t.pendingProps,wi(e,t,a,r=t.elementType===a?r:ni(a,r),n);case 7:return xi(e,t,t.pendingProps,n),t.child;case 8:case 12:return xi(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(a=t.type._context,r=t.pendingProps,o=t.memoizedProps,i=r.value,Sr(Ds,a._currentValue),a._currentValue=i,null!==o)if(ia(o.value,i)){if(o.children===r.children&&!Tr.current){t=Hi(e,t,n);break e}}else for(null!==(o=t.child)&&(o.return=t);null!==o;){var u=o.dependencies;if(null!==u){i=o.child;for(var c=u.firstContext;null!==c;){if(c.context===a){if(1===o.tag){(c=Bs(-1,n&-n)).tag=2;var l=o.updateQueue;if(null!==l){var h=(l=l.shared).pending;null===h?c.next=c:(c.next=h.next,h.next=c),l.pending=c}}o.lanes|=n,null!==(c=o.alternate)&&(c.lanes|=n),Is(o.return,n,t),u.lanes|=n;break}c=c.next}}else if(10===o.tag)i=o.type===t.type?null:o.child;else if(18===o.tag){if(null===(i=o.return))throw Error(s(341));i.lanes|=n,null!==(u=i.alternate)&&(u.lanes|=n),Is(i,n,t),i=o.sibling}else i=o.child;if(null!==i)i.return=o;else for(i=o;null!==i;){if(i===t){i=null;break}if(null!==(o=i.sibling)){o.return=i.return,i=o;break}i=i.return}o=i}xi(e,t,r.children,n),t=t.child}return t;case 9:return r=t.type,a=t.pendingProps.children,Ts(t,n),a=a(r=Fs(r)),t.flags|=1,xi(e,t,a,n),t.child;case 14:return r=ni(a=t.type,t.pendingProps),Di(e,t,a,r=ni(a.type,r),n);case 15:return ki(e,t,t.type,t.pendingProps,n);case 17:return a=t.type,r=t.pendingProps,r=t.elementType===a?r:ni(a,r),Gi(e,t),t.tag=1,Rr(a)?(e=!0,Mr(t)):e=!1,Ts(t,n),oi(t,a,r),ui(t,a,r,n),Ii(null,t,a,!0,e,n);case 19:return Ui(e,t,n);case 22:return Ci(e,t,n)}throw Error(s(156,t.tag))};var Kc="function"===typeof reportError?reportError:function(e){console.error(e)};function Xc(e){this._internalRoot=e}function Yc(e){this._internalRoot=e}function Qc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Zc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Jc(){}function $c(e,t,n,a,r){var s=n._reactRootContainer;if(s){var o=s;if("function"===typeof r){var i=r;r=function(){var e=Hc(o);i.call(e)}}Gc(t,o,e,r)}else o=function(e,t,n,a,r){if(r){if("function"===typeof a){var s=a;a=function(){var e=Hc(o);s.call(e)}}var o=Uc(t,a,e,0,null,!1,0,"",Jc);return e._reactRootContainer=o,e[fr]=o.current,Ua(8===e.nodeType?e.parentNode:e),lc(),o}for(;r=e.lastChild;)e.removeChild(r);if("function"===typeof a){var i=a;a=function(){var e=Hc(u);i.call(e)}}var u=Wc(e,0,!1,null,0,!1,0,"",Jc);return e._reactRootContainer=u,e[fr]=u.current,Ua(8===e.nodeType?e.parentNode:e),lc((function(){Gc(t,u,n,a)})),u}(n,t,e,r,a);return Hc(o)}Yc.prototype.render=Xc.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(s(409));Gc(e,t,null,null)},Yc.prototype.unmount=Xc.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;lc((function(){Gc(null,e,null,null)})),t[fr]=null}},Yc.prototype.unstable_scheduleHydration=function(e){if(e){var t=Ct();e={blockedOn:null,target:e,priority:t};for(var n=0;n<_t.length&&0!==t&&t<_t[n].priority;n++);_t.splice(n,0,e),0===n&&zt(e)}},wt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=ht(t.pendingLanes);0!==n&&(bt(t,1|n),ac(t,Ze()),0===(6&Iu)&&(Uu=Ze()+500,Ur()))}break;case 13:lc((function(){var t=Os(e,1);if(null!==t){var n=ec();nc(t,e,1,n)}})),qc(e,1)}},Dt=function(e){if(13===e.tag){var t=Os(e,134217728);if(null!==t)nc(t,e,134217728,ec());qc(e,134217728)}},kt=function(e){if(13===e.tag){var t=tc(e),n=Os(e,t);if(null!==n)nc(n,e,t,ec());qc(e,t)}},Ct=function(){return vt},Nt=function(e,t){var n=vt;try{return vt=e,t()}finally{vt=n}},De=function(e,t,n){switch(t){case"input":if(J(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var a=n[t];if(a!==e&&a.form===e.form){var r=wr(a);if(!r)throw Error(s(90));K(a),J(a,r)}}}break;case"textarea":se(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Ie=cc,Te=lc;var el={usingClientEntryPoint:!1,Events:[vr,xr,wr,Se,Ee,cc]},tl={findFiberByHostInstance:br,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},nl={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:x.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=je(e))?null:e.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var al=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!al.isDisabled&&al.supportsFiber)try{rt=al.inject(nl),st=al}catch(le){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=el,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Qc(t))throw Error(s(200));return function(e,t,n){var a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:D,key:null==a?null:""+a,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Qc(e))throw Error(s(299));var n=!1,a="",r=Kc;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(a=t.identifierPrefix),void 0!==t.onRecoverableError&&(r=t.onRecoverableError)),t=Wc(e,1,!1,null,0,n,0,a,r),e[fr]=t.current,Ua(8===e.nodeType?e.parentNode:e),new Xc(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(s(188));throw e=Object.keys(e).join(","),Error(s(268,e))}return e=null===(e=je(t))?null:e.stateNode},t.flushSync=function(e){return lc(e)},t.hydrate=function(e,t,n){if(!Zc(t))throw Error(s(200));return $c(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Qc(e))throw Error(s(405));var a=null!=n&&n.hydratedSources||null,r=!1,o="",i=Kc;if(null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(r=!0),void 0!==n.identifierPrefix&&(o=n.identifierPrefix),void 0!==n.onRecoverableError&&(i=n.onRecoverableError)),t=Uc(t,null,e,1,null!=n?n:null,r,0,o,i),e[fr]=t.current,Ua(e),a)for(e=0;e<a.length;e++)r=(r=(n=a[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,r]:t.mutableSourceEagerHydrationData.push(n,r);return new Yc(t)},t.render=function(e,t,n){if(!Zc(t))throw Error(s(200));return $c(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Zc(e))throw Error(s(40));return!!e._reactRootContainer&&(lc((function(){$c(null,null,e,!1,(function(){e._reactRootContainer=null,e[fr]=null}))})),!0)},t.unstable_batchedUpdates=cc,t.unstable_renderSubtreeIntoContainer=function(e,t,n,a){if(!Zc(n))throw Error(s(200));if(null==e||void 0===e._reactInternals)throw Error(s(38));return $c(e,t,n,!1,a)},t.version="18.3.1-next-f1338f8080-20240426"},391:(e,t,n)=>{"use strict";var a=n(950);t.createRoot=a.createRoot,t.hydrateRoot=a.hydrateRoot},950:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(730)},153:(e,t,n)=>{"use strict";var a=n(43),r=Symbol.for("react.element"),s=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,i=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,u={key:!0,ref:!0,__self:!0,__source:!0};function c(e,t,n){var a,s={},c=null,l=null;for(a in void 0!==n&&(c=""+n),void 0!==t.key&&(c=""+t.key),void 0!==t.ref&&(l=t.ref),t)o.call(t,a)&&!u.hasOwnProperty(a)&&(s[a]=t[a]);if(e&&e.defaultProps)for(a in t=e.defaultProps)void 0===s[a]&&(s[a]=t[a]);return{$$typeof:r,type:e,key:c,ref:l,props:s,_owner:i.current}}t.jsx=c,t.jsxs=c},202:(e,t)=>{"use strict";var n=Symbol.for("react.element"),a=Symbol.for("react.portal"),r=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),i=Symbol.for("react.provider"),u=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),l=Symbol.for("react.suspense"),h=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),p=Symbol.iterator;var f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,g={};function y(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}function b(){}function v(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=y.prototype;var x=v.prototype=new b;x.constructor=v,m(x,y.prototype),x.isPureReactComponent=!0;var w=Array.isArray,D=Object.prototype.hasOwnProperty,k={current:null},C={key:!0,ref:!0,__self:!0,__source:!0};function N(e,t,a){var r,s={},o=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(o=""+t.key),t)D.call(t,r)&&!C.hasOwnProperty(r)&&(s[r]=t[r]);var u=arguments.length-2;if(1===u)s.children=a;else if(1<u){for(var c=Array(u),l=0;l<u;l++)c[l]=arguments[l+2];s.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===s[r]&&(s[r]=u[r]);return{$$typeof:n,type:e,key:o,ref:i,props:s,_owner:k.current}}function S(e){return"object"===typeof e&&null!==e&&e.$$typeof===n}var E=/\/+/g;function I(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function T(e,t,r,s,o){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var u=!1;if(null===e)u=!0;else switch(i){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case n:case a:u=!0}}if(u)return o=o(u=e),e=""===s?"."+I(u,0):s,w(o)?(r="",null!=e&&(r=e.replace(E,"$&/")+"/"),T(o,t,r,"",(function(e){return e}))):null!=o&&(S(o)&&(o=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,r+(!o.key||u&&u.key===o.key?"":(""+o.key).replace(E,"$&/")+"/")+e)),t.push(o)),1;if(u=0,s=""===s?".":s+":",w(e))for(var c=0;c<e.length;c++){var l=s+I(i=e[c],c);u+=T(i,t,r,l,o)}else if(l=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"===typeof l)for(e=l.call(e),c=0;!(i=e.next()).done;)u+=T(i=i.value,t,r,l=s+I(i,c++),o);else if("object"===i)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return u}function F(e,t,n){if(null==e)return e;var a=[],r=0;return T(e,a,"","",(function(e){return t.call(n,e,r++)})),a}function A(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var R={current:null},_={transition:null},O={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:_,ReactCurrentOwner:k};function L(){throw Error("act(...) is not supported in production builds of React.")}t.Children={map:F,forEach:function(e,t,n){F(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return F(e,(function(){t++})),t},toArray:function(e){return F(e,(function(e){return e}))||[]},only:function(e){if(!S(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=y,t.Fragment=r,t.Profiler=o,t.PureComponent=v,t.StrictMode=s,t.Suspense=l,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=O,t.act=L,t.cloneElement=function(e,t,a){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var r=m({},e.props),s=e.key,o=e.ref,i=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,i=k.current),void 0!==t.key&&(s=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(c in t)D.call(t,c)&&!C.hasOwnProperty(c)&&(r[c]=void 0===t[c]&&void 0!==u?u[c]:t[c])}var c=arguments.length-2;if(1===c)r.children=a;else if(1<c){u=Array(c);for(var l=0;l<c;l++)u[l]=arguments[l+2];r.children=u}return{$$typeof:n,type:e.type,key:s,ref:o,props:r,_owner:i}},t.createContext=function(e){return(e={$$typeof:u,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=N,t.createFactory=function(e){var t=N.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:c,render:e}},t.isValidElement=S,t.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:A}},t.memo=function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=_.transition;_.transition={};try{e()}finally{_.transition=t}},t.unstable_act=L,t.useCallback=function(e,t){return R.current.useCallback(e,t)},t.useContext=function(e){return R.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return R.current.useDeferredValue(e)},t.useEffect=function(e,t){return R.current.useEffect(e,t)},t.useId=function(){return R.current.useId()},t.useImperativeHandle=function(e,t,n){return R.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return R.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return R.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return R.current.useMemo(e,t)},t.useReducer=function(e,t,n){return R.current.useReducer(e,t,n)},t.useRef=function(e){return R.current.useRef(e)},t.useState=function(e){return R.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return R.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return R.current.useTransition()},t.version="18.3.1"},43:(e,t,n)=>{"use strict";e.exports=n(202)},579:(e,t,n)=>{"use strict";e.exports=n(153)},234:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var a=n-1>>>1,r=e[a];if(!(0<s(r,t)))break e;e[a]=t,e[n]=r,n=a}}function a(e){return 0===e.length?null:e[0]}function r(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var a=0,r=e.length,o=r>>>1;a<o;){var i=2*(a+1)-1,u=e[i],c=i+1,l=e[c];if(0>s(u,n))c<r&&0>s(l,u)?(e[a]=l,e[c]=n,a=c):(e[a]=u,e[i]=n,a=i);else{if(!(c<r&&0>s(l,n)))break e;e[a]=l,e[c]=n,a=c}}}return t}function s(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var i=Date,u=i.now();t.unstable_now=function(){return i.now()-u}}var c=[],l=[],h=1,d=null,p=3,f=!1,m=!1,g=!1,y="function"===typeof setTimeout?setTimeout:null,b="function"===typeof clearTimeout?clearTimeout:null,v="undefined"!==typeof setImmediate?setImmediate:null;function x(e){for(var t=a(l);null!==t;){if(null===t.callback)r(l);else{if(!(t.startTime<=e))break;r(l),t.sortIndex=t.expirationTime,n(c,t)}t=a(l)}}function w(e){if(g=!1,x(e),!m)if(null!==a(c))m=!0,_(D);else{var t=a(l);null!==t&&O(w,t.startTime-e)}}function D(e,n){m=!1,g&&(g=!1,b(S),S=-1),f=!0;var s=p;try{for(x(n),d=a(c);null!==d&&(!(d.expirationTime>n)||e&&!T());){var o=d.callback;if("function"===typeof o){d.callback=null,p=d.priorityLevel;var i=o(d.expirationTime<=n);n=t.unstable_now(),"function"===typeof i?d.callback=i:d===a(c)&&r(c),x(n)}else r(c);d=a(c)}if(null!==d)var u=!0;else{var h=a(l);null!==h&&O(w,h.startTime-n),u=!1}return u}finally{d=null,p=s,f=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var k,C=!1,N=null,S=-1,E=5,I=-1;function T(){return!(t.unstable_now()-I<E)}function F(){if(null!==N){var e=t.unstable_now();I=e;var n=!0;try{n=N(!0,e)}finally{n?k():(C=!1,N=null)}}else C=!1}if("function"===typeof v)k=function(){v(F)};else if("undefined"!==typeof MessageChannel){var A=new MessageChannel,R=A.port2;A.port1.onmessage=F,k=function(){R.postMessage(null)}}else k=function(){y(F,0)};function _(e){N=e,C||(C=!0,k())}function O(e,n){S=y((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){m||f||(m=!0,_(D))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):E=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return a(c)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,r,s){var o=t.unstable_now();switch("object"===typeof s&&null!==s?s="number"===typeof(s=s.delay)&&0<s?o+s:o:s=o,e){case 1:var i=-1;break;case 2:i=250;break;case 5:i=1073741823;break;case 4:i=1e4;break;default:i=5e3}return e={id:h++,callback:r,priorityLevel:e,startTime:s,expirationTime:i=s+i,sortIndex:-1},s>o?(e.sortIndex=s,n(l,e),null===a(c)&&e===a(l)&&(g?(b(S),S=-1):g=!0,O(w,s-o))):(e.sortIndex=i,n(c,e),m||f||(m=!0,_(D))),e},t.unstable_shouldYield=T,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},853:(e,t,n)=>{"use strict";e.exports=n(234)},334:(e,t,n)=>{var a=n(359),r=n(66),s=n(16),o=n(538),i=n(288),u=n(262),c=n(430);c.alea=a,c.xor128=r,c.xorwow=s,c.xorshift7=o,c.xor4096=i,c.tychei=u,e.exports=c},359:function(e,t,n){var a;!function(e,r){function s(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var a=.02519603282416938*(e+=t.charCodeAt(n));a-=e=a>>>0,e=(a*=e)>>>0,e+=4294967296*(a-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function i(e,t){var n=new s(e),a=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,a&&("object"==typeof a&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.alea=i}(0,e=n.nmd(e),n.amdD)},262:function(e,t,n){var a;!function(e,r){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function i(e,t){var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.tychei=i}(0,e=n.nmd(e),n.amdD)},66:function(e,t,n){var a;!function(e,r){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function i(e,t){var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.xor128=i}(0,e=n.nmd(e),n.amdD)},288:function(e,t,n){var a;!function(e,r){function s(e){var t=this;t.next=function(){var e,n,a=t.w,r=t.X,s=t.i;return t.w=a=a+1640531527|0,n=r[s+34&127],e=r[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[s]=n^e,t.i=s,n+(a^a>>>16)|0},function(e,t){var n,a,r,s,o,i=[],u=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,u=Math.max(u,t.length)),r=0,s=-32;s<u;++s)t&&(a^=t.charCodeAt((s+32)%t.length)),0===s&&(o=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,s>=0&&(o=o+1640531527|0,r=0==(n=i[127&s]^=a+o)?r+1:0);for(r>=128&&(i[127&(t&&t.length||0)]=-1),r=127,s=512;s>0;--s)a=i[r+34&127],n=i[r=r+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,i[r]=a^n;e.w=o,e.X=i,e.i=r}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function i(e,t){null==e&&(e=+new Date);var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.X&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.xor4096=i}(0,e=n.nmd(e),n.amdD)},538:function(e,t,n){var a;!function(e,r){function s(e){var t=this;t.next=function(){var e,n,a=t.x,r=t.i;return e=a[r],n=(e^=e>>>7)^e<<24,n^=(e=a[r+1&7])^e>>>10,n^=(e=a[r+3&7])^e>>>3,n^=(e=a[r+4&7])^e<<7,e=a[r+7&7],n^=(e^=e<<13)^e<<9,a[r]=n,t.i=r+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function i(e,t){null==e&&(e=+new Date);var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.x&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.xorshift7=i}(0,e=n.nmd(e),n.amdD)},16:function(e,t,n){var a;!function(e,r){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function i(e,t){var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&o(a,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.xorwow=i}(0,e=n.nmd(e),n.amdD)},430:function(e,t,n){var a;!function(r,s,o){var i,u=256,c=o.pow(u,6),l=o.pow(2,52),h=2*l,d=255;function p(e,t,n){var a=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(r.crypto||r.msCrypto).getRandomValues(e)),b(e)}catch(a){var t=r.navigator,n=t&&t.plugins;return[+new Date,r,n,r.screen,b(s)]}}():e,3),a),p=new f(a),v=function(){for(var e=p.g(6),t=c,n=0;e<l;)e=(e+n)*u,t*=u,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|p.g(4)},v.quick=function(){return p.g(4)/4294967296},v.double=v,y(b(p.S),s),(t.pass||n||function(e,t,n,a){return a&&(a.S&&m(a,p),e.state=function(){return m(p,{})}),n?(o.random=e,t):e})(v,d,"global"in t?t.global:this==o,t.state)}function f(e){var t,n=e.length,a=this,r=0,s=a.i=a.j=0,o=a.S=[];for(n||(e=[n++]);r<u;)o[r]=r++;for(r=0;r<u;r++)o[r]=o[s=d&s+e[r%n]+(t=o[r])],o[s]=t;(a.g=function(e){for(var t,n=0,r=a.i,s=a.j,o=a.S;e--;)t=o[r=d&r+1],n=n*u+o[d&(o[r]=o[s=d&s+t])+(o[s]=t)];return a.i=r,a.j=s,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,a=[],r=typeof e;if(t&&"object"==r)for(n in e)try{a.push(g(e[n],t-1))}catch(s){}return a.length?a:"string"==r?e:e+"\0"}function y(e,t){for(var n,a=e+"",r=0;r<a.length;)t[d&r]=d&(n^=19*t[d&r])+a.charCodeAt(r++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(o.random(),s),e.exports){e.exports=p;try{i=n(996)}catch(v){}}else void 0===(a=function(){return p}.call(t,n,t,e))||(e.exports=a)}("undefined"!==typeof self?self:this,[],Math)},966:e=>{var t=Object.create(null),n="word";t["can't"]=[{value:"ca",tag:n},{value:"n't",tag:n}],t["CAN'T"]=[{value:"CA",tag:n},{value:"N'T",tag:n}],t["Can't"]=[{value:"Ca",tag:n},{value:"n't",tag:n}],t["Couldn't"]=[{value:"could",tag:n},{value:"n't",tag:n}],t["COULDN'T"]=[{value:"COULD",tag:n},{value:"N'T",tag:n}],t["Couldn't"]=[{value:"Could",tag:n},{value:"n't",tag:n}],t["don't"]=[{value:"do",tag:n},{value:"n't",tag:n}],t["DON'T"]=[{value:"DO",tag:n},{value:"N'T",tag:n}],t["Don't"]=[{value:"Do",tag:n},{value:"n't",tag:n}],t["doesn't"]=[{value:"does",tag:n},{value:"n't",tag:n}],t["DOESN'T"]=[{value:"DOES",tag:n},{value:"N'T",tag:n}],t["Doesn't"]=[{value:"Does",tag:n},{value:"n't",tag:n}],t["didn't"]=[{value:"did",tag:n},{value:"n't",tag:n}],t["DIDN'T"]=[{value:"DID",tag:n},{value:"N'T",tag:n}],t["Didn't"]=[{value:"Did",tag:n},{value:"n't",tag:n}],t["hadn't"]=[{value:"had",tag:n},{value:"n't",tag:n}],t["HADN'T"]=[{value:"HAD",tag:n},{value:"N'T",tag:n}],t["Hadn't"]=[{value:"Had",tag:n},{value:"n't",tag:n}],t["mayn't"]=[{value:"may",tag:n},{value:"n't",tag:n}],t["MAYN'T"]=[{value:"MAY",tag:n},{value:"N'T",tag:n}],t["Mayn't"]=[{value:"May",tag:n},{value:"n't",tag:n}],t["mightn't"]=[{value:"might",tag:n},{value:"n't",tag:n}],t["MIGHTN'T"]=[{value:"MIGHT",tag:n},{value:"N'T",tag:n}],t["Mightn't"]=[{value:"Might",tag:n},{value:"n't",tag:n}],t["mustn't"]=[{value:"must",tag:n},{value:"n't",tag:n}],t["MUSTN'T"]=[{value:"MUST",tag:n},{value:"N'T",tag:n}],t["Mustn't"]=[{value:"Must",tag:n},{value:"n't",tag:n}],t["needn't"]=[{value:"need",tag:n},{value:"n't",tag:n}],t["NEEDN'T"]=[{value:"NEED",tag:n},{value:"N'T",tag:n}],t["Needn't"]=[{value:"Need",tag:n},{value:"n't",tag:n}],t["oughtn't"]=[{value:"ought",tag:n},{value:"n't",tag:n}],t["OUGHTN'T"]=[{value:"OUGHT",tag:n},{value:"N'T",tag:n}],t["Oughtn't"]=[{value:"Ought",tag:n},{value:"n't",tag:n}],t["shan't"]=[{value:"sha",tag:n},{value:"n't",tag:n}],t["SHAN'T"]=[{value:"SHA",tag:n},{value:"N'T",tag:n}],t["Shan't"]=[{value:"Sha",tag:n},{value:"n't",tag:n}],t["shouldn't"]=[{value:"should",tag:n},{value:"n't",tag:n}],t["SHOULDN'T"]=[{value:"SHOULD",tag:n},{value:"N'T",tag:n}],t["Shouldn't"]=[{value:"Should",tag:n},{value:"n't",tag:n}],t["won't"]=[{value:"wo",tag:n},{value:"n't",tag:n}],t["WON'T"]=[{value:"WO",tag:n},{value:"N'T",tag:n}],t["Won't"]=[{value:"Wo",tag:n},{value:"n't",tag:n}],t["wouldn't"]=[{value:"would",tag:n},{value:"n't",tag:n}],t["WOULDN'T"]=[{value:"WOULD",tag:n},{value:"N'T",tag:n}],t["Wouldn't"]=[{value:"Would",tag:n},{value:"n't",tag:n}],t["ain't"]=[{value:"ai",tag:n},{value:"n't",tag:n}],t["AIN'T"]=[{value:"AI",tag:n},{value:"N'T",tag:n}],t["Ain't"]=[{value:"Ai",tag:n},{value:"n't",tag:n}],t["aren't"]=[{value:"are",tag:n},{value:"n't",tag:n}],t["AREN'T"]=[{value:"ARE",tag:n},{value:"N'T",tag:n}],t["Aren't"]=[{value:"Are",tag:n},{value:"n't",tag:n}],t["isn't"]=[{value:"is",tag:n},{value:"n't",tag:n}],t["ISN'T"]=[{value:"IS",tag:n},{value:"N'T",tag:n}],t["Isn't"]=[{value:"Is",tag:n},{value:"n't",tag:n}],t["wasn't"]=[{value:"was",tag:n},{value:"n't",tag:n}],t["WASN'T"]=[{value:"WAS",tag:n},{value:"N'T",tag:n}],t["Wasn't"]=[{value:"Was",tag:n},{value:"n't",tag:n}],t["weren't"]=[{value:"were",tag:n},{value:"n't",tag:n}],t["WEREN'T"]=[{value:"WERE",tag:n},{value:"N'T",tag:n}],t["Weren't"]=[{value:"Were",tag:n},{value:"n't",tag:n}],t["haven't"]=[{value:"have",tag:n},{value:"n't",tag:n}],t["HAVEN'T"]=[{value:"HAVE",tag:n},{value:"N'T",tag:n}],t["Haven't"]=[{value:"Have",tag:n},{value:"n't",tag:n}],t["hasn't"]=[{value:"has",tag:n},{value:"n't",tag:n}],t["HASN'T"]=[{value:"HAS",tag:n},{value:"N'T",tag:n}],t["Hasn't"]=[{value:"Has",tag:n},{value:"n't",tag:n}],t["daren't"]=[{value:"dare",tag:n},{value:"n't",tag:n}],t["DAREN'T"]=[{value:"DARE",tag:n},{value:"N'T",tag:n}],t["Daren't"]=[{value:"Dare",tag:n},{value:"n't",tag:n}],t["i'm"]=[{value:"i",tag:n},{value:"'m",tag:n}],t["I'M"]=[{value:"I",tag:n},{value:"'M",tag:n}],t["I'm"]=[{value:"I",tag:n},{value:"'m",tag:n}],t["i've"]=[{value:"i",tag:n},{value:"'ve",tag:n}],t["I'VE"]=[{value:"I",tag:n},{value:"'VE",tag:n}],t["I've"]=[{value:"I",tag:n},{value:"'ve",tag:n}],t["i'd"]=[{value:"i",tag:n},{value:"'d",tag:n}],t["I'D"]=[{value:"I",tag:n},{value:"'D",tag:n}],t["I'd"]=[{value:"I",tag:n},{value:"'d",tag:n}],t["i'll"]=[{value:"i",tag:n},{value:"'ll",tag:n}],t["I'LL"]=[{value:"I",tag:n},{value:"'LL",tag:n}],t["I'll"]=[{value:"I",tag:n},{value:"'ll",tag:n}],t["you've"]=[{value:"you",tag:n},{value:"'ve",tag:n}],t["YOU'VE"]=[{value:"YOU",tag:n},{value:"'VE",tag:n}],t["You've"]=[{value:"You",tag:n},{value:"'ve",tag:n}],t["you'd"]=[{value:"you",tag:n},{value:"'d",tag:n}],t["YOU'D"]=[{value:"YOU",tag:n},{value:"'D",tag:n}],t["You'd"]=[{value:"You",tag:n},{value:"'d",tag:n}],t["you'll"]=[{value:"you",tag:n},{value:"'ll",tag:n}],t["YOU'LL"]=[{value:"YOU",tag:n},{value:"'LL",tag:n}],t["You'll"]=[{value:"You",tag:n},{value:"'ll",tag:n}],t["they've"]=[{value:"they",tag:n},{value:"'ve",tag:n}],t["THEY'VE"]=[{value:"THEY",tag:n},{value:"'VE",tag:n}],t["They've"]=[{value:"They",tag:n},{value:"'ve",tag:n}],t["they'd"]=[{value:"they",tag:n},{value:"'d",tag:n}],t["THEY'D"]=[{value:"THEY",tag:n},{value:"'D",tag:n}],t["They'd"]=[{value:"They",tag:n},{value:"'d",tag:n}],t["they'll"]=[{value:"they",tag:n},{value:"'ll",tag:n}],t["THEY'LL"]=[{value:"THEY",tag:n},{value:"'LL",tag:n}],t["They'll"]=[{value:"They",tag:n},{value:"'ll",tag:n}],t["they're"]=[{value:"they",tag:n},{value:"'re",tag:n}],t["THEY'RE"]=[{value:"THEY",tag:n},{value:"'RE",tag:n}],t["They're"]=[{value:"They",tag:n},{value:"'re",tag:n}],t["we've"]=[{value:"we",tag:n},{value:"'ve",tag:n}],t["WE'VE"]=[{value:"WE",tag:n},{value:"'VE",tag:n}],t["We've"]=[{value:"We",tag:n},{value:"'ve",tag:n}],t["we'd"]=[{value:"we",tag:n},{value:"'d",tag:n}],t["WE'D"]=[{value:"WE",tag:n},{value:"'D",tag:n}],t["We'd"]=[{value:"We",tag:n},{value:"'d",tag:n}],t["we'll"]=[{value:"we",tag:n},{value:"'ll",tag:n}],t["WE'LL"]=[{value:"WE",tag:n},{value:"'LL",tag:n}],t["We'll"]=[{value:"We",tag:n},{value:"'ll",tag:n}],t["we're"]=[{value:"we",tag:n},{value:"'re",tag:n}],t["WE'RE"]=[{value:"WE",tag:n},{value:"'RE",tag:n}],t["We're"]=[{value:"We",tag:n},{value:"'re",tag:n}],t["she'd"]=[{value:"she",tag:n},{value:"'d",tag:n}],t["SHE'D"]=[{value:"SHE",tag:n},{value:"'D",tag:n}],t["She'd"]=[{value:"She",tag:n},{value:"'d",tag:n}],t["she'll"]=[{value:"she",tag:n},{value:"'ll",tag:n}],t["SHE'LL"]=[{value:"SHE",tag:n},{value:"'LL",tag:n}],t["She'll"]=[{value:"She",tag:n},{value:"'ll",tag:n}],t["she's"]=[{value:"she",tag:n},{value:"'s",tag:n}],t["SHE'S"]=[{value:"SHE",tag:n},{value:"'S",tag:n}],t["She's"]=[{value:"She",tag:n},{value:"'s",tag:n}],t["he'd"]=[{value:"he",tag:n},{value:"'d",tag:n}],t["HE'D"]=[{value:"HE",tag:n},{value:"'D",tag:n}],t["He'd"]=[{value:"He",tag:n},{value:"'d",tag:n}],t["he'll"]=[{value:"he",tag:n},{value:"'ll",tag:n}],t["HE'LL"]=[{value:"HE",tag:n},{value:"'LL",tag:n}],t["He'll"]=[{value:"He",tag:n},{value:"'ll",tag:n}],t["he's"]=[{value:"he",tag:n},{value:"'s",tag:n}],t["HE'S"]=[{value:"HE",tag:n},{value:"'S",tag:n}],t["He's"]=[{value:"He",tag:n},{value:"'s",tag:n}],t["it'd"]=[{value:"it",tag:n},{value:"'d",tag:n}],t["IT'D"]=[{value:"IT",tag:n},{value:"'D",tag:n}],t["It'd"]=[{value:"It",tag:n},{value:"'d",tag:n}],t["it'll"]=[{value:"it",tag:n},{value:"'ll",tag:n}],t["IT'LL"]=[{value:"IT",tag:n},{value:"'LL",tag:n}],t["It'll"]=[{value:"It",tag:n},{value:"'ll",tag:n}],t["it's"]=[{value:"it",tag:n},{value:"'s",tag:n}],t["IT'S"]=[{value:"IT",tag:n},{value:"'S",tag:n}],t["It's"]=[{value:"It",tag:n},{value:"'s",tag:n}],t["what've"]=[{value:"what",tag:n},{value:"'ve",tag:n}],t["WHAT'VE"]=[{value:"WHAT",tag:n},{value:"'VE",tag:n}],t["What've"]=[{value:"What",tag:n},{value:"'ve",tag:n}],t["what'd"]=[{value:"what",tag:n},{value:"'d",tag:n}],t["WHAT'D"]=[{value:"WHAT",tag:n},{value:"'D",tag:n}],t["What'd"]=[{value:"What",tag:n},{value:"'d",tag:n}],t["what'll"]=[{value:"what",tag:n},{value:"'ll",tag:n}],t["WHAT'LL"]=[{value:"WHAT",tag:n},{value:"'LL",tag:n}],t["What'll"]=[{value:"What",tag:n},{value:"'ll",tag:n}],t["what're"]=[{value:"what",tag:n},{value:"'re",tag:n}],t["WHAT'RE"]=[{value:"WHAT",tag:n},{value:"'RE",tag:n}],t["What're"]=[{value:"What",tag:n},{value:"'re",tag:n}],t["who've"]=[{value:"who",tag:n},{value:"'ve",tag:n}],t["WHO'VE"]=[{value:"WHO",tag:n},{value:"'VE",tag:n}],t["Who've"]=[{value:"Who",tag:n},{value:"'ve",tag:n}],t["who'd"]=[{value:"who",tag:n},{value:"'d",tag:n}],t["WHO'D"]=[{value:"WHO",tag:n},{value:"'D",tag:n}],t["Who'd"]=[{value:"Who",tag:n},{value:"'d",tag:n}],t["who'll"]=[{value:"who",tag:n},{value:"'ll",tag:n}],t["WHO'LL"]=[{value:"WHO",tag:n},{value:"'LL",tag:n}],t["Who'll"]=[{value:"Who",tag:n},{value:"'ll",tag:n}],t["who're"]=[{value:"who",tag:n},{value:"'re",tag:n}],t["WHO'RE"]=[{value:"WHO",tag:n},{value:"'RE",tag:n}],t["Who're"]=[{value:"Who",tag:n},{value:"'re",tag:n}],t["when've"]=[{value:"when",tag:n},{value:"'ve",tag:n}],t["WHEN'VE"]=[{value:"WHEN",tag:n},{value:"'VE",tag:n}],t["When've"]=[{value:"When",tag:n},{value:"'ve",tag:n}],t["when'd"]=[{value:"when",tag:n},{value:"'d",tag:n}],t["WHEN'D"]=[{value:"WHEN",tag:n},{value:"'D",tag:n}],t["When'd"]=[{value:"When",tag:n},{value:"'d",tag:n}],t["when'll"]=[{value:"when",tag:n},{value:"'ll",tag:n}],t["WHEN'LL"]=[{value:"WHEN",tag:n},{value:"'LL",tag:n}],t["When'll"]=[{value:"When",tag:n},{value:"'ll",tag:n}],t["when're"]=[{value:"when",tag:n},{value:"'re",tag:n}],t["WHEN'RE"]=[{value:"WHEN",tag:n},{value:"'RE",tag:n}],t["When're"]=[{value:"When",tag:n},{value:"'re",tag:n}],t["where've"]=[{value:"where",tag:n},{value:"'ve",tag:n}],t["WHERE'VE"]=[{value:"WHERE",tag:n},{value:"'VE",tag:n}],t["Where've"]=[{value:"Where",tag:n},{value:"'ve",tag:n}],t["where'd"]=[{value:"where",tag:n},{value:"'d",tag:n}],t["WHERE'D"]=[{value:"WHERE",tag:n},{value:"'D",tag:n}],t["Where'd"]=[{value:"Where",tag:n},{value:"'d",tag:n}],t["where'll"]=[{value:"where",tag:n},{value:"'ll",tag:n}],t["WHERE'LL"]=[{value:"WHERE",tag:n},{value:"'LL",tag:n}],t["Where'll"]=[{value:"Where",tag:n},{value:"'ll",tag:n}],t["where're"]=[{value:"where",tag:n},{value:"'re",tag:n}],t["WHERE'RE"]=[{value:"WHERE",tag:n},{value:"'RE",tag:n}],t["Where're"]=[{value:"Where",tag:n},{value:"'re",tag:n}],t["why've"]=[{value:"why",tag:n},{value:"'ve",tag:n}],t["WHY'VE"]=[{value:"WHY",tag:n},{value:"'VE",tag:n}],t["Why've"]=[{value:"Why",tag:n},{value:"'ve",tag:n}],t["why'd"]=[{value:"why",tag:n},{value:"'d",tag:n}],t["WHY'D"]=[{value:"WHY",tag:n},{value:"'D",tag:n}],t["Why'd"]=[{value:"Why",tag:n},{value:"'d",tag:n}],t["why'll"]=[{value:"why",tag:n},{value:"'ll",tag:n}],t["WHY'LL"]=[{value:"WHY",tag:n},{value:"'LL",tag:n}],t["Why'll"]=[{value:"Why",tag:n},{value:"'ll",tag:n}],t["why're"]=[{value:"why",tag:n},{value:"'re",tag:n}],t["WHY'RE"]=[{value:"WHY",tag:n},{value:"'RE",tag:n}],t["Why're"]=[{value:"Why",tag:n},{value:"'re",tag:n}],t["how've"]=[{value:"how",tag:n},{value:"'ve",tag:n}],t["HOW'VE"]=[{value:"HOW",tag:n},{value:"'VE",tag:n}],t["How've"]=[{value:"How",tag:n},{value:"'ve",tag:n}],t["how'd"]=[{value:"how",tag:n},{value:"'d",tag:n}],t["HOW'D"]=[{value:"HOW",tag:n},{value:"'D",tag:n}],t["How'd"]=[{value:"How",tag:n},{value:"'d",tag:n}],t["how'll"]=[{value:"how",tag:n},{value:"'ll",tag:n}],t["HOW'LL"]=[{value:"HOW",tag:n},{value:"'LL",tag:n}],t["How'll"]=[{value:"How",tag:n},{value:"'ll",tag:n}],t["how're"]=[{value:"how",tag:n},{value:"'re",tag:n}],t["HOW'RE"]=[{value:"HOW",tag:n},{value:"'RE",tag:n}],t["How're"]=[{value:"How",tag:n},{value:"'re",tag:n}],t["there've"]=[{value:"there",tag:n},{value:"'ve",tag:n}],t["THERE'VE"]=[{value:"THERE",tag:n},{value:"'VE",tag:n}],t["There've"]=[{value:"There",tag:n},{value:"'ve",tag:n}],t["there'd"]=[{value:"there",tag:n},{value:"'d",tag:n}],t["THERE'D"]=[{value:"THERE",tag:n},{value:"'D",tag:n}],t["There'd"]=[{value:"There",tag:n},{value:"'d",tag:n}],t["there'll"]=[{value:"there",tag:n},{value:"'ll",tag:n}],t["THERE'LL"]=[{value:"THERE",tag:n},{value:"'LL",tag:n}],t["There'll"]=[{value:"There",tag:n},{value:"'ll",tag:n}],t["there're"]=[{value:"there",tag:n},{value:"'re",tag:n}],t["THERE'RE"]=[{value:"THERE",tag:n},{value:"'RE",tag:n}],t["There're"]=[{value:"There",tag:n},{value:"'re",tag:n}],t["that've"]=[{value:"that",tag:n},{value:"'ve",tag:n}],t["THAT'VE"]=[{value:"THAT",tag:n},{value:"'VE",tag:n}],t["That've"]=[{value:"That",tag:n},{value:"'ve",tag:n}],t["that'd"]=[{value:"that",tag:n},{value:"'d",tag:n}],t["THAT'D"]=[{value:"THAT",tag:n},{value:"'D",tag:n}],t["That'd"]=[{value:"That",tag:n},{value:"'d",tag:n}],t["that'll"]=[{value:"that",tag:n},{value:"'ll",tag:n}],t["THAT'LL"]=[{value:"THAT",tag:n},{value:"'LL",tag:n}],t["That'll"]=[{value:"That",tag:n},{value:"'ll",tag:n}],t["that're"]=[{value:"that",tag:n},{value:"'re",tag:n}],t["THAT'RE"]=[{value:"THAT",tag:n},{value:"'RE",tag:n}],t["That're"]=[{value:"That",tag:n},{value:"'re",tag:n}],t["let's"]=[{value:"let",tag:n},{value:"'s",tag:n}],t["LET'S"]=[{value:"THAT",tag:n},{value:"'S",tag:n}],t["Let's"]=[{value:"Let",tag:n},{value:"'s",tag:n}],t["could've"]=[{value:"could",tag:n},{value:"'ve",tag:n}],t["COULD'VE"]=[{value:"COULD",tag:n},{value:"'VE",tag:n}],t["Could've"]=[{value:"Could",tag:n},{value:"'ve",tag:n}],t["should've"]=[{value:"should",tag:n},{value:"'ve",tag:n}],t["SHOULD'VE"]=[{value:"SHOULD",tag:n},{value:"'VE",tag:n}],t["Should've"]=[{value:"Should",tag:n},{value:"'ve",tag:n}],t["would've"]=[{value:"would",tag:n},{value:"'ve",tag:n}],t["WOULD'VE"]=[{value:"WOULD",tag:n},{value:"'VE",tag:n}],t["Would've"]=[{value:"Would",tag:n},{value:"'ve",tag:n}],t["i'll've"]=[{value:"i",tag:n},{value:"'ll",tag:n},{value:"'ve",tag:n}],t["I'LL'VE"]=[{value:"I",tag:n},{value:"'LL",tag:n},{value:"'VE",tag:n}],t["I'll've"]=[{value:"I",tag:n},{value:"'ll",tag:n},{value:"'ve",tag:n}],t["you'll've"]=[{value:"you",tag:n},{value:"'ll",tag:n},{value:"'ve",tag:n}],t["YOU'LL'VE"]=[{value:"YOU",tag:n},{value:"'LL",tag:n},{value:"'VE",tag:n}],t["You'll've"]=[{value:"You",tag:n},{value:"'ll",tag:n},{value:"'ve",tag:n}],t["they'll've"]=[{value:"they",tag:n},{value:"'ll",tag:n},{value:"'ve",tag:n}],t["THEY'LL'VE"]=[{value:"THEY",tag:n},{value:"'LL",tag:n},{value:"'VE",tag:n}],t["They'll've"]=[{value:"They",tag:n},{value:"'ll",tag:n},{value:"'ve",tag:n}],t["it'll've"]=[{value:"it",tag:n},{value:"'ll",tag:n},{value:"'ve",tag:n}],t["IT'LL'VE"]=[{value:"IT",tag:n},{value:"'LL",tag:n},{value:"'VE",tag:n}],t["It'll've"]=[{value:"It",tag:n},{value:"'ll",tag:n},{value:"'ve",tag:n}],t["he'll've"]=[{value:"he",tag:n},{value:"'ll",tag:n},{value:"'ve",tag:n}],t["HE'LL'VE"]=[{value:"HE",tag:n},{value:"'LL",tag:n},{value:"'VE",tag:n}],t["He'll've"]=[{value:"He",tag:n},{value:"'ll",tag:n},{value:"'ve",tag:n}],t["she'll've"]=[{value:"she",tag:n},{value:"'ll",tag:n},{value:"'ve",tag:n}],t["SHE'LL'VE"]=[{value:"SHE",tag:n},{value:"'LL",tag:n},{value:"'VE",tag:n}],t["She'll've"]=[{value:"She",tag:n},{value:"'ll",tag:n},{value:"'ve",tag:n}],t["shouldn't've"]=[{value:"should",tag:n},{value:"n't",tag:n},{value:"'ve",tag:n}],t["SHOULDN'T'VE"]=[{value:"SHOULD",tag:n},{value:"N'T",tag:n},{value:"'VE",tag:n}],t["Shouldn't've"]=[{value:"Should",tag:n},{value:"n't",tag:n},{value:"'ve",tag:n}],t["couldn't've"]=[{value:"could",tag:n},{value:"n't",tag:n},{value:"'ve",tag:n}],t["COULDN'T'VE"]=[{value:"COULD",tag:n},{value:"N'T",tag:n},{value:"'VE",tag:n}],t["Couldn't've"]=[{value:"Could",tag:n},{value:"n't",tag:n},{value:"'ve",tag:n}],t["wouldn't've"]=[{value:"would",tag:n},{value:"n't",tag:n},{value:"'ve",tag:n}],t["WOULDN'T'VE"]=[{value:"WOULD",tag:n},{value:"N'T",tag:n},{value:"'VE",tag:n}],t["Wouldn't've"]=[{value:"Would",tag:n},{value:"n't",tag:n},{value:"'ve",tag:n}],t["i'd've"]=[{value:"i",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["I'D'VE"]=[{value:"I",tag:n},{value:"'D",tag:n},{value:"'VE",tag:n}],t["I'd've"]=[{value:"I",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["you'd've"]=[{value:"you",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["YOU'D'VE"]=[{value:"YOU",tag:n},{value:"'D",tag:n},{value:"'VE",tag:n}],t["You'd've"]=[{value:"You",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["he'd've"]=[{value:"he",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["HE'D'VE"]=[{value:"HE",tag:n},{value:"'D",tag:n},{value:"'VE",tag:n}],t["He'd've"]=[{value:"He",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["she'd've"]=[{value:"she",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["SHE'D'VE"]=[{value:"SHE",tag:n},{value:"'D",tag:n},{value:"'VE",tag:n}],t["She'd've"]=[{value:"She",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["you'd've"]=[{value:"you",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["YOU'D'VE"]=[{value:"YOU",tag:n},{value:"'D",tag:n},{value:"'VE",tag:n}],t["You'd've"]=[{value:"You",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["they'd've"]=[{value:"they",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["THEY'D'VE"]=[{value:"THEY",tag:n},{value:"'D",tag:n},{value:"'VE",tag:n}],t["They'd've"]=[{value:"They",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["there'd've"]=[{value:"there",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["THERE'D'VE"]=[{value:"THERE",tag:n},{value:"'D",tag:n},{value:"'VE",tag:n}],t["There'd've"]=[{value:"There",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["it'd've"]=[{value:"it",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],t["IT'D'VE"]=[{value:"IT",tag:n},{value:"'D",tag:n},{value:"'VE",tag:n}],t["It'd've"]=[{value:"It",tag:n},{value:"'d",tag:n},{value:"'ve",tag:n}],e.exports=t},231:(e,t,n)=>{var a=n(980),r=n(966),s=/\s+/g,o=a(),i=/'/,u=/([a-z]+)('s)$/i,c=/([a-z]+s)(')$/i,l=[{regex:/"[^"]*"/g,category:"quoted_phrase"},{regex:/(?:https?:\/\/)(?:[\da-z\.-]+)\.(?:[a-z\.]{2,6})(?:[\/\w\.\-\?#=]*)*\/?/gi,category:"url"},{regex:/[-!#$%&'*+\/=?^\w{|}~](?:\.?[-!#$%&'*+\/=?^\w`{|}~])*@[a-z0-9](?:-?\.?[a-z0-9])*(?:\.[a-z](?:-?[a-z0-9])*)+/gi,category:"email"},{regex:/@\w+/g,category:"mention"},{regex:/#[a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF_][a-z0-9\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF_]*/gi,category:"hashtag"},{regex:/#[\u0900-\u0963\u0970-\u097F_][\u0900-\u0963\u0970-\u097F\u0966-\u096F0-9_]*/gi,category:"hashtag"},{regex:o,category:"emoji"},{regex:/:-?[dps\*\/\[\]{}\(\)]|;-?[/(/)d]|<3/gi,category:"emoticon"},{regex:/(?:\d|[01]\d|2[0-3]):?(?:[0-5][0-9])?\s?(?:[ap]\.?m\.?|hours|hrs)/gi,category:"time"},{regex:/1\dth|[04-9]th|1st|2nd|3rd|[02-9]1st|[02-9]2nd|[02-9]3rd|[02-9][04-9]th|\d+\d[04-9]th|\d+\d1st|\d+\d2nd|\d+\d3rd/g,category:"ordinal"},{regex:/\d+\/\d+|\d(?:[\.,-\/]?\d)*(?:\.\d+)?/g,category:"number"},{regex:/[\u0966-\u096F]+\/[\u0966-\u096F]+|[\u0966-\u096F](?:[\.,-\/]?[\u0966-\u096F])*(?:\.[\u0966-\u096F]+)?/g,category:"number"},{regex:/[\u20bf\u20bd\u20b9\u20a8$\xa3\xa5\u20ac\u20a9]/g,category:"currency"},{regex:/[a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF][a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF']*/gi,category:"word"},{regex:/[\u0900-\u094F\u0951-\u0963\u0970-\u097F]+/gi,category:"word"},{regex:/[\u2019'\u2018\u2019`\u201c\u201d"\[\]\(\){}\u2026,\.!;\?\-:\u0964\u0965]/g,category:"punctuation"},{regex:/[\u0950~@#%\^\+=\*\|\/<>&]/g,category:"symbol"}],h={emoticon:"c",email:"e",emoji:"j",hashtag:"h",mention:"m",number:"n",ordinal:"o",quoted_phrase:"q",currency:"r",time:"t",url:"u",word:"w",alien:"z"};e.exports=function(){var e=l.slice(0),t=[],n=Object.create(null),a=function(e,t){var n,a=r[e];return void 0===a?(n=e.match(u))||(n=e.match(c))?(t.push({value:n[1],tag:"word"}),t.push({value:n[2],tag:"word"})):t.push({value:e,tag:"word"}):(t.push(Object.assign({},a[0])),t.push(Object.assign({},a[1])),a[2]&&t.push(Object.assign({},a[2]))),t},o=function(e,n){var r,u,c,l=e.trim();if(n.length)for(r=function(e,t){var n,r,s,o,u=e.match(t.regex),c=e.split(t.regex),l=[],h=t.category,d=0;for(u=u||[],r=0,s=c.length;r<s;r+=1)(o=(o=c[r]).trim())&&l.push(o),d<u.length&&("word"===h?(n=u[d],i.test(n)?l=a(n,l):l.push({value:n,tag:h})):l.push({value:u[d],tag:h})),d+=1;return l}(l,n[0]),u=0,c=r.length;u<c;u+=1)"string"===typeof r[u]?o(r[u],n.slice(1)):t.push(r[u]);else e.split(s).forEach((function(e){t.push({value:e.trim(),tag:"alien"})}))},d=function(t){e="object"===typeof t&&Object.keys(t).length?l.filter((function(e){var n=t[e.category];return void 0===n||null===n||!!n})):[];const n=Object.create(null);return e.forEach((function(e){n[e.category]=!0})),h={emoticon:"c",email:"e",emoji:"j",hashtag:"h",mention:"m",number:"n",ordinal:"o",quoted_phrase:"q",currency:"r",time:"t",url:"u",word:"w",alien:"z"},Object.keys(n).length},p=function(e,t){if(h[e])throw new Error("Tag "+e+" already exists");h[e]=t};return d({quoted_phrase:!1}),n.defineConfig=d,n.tokenize=function(n){return t=[],o(n,e),t},n.getTokensFP=function(){var e=[];return t.forEach((function(t){e.push(h[t.tag]?h[t.tag]:t.value)})),e.join("")},n.addTag=p,n.addRegex=function(t,n,a){if(!h[n]&&!a)throw new Error("Tag "+n+" doesn't exist; Provide a 'fingerprintCode' to add it as a tag.");h[n]||p(n,a),e.unshift({regex:t,category:n})},n}},817:()=>{},590:()=>{},530:()=>{},108:()=>{},551:()=>{},996:()=>{}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var s=t[a]={id:a,loaded:!1,exports:{}};return e[a].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.m=e,n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.f={},n.e=e=>Promise.all(Object.keys(n.f).reduce(((t,a)=>(n.f[a](e,t),t)),[])),n.u=e=>"static/js/"+e+".3a6149cd.chunk.js",n.miniCssF=e=>{},n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={},t="chatbot:";n.l=(a,r,s,o)=>{if(e[a])e[a].push(r);else{var i,u;if(void 0!==s)for(var c=document.getElementsByTagName("script"),l=0;l<c.length;l++){var h=c[l];if(h.getAttribute("src")==a||h.getAttribute("data-webpack")==t+s){i=h;break}}i||(u=!0,(i=document.createElement("script")).charset="utf-8",i.timeout=120,n.nc&&i.setAttribute("nonce",n.nc),i.setAttribute("data-webpack",t+s),i.src=a),e[a]=[r];var d=(t,n)=>{i.onerror=i.onload=null,clearTimeout(p);var r=e[a];if(delete e[a],i.parentNode&&i.parentNode.removeChild(i),r&&r.forEach((e=>e(n))),t)return t(n)},p=setTimeout(d.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=d.bind(null,i.onerror),i.onload=d.bind(null,i.onload),u&&document.head.appendChild(i)}}})(),n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n.p="/ChatXD/",(()=>{var e={792:0};n.f.j=(t,a)=>{var r=n.o(e,t)?e[t]:void 0;if(0!==r)if(r)a.push(r[2]);else{var s=new Promise(((n,a)=>r=e[t]=[n,a]));a.push(r[2]=s);var o=n.p+n.u(t),i=new Error;n.l(o,(a=>{if(n.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var s=a&&("load"===a.type?"missing":a.type),o=a&&a.target&&a.target.src;i.message="Loading chunk "+t+" failed.\n("+s+": "+o+")",i.name="ChunkLoadError",i.type=s,i.request=o,r[1](i)}}),"chunk-"+t,t)}};var t=(t,a)=>{var r,s,o=a[0],i=a[1],u=a[2],c=0;if(o.some((t=>0!==e[t]))){for(r in i)n.o(i,r)&&(n.m[r]=i[r]);if(u)u(n)}for(t&&t(a);c<o.length;c++)s=o[c],n.o(e,s)&&e[s]&&e[s][0](),e[s]=0},a=self.webpackChunkchatbot=self.webpackChunkchatbot||[];a.forEach(t.bind(null,0)),a.push=t.bind(null,a.push.bind(a))})(),(()=>{"use strict";var e={};n.r(e),n.d(e,{CompositeArrayBuffer:()=>is,browserFiles:()=>ni,browserHTTPRequest:()=>hi,concatenateArrayBuffers:()=>Ss,copyModel:()=>ho,decodeWeights:()=>ys,decodeWeightsStream:()=>Ds,encodeWeights:()=>gs,fromMemory:()=>mi,fromMemorySync:()=>gi,getLoadHandlers:()=>zs,getModelArtifactsForJSON:()=>Fs,getModelArtifactsForJSONSync:()=>Ts,getModelArtifactsInfoForJSON:()=>As,getSaveHandlers:()=>Ms,getWeightSpecs:()=>Rs,http:()=>li,isHTTPScheme:()=>ui,listModels:()=>co,loadWeights:()=>si,moveModel:()=>po,registerLoadRouter:()=>Ls,registerSaveRouter:()=>Os,removeModel:()=>lo,weightsLoaderFactory:()=>oi,withSaveHandler:()=>yi,withSaveHandlerSync:()=>bi});var t={};n.r(t),n.d(t,{assertParamsValid:()=>Di,computeFlatOffset:()=>Li,computeOutShape:()=>Ci,getNormalizedAxes:()=>Ii,isSliceContinous:()=>Oi,maskToAxes:()=>ki,parseSliceParams:()=>Mi,sliceInfo:()=>zi,startForAxis:()=>Ri,startIndicesWithElidedDims:()=>Ti,stopForAxis:()=>_i,stopIndicesWithElidedDims:()=>Fi,stridesForAxis:()=>Ai,stridesWithElidedDims:()=>Ni});var a={};n.r(a),n.d(a,{conv2d:()=>Qh,depthwiseConv2d:()=>$h,matMul:()=>ed});var r={};n.r(r),n.d(r,{collectGatherOpShapeInfo:()=>df,computeOutShape:()=>hf,segOpComputeOptimalWindowSize:()=>lf});var s={};n.r(s),n.d(s,{ERF_A1:()=>Ep,ERF_A2:()=>Ip,ERF_A3:()=>Tp,ERF_A4:()=>Fp,ERF_A5:()=>Ap,ERF_P:()=>Sp,PARALLELIZE_THRESHOLD:()=>mp,RowPartitionType:()=>lp,SELU_SCALE:()=>Np,SELU_SCALEALPHA:()=>Cp,applyActivation:()=>Xh,assertAndGetBroadcastShape:()=>qo,assertAxesAreInnerMostDims:()=>lc,assertParamsConsistent:()=>up,assignToTypedArray:()=>zp,axesAreInnerMostDims:()=>oc,calculateShapes:()=>Ch,checkEinsumDimSizes:()=>qp,checkPadOnDimRoundingMode:()=>hu,combineLocations:()=>ic,combineRaggedTensorToTensorShapes:()=>hp,complexWithEvenIndex:()=>Op,complexWithOddIndex:()=>Lp,computeConv2DInfo:()=>eu,computeConv3DInfo:()=>tu,computeDefaultPad:()=>nu,computeDilation2DInfo:()=>Zi,computeOptimalWindowSize:()=>gp,computeOutAndReduceShapes:()=>uc,computeOutShape:()=>cp,computePool2DInfo:()=>Ji,computePool3DInfo:()=>$i,convertConv2DDataFormat:()=>lu,decodeEinsumEquation:()=>Hp,eitherStridesOrDilationsAreOne:()=>uu,expandShapeToKeepDim:()=>cc,exponent:()=>Pp,exponents:()=>Bp,fromStringArrayToUint8:()=>ff,fromUint8ToStringArray:()=>pf,getAxesPermutation:()=>hc,getBroadcastDims:()=>Ho,getComplexWithIndex:()=>Mp,getEinsumComputePath:()=>Kp,getEinsumPermutation:()=>jp,getFusedBiasGradient:()=>Kh,getFusedDyActivation:()=>qh,getImageCenter:()=>yp,getInnerMostAxes:()=>pc,getPermuted:()=>vp,getRaggedRank:()=>pp,getReductionAxes:()=>jo,getReshaped:()=>bp,getReshapedPermuted:()=>xp,getRowPartitionTypesHelper:()=>dp,getSliceBeginCoords:()=>wp,getSliceSize:()=>Dp,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Zp,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Jp,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>$p,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>nf,getSparseReshapeInputOutputMismatchErrorMessage:()=>rf,getSparseReshapeInputOutputMultipleErrorMessage:()=>af,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>ef,getSparseReshapeNegativeOutputDimErrorMessage:()=>tf,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>cf,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>sf,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>of,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>uf,getUndoAxesPermutation:()=>dc,isIdentityPermutation:()=>Xp,log:()=>Oa,mergeRealAndImagArrays:()=>Rp,prepareAndValidate:()=>kp,prepareSplitSize:()=>Qp,segment_util:()=>r,shouldFuse:()=>Yh,slice_util:()=>t,splitRealAndImagArrays:()=>_p,stridesOrDilationsArePositive:()=>cu,tupleValuesAreOne:()=>iu,upcastType:()=>Rr,validateDefaultValueShape:()=>fp,validateInput:()=>kh,validateUpdateShape:()=>Dh,warn:()=>_a});var o={};n.r(o),n.d(o,{json:()=>Lw});var i={};n.r(i),n.d(i,{json:()=>Mw});var u={};n.r(u),n.d(u,{json:()=>zw});var c={};n.r(c),n.d(c,{json:()=>Bw});var l={};n.r(l),n.d(l,{json:()=>Pw});var h={};n.r(h),n.d(h,{json:()=>Ww});var d={};n.r(d),n.d(d,{json:()=>Vw});var p={};n.r(p),n.d(p,{json:()=>Uw});var f={};n.r(f),n.d(f,{json:()=>Gw});var m={};n.r(m),n.d(m,{json:()=>Hw});var g={};n.r(g),n.d(g,{json:()=>jw});var y={};n.r(y),n.d(y,{json:()=>qw});var b={};n.r(b),n.d(b,{json:()=>Kw});var v={};n.r(v),n.d(v,{json:()=>Xw});var x={};n.r(x),n.d(x,{json:()=>Yw});var w={};n.r(w),n.d(w,{json:()=>Qw});var D={};n.r(D),n.d(D,{json:()=>Zw});var k={};n.r(k),n.d(k,{json:()=>Jw});var C={};n.r(C),n.d(C,{json:()=>$w});var N={};n.r(N),n.d(N,{OP_SCOPE_SUFFIX:()=>ts,abs:()=>Go,acos:()=>Pi,acosh:()=>Wi,add:()=>Do,addN:()=>Vi,all:()=>Ui,any:()=>Gi,argMax:()=>Hi,argMin:()=>ji,asin:()=>qi,asinh:()=>Ki,atan:()=>Xi,atan2:()=>Yi,atanh:()=>Qi,avgPool:()=>pu,avgPool3d:()=>fu,basicLSTMCell:()=>xu,batchNorm:()=>Du,batchNorm2d:()=>ku,batchNorm3d:()=>Cu,batchNorm4d:()=>Nu,batchToSpaceND:()=>wu,bincount:()=>Su,bitwiseAnd:()=>Eu,booleanMaskAsync:()=>Lh,broadcastArgs:()=>Iu,broadcastTo:()=>Tu,buffer:()=>bo,cast:()=>vo,ceil:()=>Fu,clipByValue:()=>Au,clone:()=>xo,complex:()=>as,concat:()=>mu,concat1d:()=>Ru,concat2d:()=>_u,concat3d:()=>Ou,concat4d:()=>Lu,conv1d:()=>zu,conv2d:()=>Mu,conv2dTranspose:()=>Pu,conv3d:()=>Wu,conv3dTranspose:()=>Uu,cos:()=>Gu,cosh:()=>Hu,cosineWindow:()=>Gh,cumprod:()=>ju,cumsum:()=>qu,denseBincount:()=>Ku,depthToSpace:()=>Xu,depthwiseConv2d:()=>Yu,diag:()=>Qu,dilation2d:()=>Zu,div:()=>Co,divNoNan:()=>ec,dot:()=>tc,dropout:()=>Vh,einsum:()=>nc,elu:()=>ac,enclosingPowerOfTwo:()=>Uh,ensureShape:()=>rc,equal:()=>Ju,erf:()=>sc,euclideanNorm:()=>vc,exp:()=>xc,expandDims:()=>wc,expm1:()=>Dc,eye:()=>Cc,fft:()=>oh,fill:()=>Bo,floor:()=>Nc,floorDiv:()=>ko,fused:()=>a,gather:()=>Sc,gatherND:()=>Wh,greater:()=>Ec,greaterEqual:()=>Ic,ifft:()=>ih,imag:()=>Tc,image:()=>ep,inTopKAsync:()=>Hh,irfft:()=>uh,isFinite:()=>Fc,isInf:()=>Ac,isNaN:()=>Rc,leakyRelu:()=>_c,less:()=>Oc,lessEqual:()=>Lc,linalg:()=>tp,linspace:()=>Mc,localResponseNormalization:()=>zc,log:()=>Bc,log1p:()=>Pc,logSigmoid:()=>Uc,logSoftmax:()=>Gc,logSumExp:()=>Hc,logicalAnd:()=>jc,logicalNot:()=>qc,logicalOr:()=>Kc,logicalXor:()=>Xc,losses:()=>np,lowerBound:()=>Zc,matMul:()=>gu,max:()=>fc,maxPool:()=>Jc,maxPool3d:()=>$c,maxPoolWithArgmax:()=>el,maximum:()=>Ko,mean:()=>tl,meshgrid:()=>rl,min:()=>mc,minimum:()=>sl,mirrorPad:()=>ol,mod:()=>il,moments:()=>ul,movingAverage:()=>zh,mul:()=>No,multiRNNCell:()=>cl,multinomial:()=>ll,neg:()=>Wc,norm:()=>bc,notEqual:()=>hl,oneHot:()=>dl,ones:()=>al,onesLike:()=>pl,op:()=>ns,outerProduct:()=>fl,pad:()=>ml,pad1d:()=>gl,pad2d:()=>yl,pad3d:()=>bl,pad4d:()=>vl,pool:()=>wl,pow:()=>Wo,prelu:()=>Dl,print:()=>wo,prod:()=>kl,raggedGather:()=>Cl,raggedRange:()=>Nl,raggedTensorToTensor:()=>Sl,rand:()=>El,randomGamma:()=>Rl,randomNormal:()=>_l,randomStandardNormal:()=>Ol,randomUniform:()=>Ll,randomUniformInt:()=>Ml,range:()=>zl,real:()=>Bl,reciprocal:()=>Pl,relu:()=>Wl,relu6:()=>Vl,reshape:()=>du,reverse:()=>Ul,reverse1d:()=>Gl,reverse2d:()=>Hl,reverse3d:()=>jl,reverse4d:()=>ql,rfft:()=>lh,round:()=>Kl,rsqrt:()=>Xl,scalar:()=>Fo,scatterND:()=>Bh,searchSorted:()=>Qc,selu:()=>Yl,separableConv2d:()=>Ql,setdiff1dAsync:()=>Zl,sigmoid:()=>yu,sign:()=>Jl,signal:()=>$d,sin:()=>$l,sinh:()=>eh,slice:()=>bu,slice1d:()=>th,slice2d:()=>nh,slice3d:()=>ah,slice4d:()=>rh,softmax:()=>sh,softplus:()=>Vc,spaceToBatchND:()=>xl,sparse:()=>ap,sparseToDense:()=>Ph,spectral:()=>Jd,split:()=>ch,sqrt:()=>So,square:()=>Eo,squaredDifference:()=>hh,squeeze:()=>dh,stack:()=>ph,step:()=>fh,stridedSlice:()=>mh,string:()=>rp,sub:()=>Vo,sum:()=>gc,tan:()=>gh,tanh:()=>vu,tensor:()=>ss,tensor1d:()=>yh,tensor2d:()=>bh,tensor3d:()=>vi,tensor4d:()=>vh,tensor5d:()=>xh,tensor6d:()=>wh,tensorScatterUpdate:()=>Nh,tile:()=>kc,topk:()=>Sh,transpose:()=>Mh,truncatedNormal:()=>Eh,unique:()=>Ih,unsortedSegmentSum:()=>Th,unstack:()=>Fh,upperBound:()=>Ah,variable:()=>Rh,where:()=>$u,whereAsync:()=>Oh,zeros:()=>nl,zerosLike:()=>Io});var S={};n.r(S),n.d(S,{mx:()=>eC,XI:()=>qC,Nk:()=>KC,f6:()=>YC,ct:()=>Yk,YG:()=>$C,hH:()=>sN,z3:()=>GN,sG:()=>eS,uM:()=>sS,vS:()=>DS,qB:()=>FS,GG:()=>RS,lg:()=>zS,rq:()=>OS,cu:()=>QS,WR:()=>KS,GE:()=>$S,px:()=>tE,jC:()=>gE,He:()=>vE,hE:()=>TE,BF:()=>LN,Dk:()=>PE,cl:()=>KE,_B:()=>oI,ub:()=>hI,_f:()=>fI,Ku:()=>xI,qy:()=>DI,Zy:()=>OI,bu:()=>zI,zv:()=>Wk,dH:()=>cC,HS:()=>UC,yH:()=>aT,l3:()=>sT,z9:()=>iT,x6:()=>dT,_m:()=>vT,eW:()=>CT,GK:()=>ET,SP:()=>FT,yr:()=>RT,dl:()=>hS,Dw:()=>BT,xT:()=>UT,_X:()=>gC,wz:()=>YT});var E=n(43),I=n(391);class T{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class F{refCount(e){return A("refCount")}incRef(e){return A("incRef")}timerAvailable(){return!0}time(e){return A("time")}read(e){return A("read")}readSync(e){return A("readSync")}readToGPU(e,t){return A("readToGPU")}numDataIds(){return A("numDataIds")}disposeData(e,t){return A("disposeData")}write(e,t,n){return A("write")}move(e,t,n,a,r){return A("move")}createTensorFromGPUData(e,t,n){return A("createTensorFromGPUData")}memory(){return A("memory")}floatPrecision(){return A("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return A("dispose")}}function A(e){throw new Error("'".concat(e,"' not yet implemented or not found in the registry. ")+"This kernel may not be supported by the tfjs backend you have chosen")}function R(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,L(e,t,n)}function _(e,t,n){return Math.max(e,Math.min(t,n))}function O(e){return e%2===0?e:e+1}function L(e,t,n){const a=e[t];e[t]=e[n],e[n]=a}function M(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function z(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";M(W(e,t),(()=>n+" Shapes ".concat(e," and ").concat(t," must match")))}function B(e){M(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function P(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function W(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function V(e){return e%1===0}function U(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function G(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function H(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return new Promise(((r,s)=>{let o=0;const i=()=>{if(e())return void r();o++;const u=t(o);null!=n&&o>=n?s():null!=a?a(i,u):setTimeout(i,u)};i()}))}function j(e,t){let n=1,a=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(-1===e[s]){if(-1!==a)throw Error("Shapes can only have 1 implicit size. "+"Found -1 at dim ".concat(a," and dim ").concat(s));a=s}else if(e[s]<0)throw Error("Shapes can not be < 0. Found ".concat(e[s]," at dim ").concat(s));if(-1===a){if(t>0&&t!==n)throw Error("Size(".concat(t,") must match the product of shape ").concat(e));return e}if(0===n)throw Error("Cannot infer the missing size in [".concat(e,"] when ")+"there are 0 elements");if(t%n!==0)throw Error("The implicit shape can't be a fractional number. "+"Got ".concat(t," / ").concat(n));const r=e.slice();return r[a]=t/n,r}function q(e,t){const n=t.length;return M((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>"All values in axis param must be in range [-".concat(n,", ").concat(n,") but ")+"got axis ".concat(e))),M(e.every((e=>V(e))),(()=>"All values in axis param must be integers but "+"got axis ".concat(e))),e.map((e=>e<0?n+e:e))}function K(e,t){const n=[],a=[],r=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||r?null:q(t,e).sort();let o=0;for(let i=0;i<e.length;++i){if(null!=s){if(s[o]===i&&1!==e[i])throw new Error("Can't squeeze axis ".concat(i," since its dim '").concat(e[i],"' is not 1"));(null==s[o]||s[o]>i)&&1===e[i]&&(n.push(e[i]),a.push(i)),s[o]<=i&&o++}1!==e[i]&&(n.push(e[i]),a.push(i))}return{newShape:n,keptDims:a}}function X(e,t){return Y(e,t)}function Y(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type ".concat(e));n=new Array(t)}return n}function Q(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function Z(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype ".concat(e))}function J(e){return"string"===typeof e||e instanceof String}function $(e){return"number"===typeof e}function ee(e){return Array.isArray(e)?ee(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":$(e)?"float32":J(e)?"string":"boolean"===typeof e?"bool":"float32"}function te(e){return!!(e&&e.constructor&&e.call&&e.apply)}function ne(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function ae(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function re(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=new Array;if(1===t.length){const s=t[0]*(a?2:1);for(let t=0;t<s;t++)r[t]=n[e+t]}else{const s=t[0],o=t.slice(1),i=o.reduce(((e,t)=>e*t))*(a?2:1);for(let t=0;t<s;t++)r[t]=re(e+t*i,o,n,a)}return r}function se(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const a=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===a)return[];if(a!==t.length)throw new Error("[".concat(e,"] does not match the input size ").concat(t.length).concat(n?" for a complex tensor":"","."));return re(0,e,t,n)}function oe(e,t){const n=ie(e,t);for(let a=0;a<n.length;a++)n[a]=1;return n}function ie(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type ".concat(t))}function ue(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return se(e,new Float32Array(n));if("int32"===t)return se(e,new Int32Array(n));if("bool"===t)return se(e,new Uint8Array(n));throw new Error("Unknown data type ".concat(t))}function ce(e){e.forEach((t=>{M(Number.isInteger(t)&&t>=0,(()=>"Tensor must have a shape comprised of positive integers but got "+"shape [".concat(e,"].")))}))}function le(e,t,n){if(0===t)return 0;if(1===t)return e[0];let a=e[e.length-1];for(let r=0;r<e.length-1;++r)a+=n[r]*e[r];return a}function he(e,t,n){if(0===t)return[];if(1===t)return[e];const a=new Array(t);for(let r=0;r<a.length-1;++r)a[r]=Math.floor(e/n[r]),e-=a[r]*n[r];return a[a.length-1]=e,a}function de(e){return e&&e.then&&"function"===typeof e.then}const pe="tfjsflags";class fe{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=me,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(ge().getBool("IS_TEST")||ge().getBool("PROD")||console.warn("Platform ".concat(this.platformName," has already been set. ")+"Overwriting the platform with ".concat(e,"."))),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];ge().getBool("IS_TEST")||ge().getBool("PROD")||console.warn("Setting feature override from URL ".concat(e,": ").concat(t,".")),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(de(t))throw new Error("Flag ".concat(e," cannot be synchronously evaluated. ")+"Please use getAsync() instead.");return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error("Cannot set flag ".concat(e," as it has not been registered."));this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error("Cannot evaluate flag '".concat(e,"': no evaluation function found."));return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(pe in e){e[pe].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:"".concat(+n)===n?+n:t}(0,n)}))}}}function me(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,a=new Array(n>1?n-1:0),r=1;r<n;r++)a[r-1]=arguments[r];return function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,a[0],a[1]),a.join("=")})),t}function ge(){return be}let ye,be=null;function ve(){if(null==ye){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}ye=e}return ye}function xe(e,t){const n=function(){const e=ve();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const a=t();return n.set(e,a),n.get(e)}}const we="Abs",De="Acos",ke="Acosh",Ce="Add",Ne="AddN",Se="All",Ee="Any",Ie="ArgMax",Te="ArgMin",Fe="Asin",Ae="Asinh",Re="Atan",_e="Atanh",Oe="Atan2",Le="AvgPool",Me="AvgPoolGrad",ze="AvgPool3D",Be="AvgPool3DGrad",Pe="BatchMatMul",We="BatchToSpaceND",Ve="Bincount",Ue="BitwiseAnd",Ge="BroadcastArgs",He="Cast",je="Ceil",qe="ClipByValue",Ke="Complex",Xe="ComplexAbs",Ye="Concat",Qe="Conv2D",Ze="Conv2DBackpropFilter",Je="Conv2DBackpropInput",$e="Conv3D",et="Conv3DBackpropFilterV2",tt="Conv3DBackpropInputV2",nt="Cos",at="Cosh",rt="Cumprod",st="Cumsum",ot="CropAndResize",it="DenseBincount",ut="DepthToSpace",ct="DepthwiseConv2dNative",lt="DepthwiseConv2dNativeBackpropFilter",ht="DepthwiseConv2dNativeBackpropInput",dt="Diag",pt="Dilation2D",ft="Dilation2DBackpropInput",mt="Dilation2DBackpropFilter",gt="Draw",yt="RealDiv",bt="Einsum",vt="Elu",xt="EluGrad",wt="Erf",Dt="Equal",kt="Exp",Ct="ExpandDims",Nt="Expm1",St="FFT",Et="Fill",It="FlipLeftRight",Tt="Floor",Ft="FloorDiv",At="FusedBatchNorm",Rt="GatherV2",_t="GatherNd",Ot="Greater",Lt="GreaterEqual",Mt="Identity",zt="IFFT",Bt="Imag",Pt="IsFinite",Wt="IsInf",Vt="IsNan",Ut="LeakyRelu",Gt="Less",Ht="LessEqual",jt="LinSpace",qt="Log",Kt="Log1p",Xt="LogicalAnd",Yt="LogicalNot",Qt="LogicalOr",Zt="LRN",Jt="LRNGrad",$t="Max",en="Maximum",tn="MaxPool",nn="MaxPoolGrad",an="MaxPool3D",rn="MaxPool3DGrad",sn="MaxPoolWithArgmax",on="Mean",un="Min",cn="Minimum",ln="MirrorPad",hn="Mod",dn="Multinomial",pn="Multiply",fn="Neg",mn="NotEqual",gn="NonMaxSuppressionV3",yn="NonMaxSuppressionV4",bn="NonMaxSuppressionV5",vn="OnesLike",xn="OneHot",wn="Pack",Dn="PadV2",kn="Pow",Cn="Prelu",Nn="Prod",Sn="RaggedGather",En="RaggedRange",In="RaggedTensorToTensor",Tn="Range",Fn="Real",An="Reciprocal",Rn="Relu",_n="Reshape",On="ResizeNearestNeighbor",Ln="ResizeNearestNeighborGrad",Mn="ResizeBilinear",zn="ResizeBilinearGrad",Bn="Relu6",Pn="Reverse",Wn="Round",Vn="Rsqrt",Un="ScatterNd",Gn="TensorScatterUpdate",Hn="SearchSorted",jn="Select",qn="Selu",Kn="Slice",Xn="Sin",Yn="Sinh",Qn="Sign",Zn="Sigmoid",Jn="Softplus",$n="Sqrt",ea="Sum",ta="SpaceToBatchND",na="SplitV",aa="Softmax",ra="SparseFillEmptyRows",sa="SparseReshape",oa="SparseSegmentMean",ia="SparseSegmentSum",ua="SparseToDense",ca="SquaredDifference",la="Square",ha="StaticRegexReplace",da="StridedSlice",pa="StringNGrams",fa="StringSplit",ma="StringToHashBucketFast",ga="Sub",ya="Tan",ba="Tanh",va="Tile",xa="TopK",wa="Transform",Da="Transpose",ka="Unique",Ca="Unpack",Na="UnsortedSegmentSum",Sa="ZerosLike",Ea="Step",Ia="FromPixels",Ta="RotateWithOffset",Fa="_FusedMatMul",Aa="FusedConv2D",Ra="FusedDepthwiseConv2D";function _a(){ge().getBool("IS_TEST")||ge().getBool("PROD")||console.warn(...arguments)}function Oa(){ge().getBool("IS_TEST")||ge().getBool("PROD")||console.log(...arguments)}const La=xe("kernelRegistry",(()=>new Map)),Ma=xe("gradRegistry",(()=>new Map));function za(e,t){const n=Ua(e,t);return La.get(n)}function Ba(e){return Ma.get(e)}function Pa(e){const t=La.entries(),n=[];for(;;){const{done:a,value:r}=t.next();if(a)break;const[s,o]=r,[i]=s.split("_");i===e&&n.push(o)}return n}function Wa(e){const{kernelName:t,backendName:n}=e,a=Ua(t,n);La.has(a)&&_a("The kernel '".concat(t,"' for backend ")+"'".concat(n,"' is already registered")),La.set(a,e)}function Va(e){const{kernelName:t}=e;Ma.has(t)&&ge().getBool("DEBUG")&&_a("Overriding the gradient for '".concat(t,"'")),Ma.set(t,e)}function Ua(e,t){return"".concat(t,"_").concat(e)}function Ga(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var Ha=n(353);const ja=n.n(Ha)()||Ha;function qa(e){return ja.fromString(e,!0,16)}const Ka=qa("c3a5c85c97cb3127"),Xa=qa("b492b66fbe98f273"),Ya=qa("9ae16a3b2f90404f");function Qa(e){return e.xor(e.shru(47))}function Za(e,t,n){const a=e.slice(t,t+n);return ja.fromBytes(Array.from(a),!0,!0)}function Ja(e,t){return Za(e,t,8)}function $a(e,t){return Za(e,t,4)}function er(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function tr(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:qa("9ddfea08eb382d69"),a=e.xor(t).mul(n);a=a.xor(a.shru(47));let r=t.xor(a).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function nr(e,t,n,a){return function(e,t,n,a,r,s){r=r.add(e),s=er(s.add(r).add(a),21);const o=r;return r=(r=r.add(t)).add(n),s=s.add(er(r,44)),[r.add(a),s.add(o)]}(Ja(e,t),Ja(e,t+8),Ja(e,t+16),Ja(e,t+24),n,a)}function ar(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=ja.fromNumber(81,!0);if(t<=32)return t<=16?function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){const n=Ya.add(2*t),a=Ja(e,0).add(Ya),r=Ja(e,t-8);return tr(er(r,37).mul(n).add(a),er(a,25).add(r).mul(n),n)}if(t>=4){const n=Ya.add(2*t);return tr($a(e,0).shl(3).add(t),$a(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),a=t+(e[t-1]<<2);return Qa(Ya.mul(n).xor(Ka.mul(a))).mul(Ya)}return Ya}(e,t):function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=Ya.add(2*t),a=Ja(e,0).mul(Xa),r=Ja(e,8),s=Ja(e,t-8).mul(n),o=Ja(e,t-16).mul(Ya);return tr(er(a.add(r),43).add(er(s,30)).add(o),a.add(er(r.add(Ya),18)).add(s),n)}(e,t);if(t<=64)return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=Ya.add(2*t),a=Ja(e,0).mul(Ya),r=Ja(e,8),s=Ja(e,t-8).mul(n),o=Ja(e,t-16).mul(Ya),i=er(a.add(r),43).add(er(s,30)).add(o),u=tr(i,a.add(er(r.add(Ya),18)).add(s),n),c=Ja(e,16).mul(n),l=Ja(e,24),h=i.add(Ja(e,t-32)).mul(n),d=u.add(Ja(e,t-24)).mul(n);return tr(er(c.add(l),43).add(er(h,30)).add(d),c.add(er(l.add(a),18)).add(h),n)}(e,t);let a=n,r=n.mul(Xa).add(113),s=Qa(r.mul(Ya).add(113)).mul(Ya),o=[ja.UZERO,ja.UZERO],i=[ja.UZERO,ja.UZERO];a=a.mul(Ya).add(Ja(e,0));let u=0;const c=64*(t-1>>6),l=c+(t-1&63)-63;do{a=er(a.add(r).add(o[0]).add(Ja(e,u+8)),37).mul(Xa),r=er(r.add(o[1]).add(Ja(e,u+48)),42).mul(Xa),a=a.xor(i[1]),r=r.add(o[0]).add(Ja(e,u+40)),s=er(s.add(i[0]),33).mul(Xa),o=nr(e,u,o[1].mul(Xa),a.add(i[0])),i=nr(e,u+32,s.add(i[1]),r.add(Ja(e,u+16))),[s,a]=[a,s],u+=64}while(u!==c);const h=Xa.add(s.and(255).shl(1));return u=l,i[0]=i[0].add(t-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),a=er(a.add(r).add(o[0]).add(Ja(e,u+8)),37).mul(h),r=er(r.add(o[1]).add(Ja(e,u+48)),42).mul(h),a=a.xor(i[1].mul(9)),r=r.add(o[0].mul(9).add(Ja(e,u+40))),s=er(s.add(i[0]),33).mul(h),o=nr(e,u,o[1].mul(h),a.add(i[0])),i=nr(e,u+32,s.add(i[1]),r.add(Ja(e,u+16))),[s,a]=[a,s],tr(tr(o[0],i[0],h).add(Qa(r).mul(Ka)).add(s),tr(o[1],i[1],h).add(a),h)}function rr(e,t){return"string"===t?ir(e):sr([e],t)}function sr(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=lr(e)),ge().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const a=e[n];if(isNaN(a)||!isFinite(a))throw Error("A tensor of type ".concat(t," being uploaded contains ").concat(a,"."))}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type ".concat(t))}function or(){return ge().platform.now()}function ir(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",ge().platform.encode(e,t)}function ur(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",ge().platform.decode(e,t)}function cr(e){return null!=ge().platform.isTypedArray?ge().platform.isTypedArray(e):Ga(e)}function lr(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||de(e)||null==e||cr(e)&&n)t.push(e);else if(Array.isArray(e)||cr(e))for(let a=0;a<e.length;++a)lr(e[a],t,n);else{let a=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(a=Math.max(a,Number(t)));for(let r=0;r<=a;r++)lr(e[r],t,n)}return t}class hr{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new pr)}profileKernel(e,t,n){let a;const r=()=>{a=n()};let s;const o=or();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(r);else{r();for(const e of a)e.dataSync();s=Promise.resolve({kernelMs:or()-o})}if(ge().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let i=0;i<a.length;i++){const t=a[i];t.data().then((n=>{dr(n,t.dtype,e)}))}return{kernelName:e,outputs:a,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:a,inputs:r,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),a,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function dr(e,t,n){if("float32"!==t)return!1;for(let a=0;a<e.length;a++){const t=e[a];if(isNaN(t)||!isFinite(t))return console.warn("Found ".concat(t," in the result of '").concat(n,"'")),!0}return!1}class pr{logKernelProfile(e,t,n,a,r,s){const o="number"===typeof a?G("".concat(a,"ms"),9):a.error,i=G(e,25),u=t.rank,c=t.size,l=G(t.shape.toString(),14);let h="";for(const d in r){const e=r[d];if(null!=e){const n=e.shape||t.shape,a=n.length;h+="".concat(d,": ").concat(a,"D ").concat(a>0?n:""," ")}}console.log("%c".concat(i,"\t%c").concat(o,"\t%c").concat(u,"D ").concat(l,"\t%c").concat(c,"\t%c").concat(h,"\t%c").concat(s),"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function fr(e,t,n,a){const r=ae(t),s=function(e,t,n,a){const r=P(t),s=a[a.length-1],o=new Array(s).fill(0),i=t.length,u="complex64"===n?br(e):e;if(i>1)for(let c=0;c<r/s;c++){const e=c*s;for(let t=0;t<s;t++)o[t]=Math.max(o[t],mr(u[e+t],0,n).length)}return o}(e,t,n,r),o=t.length,i=yr(e,t,n,r,s),u=["Tensor"];return a&&(u.push("  dtype: ".concat(n)),u.push("  rank: ".concat(o)),u.push("  shape: [".concat(t,"]")),u.push("  values:")),u.push(i.map((e=>"    "+e)).join("\n")),u.join("\n")}function mr(e,t,n){let a;return a=Array.isArray(e)?"".concat(parseFloat(e[0].toFixed(7))," + ")+"".concat(parseFloat(e[1].toFixed(7)),"j"):J(e)?"'".concat(e,"'"):"bool"===n?gr(e):parseFloat(e.toFixed(7)).toString(),G(a,t)}function gr(e){return 0===e?"false":"true"}function yr(e,t,n,a,r){let s=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const o="complex64"===n?2:1,i=t[0],u=t.length;if(0===u){if("complex64"===n){return[mr(br(e)[0],0,n)]}return"bool"===n?[gr(e[0])]:[e[0].toString()]}if(1===u){if(i>20){const t=3*o;let a=Array.from(e.slice(0,t)),s=Array.from(e.slice((i-3)*o,i*o));return"complex64"===n&&(a=br(a),s=br(s)),["["+a.map(((e,t)=>mr(e,r[t],n))).join(", ")+", ..., "+s.map(((e,t)=>mr(e,r[i-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?br(e):Array.from(e)).map(((e,t)=>mr(e,r[t],n))).join(", ")+"]"]}const c=t.slice(1),l=a.slice(1),h=a[0]*o,d=[];if(i>20){for(let t=0;t<3;t++){const a=t*h,s=a+h;d.push(...yr(e.slice(a,s),c,n,l,r,!1))}d.push("...");for(let t=i-3;t<i;t++){const a=t*h,s=a+h;d.push(...yr(e.slice(a,s),c,n,l,r,t===i-1))}}else for(let m=0;m<i;m++){const t=m*h,a=t+h;d.push(...yr(e.slice(t,a),c,n,l,r,m===i-1))}const p=2===u?",":"";d[0]="["+(i>0?d[0]+p:"");for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=",\n";for(let m=2;m<u;m++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function br(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class vr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=P(e),null!=n){const e=n.length;M(e===this.size,(()=>"Length of values '".concat(e,"' does not match the size ")+"inferred by the shape '".concat(this.size,"'.")))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Y(t,this.size),this.strides=ae(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];0===n.length&&(n=[0]),M(n.length===this.rank,(()=>"The number of provided coordinates (".concat(n.length,") must ")+"match the rank (".concat(this.rank,")")));const r=this.locToIndex(n);this.values[r]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let a=0;for(const s of t){if(s<0||s>=this.shape[a]){const e="Requested out of range element at ".concat(t,". ")+"  Buffer shape=".concat(this.shape);throw new Error(e)}a++}let r=t[t.length-1];for(let s=0;s<t.length-1;++s)r+=this.strides[s]*t[s];return this.values[r]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return xr().makeTensor(this.values,this.shape,this.dtype)}}let xr=null,wr=null,Dr=null;class kr{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=P(e),this.strides=ae(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return wr.buffer(this.shape,this.dtype,e)}bufferSync(){return wr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return se(this.shape,e,"complex64"===this.dtype)}arraySync(){return se(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=xr().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>ur(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),xr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=xr().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>ur(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await xr().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),xr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return wr.print(this,e)}clone(){return this.throwIfDisposed(),wr.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return fr(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),wr.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),xr().makeVariable(this,e,t,n)}}function Cr(){return xe("Tensor",(()=>kr))}Object.defineProperty(kr,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Cr();class Nr extends kr{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error("dtype of the new value (".concat(e.dtype,") and ")+"previous value (".concat(this.dtype,") must match"));if(!W(e.shape,this.shape))throw new Error("shape of the new value (".concat(e.shape,") and ")+"previous value (".concat(this.shape,") must match"));xr().disposeTensor(this),this.dataId=e.dataId,xr().incRef(this,null)}dispose(){xr().disposeVariable(this),this.isDisposedInternal=!0}}var Sr,Er,Ir,Tr,Fr;Object.defineProperty(Nr,Symbol.hasInstance,{value:e=>e instanceof kr&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Sr||(Sr={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Er||(Er={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Ir||(Ir={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Tr||(Tr={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Fr||(Fr={}));const Ar={float32:Tr,int32:Er,bool:Ir,complex64:Fr};function Rr(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error("Can not upcast ".concat(e," with ").concat(t))}return Ar[e][t]}function _r(e){return Rr(e,"int32")}function Or(e){return null!=e&&"object"===typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function Lr(e){return"undefined"!==typeof GPUBuffer&&null!=e&&"object"===typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function Mr(e,t){if(e.dtype===t.dtype)return[e,t];const n=Rr(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function zr(e,t){return t.some((t=>t.id===e.id))}function Br(e){const t=[];return Pr(e,t,new Set),t}function Pr(e,t,n){if(null==e)return;if(e instanceof kr)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!==typeof a)return;var a;const r=e;for(const s in r){const e=r[s];n.has(e)||(n.add(e),Pr(e,t,n))}}function Wr(e){return null!=e.kernelName}class Vr{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ur{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Vr}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error("Backend '".concat(this.backendName,"' has not yet been initialized. Make ")+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error("The highest priority backend '".concat(e,"' has not yet been ")+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(_a("".concat(e," backend was already registered. ")+"Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error("Backend name '".concat(e,"' not found in registry"));if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new hr(this.backendInstance),!0}setupRegisteredKernels(){Pa(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Pa(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error("Cannot initialize backend ".concat(e,", no registration found."));try{const n=t.factory();if(!n||n instanceof F||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,a=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,_a("Initialization of backend ".concat(e," failed")),_a(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(n){return _a("Initialization of backend ".concat(e," failed")),_a(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error("".concat(e," backend not found in registry"));this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),a=n.backend,r=this.readSync(t),s=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,a=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(a){throw t(),a}}nextTensorId(){return Ur.nextTensorId++}nextVariableId(){return Ur.nextVariableId++}clone(e){const t=Hr.runKernel(Mt,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return Hr.runKernel(He,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=za(e,this.backendName)))throw new Error("Kernel '".concat(e,"' not registered for backend '").concat(this.backendName,"'"));return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const a=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=a-t-r-s;if(o>0)throw new Error("Backend '".concat(this.backendName,"' has an internal memory leak ")+"(".concat(o," data ids) after running '").concat(e,"'"))}runKernelFunc(e){let t,n=[];const a=this.isTapeOn(),r=this.state.numBytes,s=this.state.numTensors;let o,i;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=Wr(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Wr(e)){const{kernelName:t,inputs:r,attrs:s}=e;null==this.backendName&&this.backend;const u=za(t,this.backendName);M(null!=u,(()=>"Cannot find registered kernel '".concat(t,"' for backend '").concat(this.backendName,"'"))),o=()=>{const e=this.backend.numDataIds();i=u.kernelFunc({inputs:r,attrs:s,backend:this.backend});const o=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const c=o.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(a){const e=this.getTensorsForGradient(t,r,c);n=this.saveTensorsForBackwardMode(e)}return c}}else{const{forwardFunc:t}=e,r=e=>{a&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();i=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:c,attrs:l}=e,h=Wr(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(u,c,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=o()})),a&&this.addTapeNode(u,c,t,h,n,l),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map((e=>null!=c[e]?c[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const a=Ba(e);if(null!=a){const e=a.inputsToSave||[],r=a.outputsToSave||[];let s;a.saveAllInputs?(M(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const o=n.filter(((e,t)=>r[t]));return s.concat(o)}return[]}makeTensor(e,t,n,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=e;"string"===n&&J(e[0])&&(r=e.map((e=>ir(e))));const s=a.write(r,t,n),o=new kr(t,n,s,this.nextTensorId());if(this.trackTensor(o,a),"string"===n){const e=this.state.tensorInfo.get(s),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,a){const r={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,a)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:a,dtype:r}=e,s=new kr(a,r,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));const r=new Nr(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error("Variable with name ".concat(r.name," was already registered"));return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Z(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Nr||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Z(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,a,r,s){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},i=Ba(e);null!=i&&(a=i.gradFunc),null!=a&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],a=ie(e.size,e.dtype);return this.makeTensor(a,e.shape,e.dtype)}return e})),a(e.length>1?e:e[0],r,s))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Br(e),n=new Set(t.map((e=>e.id)));for(let r=0;r<this.state.activeScope.track.length;r++){const e=this.state.activeScope.track[r];e.kept||n.has(e.id)||e.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==a.id||this.track(e)}))}gradients(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(M(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '".concat(n.dtype,"'"));const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));M(r instanceof kr,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const a={},r={};for(let u=0;u<t.length;u++)a[t[u].id]=!0;for(let u=0;u<e.length;u++){const n=e[u],s=n.inputs;for(const e in s){const o=s[e];let i=!1;for(let e=0;e<t.length;e++)if(a[o.id]){n.outputs.forEach((e=>a[e.id]=!0)),i=!0,r[n.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let u=e.length-1;u>=0;u--){const t=e[u],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(s[t.outputs[e].id]){for(const e in n)s[n[e].id]=!0,o[t.id]=!0;break}}const i=[];for(let u=0;u<e.length;u++){const t=e[u];if(r[t.id]&&o[t.id]){const e={};for(const r in t.inputs){const n=t.inputs[r];a[n.id]&&(e[r]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,i.push(n)}}return i}(this.state.activeTape,t,r);if(!a&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=oe(P(e),"float32");return Hr.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,a){for(let r=t.length-1;r>=0;r--){const s=t[r],o=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==s.gradient)throw new Error("Cannot compute gradient: gradient function not found "+"for ".concat(s.kernelName,"."));const i=s.gradient(o);for(const t in s.inputs){if(!(t in i))throw new Error("Cannot backprop through input ".concat(t,". ")+"Available gradients found: ".concat(Object.keys(i),"."));const r=n((()=>i[t]()));if("float32"!==r.dtype)throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"".concat(t," must have 'float32' dtype, but has '").concat(r.dtype,"'"));const o=s.inputs[t];if(!W(r.shape,o.shape))throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"'".concat(t,"' has shape '").concat(r.shape,"', which does not match ")+"the shape of the input '".concat(o.shape,"'"));if(null==e[o.id])e[o.id]=r;else{const t=e[o.id];e[o.id]=a(t,r),t.dispose()}}}}(e,s,(e=>this.tidy(e)),jr);const a=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:a}}))}customGrad(e){var t=this;return M(te(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,a=new Array(n),r=0;r<n;r++)a[r]=arguments[r];let s;M(a.every((e=>e instanceof kr)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const o={};a.forEach(((e,t)=>{o[t]=e}));return t.runKernelFunc({forwardFunc:(t,n)=>(s=e(...a,n),M(s.value instanceof kr,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),M(te(s.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),s.value),backwardsFunc:(e,t)=>{const n=s.gradFunc(e,t),r=Array.isArray(n)?n:[n];M(r.length===a.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),M(r.every((e=>e instanceof kr)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return r.forEach(((e,t)=>{o[t]=()=>e})),o},inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=or(),n=await this.backend.time(e);return n.wallMs=or()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Vr;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Gr(){const e=ve();if(null==e._tfengine){const t=new fe(e);e._tfengine=new Ur(t)}var t;return t=e._tfengine.ENV,be=t,xr=()=>e._tfengine,e._tfengine}Ur.nextTensorId=0,Ur.nextVariableId=0;const Hr=Gr();function jr(e,t){const n={a:e,b:t};return Hr.runKernel(Ce,n)}let qr;function Kr(e){if(void 0!==qr)return qr;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Xr(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}const Yr=ge();function Qr(e,t){let n=e;if(cr(e))return"string"===t?[]:[e.length];if(Or(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(Lr(e))return[e.buffer.size/(null==t?4:Z(t))];if(!Array.isArray(e))return[];const a=[];for(;Array.isArray(n)||cr(n)&&"string"!==t;)a.push(n.length),n=n[0];return Array.isArray(e)&&ge().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Zr(e,a,[]),a}function Zr(e,t,n){if(n=n||[],!Array.isArray(e)&&!cr(e))return void M(0===t.length,(()=>"Element arr[".concat(n.join("]["),"] is a primitive, ")+"but should be an array/TypedArray of ".concat(t[0]," elements")));M(t.length>0,(()=>"Element arr[".concat(n.join("]["),"] should be a primitive, ")+"but is an array of ".concat(e.length," elements"))),M(e.length===t[0],(()=>"Element arr[".concat(n.join("]["),"] should have ").concat(t[0]," ")+"elements, but has ".concat(e.length," elements")));const a=t.slice(1);for(let r=0;r<e.length;++r)Zr(e[r],a,n.concat(r))}function Jr(e,t,n,a){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error("Argument '".concat(n,"' passed to '").concat(a,"' must ")+"be ".concat(e," tensor, but got ").concat(t," tensor"))}}function $r(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof Cr())return Jr(a,e.dtype,t,n),e;let r=ee(e);if("string"!==r&&["bool","int32","float32"].indexOf(a)>=0&&(r=a),Jr(a,r,t,n),null==e||!cr(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const a=null==e?"null":e.constructor.name;throw new Error("Argument '".concat(t,"' passed to '").concat(n,"' must be a ")+"Tensor or TensorLike, but got '".concat(a,"'"))}const s=Qr(e,r);cr(e)||Array.isArray(e)||(e=[e]);const o="string"!==r?sr(e,r):lr(e,[],!0);return Hr.makeTensor(o,s,r)}function es(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error("Argument ".concat(t," passed to ").concat(n," must be a ")+"`Tensor[]` or `TensorLike[]`");return e.map(((e,r)=>$r(e,"".concat(t,"[").concat(r,"]"),n,a)))}Yr.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Yr.registerFlag("IS_BROWSER",(()=>Xr())),Yr.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),Yr.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Yr.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),Yr.registerFlag("PROD",(()=>!1)),Yr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Yr.getBool("DEBUG"))),Yr.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Yr.registerFlag("IS_TEST",(()=>!1)),Yr.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>Yr.getBool("DEBUG"))),Yr.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Yr.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),Yr.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const ts="__op";function ns(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+"".concat(t.length," keys."));let n=t[0];const a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=ts;const r=function(){Hr.startScope(n);try{const e=a(...arguments);return de(e)&&console.error("Cannot return a Promise inside of tidy."),Hr.endScope(e),e}catch(e){throw Hr.endScope(null),e}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}const as=ns({complex_:function(e,t){const n=$r(e,"real","complex"),a=$r(t,"imag","complex");z(n.shape,a.shape,"real and imag shapes, ".concat(n.shape," and ").concat(a.shape,", ")+"must match in call to tf.complex().");const r={real:n,imag:a};return Hr.runKernel(Ke,r)}});function rs(e,t,n,a){if(null==a)a=ee(e);else if("complex64"===a)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Lr(e)||Or(e)){if("float32"!==a&&"int32"!==a)throw new Error("Creating tensor from GPU data only supports "+"'float32'|'int32' dtype, while the dtype is ".concat(a,"."));return Hr.backend.createTensorFromGPUData(e,t||n,a)}if(!cr(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){ce(t);const e=P(t),a=P(n);M(e===a,(()=>"Based on the provided shape, [".concat(t,"], the tensor should have ")+"".concat(e," values but has ").concat(a)));for(let r=0;r<n.length;++r){const e=n[r],a=r!==n.length-1||e!==P(t.slice(r));M(n[r]===t[r]||!a,(()=>"Error creating a new Tensor. Inferred shape "+"(".concat(n,") does not match the provided ")+"shape (".concat(t,"). ")))}}return cr(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==a?sr(e,a):lr(e,[],!0),Hr.makeTensor(e,t,a)}function ss(e,t,n){return rs(e,t,Qr(e,n),n)}const os={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class is{static join(e){return new is(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>cr(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const a=e[n];n!==e.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=t+a.byteLength;this.shards.push({buffer:a,start:t,end:r}),t=r}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error("Could not find start shard for byte ".concat(e));const a=new ArrayBuffer(t-e),r=new Uint8Array(a);let s=0;for(let o=n;o<this.shards.length;o++){const n=this.shards[o],a=e+s-n.start,i=s,u=Math.min(t,n.end)-n.start,c=new Uint8Array(n.buffer,a,u-a);if(r.set(c,i),s+=c.length,t<n.end)break}return a}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,a=e.length;for(;n<=a;){const r=Math.floor((a-n)/2)+n,s=t(e[r]);if(0===s)return r;s<0?a=r:n=r+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function us(){return Hr}function cs(){return Hr.memory()}function ls(e,t){return Hr.tidy(e,t)}function hs(e){Br(e).forEach((e=>e.dispose()))}function ds(e){return Hr.keep(e)}function ps(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return Hr.registerBackend(e,t,n)}function fs(){return Hr.backend}Dr=function(e){ge().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const ms=4;async function gs(e,t){const n=[],a=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<r.length;++s){const o=r[s],i=Array.isArray(e)?e[s].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error("Unsupported dtype in weight '".concat(o,"': ").concat(i.dtype));const u={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+ms*t.length,a=new Uint8Array(n);let r=0;for(let s=0;s<t.length;s++){const e=t[s],n=new Uint8Array(new Uint32Array([e.length]).buffer);a.set(n,r),r+=ms,a.set(e,r),r+=e.length}e(a)}));a.push(e)}else a.push(i.data());null!=t&&(u.group=t),n.push(u)}return{data:ks(await Promise.all(a)),specs:n}}function ys(e,t){const n=new is(e),a={};let r=0;for(const s of t){const e=bs(s,((e,t)=>n.slice(r+e,r+t)));a[s.name]=xs(s,n.slice(r,r+e)),r+=e}return a}function bs(e,t){const n=P(e.shape);let a;if("quantization"in e){const t=e.quantization;a=os[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=ms+new Uint32Array(t(e,e+ms))[0];return e}a=os[e.dtype]}return n*a}async function vs(e,t){const n=P(e.shape);let a;if("quantization"in e){const t=e.quantization;a=os[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=ms+new Uint32Array(await t(e,e+ms))[0];return e}a=os[e.dtype]}return n*a}function xs(e,t){const n=e.name,a=e.dtype,r=e.shape,s=P(r);let o,i=0;if("quantization"in e){const r=e.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error("Weight ".concat(e.name," with quantization ").concat(r.dtype," ")+"doesn't have corresponding metadata min and scale.")}else{if("float16"!==r.dtype)throw new Error("Weight ".concat(e.name," has unknown ")+"quantization dtype ".concat(r.dtype,". ")+"Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.");if("float32"!==a)throw new Error("Weight ".concat(e.name," is quantized with ").concat(r.dtype," ")+"which only supports weights of type float32 not ".concat(a,"."))}const u=os[r.dtype],c="uint8"===r.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===a)if("uint8"===r.dtype||"uint16"===r.dtype){o=new Float32Array(c.length);for(let e=0;e<c.length;e++){const t=c[e];o[e]=t*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error("Unsupported quantization type ".concat(r.dtype," ")+"for weight type float32.");{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return a=>{const r=new ArrayBuffer(4*a.length),s=new Uint32Array(r);for(let o=0;o<a.length;o++){const r=a[o],i=e[n[r>>10]+(1023&r)]+t[r>>10];s[o]=i}return new Float32Array(r)}}();o=e(c)}}else{if("int32"!==a)throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(a));if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error("Unsupported quantization type ".concat(r.dtype," ")+"for weight type int32.");o=new Int32Array(c.length);for(let e=0;e<c.length;e++){const t=c[e];o[e]=Math.round(t*r.scale+r.min)}}i+=s*u}else if("string"===a){const n=P(e.shape);o=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(i,i+ms))[0];i+=ms;const n=new Uint8Array(t.slice(i,i+e));o.push(n),i+=e}}else{const e=os[a];if("float32"===a)o=new Float32Array(t);else if("int32"===a)o=new Int32Array(t);else{if("bool"!==a){if("complex64"===a){o=new Float32Array(t);const e=new Float32Array(o.length/2),n=new Float32Array(o.length/2);for(let t=0;t<e.length;t++)e[t]=o[2*t],n[t]=o[2*t+1];const a=ss(e,r,"float32"),s=ss(n,r,"float32"),i=as(a,s);return a.dispose(),s.dispose(),i}throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(a))}o=new Uint8Array(t)}i+=s*e}return ss(o,r,a)}async function ws(e,t,n){let a=new Uint8Array(t);for(;a.byteLength<n;){const{done:t,value:r}=await e.read();if(t&&null==r){const e=n-a.byteLength;throw new Error("Reader is done but ".concat(e," bytes are still expected"))}const s=new Uint8Array(a.length+r.byteLength);s.set(a,0),s.set(new Uint8Array(r),a.length),a=s}return a.buffer}async function Ds(e,t){const n={},a=e.getReader();let r=new ArrayBuffer(0);for(const s of t){const e=await vs(s,(async(e,t)=>(r=await ws(a,r,t),r.slice(e,t))));r=await ws(a,r,e);const t=r.slice(0,e);r=r.slice(e);const o=xs(s,t);if(n[s.name]=o,"webgpu"===Hr.backendName){const e=fs();"uploadToGPU"in e&&P(o.shape)>=ge().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(o.dataId)}}return n}function ks(e){if(null===e)throw new Error("Invalid input value: ".concat(JSON.stringify(e)));let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: ".concat(e.constructor.name))}));const a=new Uint8Array(t);let r=0;return n.forEach((e=>{a.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),a.buffer}const Cs="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function Ns(e){return Cs?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function Ss(e){return is.join(e)}function Es(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Is(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Ts(e,t,n){const a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(a.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");a.weightSpecs=t,a.weightData=n}return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(a.initializerSignature=e.initializerSignature),a}async function Fs(e,t){let n,a;return null!=e.weightsManifest&&([n,a]=await t(e.weightsManifest)),Ts(e,n,a)}function As(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ns(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ns(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new is(e.weightData).byteLength}}function Rs(e){const t=[];for(const n of e)t.push(...n.weights);return t}class _s{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==_s.instance&&(_s.instance=new _s),_s.instance}static registerSaveRouter(e){_s.getInstance().saveRouters.push(e)}static registerLoadRouter(e){_s.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return _s.getHandlers(e,"save")}static getLoadHandlers(e,t){return _s.getHandlers(e,"load",t)}static getHandlers(e,t,n){const a=[];return("load"===t?_s.getInstance().loadRouters:_s.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&a.push(r)})),a}}const Os=e=>_s.registerSaveRouter(e),Ls=e=>_s.registerLoadRouter(e),Ms=e=>_s.getSaveHandlers(e),zs=(e,t)=>_s.getLoadHandlers(e,t),Bs="tensorflowjs",Ps="models_store",Ws="model_info_store";function Vs(){if(!ge().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Us(e){const t=e.result;t.createObjectStore(Ps,{keyPath:"modelPath"}),t.createObjectStore(Ws,{keyPath:"modelPath"})}class Gs{constructor(e){if(this.indexedDB=Vs(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const a=this.indexedDB.open(Bs,1);a.onupgradeneeded=()=>Us(a),a.onsuccess=()=>{const r=a.result;if(null==t){const t=r.transaction(Ps,"readonly"),a=t.objectStore(Ps).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return r.close(),n(new Error("Cannot find model with path '".concat(this.modelPath,"' ")+"in IndexedDB."));e(a.result.modelArtifacts)},a.onerror=e=>(r.close(),n(a.error)),t.oncomplete=()=>r.close()}else{t.weightData=is.join(t.weightData);const a=As(t),o=r.transaction(Ws,"readwrite");let i,u,c=o.objectStore(Ws);try{i=c.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(s){return n(s)}i.onsuccess=()=>{u=r.transaction(Ps,"readwrite");const i=u.objectStore(Ps);let l;try{l=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(s){return n(s)}l.onsuccess=()=>e({modelArtifactsInfo:a}),l.onerror=e=>{c=o.objectStore(Ws);const t=c.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(l.error)),t.onerror=e=>(r.close(),n(l.error))}},i.onerror=e=>(r.close(),n(i.error)),o.oncomplete=()=>{null==u?r.close():u.oncomplete=()=>r.close()}}},a.onerror=e=>n(a.error)}))}}Gs.URL_SCHEME="indexeddb://";const Hs=e=>{return ge().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Gs.URL_SCHEME)?(t=e.slice(Gs.URL_SCHEME.length),new Gs(t)):null;var t};_s.registerSaveRouter(Hs),_s.registerLoadRouter(Hs);class js{constructor(){this.indexedDB=Vs()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Bs,1);n.onupgradeneeded=()=>Us(n),n.onsuccess=()=>{const a=n.result,r=a.transaction(Ws,"readonly"),s=r.objectStore(Ws).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(a.close(),t(s.error)),r.oncomplete=()=>a.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Gs.URL_SCHEME)?t.slice(Gs.URL_SCHEME.length):t,new Promise(((t,n)=>{const a=this.indexedDB.open(Bs,1);a.onupgradeneeded=()=>Us(a),a.onsuccess=()=>{const r=a.result,s=r.transaction(Ws,"readwrite"),o=s.objectStore(Ws),i=o.get(e);let u;i.onsuccess=()=>{if(null==i.result)return r.close(),n(new Error("Cannot find model with path '".concat(e,"' ")+"in IndexedDB."));{const a=o.delete(e),s=()=>{u=r.transaction(Ps,"readwrite");const a=u.objectStore(Ps).delete(e);a.onsuccess=()=>t(i.result.modelArtifactsInfo),a.onerror=e=>n(i.error)};a.onsuccess=s,a.onerror=e=>(s(),r.close(),n(i.error))}},i.onerror=e=>(r.close(),n(i.error)),s.oncomplete=()=>{null==u?r.close():u.oncomplete=()=>r.close()}},a.onerror=e=>n(a.error)}))}}const qs="/",Ks="tensorflowjs_models",Xs="info",Ys="model_topology",Qs="weight_specs",Zs="weight_data",Js="model_metadata";function $s(e){return{info:[Ks,e,Xs].join(qs),topology:[Ks,e,Ys].join(qs),weightSpecs:[Ks,e,Qs].join(qs),weightData:[Ks,e,Zs].join(qs),modelMetadata:[Ks,e,Js].join(qs)}}function eo(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function to(e){const t=e.split(qs);if(t.length<3)throw new Error("Invalid key format: ".concat(e));return t.slice(1,t.length-1).join(qs)}class no{constructor(e){if(!ge().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=$s(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),a=JSON.stringify(e.weightSpecs),r=As(e),s=is.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,function(e){if(Cs)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let a=0,r=t.length;a<r;a++)n+=String.fromCharCode(t[a]);return btoa(n)}(s));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:r}}catch(t){throw eo(this.keys),new Error("Failed to save model '".concat(this.modelPath,"' to local storage: ")+"size quota being exceeded is a possible cause of this failure: "+"modelTopologyBytes=".concat(r.modelTopologyBytes,", ")+"weightSpecsBytes=".concat(r.weightSpecsBytes,", ")+"weightDataBytes=".concat(r.weightDataBytes,"."))}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error("In local storage, there is no model with name '".concat(this.modelPath,"'"));if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error("In local storage, the topology of model '".concat(this.modelPath,"' ")+"is missing.");t.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error("In local storage, the weight specs of model '".concat(this.modelPath,"' ")+"are missing.");t.weightSpecs=a;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error("In local storage, the binary weight values of model "+"'".concat(this.modelPath,"' are missing."));return t.weightData=function(e){if(Cs){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let a=0;a<t.length;++a)n.set([t.charCodeAt(a)],a);return n.buffer}(s),t}}no.URL_SCHEME="localstorage://";const ao=e=>{return ge().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(no.URL_SCHEME)?(t=e.slice(no.URL_SCHEME.length),new no(t)):null;var t};_s.registerSaveRouter(ao),_s.registerLoadRouter(ao);class ro{constructor(){M(ge().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),M("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Ks+qs,n=qs+Xs;for(let a=0;a<this.LS.length;++a){const r=this.LS.key(a);if(r.startsWith(t)&&r.endsWith(n)){e[to(r)]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){var t;const n=$s(e=(t=e).startsWith(no.URL_SCHEME)?t.slice(no.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error("Cannot find model at path '".concat(e,"'"));const a=JSON.parse(this.LS.getItem(n.info));return eo(n),a}}const so="://";class oo{constructor(){this.managers={}}static getInstance(){return null==oo.instance&&(oo.instance=new oo),oo.instance}static registerManager(e,t){M(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(so)&&(e=e.slice(0,e.indexOf(so))),M(e.length>0,(()=>"scheme must not be an empty string."));const n=oo.getInstance();M(null==n.managers[e],(()=>"A model store manager is already registered for scheme '".concat(e,"'."))),n.managers[e]=t}static getManager(e){const t=oo.getInstance().managers[e];if(null==t)throw new Error("Cannot find model manager for scheme '".concat(e,"'"));return t}static getSchemes(){return Object.keys(oo.getInstance().managers)}}function io(e){if(-1===e.indexOf(so))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+"".concat(oo.getSchemes().join(",")));return{scheme:e.split(so)[0],path:e.split(so)[1]}}async function uo(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];M(e!==t,(()=>"Old path and new path are the same: '".concat(e,"'")));const a=_s.getLoadHandlers(e);M(a.length>0,(()=>"Copying failed because no load handler is found for source URL ".concat(e,"."))),M(a.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"load handlers for source URL ".concat(e,".")));const r=a[0],s=_s.getSaveHandlers(t);M(s.length>0,(()=>"Copying failed because no save handler is found for destination "+"URL ".concat(t,"."))),M(s.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"save handlers for destination URL ".concat(t,".")));const o=s[0],i=io(e).scheme,u=io(e).path,c=i===io(e).scheme,l=await r.load();n&&c&&await oo.getManager(i).removeModel(u);const h=await o.save(l);return n&&!c&&await oo.getManager(i).removeModel(u),h.modelArtifactsInfo}async function co(){const e=oo.getSchemes(),t={};for(const n of e){const e=await oo.getManager(n).listModels();for(const a in e){t[n+so+a]=e[a]}}return t}async function lo(e){const t=io(e);return oo.getManager(t.scheme).removeModel(t.path)}async function ho(e,t){return uo(e,t,!1)}async function po(e,t){return uo(e,t,!0)}class fo{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got ".concat(t));return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&ge().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return Ga(e)}}if(ge().get("IS_BROWSER")){ge().setPlatform("browser",new fo);try{oo.registerManager(no.URL_SCHEME,new ro)}catch(rW){}try{oo.registerManager(Gs.URL_SCHEME,new js)}catch(rW){}}const mo=()=>n(817);let go;class yo{constructor(){this.util=n(590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=ge().global.fetch?ge().global.fetch(e,t):(null==go&&(go=mo()),go(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got ".concat(t));return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}function bo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",ce(e),new vr(e,t,n)}ge().get("IS_NODE")&&!ge().get("IS_BROWSER")&&ge().setPlatform("node",new yo);const vo=ns({cast_:function(e,t){const n=$r(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error("Failed to cast to unknown dtype ".concat(t));if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const a={x:n},r={dtype:t};return Hr.runKernel(He,a,r)}});const xo=ns({clone_:function(e){const t={x:$r(e,"x","clone","string_or_numeric")};return Hr.runKernel(Mt,t)}});function wo(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}Gr();wr={buffer:bo,cast:vo,clone:xo,print:wo};const Do=ns({add_:function(e,t){let n=$r(e,"a","add"),a=$r(t,"b","add");[n,a]=Mr(n,a);const r={a:n,b:a};return Hr.runKernel(Ce,r)}});const ko=ns({floorDiv_:function(e,t){let n=$r(e,"a","floorDiv"),a=$r(t,"b","floorDiv");[n,a]=Mr(n,a);const r={a:n,b:a};return Hr.runKernel(Ft,r)}});const Co=ns({div_:function(e,t){let n=$r(e,"a","div"),a=$r(t,"b","div");if([n,a]=Mr(n,a),"int32"===n.dtype&&"int32"===a.dtype)return ko(n,a);const r={a:n,b:a};return Hr.runKernel(yt,r,{})}});const No=ns({mul_:function(e,t){let n=$r(e,"a","mul"),a=$r(t,"b","mul");[n,a]=Mr(n,a);const r={a:n,b:a};return Hr.runKernel(pn,r)}});const So=ns({sqrt_:function(e){const t={x:$r(e,"x","sqrt","float32")};return Hr.runKernel($n,t)}});const Eo=ns({square_:function(e){const t=$r(e,"x","square");return Hr.runKernel("Square",{x:t},{})}});const Io=ns({zerosLike_:function(e){const t={x:$r(e,"x","zerosLike")};return Hr.runKernel(Sa,t)}});function To(e){return Hr.customGrad(e)}function Fo(e,t){if((cr(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&cr(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return rs(e,[],[],t)}const Ao=new Map,Ro=new Map;class _o{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Oo{constructor(){this.classNameMap={}}static getMap(){return null==Oo.instance&&(Oo.instance=new Oo),Oo.instance}static register(e){Oo.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Lo(e,t,n){M(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),M("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),M(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"===typeof t&&(t="Custom"),"undefined"===typeof n&&(n=e.className);const a=t+">"+n;return Oo.register(e),Ao.set(a,e),Ro.set(e,a),e}class Mo extends _o{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:a,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return hs(r),t?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){M(te(e),(()=>"The f passed in variableGrads(f) must be a function")),M(null==t||Array.isArray(t)&&t.every((e=>e instanceof Nr)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Hr.registeredVariables)t.push(Hr.registeredVariables[e])}const a=n?t.filter((e=>!e.trainable)):null,r=t.length;t=t.filter((e=>e.trainable)),M(t.length>0,(()=>"variableGrads() expects at least one of the input variables to "+"be trainable, but none of the ".concat(r," variables is ")+"trainable."));const{value:s,grads:o}=Hr.gradients(e,t,null,!0);M(o.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),M(0===s.rank,(()=>"The f passed in variableGrads(f) must return a scalar, but it "+"returned a rank-".concat(s.rank," tensor")));const i={};return t.forEach(((e,t)=>{null!=o[t]&&(i[e.name]=o[t])})),null!=a&&a.forEach((e=>i[e.name]=null)),{value:s,grads:i}}(e,t)}dispose(){null!=this.iterations_&&hs(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Fo(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+"".concat(this.getClassName()))}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Mo,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class zo extends Mo{static get className(){return"Adadelta"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Hr.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Hr.registeredVariables[t],r=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:"".concat(t,"/accum_grad"),variable:ls((()=>Io(a).variable(r)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:"".concat(t,"/accum_var"),variable:ls((()=>Io(a).variable(r)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;ls((()=>{const e=Do(No(o,this.rho),No(Eo(s),1-this.rho)),t=No(Co(So(Do(i,this.epsilon)),So(Do(o,this.epsilon))),s),n=Do(No(i,this.rho),No(Eo(t),1-this.rho));o.assign(e),i.assign(n);const r=Do(No(t,-this.learningRate),a);a.assign(r)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(hs(this.accumulatedGrads.map((e=>e.variable))),hs(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function Bo(e,t,n){ce(e);const a={shape:e,value:t,dtype:n=n||ee(t)};return Hr.runKernel(Et,{},a)}class Po extends Mo{static get className(){return"Adagrad"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Hr.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:"".concat(t,"/accumulator"),variable:ls((()=>Bo(a.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=this.accumulatedGrads[n].variable;ls((()=>{const e=Do(s,Eo(r));s.assign(e);const t=Do(No(Co(r,So(Do(e,Hr.backend.epsilon()))),-this.learningRate),a);a.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&hs(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}const Wo=ns({pow_:function(e,t){let n=$r(e,"base","pow"),a=$r(t,"exp","pow");[n,a]=Mr(n,a);const r={a:n,b:a};return Hr.runKernel(kn,r)}});const Vo=ns({sub_:function(e,t){let n=$r(e,"a","sub"),a=$r(t,"b","sub");[n,a]=Mr(n,a);const r={a:n,b:a};return Hr.runKernel(ga,r)}});class Uo extends Mo{static get className(){return"Adam"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ls((()=>{this.accBeta1=Fo(t).variable(),this.accBeta2=Fo(n).variable()})),null==a&&(this.epsilon=Hr.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);ls((()=>{const n=Vo(1,this.accBeta1),a=Vo(1,this.accBeta2);t.forEach(((t,r)=>{const s=Hr.registeredVariables[t],o=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(t,"/m"),variable:ls((()=>Io(s).variable(o)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:"".concat(t,"/v"),variable:ls((()=>Io(s).variable(o)))});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const u=this.accumulatedFirstMoment[r].variable,c=this.accumulatedSecondMoment[r].variable,l=Do(No(u,this.beta1),No(i,1-this.beta1)),h=Do(No(c,this.beta2),No(Eo(i),1-this.beta2)),d=Co(l,n),p=Co(h,a);u.assign(l),c.assign(h);const f=Do(No(Co(d,Do(So(p),this.epsilon)),-this.learningRate),s);s.assign(f)})),this.accBeta1.assign(No(this.accBeta1,this.beta1)),this.accBeta2.assign(No(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&hs(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&hs(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),ls((()=>{this.accBeta1.assign(Wo(this.beta1,this.iterations_+1)),this.accBeta2.assign(Wo(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}const Go=ns({abs_:function(e){const t=$r(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Hr.runKernel(Xe,e)}{const e={x:t};return Hr.runKernel(we,e)}}});function Ho(e,t){const n=e.length,a=[];for(let r=0;r<n;r++){const s=n-1-r,o=e[s]||1;(t[t.length-1-r]||1)>1&&1===o&&a.unshift(s)}return a}function jo(e,t){const n=[];for(let a=0;a<t.length;a++){const r=e[e.length-a-1],s=t.length-a-1,o=t[s];(null==r||1===r&&o>1)&&n.unshift(s)}return n}function qo(e,t){const n=Math.max(e.length,t.length),a=new Array(n);for(let r=0;r<n;r++){let s=e[e.length-r-1];null==s&&(s=1);let o=t[t.length-r-1];if(null==o&&(o=1),1===s)a[n-r-1]=o;else if(1===o)a[n-r-1]=s;else{if(s!==o){const n="Operands could not be broadcast together with shapes "+"".concat(e," and ").concat(t,".");throw Error(n)}a[n-r-1]=s}}return a}const Ko=ns({maximum_:function(e,t){let n=$r(e,"a","maximum"),a=$r(t,"b","maximum");[n,a]=Mr(n,a),"bool"===n.dtype&&(n=vo(n,"int32"),a=vo(a,"int32")),qo(n.shape,a.shape);const r={a:n,b:a};return Hr.runKernel(en,r)}});class Xo extends Mo{static get className(){return"Adamax"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ls((()=>{this.iteration=Fo(0).variable(),this.accBeta1=Fo(t).variable()})),null==a&&(this.epsilon=Hr.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);ls((()=>{const n=Vo(1,this.accBeta1),a=Co(-this.learningRate,Do(No(this.iteration,this.decay),1));t.forEach(((t,r)=>{const s=Hr.registeredVariables[t],o=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(t,"/m"),variable:Io(s).variable(o)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:"".concat(t,"/v"),variable:Io(s).variable(o)});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const u=this.accumulatedFirstMoment[r].variable,c=this.accumulatedWeightedInfNorm[r].variable,l=Do(No(u,this.beta1),No(i,1-this.beta1)),h=No(c,this.beta2),d=Go(i),p=Ko(h,d);u.assign(l),c.assign(p);const f=Do(No(Co(a,n),Co(l,Do(p,this.epsilon))),s);s.assign(f)})),this.iteration.assign(Do(this.iteration,1)),this.accBeta1.assign(No(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&hs(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&hs(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class Yo extends Mo{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const r=Hr.registeredVariables[t];ls((()=>{const e=Do(No(this.c,a),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=ds(Fo(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class Qo extends Yo{static get className(){return"Momentum"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Fo(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Hr.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:"".concat(t,"/momentum"),variable:ls((()=>Io(a).variable(e)))}}const r=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&ls((()=>{let e;const t=Do(No(this.m,r),s);e=this.useNesterov?Do(No(this.c,Do(s,No(t,this.m))),a):Do(No(this.c,t),a),r.assign(t),a.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&hs(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class Zo extends Mo{static get className(){return"RMSProp"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==a&&(this.epsilon=Hr.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Hr.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:"".concat(t,"/rms"),variable:ls((()=>Io(a).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:"".concat(t,"/momentum"),variable:ls((()=>Io(a).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:"".concat(t,"/mg"),variable:ls((()=>Io(a).variable(r)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;ls((()=>{const e=Do(No(o,this.decay),No(Eo(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=Do(No(t,this.decay),No(s,1-this.decay)),u=Co(No(s,this.learningRate),So(Vo(e,Do(Eo(r),this.epsilon)))),c=Do(No(i,this.momentum),u);o.assign(e),t.assign(r),i.assign(c);const l=Vo(a,c);a.assign(l)}else{const e=Do(No(o,this.decay),No(Eo(s),1-this.decay)),t=Do(No(i,this.momentum),Co(No(s,this.learningRate),So(Do(e,this.epsilon))));o.assign(e),i.assign(t);const n=Vo(a,t);a.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&hs(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&hs(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&hs(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const Jo=[zo,Po,Uo,Xo,Qo,Zo,Yo];function $o(e){return new Promise((e=>setTimeout(e))).then(e)}class ei{constructor(e){if(!ge().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ei.URL_SCHEME)&&(e=e.slice(ei.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=is.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=Is(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),a=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=a,await $o((()=>r.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await $o((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:As(e)}}}}ei.URL_SCHEME="downloads://";class ti{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, "+"but received ".concat(e));this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const a=JSON.parse(n.target.result),r=a.modelTopology;if(null==r)return void t(new Error("modelTopology field is missing from file ".concat(this.jsonFile.name)));if(null==a.weightsManifest)return void t(new Error("weightManifest field is missing from file ".concat(this.jsonFile.name)));if(0===this.weightsFiles.length)return void e({modelTopology:r});const s=Fs(a,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t("Failed to read model topology and weights manifest JSON "+"from file '".concat(this.jsonFile.name,"'. BrowserFiles supports loading ")+"Keras-style tf.Model artifacts only."),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const s of e)t.push(...s.weights),n.push(...s.paths);const a=this.checkManifestAndWeightFiles(e),r=n.map((e=>this.loadWeightsFile(e,a[e])));return Promise.all(r).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,a)=>{const r=new FileReader;r.onload=e=>{const t=e.target.result;n(t)},r.onerror=t=>a("Failed to weights data from file of path '".concat(e,"'.")),r.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>Es(e.name))),a={};for(const r of e)r.paths.forEach((e=>{const r=Es(e);if(-1!==t.indexOf(r))throw new Error("Duplicate file basename found in weights manifest: "+"'".concat(r,"'"));if(t.push(r),-1===n.indexOf(r))throw new Error("Weight file with basename '".concat(r,"' is not provided."));a[e]=this.weightsFiles[n.indexOf(r)]}));if(t.length!==this.weightsFiles.length)throw new Error("Mismatch in the number of files in weights manifest "+"(".concat(t.length,") and the number of weight files provided ")+"(".concat(this.weightsFiles.length,")."));return a}}function ni(e){return new ti(e)}function ai(e,t,n,a){!function(e){M(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){M(e>=0&&e<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got startFraction ".concat(e))),M(t>=0&&t<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got endFraction ".concat(t))),M(t>=e,(()=>"startFraction must be no more than endFraction, but "+"got startFraction ".concat(e," and endFraction ")+"".concat(t)))}(n=null==n?0:n,a=null==a?1:a);let r=0;return Promise.all(e.map((s=>(s.then((s=>{const o=n+ ++r/e.length*(a-n);return t(o),s})),s))))}async function ri(e,t){null==t&&(t={});const n=null==t.fetchFunc?ge().platform.fetch:t.fetchFunc,a=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(a):await ai(a,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await ai(r,t.onProgress,.5,1)}async function si(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return oi((e=>ri(e,{requestInit:a})))(e,t,n)}function oi(e){return async function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",a=arguments.length>2?arguments[2]:void 0;const r=t.map((()=>!1)),s={},o=null!=a?a.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,c=os[u]*P(e.shape),l=()=>{r[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:c})};null!=a?a.forEach(((t,n)=>{t===e.name&&(l(),o[n]=!0)})):l(),i.push(e.name),n+=c}))})),!o.every((e=>e))){const e=a.filter(((e,t)=>!o[t]));throw new Error("Could not find weights in manifest with names: "+"".concat(e.join(", "),". \n")+"Manifest JSON has weights with names: "+"".concat(i.join(", "),"."))}const u=r.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),c=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;c.push(t)}))}));const l=await e(c),h={};let d=0;return u.forEach((e=>{const n=t[e].paths.length,a=new is(l.slice(d,d+n));s[e].forEach((e=>{const t=ys(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const n in t)h[n]=t[n]})),d+=n})),h}}_s.registerSaveRouter((e=>ge().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ei.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new ei(e)}(e.slice(ei.URL_SCHEME.length)):null));class ii{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(M("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=ge().platform.fetch,M(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&M(2===e.length,(()=>"URL paths for http must have a length of 2, "+"(actual length is ".concat(e.length,")."))),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Is(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=is.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:As(e),responses:[a]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+"".concat(a.status,"."))}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error("Request to ".concat(this.path," failed with status code ")+"".concat(e.status,". Please verify this URL points to ")+"the model JSON of the model to load.");let t;try{t=await e.json()}catch(r){let e="Failed to parse model JSON of response from ".concat(this.path,".");throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,a=t.weightsManifest;if(null==n&&null==a)throw new Error("The JSON from HTTP path ".concat(this.path," contains neither model ")+"topology or manifest for weights.");return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();return Fs(await this.loadModelJSON(),(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=Rs(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const a=null==t.fetchFunc?ge().platform.fetch:t.fetchFunc;let r,s=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var o;s<e.length;){if(!r){const n=(await a(e[s],t.requestInit,{isBinary:!0})).body;r=n.getReader()}const{done:i,value:u}=await r.read();if(!i)return void n.enqueue(u);s++,r=void 0,null===(o=t.onProgress)||void 0===o||o.call(t,s/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),a=e.substring(0,t),r=n>t?e.substring(n):"";return[a+"/",r]}(t),r=this.weightPathPrefix||n,s=[],o=[];for(const i of e)for(const e of i.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):s.push(r+e+a);return this.weightUrlConverter&&s.push(...await Promise.all(o)),s}async loadWeights(e){const t=await this.getWeightUrls(e);return[Rs(e),await ri(t,this.loadOptions)]}}function ui(e){return null!=e.match(ii.URL_SCHEME_REGEX)}ii.URL_SCHEME_REGEX=/^https?:\/\//;const ci=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>ui(e))):ui(e),n)return li(e,t)}return null};function li(e,t){return new ii(e,t)}function hi(e,t){return li(e,t)}_s.registerSaveRouter(ci),_s.registerLoadRouter(ci);class di{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class pi{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class fi{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function mi(e,t,n,a){return new fi(gi(...arguments))}function gi(e,t,n,a){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new di(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new di({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new di({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:a})}function yi(e){return new pi(e)}function bi(e){return new pi(e)}function vi(e,t,n){if(B(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const a=Qr(e,n);if(3!==a.length&&1!==a.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return rs(e,t,a,n)}const xi=-2,wi=-1;function Di(e,t,n){const a=e.shape.length;M(a===t.length,(()=>"Error in slice".concat(a,"D: Length of begin ").concat(t," must ")+"match the rank of the array (".concat(a,")."))),M(a===n.length,(()=>"Error in slice".concat(a,"D: Length of size ").concat(n," must ")+"match the rank of the array (".concat(a,").")));for(let r=0;r<a;++r)M(t[r]+n[r]<=e.shape[r],(()=>"Error in slice".concat(a,"D: begin[").concat(r,"] + size[").concat(r,"] ")+"(".concat(t[r]+n[r],") would overflow input.shape[").concat(r,"] (").concat(e.shape[r],")")))}function ki(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Ci(e,t,n){const a=[];for(let r=0;r<e.length;r++)a[r]=Math.ceil((t[r]-e[r])/n[r]);return a}function Ni(e,t,n,a){const r=[...e];for(let s=r.length;s<a.length;s++)r.push(1);for(let s=0;s<n;s++)0===s?r[t]=1:(r.splice(t,0,1),r.pop());return r}function Si(e,t,n){return n<=e?n:n-(t-1)}function Ei(e,t){const n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function Ii(e,t,n,a,r,s,o,i,u){const c=e.length;let l=new Array(c),h=new Array(c),d=new Array(c);if(t.length&&n>0){const u=t[0],c=n+1;l=Ti(o,u,c,a,e),h=Fi(i,u,c,r,e),d=Ni(s,u,c,e)}else for(let p=0;p<c;p++)l[p]=Ri(o,a,s,e,p,u),h[p]=_i(i,r,s,e,p,u),d[p]=Ai(s,p,u);return{begin:l,end:h,strides:d}}function Ti(e,t,n,a,r){const s=[...r],o=Ei(n,t);for(let i=0;i<s.length;i++)if(o.indexOf(i)>-1)s[i]=0;else{const r=Si(t,n,i);let o=a[r];e&1<<r&&(o=0),s[i]=o}return s}function Fi(e,t,n,a,r){const s=[...r],o=Ei(n,t);for(let i=0;i<s.length;i++)if(o.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{const r=Si(t,n,i);let o=a[r];e&1<<r&&(o=Number.MAX_SAFE_INTEGER),s[i]=o}for(let i=0;i<s.length;i++){const e=r[i];s[i]<0&&(s[i]+=e),s[i]=_(0,s[i],r[i])}return s}function Ai(e,t,n){let a=e[t];return(n&1<<t||null==a)&&(a=1),a}function Ri(e,t,n,a,r,s){let o=t[r];const i=n[r]||1;(e&1<<r||s&1<<r||null==o)&&(o=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=a[r];return o<0&&(o+=u),o=_(0,o,u-1),o}function _i(e,t,n,a,r,s){let o=t[r];const i=n[r]||1;(e&1<<r||s&1<<r||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=a[r];return o<0&&(o+=u),o=i>0?_(0,o,u):_(-1,o,u-1),o}function Oi(e,t,n){let a=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){a=r;break}for(let r=a+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function Li(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function Mi(e,t,n){let a;const r=e.shape.length;let s;return a="number"===typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),a.forEach((e=>{M(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(r).fill(-1):"number"===typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(M(-1===t,(()=>"Negative size values should be exactly -1 but got "+"".concat(t," for the slice() size at index ").concat(n,"."))),e.shape[n]-a[n]))),[a,s]}function zi(e,t,n,a,r,s,o,i,u){let c;if(null==a?(c=new Array(t.length),c.fill(1)):c=a,null!=o&&0!==(o&o-1))throw new Error("Multiple ellipses in slice is not allowed.");let l=!1;const h={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:c.slice(),beginMask:r,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};for(let b=0;b<h.dims;b++)l&&0!==(1<<b&i)&&h.numAddAxisAfterEllipsis++,1<<b&o&&(l=!0);l||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let a=0;a<e.dims;a++)if(1<<a&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-a)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&e.newAxisMask)t.finalShapeGatherIndices.push(xi),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error("Index out of range using input dim ".concat(n,"; input ")+"has only ".concat(t.dims," dims, ").concat(t.begin.length,"."));null!=e.begin&&(t.begin[n]=e.begin[a]),null!=e.end&&(t.end[n]=e.end[a]),t.strides[n]=e.strides[a],e.beginMask&1<<a&&(t.beginMask|=1<<n),e.endMask&1<<a&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<a?(t.finalShapeGatherIndices.push(wi),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(a)),t.inputShapeGatherIndicesSparse[n]=a,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],y=[];for(let b=0;b<e.length;++b){if(0===d.strides[b])throw Error("strides[".concat(b,"] must be non-zero"));const t=!!(d.shrinkAxisMask&1<<b),n=e[b];if(-1===n){g.push(t?1:-1);continue}const a=[d.beginMask&1<<b,d.endMask&1<<b],r=[d.strides[b]>0?0:-1,d.strides[b]>0?n:n-1];if(t&&d.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[b];const s=!!(d.beginMask&1<<b&&d.endMask&1<<b);if(d.beginValid&&d.endValid){if(t){const e=d.begin[b]<0?n+d.begin[b]:d.begin[b];if(d.begin[b]=e,d.end[b]=d.begin[b]+1,e<0||e>=n)throw Error("slice index ".concat(d.begin[b]," of dimension ").concat(b," out of bounds."))}else d.begin[b]=Bi(d.begin[b],0,d.strides[b],n,a,r),d.end[b]=Bi(d.end[b],1,d.strides[b],n,a,r);const e=1===d.strides[b]&&0===d.begin[b]&&d.end[b]===n;p=p&&e,f=f&&(0===b&&1===d.strides[b]||e)}else p=p&&1===d.strides[b]&&s,f=f&&(0===b&&1===d.strides[b]||s);let o,i=!1;if(d.beginValid&&d.endValid?(o=d.end[b]-d.begin[b],i=!0):t?(o=1,i=!0):s&&n>=0&&(o=d.strides[b]<0?-n:n,i=!0),i){let e;e=0===o||o<0!==d.strides[b]<0?0:Math.trunc(o/d.strides[b])+(o%d.strides[b]!==0?1:0),g.push(e)}else g.push(-1)}for(let b=0;b<d.finalShapeGatherIndices.length;++b){const e=d.finalShapeGatherIndices[b];e>=0?y.push(g[e]):e===xi&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>d.finalShapeGatherIndices[t]!==xi)),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function Bi(e,t,n,a,r,s){if(r[t])return n>0?s[t]:s[t+1&1];{const t=e<0?a+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}const Pi=ns({acos_:function(e){const t={x:$r(e,"x","acos")};return Hr.runKernel(De,t)}});const Wi=ns({acosh_:function(e){const t={x:$r(e,"x","acosh")};return Hr.runKernel(ke,t)}});const Vi=ns({addN_:function(e){M(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),M(e.length>=1,(()=>"Must pass at least one tensor to tf.addN(), but got "+"".concat(e.length)));const t=e.map(((e,t)=>$r(e,"tensors".concat(t),"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!W(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const a=t;return Hr.runKernel(Ne,a)}});const Ui=ns({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:$r(e,"x","all","bool")},r={axis:t,keepDims:n};return Hr.runKernel(Se,a,r)}});const Gi=ns({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:$r(e,"x","any","bool")},r={axis:t,keepDims:n};return Hr.runKernel(Ee,a,r)}});const Hi=ns({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:$r(e,"x","argMax")},a={axis:t};return Hr.runKernel(Ie,n,a)}});const ji=ns({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:$r(e,"x","argMin")},a={axis:t};return Hr.runKernel(Te,n,a)}});const qi=ns({asin_:function(e){const t={x:$r(e,"x","asin")};return Hr.runKernel(Fe,t)}});const Ki=ns({asinh_:function(e){const t={x:$r(e,"x","asinh")};return Hr.runKernel(Ae,t)}});const Xi=ns({atan_:function(e){const t={x:$r(e,"x","atan")};return Hr.runKernel(Re,t)}});const Yi=ns({atan2_:function(e,t){let n=$r(e,"a","atan2"),a=$r(t,"b","atan2");[n,a]=Mr(n,a);const r={a:n,b:a};return Hr.runKernel(Oe,r)}});const Qi=ns({atanh_:function(e){const t={x:$r(e,"x","atanh")};return Hr.runKernel(_e,t)}});function Zi(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5?arguments[5]:void 0;return eu(e,[...t,e[3]],n,s,a,null,null,lu(r))}function Ji(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[i,u]=au(t);let c;if("channelsLast"===o)c=[i,u,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));c=[i,u,e[1],e[1]]}return eu(e,c,n,a,r,s,!1,o)}function $i(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[i,u,c]=ru(t);let l,h;if("NDHWC"===o)h="channelsLast",l=[i,u,c,e[4],e[4]];else{if("NCDHW"!==o)throw new Error("Unknown dataFormat ".concat(o));h="channelsFirst",l=[i,u,c,e[1],e[1]]}return tu(e,l,n,a,r,!1,h,s)}function eu(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[u,c,l,h]=[-1,-1,-1,-1];if("channelsLast"===i)[u,c,l,h]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));[u,h,c,l]=e}const[d,p,,f]=t,[m,g]=au(n),[y,b]=au(a),v=su(d,y),x=su(p,b),{padInfo:w,outHeight:D,outWidth:k}=function(e,t,n,a,r,s,o,i,u){let c,l,h;if("number"===typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,a,r){null==a&&(a=nu(e,t,n));const s=e[0],o=e[1],i=ou((s-t+2*a)/n+1,r),u=ou((o-t+2*a)/n+1,r);return[i,u]}([t,n],s,a,e,i);l=r[0],h=r[1]}else if("same"===e){l=Math.ceil(t/a),h=Math.ceil(n/r);const e=Math.max(0,(l-1)*a+s-t),i=Math.max(0,(h-1)*r+o-n),u=Math.floor(e/2),d=e-u,p=Math.floor(i/2);c={top:u,bottom:d,left:p,right:i-p,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-s+1)/a),h=Math.ceil((n-o+1)/r);else{if("object"!==typeof e)throw Error("Unknown padding parameter: ".concat(e));{const d="channelsLast"===u?e[1][0]:e[2][0],p="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];c={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},l=ou((t-s+d+p)/a+1,i),h=ou((n-o+f+m)/r+1,i)}}return{padInfo:c,outHeight:l,outWidth:h}}(r,c,l,m,g,v,x,s,i),C=o?f*h:f;let N;return"channelsFirst"===i?N=[u,C,D,k]:"channelsLast"===i&&(N=[u,D,k,C]),{batchSize:u,dataFormat:i,inHeight:c,inWidth:l,inChannels:h,outHeight:D,outWidth:k,outChannels:C,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:v,effectiveFilterWidth:x,dilationHeight:y,dilationWidth:b,inShape:e,outShape:N,filterShape:t}}function tu(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",i=arguments.length>7?arguments[7]:void 0,[u,c,l,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[u,c,l,h,d]=e;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));[u,d,c,l,h]=e}const[p,f,m,,g]=t,[y,b,v]=ru(n),[x,w,D]=ru(a),k=su(p,x),C=su(f,w),N=su(m,D),{padInfo:S,outDepth:E,outHeight:I,outWidth:T}=function(e,t,n,a,r,s,o,i,u,c,l){let h,d,p,f;"valid"===e&&(e=0);if("number"===typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const m=function(e,t,n,a,r,s){null==r&&(r=nu(e,t[0],a[0]));const o=[0,0,0,n];for(let i=0;i<3;i++)e[i]+2*r>=t[i]&&(o[i]=ou((e[i]-t[i]+2*r)/a[i]+1,s));return o}([t,n,a,1],[i,u,c],1,[r,s,o],e,l);d=m[0],p=m[1],f=m[2]}else{if("same"!==e)throw Error("Unknown padding parameter: ".concat(e));{d=Math.ceil(t/r),p=Math.ceil(n/s),f=Math.ceil(a/o);const e=(d-1)*r+i-t,l=(p-1)*s+u-n,m=(f-1)*o+c-a,g=Math.floor(e/2),y=e-g,b=Math.floor(l/2),v=l-b,x=Math.floor(m/2);h={top:b,bottom:v,left:x,right:m-x,front:g,back:y,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(r,c,l,h,y,b,v,k,C,N,i),F=s?g*d:g;let A;return"channelsFirst"===o?A=[u,F,E,I,T]:"channelsLast"===o&&(A=[u,E,I,T,F]),{batchSize:u,dataFormat:o,inDepth:c,inHeight:l,inWidth:h,inChannels:d,outDepth:E,outHeight:I,outWidth:T,outChannels:F,padInfo:S,strideDepth:y,strideHeight:b,strideWidth:v,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:k,effectiveFilterHeight:C,effectiveFilterWidth:N,dilationDepth:x,dilationHeight:w,dilationWidth:D,inShape:e,outShape:A,filterShape:t}}function nu(e,t,n){const a=su(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+a)/2)}function au(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function ru(e){return"number"===typeof e?[e,e,e]:e}function su(e,t){return t<=1?e:e+(e-1)*(t-1)}function ou(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode ".concat(t))}}function iu(e){const[t,n,a]=au(e);return 1===t&&1===n&&1===a}function uu(e,t){return iu(e)||iu(t)}function cu(e){return au(e).every((e=>e>0))}function lu(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat ".concat(e))}function hu(e,t,n){if(null!=n){if("string"===typeof t)throw Error("Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,"."));if("number"===typeof t)M(V(t),(()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,".")));else{if("object"!==typeof t)throw Error("Error in ".concat(e,": Unknown padding parameter: ").concat(t));t.forEach((t=>{t.forEach((t=>{M(V(t),(()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,".")))}))}))}}}const du=ns({reshape_:function(e,t){const n={x:$r(e,"x","reshape","string_or_numeric")},a={shape:t};return Hr.runKernel(_n,n,a)}});const pu=ns({avgPool_:function(e,t,n,a,r){const s=$r(e,"x","avgPool","float32");M(uu(n,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'")));let o=s,i=!1;3===s.rank&&(i=!0,o=du(s,[1,s.shape[0],s.shape[1],s.shape[2]])),M(4===o.rank,(()=>"Error in avgPool: x must be rank 4 but got rank ".concat(o.rank,"."))),hu("avgPool",a,r);const u={x:o},c={filterSize:t,strides:n,pad:a,dimRoundingMode:r};let l=Hr.runKernel(Le,u,c);return l=vo(l,s.dtype),i?du(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const fu=ns({avgPool3d_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=$r(e,"x","avgPool3d","float32");let i=o,u=!1;4===o.rank&&(u=!0,i=du(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),M(5===i.rank,(()=>"Error in avgPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),M("NDHWC"===s,(()=>"Error in avgPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(s))),M("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>"Error in avgPool3d: Stride must be > 0, but got '".concat(n,"'"))),hu("avgPool3d",a,r);const c={x:i},l={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s};let h=Hr.runKernel(ze,c,l);return h=vo(h,i.dtype),u?du(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const mu=ns({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;M(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=es(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype ".concat(e.dtype,". "))})),1===n.length)return xo(n[0]);const a=n,r={axis:t};return Hr.runKernel(Ye,a,r)}});const gu=ns({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=$r(e,"a","matMul"),s=$r(t,"b","matMul");[r,s]=Mr(r,s);const o={a:r,b:s},i={transposeA:n,transposeB:a};return Hr.runKernel(Pe,o,i)}});const yu=ns({sigmoid_:function(e){const t={x:$r(e,"x","sigmoid","float32")};return Hr.runKernel(Zn,t)}});const bu=ns({slice_:function(e,t,n){const a=$r(e,"x","slice","string_or_numeric");if(0===a.rank)throw new Error("Slicing scalar is not possible");const r={x:a},s={begin:t,size:n};return Hr.runKernel(Kn,r,s)}});const vu=ns({tanh_:function(e){const t={x:$r(e,"x","tanh","float32")};return Hr.runKernel(ba,t)}});const xu=ns({basicLSTMCell_:function(e,t,n,a,r,s){const o=$r(e,"forgetBias","basicLSTMCell"),i=$r(t,"lstmKernel","basicLSTMCell"),u=$r(n,"lstmBias","basicLSTMCell"),c=$r(a,"data","basicLSTMCell"),l=$r(r,"c","basicLSTMCell"),h=$r(s,"h","basicLSTMCell"),d=mu([c,h],1),p=gu(d,i),f=Do(p,u),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=bu(f,[0,0],y),v=bu(f,[0,g],y),x=bu(f,[0,2*g],y),w=bu(f,[0,3*g],y),D=Do(No(yu(b),vu(v)),No(l,yu(Do(o,x))));return[D,No(vu(D),yu(w))]}});const wu=ns({batchToSpaceND_:function(e,t,n){const a=$r(e,"x","batchToSpaceND"),r=t.reduce(((e,t)=>e*t));M(a.rank>=1+t.length,(()=>"input rank is ".concat(a.rank," but should be > than blockShape.length ").concat(t.length))),M(n.length===t.length,(()=>"crops.length is ".concat(n.length," but should be equal to blockShape.length  ").concat(t.length))),M(a.shape[0]%r===0,(()=>"input tensor batch is ".concat(a.shape[0]," but is not divisible by the product of ")+"the elements of blockShape ".concat(t.join(" * ")," === ").concat(r)));const s={x:a},o={blockShape:t,crops:n};return Hr.runKernel(We,s,o)}});const Du=ns({batchNorm_:function(e,t,n,a,r,s){null==s&&(s=.001);const o=$r(e,"x","batchNorm"),i=$r(t,"mean","batchNorm"),u=$r(n,"variance","batchNorm");let c,l;null!=r&&(c=$r(r,"scale","batchNorm")),null!=a&&(l=$r(a,"offset","batchNorm")),M(i.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),M(null==l||i.rank===l.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),M(null==c||i.rank===c.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?du(e,[1,1,1,e.size]):2===e.rank?du(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?du(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(o),scale:c,offset:l,mean:i,variance:u},d={varianceEpsilon:s},p=Hr.runKernel(At,h,d);return du(p,o.shape)}});const ku=ns({batchNorm2d_:function(e,t,n,a,r,s){const o=$r(e,"x","batchNorm"),i=$r(t,"mean","batchNorm"),u=$r(n,"variance","batchNorm");let c,l;return null!=r&&(c=$r(r,"scale","batchNorm")),null!=a&&(l=$r(a,"offset","batchNorm")),M(2===o.rank,(()=>"Error in batchNorm2D: x must be rank 2 but got rank "+"".concat(o.rank,"."))),M(2===i.rank||1===i.rank,(()=>"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+"got rank ".concat(i.rank,"."))),M(2===u.rank||1===u.rank,(()=>"Error in batchNorm2D: variance must be rank 2 or rank 1 "+"but got rank ".concat(u.rank,"."))),null!=c&&M(2===c.rank||1===c.rank,(()=>"Error in batchNorm2D: scale must be rank 2 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&M(2===l.rank||1===l.rank,(()=>"Error in batchNorm2D: offset must be rank 2 or rank 1 "+"but got rank ".concat(l.rank,"."))),Du(o,i,u,l,c,s)}});const Cu=ns({batchNorm3d_:function(e,t,n,a,r,s){const o=$r(e,"x","batchNorm"),i=$r(t,"mean","batchNorm"),u=$r(n,"variance","batchNorm");let c,l;return null!=r&&(c=$r(r,"scale","batchNorm")),null!=a&&(l=$r(a,"offset","batchNorm")),M(3===o.rank,(()=>"Error in batchNorm3D: x must be rank 3 but got rank "+"".concat(o.rank,"."))),M(3===i.rank||1===i.rank,(()=>"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+"got rank ".concat(i.rank,"."))),M(3===u.rank||1===u.rank,(()=>"Error in batchNorm3D: variance must be rank 3 or rank 1 "+"but got rank ".concat(u.rank,"."))),null!=c&&M(3===c.rank||1===c.rank,(()=>"Error in batchNorm3D: scale must be rank 3 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&M(3===l.rank||1===l.rank,(()=>"Error in batchNorm3D: offset must be rank 3 or rank 1 "+"but got rank ".concat(l.rank,"."))),Du(o,i,u,l,c,s)}});const Nu=ns({batchNorm4d_:function(e,t,n,a,r,s){const o=$r(e,"x","batchNorm"),i=$r(t,"mean","batchNorm"),u=$r(n,"variance","batchNorm");let c,l;return null!=r&&(c=$r(r,"scale","batchNorm")),null!=a&&(l=$r(a,"offset","batchNorm")),M(4===o.rank,(()=>"Error in batchNorm4D: x must be rank 4 but got rank "+"".concat(o.rank,"."))),M(4===i.rank||1===i.rank,(()=>"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+"got rank ".concat(i.rank,"."))),M(4===u.rank||1===u.rank,(()=>"Error in batchNorm4D: variance must be rank 4 or rank 1 "+"but got rank ".concat(u.rank,"."))),null!=c&&M(4===c.rank||1===c.rank,(()=>"Error in batchNorm4D: scale must be rank 4 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&M(4===l.rank||1===l.rank,(()=>"Error in batchNorm4D: offset must be rank 4 or rank 1 "+"but got rank ".concat(l.rank,"."))),Du(o,i,u,l,c,s)}});const Su=ns({bincount_:function(e,t,n){const a=$r(e,"x","bincount"),r=$r(t,"weights","bincount");M("int32"===a.dtype,(()=>"Error in bincount: input "+"dtype must be int32, but got ".concat(a.dtype))),M(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),M(r.size===a.size||0===r.size,(()=>"Error in bincount: weights must have the same size as input or"+"0-length, but got input shape: ".concat(a.shape,", weights shape: ")+"".concat(r.shape,".")));const s={x:a,weights:r},o={size:n};return Hr.runKernel(Ve,s,o)}});const Eu=ns({bitwiseAnd_:function(e,t){const n=$r(e,"x","bitwiseAnd"),a=$r(t,"y","bitwiseAnd");if(!W(n.shape,a.shape))throw new Error("BitwiseAnd: Tensors must have the same shape. x: ".concat(n.shape,", y: ").concat(a.shape));if("int32"!==n.dtype||"int32"!==a.dtype)throw new Error("BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ".concat(n.dtype," and type of y: ").concat(a.dtype));const r={a:n,b:a};return Hr.runKernel(Ue,r)}});const Iu=ns({broadcastArgs_:function(e,t){const n=$r(e,"s0","broadcastArgs","int32"),a=$r(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error("broadcastArgs(): first input must be a vector (rank=1). "+"Has rank ".concat(n.rank));if(1!==a.rank)throw new Error("broadcastArgs(): second input must be a vector (rank=1). "+"Has rank ".concat(a.rank));const r={s0:n,s1:a};return Hr.runKernel(Ge,r)}});const Tu=ns({broadcastTo_:function(e,t){let n=$r(e,"broadcastTo","x");const a=n.shape;if(ce(t),t.length<n.rank)throw new Error("broadcastTo(): shape.length=".concat(t.length," < input.rank=").concat(n.rank,"."));if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=du(n,e)}const r=n.shape,s=Array.from(t);for(let u=t.length-1;u>=0;u--)if(r[u]===t[u])s[u]=1;else if(1!==n.shape[u])throw new Error("broadcastTo(): [".concat(a,"] cannot be broadcast to [").concat(t,"]."));if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return xo(n);const o={x:n},i={reps:s};return Hr.runKernel(va,o,i)}});const Fu=ns({ceil_:function(e){const t={x:$r(e,"x","ceil","float32")};return Hr.runKernel(je,t)}});const Au=ns({clipByValue_:function(e,t,n){const a=$r(e,"x","clipByValue");if(M(t<=n,(()=>"Error in clip: min (".concat(t,") must be ")+"less than or equal to max (".concat(n,")."))),t===n)return Bo(a.shape,t,a.dtype);const r={x:a},s={clipValueMin:t,clipValueMax:n};return Hr.runKernel(qe,r,s)}});const Ru=ns({concat1d_:function(e){return mu(e,0)}});const _u=ns({concat2d_:function(e,t){return mu(e,t)}});const Ou=ns({concat3d_:function(e,t){return mu(e,t)}});const Lu=ns({concat4d_:function(e,t){return mu(e,t)}});const Mu=ns({conv2d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0;const i=$r(e,"x","conv2d","float32"),u=$r(t,"filter","conv2d","float32");let c=i,l=!1;3===i.rank&&(l=!0,c=du(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(4===c.rank,(()=>"Error in conv2d: input must be rank 4, but got rank ".concat(c.rank,"."))),M(4===u.rank,(()=>"Error in conv2d: filter must be rank 4, but got rank "+"".concat(u.rank,"."))),hu("conv2d",a,o);const h="NHWC"===r?c.shape[3]:c.shape[1];M(h===u.shape[2],(()=>"Error in conv2d: depth of input (".concat(h,") must match ")+"input depth for filter ".concat(u.shape[2],"."))),M(uu(n,s),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(s,"'"))),M(cu(s),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),M(cu(n),(()=>"Error in conv2D: Strides should be larger than 0."));const d={x:c,filter:u},p={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:o},f=Hr.runKernel(Qe,d,p);return l?du(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const zu=ns({conv1d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,o=arguments.length>6?arguments[6]:void 0;const i=$r(e,"x","conv1d"),u=$r(t,"filter","conv1d");let c=i,l=!1;2===i.rank&&(l=!0,c=du(i,[1,i.shape[0],i.shape[1]])),M(3===c.rank,(()=>"Error in conv1d: input must be rank 3, but got rank ".concat(c.rank,"."))),M(3===u.rank,(()=>"Error in conv1d: filter must be rank 3, but got rank "+"".concat(u.rank,"."))),hu("conv1d",a,o),M(c.shape[2]===u.shape[1],(()=>"Error in conv1d: depth of input (".concat(c.shape[2],") must match ")+"input depth for filter ".concat(u.shape[1],"."))),M(uu(n,s),(()=>"Error in conv1D: Either stride or dilation must be 1. "+"Got stride ".concat(n," and dilation '").concat(s,"'"))),M(cu(s),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),M(cu(n),(()=>"Error in conv1D: Stride should be larger than 0.")),M("NWC"===r,(()=>"Error in conv1d: got dataFormat of ".concat(r," but only NWC is currently supported.")));const h=du(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=du(c,[c.shape[0],1,c.shape[1],c.shape[2]]),p=Mu(d,h,[1,n],a,"NHWC",[1,s],o);return du(p,l?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}});const Bu=ns({conv2DBackpropInput_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",o=arguments.length>6?arguments[6]:void 0;M(e.length===t.rank,(()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match")));let i=e,u=t,c=!1;3===t.rank&&(c=!0,u=du(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),M(4===i.length,(()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+"".concat(i.length,"."))),M(4===u.rank,(()=>"Error in conv2dDerInput: dy must be rank 4, but got "+"rank ".concat(u.rank))),M(4===n.rank,(()=>"Error in conv2dDerInput: filter must be rank 4, but got "+"rank ".concat(n.rank)));const l="NHWC"===s?i[3]:i[1],h="NHWC"===s?u.shape[3]:u.shape[1];M(l===n.shape[2],(()=>"Error in conv2dDerInput: depth of input (".concat(l,") must ")+"match input depth for filter ".concat(n.shape[2],"."))),M(h===n.shape[3],(()=>"Error in conv2dDerInput: depth of output (".concat(h,") must ")+"match output depth for filter ".concat(n.shape[3],"."))),hu("conv2dDerInput",r,o);const d={dy:u,filter:n},p={strides:a,pad:r,dataFormat:s,dimRoundingMode:o,inputShape:i},f=Hr.runKernel(Je,d,p);return c?du(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Pu=ns({conv2dTranspose_:function(e,t,n,a,r,s){const o=$r(e,"x","conv2dTranspose"),i=$r(t,"filter","conv2dTranspose");return Bu(n,o,i,a,r,"NHWC",s)}});const Wu=ns({conv3d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const o=$r(e,"x","conv3d"),i=$r(t,"filter","conv3d");let u=o,c=!1;4===o.rank&&(c=!0,u=du(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),M(5===u.rank,(()=>"Error in conv3d: input must be rank 5, but got rank ".concat(u.rank,"."))),M(5===i.rank,(()=>"Error in conv3d: filter must be rank 5, but got rank "+"".concat(i.rank,"."))),M(u.shape[4]===i.shape[3],(()=>"Error in conv3d: depth of input (".concat(u.shape[4],") must match ")+"input depth for filter ".concat(i.shape[3],"."))),M(uu(n,s),(()=>"Error in conv3D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(s,"'"))),M("NDHWC"===r,(()=>"Error in conv3d: got dataFormat of ".concat(r," but only NDHWC is currently supported."))),M(cu(s),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),M(cu(n),(()=>"Error in conv3D: Strides should be larger than 0."));const l={x:u,filter:i},h={strides:n,pad:a,dataFormat:r,dilations:s},d=Hr.runKernel($e,l,h);return c?du(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const Vu=ns({conv3DBackpropInput_:function(e,t,n,a,r){M(e.length===t.rank,(()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match")));let s=e,o=t,i=!1;4===t.rank&&(i=!0,o=du(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const u=s[4],c=o.shape[4];M(5===s.length,(()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+"".concat(s.length,"."))),M(5===o.rank,(()=>"Error in conv3dDerInput: dy must be rank 5, but got "+"rank ".concat(o.rank))),M(5===n.rank,(()=>"Error in conv3dDerInput: filter must be rank 5, but got "+"rank ".concat(n.rank))),M(u===n.shape[3],(()=>"Error in conv3dDerInput: depth of input (".concat(u,") must ")+"match input depth for filter ".concat(n.shape[3],"."))),M(c===n.shape[4],(()=>"Error in conv3dDerInput: depth of output (".concat(c,") must ")+"match output depth for filter ".concat(n.shape[4],".")));const l={dy:o,filter:n},h={pad:r,strides:a,inputShape:s},d=Hr.runKernel(tt,l,h);return i?du(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const Uu=ns({conv3dTranspose_:function(e,t,n,a,r){const s=$r(e,"x","conv3dTranspose"),o=$r(t,"filter","conv3dTranspose");return Vu(n,s,o,a,r)}});const Gu=ns({cos_:function(e){const t={x:$r(e,"x","cos","float32")};return Hr.runKernel(nt,t)}});const Hu=ns({cosh_:function(e){const t={x:$r(e,"x","cosh","float32")};return Hr.runKernel(at,t)}});const ju=ns({cumprod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={x:$r(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:a};return Hr.runKernel(rt,r,s)}});const qu=ns({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={x:$r(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:a};return Hr.runKernel(st,r,s)}});const Ku=ns({denseBincount_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=$r(e,"x","denseBincount"),s=$r(t,"weights","denseBincount");M("int32"===r.dtype,(()=>"Error in denseBincount: input "+"dtype must be int32, but got ".concat(r.dtype))),M(r.rank<=2,(()=>"Error in denseBincount: input must be at most rank 2, but got "+"rank ".concat(r.rank,"."))),M(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),M(s.size===r.size||0===s.size,(()=>"Error in denseBincount: weights must have the same shape as x or "+"0-length, but got x shape: ".concat(r.shape,", weights shape: ")+"".concat(s.shape,".")));const o={x:r,weights:s},i={size:n,binaryOutput:a};return Hr.runKernel(it,o,i)}});const Xu=ns({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const a=$r(e,"x","depthToSpace","float32"),r="NHWC"===n?a.shape[1]:a.shape[2],s="NHWC"===n?a.shape[2]:a.shape[3],o="NHWC"===n?a.shape[3]:a.shape[1];M(t>1,(()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(t))),M(r*t>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(r," and ").concat(t,"  for depthToSpace with input shape\n    ").concat(a.shape))),M(s*t>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(s," and ").concat(t," for depthToSpace with input shape\n        ").concat(a.shape))),M(o%(t*t)===0,(()=>"Dimension size must be evenly divisible by ".concat(t*t," but is ").concat(o," for depthToSpace with input shape ").concat(a.shape)));const i={x:a},u={blockSize:t,dataFormat:n};return Hr.runKernel(ut,i,u)}});const Yu=ns({depthwiseConv2d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0;const i=$r(e,"x","depthwiseConv2d","float32"),u=$r(t,"filter","depthwiseConv2d","float32");let c=i,l=!1;3===i.rank&&(l=!0,c=du(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(4===c.rank,(()=>"Error in depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(c.rank,"."))),M(4===u.rank,(()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+"".concat(u.rank,".")));const h="NHWC"===r?c.shape[3]:c.shape[1];M(h===u.shape[2],(()=>"Error in depthwiseConv2d: number of input channels "+"(".concat(h,") must match the inChannels dimension in ")+"filter ".concat(u.shape[2],"."))),hu("depthwiseConv2d",a,o);const d={x:c,filter:u},p={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:o},f=Hr.runKernel(ct,d,p);return l?du(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Qu=ns({diag_:function(e){const t={x:$r(e,"x","diag")};return Hr.runKernel(dt,t)}});const Zu=ns({dilation2d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const o=$r(e,"x","dilation2d"),i=$r(t,"filter","dilation2d");M(3===o.rank||4===o.rank,(()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+"".concat(o.rank,"."))),M(3===i.rank,(()=>"Error in dilation2d: filter must be rank 3, but got rank "+"".concat(i.rank,"."))),M("NHWC"===s,(()=>"Error in dilation2d: Only NHWC is currently supported, "+"but got dataFormat of ".concat(s)));let u=o,c=!1;3===o.rank&&(u=du(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=!0),M(u.shape[3]===i.shape[2],(()=>"Error in dilation2d:  input and filter must have the same depth: ".concat(u.shape[3]," vs ").concat(i.shape[2])));const l={x:u,filter:i},h={strides:n,pad:a,dilations:r},d=Hr.runKernel(pt,l,h);return c?du(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});const Ju=ns({equal_:function(e,t){let n=$r(e,"a","equal","string_or_numeric"),a=$r(t,"b","equal","string_or_numeric");[n,a]=Mr(n,a),qo(n.shape,a.shape);const r={a:n,b:a};return Hr.runKernel(Dt,r)}});const $u=ns({where_:function(e,t,n){const a=$r(t,"a","where"),r=$r(n,"b","where"),s=$r(e,"condition","where","bool"),o=qo(qo(s.shape,a.shape),r.shape),i={condition:Tu(s,o),t:Tu(a,o),e:Tu(r,o)};return Hr.runKernel(jn,i)}});const ec=ns({divNoNan_:function(e,t){let n=$r(e,"a","div"),a=$r(t,"b","div");[n,a]=Mr(n,a);const r=Co(n,a),s=Io(r),o=Ju(a,s);return $u(o,s,r)}});const tc=ns({dot_:function(e,t){const n=$r(e,"t1","dot"),a=$r(t,"t2","dot");M((1===n.rank||2===n.rank)&&(1===a.rank||2===a.rank),(()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+"".concat(n.rank," and ").concat(a.rank,".")));const r=1===n.rank?n.size:n.shape[1],s=1===a.rank?a.size:a.shape[0];if(M(r===s,(()=>"Error in dot: inner dimensions of inputs must match, but got "+"".concat(r," and ").concat(s,"."))),1===n.rank&&1===a.rank){const e=du(n,[1,-1]),t=du(a,[-1,1]),r=gu(e,t);return du(r,[])}if(1===n.rank&&2===a.rank){const e=du(n,[1,-1]),t=du(a,[a.shape[0],a.shape[1]]),r=gu(e,t);return du(r,[r.size])}if(2===n.rank&&1===a.rank){const e=du(a,[-1,1]),t=gu(n,e);return du(t,[t.size])}{const e=du(a,[a.shape[0],a.shape[1]]);return gu(n,e)}}});const nc=ns({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];const r=n.map(((e,t)=>$r(e,"tensors".concat(t),"einsum"))),s={equation:e};return Hr.runKernel(bt,r,s)}});const ac=ns({elu_:function(e){const t={x:$r(e,"x","elu","float32")};return Hr.runKernel(vt,t)}});const rc=ns({ensureShape_:function(e,t){const n=$r(e,"x","ensureShape","string_or_numeric");if(!function(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}(n.shape,t))throw new Error("EnsureShape: Shape of tensor ".concat(n.shape," is not compatible with expected shape ").concat(t));return e}});const sc=ns({erf_:function(e){let t=$r(e,"x","erf");M("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=vo(t,"float32"));const n={x:t};return Hr.runKernel(wt,n)}});function oc(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function ic(e,t,n){const a=e.length+t.length,r=[];let s=0,o=0;for(let i=0;i<a;i++)-1===n.indexOf(i)?r.push(e[s++]):r.push(t[o++]);return r}function uc(e,t){const n=[],a=e.length;for(let r=0;r<a;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function cc(e,t){return ic(e,t.map((e=>1)),t)}function lc(e,t,n){M(oc(t,n),(()=>"".concat(e," supports only inner-most axes for now. ")+"Got axes ".concat(t," and rank-").concat(n," input.")))}function hc(e,t){if(oc(e,t))return null;const n=[];for(let a=0;a<t;++a)-1===e.indexOf(a)&&n.push(a);return e.forEach((e=>n.push(e))),n}function dc(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function pc(e,t){const n=[];for(let a=t-e;a<t;++a)n.push(a);return n}const fc=ns({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:$r(e,"x","max")},r={reductionIndices:t,keepDims:n};return Hr.runKernel($t,a,r)}});const mc=ns({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:$r(e,"x","min")},r={axis:t,keepDims:n};return Hr.runKernel(un,a,r)}});const gc=ns({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=$r(e,"x","sum");"bool"===a.dtype&&(a=vo(a,"int32"));const r={x:a},s={axis:t,keepDims:n};return Hr.runKernel(ea,r,s)}});function yc(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return Go(e);if(1!==e.rank&&null===n)return yc(du(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return gc(Go(e),n);if(t===1/0)return fc(Go(e),n);if(t===-1/0)return mc(Go(e),n);if("euclidean"===t||2===t)return So(gc(Wo(Go(e),Fo(2,"int32")),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}if(Array.isArray(n)&&2===n.length){if(1===t)return fc(gc(Go(e),n[0]),n[1]-1);if(t===1/0)return fc(gc(Go(e),n[1]),n[0]);if(t===-1/0)return mc(gc(Go(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return So(gc(Eo(e),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}throw new Error("Error in norm: invalid axis: ".concat(n))}const bc=ns({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=yc(e=$r(e,"x","norm"),t,n);let s=r.shape;if(a){const t=q(n,e.shape);s=cc(r.shape,t)}return du(r,s)}});const vc=ns({euclideanNorm_:function(e){return bc(e,"euclidean",arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}});const xc=ns({exp_:function(e){const t={x:$r(e,"x","exp")};return Hr.runKernel(kt,t)}});const wc=ns({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=$r(e,"x","expandDims","string_or_numeric");M(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const a={input:n},r={dim:t};return Hr.runKernel(Ct,a,r)}});const Dc=ns({expm1_:function(e){const t={x:$r(e,"x","expm1")};return Hr.runKernel(Nt,t)}});const kc=ns({tile_:function(e,t){const n=$r(e,"x","tile","string_or_numeric");M(n.rank===t.length,(()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of reps ".concat(t,".")));const a={x:n},r={reps:t};return Hr.runKernel(va,a,r)}});const Cc=ns({eye_:function(e,t,n){null==t&&(t=e);const a=bo([e,t],arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32"),r=e<=t?e:t;for(let o=0;o<r;++o)a.set(1,o,o);const s=du(a.toTensor(),[e,t]);if(null==n)return s;if(1===n.length)return kc(wc(s,0),[n[0],1,1]);if(2===n.length)return kc(wc(wc(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return kc(wc(wc(wc(s,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+"batchShapes, but received ".concat(n.length,"D."))}});const Nc=ns({floor_:function(e){const t={x:$r(e,"x","floor","float32")};return Hr.runKernel(Tt,t)}});const Sc=ns({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const r={x:$r(e,"x","gather"),indices:$r(t,"indices","gather","int32")},s={axis:n,batchDims:a};return Hr.runKernel(Rt,r,s)}});const Ec=ns({greater_:function(e,t){let n=$r(e,"a","greater","string_or_numeric"),a=$r(t,"b","greater","string_or_numeric");[n,a]=Mr(n,a),qo(n.shape,a.shape);const r={a:n,b:a};return Hr.runKernel(Ot,r)}});const Ic=ns({greaterEqual_:function(e,t){let n=$r(e,"a","greaterEqual","string_or_numeric"),a=$r(t,"b","greaterEqual","string_or_numeric");[n,a]=Mr(n,a),qo(n.shape,a.shape);const r={a:n,b:a};return Hr.runKernel(Lt,r)}});const Tc=ns({imag_:function(e){const t={input:$r(e,"input","imag")};return Hr.runKernel(Bt,t)}});const Fc=ns({isFinite_:function(e){const t={x:$r(e,"x","isFinite")};return Hr.runKernel(Pt,t)}});const Ac=ns({isInf_:function(e){const t={x:$r(e,"x","isInf")};return Hr.runKernel(Wt,t)}});const Rc=ns({isNaN_:function(e){const t={x:$r(e,"x","isNaN")};return Hr.runKernel(Vt,t)}});const _c=ns({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n={x:$r(e,"x","leakyRelu")},a={alpha:t};return Hr.runKernel(Ut,n,a)}});const Oc=ns({less_:function(e,t){let n=$r(e,"a","less","string_or_numeric"),a=$r(t,"b","less","string_or_numeric");[n,a]=Mr(n,a),qo(n.shape,a.shape);const r={a:n,b:a};return Hr.runKernel(Gt,r)}});const Lc=ns({lessEqual_:function(e,t){let n=$r(e,"a","lessEqual","string_or_numeric"),a=$r(t,"b","lessEqual","string_or_numeric");[n,a]=Mr(n,a),qo(n.shape,a.shape);const r={a:n,b:a};return Hr.runKernel(Ht,r)}});function Mc(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const a={start:e,stop:t,num:n};return Hr.runKernel(jt,{},a)}const zc=ns({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const s=$r(e,"x","localResponseNormalization");M(4===s.rank||3===s.rank,(()=>"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ".concat(s.rank,"."))),M(V(t),(()=>"Error in localResponseNormalization: depthRadius must be an "+"integer but got depthRadius ".concat(t,".")));let o=s,i=!1;3===s.rank&&(i=!0,o=du(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const u={x:o},c={depthRadius:t,bias:n,alpha:a,beta:r},l=Hr.runKernel(Zt,u,c);return i?du(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const Bc=ns({log_:function(e){const t={x:$r(e,"x","log","float32")};return Hr.runKernel(qt,t)}});const Pc=ns({log1p_:function(e){const t={x:$r(e,"x","log1p")};return Hr.runKernel(Kt,t)}});const Wc=ns({neg_:function(e){const t={x:$r(e,"x","neg")};return Hr.runKernel(fn,t)}});const Vc=ns({softplus_:function(e){const t={x:$r(e,"x","softplus")};return Hr.runKernel(Jn,t)}});const Uc=ns({logSigmoid_:function(e){const t=$r(e,"x","logSigmoid");return To((e=>({value:Wc(Vc(Wc(e))),gradFunc:t=>No(t,yu(Wc(e)))})))(t)}});const Gc=ns({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=$r(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and axis was ").concat(t));const a=To(((e,n)=>{const a=fc(e,t,!0),r=Vo(e,a),s=Vo(vo(r,"float32"),Bc(gc(xc(r),t,!0)));n([s]);return{value:s,gradFunc:(e,n)=>{const[a]=n,r=xc(a);return Vo(e,No(gc(e,t,!0),r))}}}));return a(n)}});const Hc=ns({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a=$r(e,"x","logSumExp"),r=q(t,a.shape),s=fc(a,r,!0),o=Vo(a,s),i=xc(o),u=gc(i,r),c=Bc(u),l=Do(du(s,c.shape),c);if(n){const e=cc(l.shape,r);return du(l,e)}return l}});const jc=ns({logicalAnd_:function(e,t){const n=$r(e,"a","logicalAnd","bool"),a=$r(t,"b","logicalAnd","bool");qo(n.shape,a.shape);const r={a:n,b:a};return Hr.runKernel(Xt,r)}});const qc=ns({logicalNot_:function(e){const t={x:$r(e,"x","logicalNot","bool")};return Hr.runKernel(Yt,t)}});const Kc=ns({logicalOr_:function(e,t){const n=$r(e,"a","logicalOr","bool"),a=$r(t,"b","logicalOr","bool");qo(n.shape,a.shape);const r={a:n,b:a};return Hr.runKernel(Qt,r)}});const Xc=ns({logicalXor_:function(e,t){const n=$r(e,"a","logicalXor","bool"),a=$r(t,"b","logicalXor","bool");return qo(n.shape,a.shape),jc(Kc(e,t),qc(jc(e,t)))}}),Yc=2147483648;const Qc=ns({searchSorted_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"left";const a=$r(e,"sortedSequence","searchSorted"),r=$r(t,"values","searchSorted"),s=a.shape[a.shape.length-1],o=r.shape[r.shape.length-1],i=du(a,[-1,s]),u=du(r,[-1,o]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(P(u.shape)>=Yc)throw new Error("values tensor size must less than ".concat(Yc));if(i.shape[1]>=Yc)throw new Error("trailing dim_size must less than ".concat(Yc," for int32 output type, was ").concat(i.shape[1]));const c={sortedSequence:i,values:u},l={side:n};return Hr.runKernel(Hn,c,l)}});function Zc(e,t){return Qc(e,t,"left")}const Jc=ns({maxPool_:function(e,t,n,a,r){const s=$r(e,"x","maxPool");let o=s,i=!1;3===s.rank&&(i=!0,o=du(s,[1,s.shape[0],s.shape[1],s.shape[2]])),M(4===o.rank,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(o.rank,"."))),M(uu(n,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'"))),hu("maxPool",a,r);const u={x:o},c={filterSize:t,strides:n,pad:a,dimRoundingMode:r},l=Hr.runKernel(tn,u,c);return i?du(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const $c=ns({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=$r(e,"x","maxPool3d");let i=o,u=!1;4===o.rank&&(u=!0,i=du(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),M(5===i.rank,(()=>"Error in maxPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),M("NDHWC"===s,(()=>"Error in maxPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(s))),hu("maxPool3d",a,r);const c={x:i},l={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s},h=Hr.runKernel(an,c,l);return u?du(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const el=ns({maxPoolWithArgmax_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const s={x:$r(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:a,includeBatchInIndex:r},i=Hr.runKernel(sn,s,o);return{result:i[0],indexes:i[1]}}});const tl=ns({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:$r(e,"x","mean")},r={axis:t,keepDims:n};return Hr.runKernel(on,a,r)}});function nl(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(ce(e),"complex64"===t){const t=nl(e,"float32"),n=nl(e,"float32");return as(t,n)}const n=ie(P(e),t);return Hr.makeTensor(n,e,t)}function al(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(ce(e),"complex64"===t){const t=al(e,"float32"),n=nl(e,"float32");return as(t,n)}const n=oe(P(e),t);return Hr.makeTensor(n,e,t)}function rl(e,t){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError("".concat(n," is not a valid third argument to meshgrid"));if(void 0===e)return[];let a=$r(e,"x","meshgrid",e instanceof kr?e.dtype:"float32");if(void 0===t)return[a];let r=$r(t,"y","meshgrid",t instanceof kr?t.dtype:"float32");const s=P(a.shape),o=P(r.shape);return"xy"===n?(a=du(a,[1,-1]),r=du(r,[-1,1]),[gu(al([o,1],a.dtype),a),gu(r,al([1,s],r.dtype))]):(a=du(a,[-1,1]),r=du(r,[1,-1]),[gu(a,al([1,o],a.dtype)),gu(al([s,1],r.dtype),r)])}const sl=ns({minimum_:function(e,t){let n=$r(e,"a","minimum"),a=$r(t,"b","minimum");[n,a]=Mr(n,a),"bool"===n.dtype&&(n=vo(n,"int32"),a=vo(a,"int32")),qo(n.shape,a.shape);const r={a:n,b:a};return Hr.runKernel(cn,r)}});const ol=ns({mirrorPad_:function(e,t,n){M("reflect"===n||"symmetric"===n,(()=>"Invalid mode. Mode must be either reflect or symmetric. "+"Got ".concat(n,".")));const a=$r(e,"x","mirrorPad");if(0===a.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");M(t.length===a.rank,(()=>"Padding doesn't match input. Must be ".concat(a.rank,". ")+"Got ".concat(t.length,".")));const r="reflect"===n?1:0;for(let i=0;i<a.rank;i++)M(2===t[i].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),M(t[i][0]>=0&&t[i][0]<=a.shape[i]-r&&t[i][1]>=0&&t[i][1]<=a.shape[i]-r,(()=>"Padding in dimension ".concat(i," cannot be greater than or equal ")+"to ".concat(a.shape[i]-r," or less than 0 for input of ")+"shape ".concat(a.shape)));const s={paddings:t,mode:n},o={x:a};return Hr.runKernel(ln,o,s)}});const il=ns({mod_:function(e,t){let n=$r(e,"a","mod"),a=$r(t,"b","mod");[n,a]=Mr(n,a);const r={a:n,b:a};return Hr.runKernel(hn,r)}});const ul=ns({moments_:function(e){let t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const n=q(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,(e=$r(e,"x","moments")).shape),a=tl(e,n,t);let r=a.shape;t||(r=cc(a.shape,n));const s=Eo(Vo(vo(e,"float32"),du(a,r)));return{mean:a,variance:tl(s,n,t)}}});const cl=ns({multiRNNCell_:function(e,t,n,a){const r=$r(t,"data","multiRNNCell"),s=es(n,"c","multiRNNCell"),o=es(a,"h","multiRNNCell");let i=r;const u=[];for(let h=0;h<e.length;h++){const t=e[h](i,s[h],o[h]);u.push(t[0]),u.push(t[1]),i=t[1]}const c=[],l=[];for(let h=0;h<u.length;h+=2)c.push(u[h]),l.push(u[h+1]);return[c,l]}});const ll=ns({multinomial_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=$r(e,"logits","multinomial"),s=r.size,o=r.rank;if(s<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+"".concat(s,"."));if(o>2)throw new Error("Rank of probabilities must be 1 or 2, but is ".concat(o));n=n||Math.random();const i={logits:1===o?du(r,[1,-1]):r},u={numSamples:t,seed:n,normalized:a},c=Hr.runKernel(dn,i,u);return 1===o?du(c,[c.size]):c}});const hl=ns({notEqual_:function(e,t){let n=$r(e,"a","notEqual","string_or_numeric"),a=$r(t,"b","notEqual","string_or_numeric");[n,a]=Mr(n,a),qo(n.shape,a.shape);const r={a:n,b:a};return Hr.runKernel(mn,r)}});const dl=ns({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is ".concat(t));const s={indices:$r(e,"indices","oneHot","int32")},o={dtype:r,depth:t,onValue:n,offValue:a};return Hr.runKernel(xn,s,o)}});const pl=ns({onesLike_:function(e){const t={x:$r(e,"x","onesLike")};return Hr.runKernel(vn,t)}});const fl=ns({outerProduct_:function(e,t){const n=$r(e,"v1","outerProduct"),a=$r(t,"v2","outerProduct");M(1===n.rank&&1===a.rank,(()=>"Error in outerProduct: inputs must be rank 1, but got ranks "+"".concat(n.rank," and ").concat(a.rank,".")));const r=du(n,[-1,1]),s=du(a,[1,-1]);return gu(r,s)}});const ml=ns({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const a=$r(e,"x","pad");if(0===a.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:n},s={x:a};return Hr.runKernel(Dn,s,r)}});const gl=ns({pad1d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return M(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),ml(e,[t],n)}});const yl=ns({pad2d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return M(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ml(e,t,n)}});const bl=ns({pad3d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return M(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ml(e,t,n)}});const vl=ns({pad4d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return M(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ml(e,t,n)}});const xl=ns({spaceToBatchND_:function(e,t,n){const a=$r(e,"x","spaceToBatchND");M(a.rank>=1+t.length,(()=>"input rank ".concat(a.rank," should be > than [blockShape] ").concat(t.length))),M(n.length===t.length,(()=>"paddings.shape[0] ".concat(n.length," must be equal to [blockShape] ").concat(t.length))),M(a.shape.reduce(((e,a,r)=>r>0&&r<=t.length?e&&(a+n[r-1][0]+n[r-1][1])%t[r-1]===0:e),!0),(()=>"input spatial dimensions ".concat(a.shape.slice(1)," with paddings ").concat(n.toString()," must be divisible by blockShapes ").concat(t.toString())));const r={x:a},s={blockShape:t,paddings:n};return Hr.runKernel(ta,r,s)}});const wl=ns({pool_:function(e,t,n,a,r,s,o){null==r&&(r=[1,1]),null==s&&(s=1),0===a&&(a="valid");const i=$r(e,"x","maxPool");let u=i,c=!1;3===i.rank&&(c=!0,u=du(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(uu(s,r),(()=>"Error in pool: Either strides or dilations must be 1. "+"Got strides ".concat(s," and dilations '").concat(r,"'")));const l=Ji(u.shape,t,s,r,a),h=[l.dilationHeight,l.dilationWidth];let d;d="same"===a?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),a=n.map((e=>e-1)),r=a.map((e=>Math.floor(e/2))),s=a.map(((e,t)=>e-r[t]));return a.map(((e,t)=>[r[t],s[t]]))}([l.filterHeight,l.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const a=n.map((e=>e[0])),r=n.map((e=>e[1])),s=e.concat(a,r),o=t.map(((e,t)=>(e-s[t]%e)%e)),i=r.map(((e,t)=>e+o[t])),u=t.map(((e,t)=>[a[t],i[t]])),c=t.map(((e,t)=>[0,o[t]]));return[u,c]}([l.inHeight,l.inWidth],h,d),g=p?a:"valid",y=p?u:xl(u,h,f),b=("avg"===n?()=>pu(y,t,s,g,o):()=>Jc(y,t,s,g,o))(),v=p?b:wu(b,h,m);return c?du(v,[v.shape[1],v.shape[2],v.shape[3]]):v}});const Dl=ns({prelu_:function(e,t){const n={x:$r(e,"x","prelu"),alpha:$r(t,"alpha","prelu")};return Hr.runKernel(Cn,n)}});const kl=ns({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=$r(e,"x","prod");"bool"===a.dtype&&(a=vo(a,"int32"));const r={x:a},s={axis:t,keepDims:n};return Hr.runKernel(Nn,r,s)}});const Cl=ns({raggedGather_:function(e,t,n,a){const r={paramsNestedSplits:e.map(((e,t)=>$r(e,"tensors".concat(t),"raggedGather","int32"))),paramsDenseValues:$r(t,"paramsDenseValues","raggedGather"),indices:$r(n,"indices","raggedGather","int32")},s={outputRaggedRank:a},o=Hr.runKernel(Sn,r,s);return{outputNestedSplits:o.slice(0,o.length-1),outputDenseValues:o[o.length-1]}}});const Nl=ns({raggedRange_:function(e,t,n){const a=$r(e,"starts","raggedRange"),r={starts:a,limits:$r(t,"limits","raggedRange",a.dtype),deltas:$r(n,"deltas","raggedRange",a.dtype)},s=Hr.runKernel(En,r);return{rtNestedSplits:s[0],rtDenseValues:s[1]}}});const Sl=ns({raggedTensorToTensor_:function(e,t,n,a,r){const s=$r(e,"shape","raggedTensorToTensor","int32"),o=$r(t,"values","raggedTensorToTensor"),i={shape:s,values:o,defaultValue:$r(n,"defaultValue","raggedTensorToTensor",o.dtype),rowPartitionTensors:a.map(((e,t)=>$r(e,"tensors".concat(t),"raggedTensorToTensor","int32")))},u={rowPartitionTypes:r};return Hr.runKernel(In,i,u)}});const El=ns({rand_:function(e,t,n){ce(e);const a=P(e);let r=null;if(null==n||"float32"===n)r=new Float32Array(a);else if("int32"===n)r=new Int32Array(a);else{if("bool"!==n)throw new Error("Unknown data type ".concat(n));r=new Uint8Array(a)}for(let s=0;s<a;s++)r[s]=t();return Hr.makeTensor(r,e,n)}});var Il=n(334);class Tl{constructor(e,t,n,a,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=r||Math.random();this.random=Il.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let a,r,s;do{a=2*this.random()-1,r=2*this.random()-1,s=a*a+r*r}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*a*o,t=this.mean+this.stdDev*r*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Fl{constructor(e,t,n,a){this.alpha=e,this.beta=1/t,this.dtype=n;const r=a||Math.random();this.randu=Il.alea(r.toString()),this.randn=new Tl(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,a,r,s;for(;;){do{a=this.randn.nextValue(),s=1+this.c*a}while(s<=0);if(s*=s*s,e=a*a,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),r=this.randu(),r<t||Math.log(r)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Al{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between ".concat(e," - ").concat(t," <= 1 and dtype is not float"));this.random=Il.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Rl=ns({randomGamma_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;if(ce(e),null==n&&(n=1),null==a&&(a="float32"),"float32"!==a&&"int32"!==a)throw new Error("Unsupported data type ".concat(a));const s=new Fl(t,n,a,r),o=bo(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const _l=ns({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if(ce(e),null!=a&&"bool"===a)throw new Error("Unsupported data type ".concat(a));const s=new Tl(t,n,a,!1,r),o=bo(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const Ol=ns({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error("Unsupported data type ".concat(t));return _l(e,0,1,t,n)}});const Ll=ns({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;ce(e);const s=bo(e,a),o=new Al(t,n,null,r);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}});const Ml=ns({randomUniformInt_:function(e,t,n,a){return Ll(e,t,n,"int32",a)}});function zl(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:a};return Hr.runKernel(Tn,{},r)}const Bl=ns({real_:function(e){const t={input:$r(e,"input","real")};return Hr.runKernel(Fn,t)}});const Pl=ns({reciprocal_:function(e){const t={x:$r(e,"x","reciprocal")};return Hr.runKernel(An,t)}});const Wl=ns({relu_:function(e){const t={x:$r(e,"x","relu")};return Hr.runKernel(Rn,t)}});const Vl=ns({relu6_:function(e){const t={x:$r(e,"x","relu6")};return Hr.runKernel(Bn,t)}});const Ul=ns({reverse_:function(e,t){const n={x:$r(e,"x","reverse")},a={dims:t};return Hr.runKernel(Pn,n,a)}});const Gl=ns({reverse1d_:function(e){const t=$r(e,"x","reverse");return M(1===t.rank,(()=>"Error in reverse1D: x must be rank 1 but got rank ".concat(t.rank,"."))),Ul(t,0)}});const Hl=ns({reverse2d_:function(e,t){const n=$r(e,"x","reverse");return M(2===n.rank,(()=>"Error in reverse2D: x must be rank 2 but got rank ".concat(n.rank,"."))),Ul(n,t)}});const jl=ns({reverse3d_:function(e,t){const n=$r(e,"x","reverse");return M(3===n.rank,(()=>"Error in reverse3D: x must be rank 3 but got rank ".concat(n.rank,"."))),Ul(n,t)}});const ql=ns({reverse4d_:function(e,t){const n=$r(e,"x","reverse");return M(4===n.rank,(()=>"Error in reverse4D: x must be rank 4 but got rank ".concat(n.rank,"."))),Ul(n,t)}});const Kl=ns({round_:function(e){const t={x:$r(e,"x","round")};return Hr.runKernel(Wn,t)}});const Xl=ns({rsqrt_:function(e){const t={x:$r(e,"x","rsqrt","float32")};return Hr.runKernel(Vn,t)}});const Yl=ns({selu_:function(e){const t={x:$r(e,"x","selu")};return Hr.runKernel(qn,t)}});const Ql=ns({separableConv2d_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const i=$r(e,"x","separableConv2d"),u=$r(t,"depthwiseFilter","separableConv2d"),c=$r(n,"pointwiseFilter","separableConv2d");let l=i,h=!1;if(3===i.rank&&(h=!0,l=du(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");M(4===l.rank,(()=>"Error in separableConv2d: input must be rank 4, but got "+"rank ".concat(l.rank,"."))),M(4===u.rank,(()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+"got rank ".concat(u.rank,"."))),M(4===c.rank,(()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+"got rank ".concat(u.rank,"."))),M(1===c.shape[0],(()=>"Error in separableConv2d: the first dimension of pointwise filter "+" must be 1, but got ".concat(c.shape[0],"."))),M(1===c.shape[1],(()=>"Error in separableConv2d: the second dimension of pointwise "+"filter must be 1, but got ".concat(c.shape[1],".")));const d=u.shape[2],p=u.shape[3];M(c.shape[2]===d*p,(()=>"Error in separableConv2d: the third dimension of pointwise filter "+"must be ".concat(d*p,", ")+"but got ".concat(c.shape[2],".")));const f=Yu(l,u,a,r,o,s),m=Mu(f,c,1,"valid",o);return h?du(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const Zl=async function(e,t){const n=$r(e,"x","setdiff1d"),a=$r(t,"y","setdiff1d");M(n.dtype===a.dtype,(()=>"x and y should have the same dtype, but got x (".concat(n.dtype,") and y (").concat(a.dtype,")."))),M(1===n.rank,(()=>"x should be 1D tensor, but got x (".concat(n.shape,")."))),M(1===a.rank,(()=>"y should be 1D tensor, but got y (".concat(a.shape,").")));const r=await n.data(),s=await a.data(),o=new Set(s);let i=0;for(let l=0;l<r.length;l++)o.has(r[l])||i++;const u=new vr([i],n.dtype),c=new vr([i],"int32");for(let l=0,h=0;l<r.length;l++)o.has(r[l])||(u.values[h]=r[l],c.values[h]=l,h++);return[u.toTensor(),c.toTensor()]};const Jl=ns({sign_:function(e){const t={x:$r(e,"x","sign")};return Hr.runKernel(Qn,t)}});const $l=ns({sin_:function(e){const t={x:$r(e,"x","sin","float32")};return Hr.runKernel(Xn,t)}});const eh=ns({sinh_:function(e){const t={x:$r(e,"x","sinh")};return Hr.runKernel(Yn,t)}});const th=ns({slice1d_:function(e,t,n){const a=$r(e,"x","slice1d");return M(1===a.rank,(()=>"slice1d expects a rank-1 tensor, but got a rank-".concat(a.rank," tensor"))),bu(a,[t],[n])}});const nh=ns({slice2d_:function(e,t,n){const a=$r(e,"x","slice2d");return M(2===a.rank,(()=>"slice2d expects a rank-2 tensor, but got a rank-".concat(a.rank," tensor"))),bu(a,t,n)}});const ah=ns({slice3d_:function(e,t,n){const a=$r(e,"x","slice3d");return M(3===a.rank,(()=>"slice3d expects a rank-3 tensor, but got a rank-".concat(a.rank," tensor"))),bu(a,t,n)}});const rh=ns({slice4d_:function(e,t,n){const a=$r(e,"x","slice4d");return M(4===a.rank,(()=>"slice4d expects a rank-4 tensor, but got a rank-".concat(a.rank," tensor"))),bu(a,t,n)}});const sh=ns({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=$r(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and dim was ").concat(t));const a={logits:n},r={dim:t};return Hr.runKernel(aa,a,r)}});const oh=ns({fft_:function(e){M("complex64"===e.dtype,(()=>"The dtype for tf.spectral.fft() must be complex64 "+"but got ".concat(e.dtype,".")));const t={input:e};return Hr.runKernel(St,t)}});const ih=ns({ifft_:function(e){M("complex64"===e.dtype,(()=>"The dtype for tf.spectral.ifft() must be complex64 "+"but got ".concat(e.dtype,".")));const t={input:e};return Hr.runKernel(zt,t)}});const uh=ns({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let a;if(t<=2){const r=du(e,[n,t]);a=ih(r)}else{const r=[n,2*(t-1)],s=du(Bl(e),[n,t]),o=du(Tc(e),[n,t]),i=Ul(bu(s,[0,1],[n,t-2]),1),u=No(Ul(bu(o,[0,1],[n,t-2]),1),Fo(-1)),c=mu([s,i],1),l=mu([o,u],1),h=du(as(c,l),[r[0],r[1]]);a=ih(h)}if(a=Bl(a),3===e.rank&&0!==e.shape[0]){const t=a,n=e.shape[0];a=du(a,[n,a.shape[0]/n,a.shape[1]]),t.dispose()}return a}});const ch=ns({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const a={x:$r(e,"x","split")},r={numOrSizeSplits:t,axis:n};return Hr.runKernel(na,a,r)}});const lh=ns({rfft_:function(e,t){M("float32"===e.dtype,(()=>"The dtype for rfft() must be real value but got ".concat(e.dtype)));let n=e.shape[e.shape.length-1];const a=e.size/n;let r;if(null!=t&&t<n){const a=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,r=bu(e,a,s),n=t}else if(null!=t&&t>n){const a=e.shape.map((e=>e));a[e.shape.length-1]=t-n,r=mu([e,nl(a)],e.shape.length-1),n=t}else r=e;const s=Io(r),o=du(as(r,s),[a,n]),i=oh(o),u=Math.floor(n/2)+1,c=Bl(i),l=Tc(i),h=ch(c,[u,n-u],c.shape.length-1),d=ch(l,[u,n-u],l.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=u,du(as(h[0],d[0]),p)}});const hh=ns({squaredDifference_:function(e,t){let n=$r(e,"a","squaredDifference"),a=$r(t,"b","squaredDifference");[n,a]=Mr(n,a),qo(n.shape,a.shape);const r={a:n,b:a};return Hr.runKernel(ca,r,{})}});const dh=ns({squeeze_:function(e,t){const n=$r(e,"x","squeeze","string_or_numeric");return du(n,K(n.shape,t).newShape)}});const ph=ns({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=es(e,"tensors","stack","string_or_numeric");M(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&M(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const a=n,r={axis:t};return Hr.runKernel(wn,a,r)}});const fh=ns({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:$r(e,"x","step")},a={alpha:t};return Hr.runKernel(Ea,n,a)}});const mh=ns({stridedSlice_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,u=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const c={x:$r(e,"x","stridedSlice","string_or_numeric")},l={begin:t,end:n,strides:a,beginMask:r,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};return Hr.runKernel(da,c,l)}});const gh=ns({tan_:function(e){const t={x:$r(e,"x","tan","float32")};return Hr.runKernel(ya,t)}});function yh(e,t){B(e);const n=Qr(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return rs(e,null,n,t)}function bh(e,t,n){if(B(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const a=Qr(e,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return rs(e,t,a,n)}function vh(e,t,n){if(B(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const a=Qr(e,n);if(4!==a.length&&1!==a.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return rs(e,t,a,n)}function xh(e,t,n){if(B(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const a=Qr(e,n);if(5!==a.length&&1!==a.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return rs(e,t,a,n)}function wh(e,t,n){if(B(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const a=Qr(e,n);if(6!==a.length&&1!==a.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return rs(e,t=t||a,a,n)}function Dh(e,t,n){const a=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + "+"shape[sliceDim:], got updates.shape: ".concat(n.shape)+", indices.shape: ".concat(t.shape,", shape: ").concat(e)+", sliceDim: ".concat(a,", and batchDim: ").concat(r,".");if(n.rank<r)throw new Error(s+" update.rank < ".concat(r,". "));if(e.length<a+(n.rank-r))throw new Error(s+" Output shape length < ".concat(a+(n.rank-r)));if(n.rank!==r+e.length-a)throw new Error(s+" update.rank != ".concat(r+e.length-a));for(let o=0;o<r;++o)if(n.shape[o]!==t.shape[o])throw new Error(s+" updates.shape[".concat(o,"] (").concat(n.shape[o],") != indices.shape[").concat(o,"] (").concat(t.shape[o],")."));for(let o=0;o<n.rank-r;++o)if(n.shape[o+r]!==e[o+a])throw new Error(s+" updates.shape[".concat(o+r,"] (").concat(n.shape[o+r],") != shape[").concat(o+r,"] (").concat(e[o+r],")"))}function kh(e,t,n){if(t.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(t.rank,"."));if(e.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+" but the rank was ".concat(e.rank,"."));if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: ".concat(t.dtype));if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: ".concat(n));if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: ".concat(t.shape));if(0===e.size)throw new Error("Updates specified for empty output. updates shape: ".concat(e.shape))}Dh(n,t,e)}function Ch(e,t,n){const a=t.shape.length,r=a>1?t.shape[a-1]:1,s=n.length;let o=1;for(let u=r;u<s;++u)o*=n[u];const i=r<1?1:r;return{sliceRank:r,numUpdates:P(t.shape)/i,sliceSize:o,strides:[...ae(n.slice(0,r)),1],outputSize:P(n)}}const Nh=ns({tensorScatterUpdate_:function(e,t,n){const a=$r(e,"tensor","tensorScatterupdate"),r=$r(t,"indices","tensorScatterupdate","int32"),s=$r(n,"updates","tensorScatterupdate");if(kh(s,r,a.shape),a.dtype!==s.dtype)throw new Error("tensor and updates must have the same dtype, instead they are ".concat(a.dtype," and ").concat(s.dtype,"."));const o={tensor:a,indices:r,updates:s};return Hr.runKernel(Gn,o,{})}});const Sh=ns({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=$r(e,"x","topk");if(0===a.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=a.shape[a.shape.length-1];if(t<0)throw new Error("'k' passed to topk() must be >= 0 but got ".concat(t));if(t>r)throw new Error("'k' passed to topk() must be <= the last dimension (".concat(r,") ")+"but got ".concat(t));const s={x:a},o={k:t,sorted:n},[i,u]=Hr.runKernel(xa,s,o);return{values:i,indices:u}}});const Eh=ns({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if(ce(e),null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const s=new Tl(t,n,a,!0,r),o=bo(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const Ih=ns({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=$r(e,"x","unique","string_or_numeric");M(n.rank>0,(()=>"The input tensor must be at least 1D"));const a={x:n},r={axis:t},[s,o]=Hr.runKernel(ka,a,r);return{values:s,indices:o}}});const Th=ns({unsortedSegmentSum_:function(e,t,n){const a=$r(e,"x","unsortedSegmentSum"),r=$r(t,"segmentIds","unsortedSegmentSum","int32");M(V(n),(()=>"numSegments must be of dtype int"));const s={x:a,segmentIds:r},o={numSegments:n};return Hr.runKernel(Na,s,o)}});const Fh=ns({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=$r(e,"x","unstack","string_or_numeric");M(t>=-n.shape.length&&t<n.shape.length,(()=>"Axis = ".concat(t," is not in [-").concat(n.shape.length,", ").concat(n.shape.length,")")));const a={value:n},r={axis:t};return Hr.runKernel(Ca,a,r)}});function Ah(e,t){return Qc(e,t,"right")}function Rh(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return Hr.makeVariable(e,t,n,a)}function _h(e,t){const n=[];for(let s=0;s<t.length;s++)t[s]&&n.push(s);const a=bo(e,"int32"),r=bo([n.length,e.length],"int32");for(let s=0;s<n.length;s++){const t=a.indexToLoc(n[s]),o=s*e.length;r.values.set(t,o)}return r.toTensor()}const Oh=async function(e){const t=$r(e,"condition","whereAsync","bool"),n=await t.data(),a=_h(t.shape,n);return e!==t&&t.dispose(),a};const Lh=async function(e,t,n){const a=$r(e,"tensor","boolMask"),r=$r(t,"mask","boolMask","bool"),s=null==n?0:n,o=r.rank,i=a.shape;M(o>0,(()=>"mask cannot be scalar")),z(i.slice(s,s+o),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let m=s;m<s+o;m++)u*=i[m];const c=i.slice(0,s).concat([u],i.slice(s+o)),l=du(a,c),h=du(r,[-1]),d=await Oh(h),p=dh(d,[1]),f=Sc(l,p,s);return e!==a&&a.dispose(),t!==r&&r.dispose(),p.dispose(),l.dispose(),h.dispose(),d.dispose(),f};const Mh=ns({transpose_:function(e,t,n){const a=$r(e,"x","transpose");if(null==t&&(t=a.shape.map(((e,t)=>t)).reverse()),M(a.rank===t.length,(()=>"Error in transpose: rank of input ".concat(a.rank," ")+"must match length of perm ".concat(t,"."))),t.forEach((e=>{M(e>=0&&e<a.rank,(()=>"All entries in 'perm' must be between 0 and ".concat(a.rank-1)+" but got ".concat(t)))})),a.rank<=1)return a.clone();const r={x:a},s={perm:t};return"complex64"===a.dtype?ls((()=>{let e=Bl(a),t=Tc(a);return e=Hr.runKernel(Da,{x:e},s),t=Hr.runKernel(Da,{x:t},s),n&&(t=Wc(t)),as(e,t)})):Hr.runKernel(Da,r,s)}});const zh=ns({movingAverage_:function(e,t,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];const s=$r(e,"v","movingAverage"),o=$r(t,"x","movingAverage"),i=$r(n,"decay","movingAverage");var u,c;c=o,M((u=s).dtype===c.dtype,(()=>"The dtypes of the first(".concat(u.dtype,") and")+" second(".concat(c.dtype,") input must match"))),M(W(s.shape,o.shape),(()=>"Shape mismatch in v and x"));const l=Fo(1),h=Vo(l,i);let d=No(Vo(o,s),h);if(r){M(null!=a,(()=>"When using zeroDebias: true, step is required."));const e=$r(a,"step","movingAverage");d=Co(d,Vo(l,Wo(i,e)))}return Do(s,d)}});const Bh=ns({scatterND_:function(e,t,n){ce(n);const a=$r(e,"indices","scatterND","int32"),r=$r(t,"updates","scatterND");kh(r,a,n);const s={indices:a,updates:r},o={shape:n};return Hr.runKernel(Un,s,o)}});const Ph=ns({sparseToDense_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;ce(n);const r=$r(e,"sparseIndices","sparseToDense","int32"),s=$r(t,"sparseValues","sparseToDense","string_or_numeric"),o=$r(a,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,a){if("int32"!==e.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type,"+" but the dtype was ".concat(e.dtype,"."));if(e.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix,"+" but got shape ".concat(e.shape,"."));const r=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error("outputShape has incorrect number of elements:,"+" ".concat(n.length,", should be: ").concat(s,"."));const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==r))throw new Error("sparseValues has incorrect shape "+"".concat(t.shape,", should be [] or [").concat(r,"]"));if(t.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,s,n,o);const i={sparseIndices:r,sparseValues:s,defaultValue:o},u={outputShape:n};return Hr.runKernel(ua,i,u)}});const Wh=ns({gatherND_:function(e,t){const n=$r(t,"indices","gatherND","int32"),a={params:$r(e,"x","gatherND","string_or_numeric"),indices:n};return Hr.runKernel(_t,a)}});const Vh=ns({dropout_:function(e,t,n,a){const r=$r(e,"x","dropout");if(M("float32"===r.dtype,(()=>"x has to be a floating point tensor since it's going to be "+"scaled, but got a ".concat(r.dtype," tensor instead."))),M(t>=0&&t<1,(()=>"rate must be a float in the range [0, 1), but got ".concat(t,"."))),0===t)return e instanceof kr?r.clone():r;const s=function(e,t){if(null==t)return e.shape.slice();if(W(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let a=0;a<e.shape.length;a++)null==t[a]&&null!=e.shape[a]?n.push(e.shape[a]):n.push(t[a]);return n}return t}(r,n),o=1-t,i=Co(Nc(Do(Ll(s,0,1,"float32",a),o)),o);return No(r,i)}});function Uh(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Gh(e,t,n){const a=1-e%2,r=new Float32Array(e);for(let s=0;s<e;++s){const o=2*Math.PI*s/(e+a-1);r[s]=t-n*Math.cos(o)}return yh(r,"float32")}const Hh=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const a=$r(e,"predictions","inTopK"),r=$r(t,"targets","inTopK");M(a.rank>1,(()=>"inTopK() expects the predictions to be of rank 2 or higher, "+"but got ".concat(a.rank))),M(a.rank-1===r.rank,(()=>"predictions rank should be 1 larger than targets rank, but got predictions rank "+"".concat(a.rank," and targets rank ").concat(r.rank))),z(a.shape.slice(0,a.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=a.shape[a.shape.length-1];M(n>0&&n<=s,(()=>"'k' passed to inTopK() must be > 0 && <= the predictions last "+"dimension (".concat(s,"), but got ").concat(n)));const o=await a.data(),i=await r.data(),[u,c]=[o.length/s,s],l=X("bool",u);for(let h=0;h<u;h++){const e=h*c,t=o.subarray(e,e+c),a=[];for(let n=0;n<t.length;n++)a.push({value:t[n],index:n});a.sort(((e,t)=>t.value-e.value)),l[h]=0;for(let r=0;r<n;r++)if(a[r].index===i[h]){l[h]=1;break}}return e!==a&&a.dispose(),t!==r&&r.dispose(),ss(l,r.shape,"bool")};const jh=ns({conv2DBackpropFilter_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",o=arguments.length>6?arguments[6]:void 0,i=e;3===e.rank&&(i=du(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=du(t,[1,t.shape[0],t.shape[1],t.shape[2]])),M(4===i.rank,(()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+"".concat(i.shape,"."))),M(4===u.rank,(()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+"".concat(u.shape,"."))),M(4===n.length,(()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+"".concat(n,".")));const c="NHWC"===s?i.shape[3]:i.shape[1],l="NHWC"===s?u.shape[3]:u.shape[1];M(c===n[2],(()=>"Error in conv2dDerFilter: depth of input ".concat(c,") must ")+"match input depth in filter (".concat(n[2],"."))),M(l===n[3],(()=>"Error in conv2dDerFilter: depth of dy (".concat(l,") must ")+"match output depth for filter (".concat(n[3],")."))),hu("conv2dDerFilter",r,o);const h={x:i,dy:u},d={strides:a,pad:r,dataFormat:s,dimRoundingMode:o,filterShape:n};return Hr.runKernel(Ze,h,d)}});function qh(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return No(e,fh(t));throw new Error("Cannot compute gradient for fused activation ".concat(n,"."))}function Kh(e,t){let n=t;const a=jo(e.shape,t.shape);return a.length>0&&(n=gc(n,a)),du(n,e.shape)}function Xh(e,t,n,a){if("linear"===t)return e;if("relu"===t)return Wl(e);if("elu"===t)return ac(e);if("relu6"===t)return Vl(e);if("prelu"===t)return Dl(e,n);if("leakyrelu"===t)return _c(e,a);if("sigmoid"===t)return yu(e);throw new Error("Unknown fused activation ".concat(t,"."))}const Yh=(e,t)=>!(e>0)||"linear"===t;const Qh=ns({fusedConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:u,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:h}=e;if(c=c||"linear",!1===Yh(Hr.state.gradientDepth,c)){M("NHWC"===s,(()=>"Error in fused conv2d: got dataFormat of ".concat(s," but ")+"only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear."));let e=Mu(t,n,a,r,s,o,i);return null!=u&&(e=Do(e,u)),Xh(e,c,l,h)}const d=$r(t,"x","conv2d","float32"),p=$r(n,"filter","conv2d","float32");let f=d,m=!1;3===d.rank&&(m=!0,f=du(d,[1,d.shape[0],d.shape[1],d.shape[2]])),M(4===f.rank,(()=>"Error in fused conv2d: input must be rank 4, but got rank "+"".concat(f.rank,"."))),M(4===p.rank,(()=>"Error in fused conv2d: filter must be rank 4, but got rank "+"".concat(p.rank,"."))),hu("fused conv2d",r,i);const g="NHWC"===s?f.shape[3]:f.shape[1];M(p.shape[2]===g,(()=>"Error in conv2d: depth of input (".concat(g,") must match ")+"input depth for filter ".concat(p.shape[2],"."))),M(uu(a,o),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(a," and dilations '").concat(o,"'")));const y=eu(f.shape,p.shape,a,o,r,i);let b,v;if(null!=u&&(b=$r(u,"bias","fused conv2d"),[b]=Mr(b,d),"NHWC"===s?qo(y.outShape,b.shape):(M(b.shape.length<=1,(()=>"Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of "+"rank-".concat(b.shape.length,"."))),M(0===b.shape.length||b.shape[0]===y.outChannels||1===b.shape[0],(()=>"Error in fused conv2d: bias shape (".concat(b.shape,") is not ")+"compatible with the number of output channels "+"(".concat(y.outChannels,")"))))),null!=l){const e=l.shape;if(M(e.length<=1||3===e.length,(()=>"Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of "+"rank-".concat(e.length,"."))),1===e.length)M(1===e[0]||e[0]===y.outChannels,(()=>"Error in fused conv2d: PReLU activation weights "+"(".concat(e,") is not compatible with the number of output ")+"channels (".concat(y.outChannels,").")));else if(3===e.length)try{qo(e,y.outShape)}catch(k){const t="Error in fused conv2d: PReLU activation weights (".concat(e,") ")+"is not compatible with the output shape of the conv2d "+"(".concat(y.outShape,").");throw Error(t)}v=$r(l,"prelu weights","fused conv2d")}const x=(e,t)=>{M("NHWC"===s,(()=>"Error in gradient of fused conv2D: got dataFormat of ".concat(s," but only NHWC is currently supported.")));const[n,i,u,l]=t,h=qh(e,u,c);M(iu(o),(()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(o,"'")));const d=[Bu(i.shape,h,n,a,r),jh(i,h,n.shape,a,r)];if(null!=l){const e=Kh(l,h);d.push(e)}return d},w={x:f,filter:p,bias:b,preluActivationWeights:v},D={strides:a,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i,activation:c,leakyreluAlpha:h};if(null==u){const e=To(((e,t,n)=>{let a=Hr.runKernel(Aa,w,D);return n([t,e,a]),m&&(a=du(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}));return e(f,p)}{const e=To(((e,t,n,a)=>{let r=Hr.runKernel(Aa,w,D);return a([t,e,r,n]),m&&(r=du(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(f,p,b)}}});const Zh=ns({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0,i=e;3===e.rank&&(i=du(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=du(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={x:i,dy:u},l={strides:a,pad:r,dimRoundingMode:o,dilations:s,filterShape:n};return Hr.runKernel(lt,c,l)}});const Jh=ns({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0,i=t,u=!1;3===t.rank&&(u=!0,i=du(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={dy:i,filter:n},l={strides:a,pad:r,dimRoundingMode:o,dilations:s,inputShape:e},h=Hr.runKernel(ht,c,l);return u?du(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const $h=ns({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:u,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:h}=e;if(!1===Yh(Hr.state.gradientDepth,c)){let e=Yu(t,n,a,r,s,o,i);return null!=u&&(e=Do(e,u)),Xh(e,c,l,h)}const d=$r(t,"x","depthwiseConv2d","float32"),p=$r(n,"filter","depthwiseConv2d","float32");let f=d,m=!1;3===d.rank&&(m=!0,f=du(d,[1,d.shape[0],d.shape[1],d.shape[2]])),M(4===f.rank,(()=>"Error in fused depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(f.rank,"."))),M(4===p.rank,(()=>"Error in fused depthwiseConv2d: filter must be rank 4, "+"but got rank ".concat(p.rank,"."))),M(f.shape[3]===p.shape[2],(()=>"Error in fused depthwiseConv2d: number of input channels "+"(".concat(f.shape[3],") must match the inChannels dimension in ")+"filter ".concat(p.shape[2],"."))),null==o&&(o=[1,1]),M(uu(a,o),(()=>"Error in fused depthwiseConv2d: Either strides or dilations must "+"be 1. Got strides ".concat(a," and dilations '").concat(o,"'"))),hu("fused depthwiseConv2d",r,i);const g=eu(f.shape,p.shape,a,o,r,i,!0);let y,b;null!=u&&(y=$r(u,"bias","fused conv2d"),[y]=Mr(y,d),qo(g.outShape,y.shape)),null!=l&&(b=$r(l,"prelu weights","fused depthwiseConv2d"));const v=(e,t)=>{M(iu(o),(()=>"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(o,"'")));const[n,s,u,l]=t,h=qh(e,u,c),d=Jh(s.shape,h,n,a,r,o,i),p=Zh(s,h,n.shape,a,r,o,i);if(null!=l){return[d,p,Kh(y,h)]}return[d,p]},x={x:f,filter:p,bias:y,preluActivationWeights:b},w={strides:a,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i,activation:c,leakyreluAlpha:h};if(null==u){const e=To(((e,t,n)=>{let a=Hr.runKernel(Ra,x,w);return n([t,e,a]),m&&(a=du(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:v}}));return e(f,p)}{const e=To(((e,t,n,a)=>{let r=Hr.runKernel(Ra,x,w);return a([t,e,r,n]),m&&(r=du(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}));return e(f,p,y)}}});const ed=ns({fusedMatMul_:function(e){let{a:t,b:n,transposeA:a=!1,transposeB:r=!1,bias:s,activation:o="linear",preluActivationWeights:i,leakyreluAlpha:u=.2}=e;if(!1===Yh(Hr.state.gradientDepth,o)){let e=gu(t,n,a,r);return null!=s&&(e=Do(e,s)),Xh(e,o,i,u)}let c=$r(t,"a","fused matMul"),l=$r(n,"b","fused matMul");[c,l]=Mr(c,l);const h=a?c.shape[c.rank-2]:c.shape[c.rank-1],d=r?l.shape[l.rank-1]:l.shape[l.rank-2],p=a?c.shape[c.rank-1]:c.shape[c.rank-2],f=r?l.shape[l.rank-2]:l.shape[l.rank-1],m=c.shape.slice(0,-2),g=l.shape.slice(0,-2),y=P(m),b=P(g);M(h===d,(()=>"Error in fused matMul: inner shapes (".concat(h,") and (")+"".concat(d,") of Tensors with shapes ").concat(c.shape," and ")+"".concat(l.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const v=qo(c.shape.slice(0,-2),l.shape.slice(0,-2)).concat([p,f]),x=du(c,a?[y,h,p]:[y,p,h]),w=du(l,r?[b,f,d]:[b,d,f]);let D,k;null!=s&&(D=$r(s,"bias","fused matMul"),[D]=Mr(D,c),qo(v,D.shape)),null!=i&&(k=$r(i,"prelu weights","fused matMul"));const C=(e,t)=>{const[n,i,u,c]=t,l=qh(du(e,u.shape),u,o);let h,d;if(a||r?!a&&r?(h=gu(l,i,!1,!1),d=gu(l,n,!0,!1)):a&&!r?(h=gu(i,l,!1,!0),d=gu(n,l,!1,!1)):(h=gu(i,l,!0,!0),d=gu(l,n,!0,!0)):(h=gu(l,i,!1,!0),d=gu(n,l,!0,!1)),null!=s){return[h,d,Kh(c,l)]}return[h,d]},N={a:x,b:w,bias:D,preluActivationWeights:k},S={transposeA:a,transposeB:r,activation:o,leakyreluAlpha:u};if(null==s){const e=To(((e,t,n)=>{const a=Hr.runKernel(Fa,N,S);return n([e,t,a]),{value:du(a,v),gradFunc:C}}));return e(x,w)}{const e=To(((e,t,n,a)=>{const r=Hr.runKernel(Fa,N,S);return a([e,t,r,n]),{value:du(r,v),gradFunc:C}}));return e(x,w,D)}}});const td=ns({hammingWindow_:function(e){return Gh(e,.54,.46)}});const nd=ns({hannWindow_:function(e){return Gh(e,.5,.5)}});const ad=ns({frame_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=0;const o=[];for(;s+t<=e.size;)o.push(bu(e,s,t)),s+=n;if(a)for(;s<e.size;){const a=s+t-e.size,i=mu([bu(e,s,t-a),Bo([a],r)]);o.push(i),s+=n}return 0===o.length?bh([],[0,t]):du(mu(o),[o.length,t])}});const rd=ns({stft_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:nd;null==a&&(a=Uh(t));const s=ad(e,t,n),o=No(s,r(t));return lh(o,a)}});const sd=ns({cropAndResize_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=$r(e,"image","cropAndResize"),i=$r(t,"boxes","cropAndResize","float32"),u=$r(n,"boxInd","cropAndResize","int32"),c=i.shape[0];M(4===o.rank,(()=>"Error in cropAndResize: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),M(2===i.rank&&4===i.shape[1],(()=>"Error in cropAndResize: boxes must be have size [".concat(c,",4] ")+"but had shape ".concat(i.shape,"."))),M(1===u.rank&&u.shape[0]===c,(()=>"Error in cropAndResize: boxInd must be have size [".concat(c,"] ")+"but had shape ".concat(i.shape,"."))),M(2===a.length,(()=>"Error in cropAndResize: cropSize must be of length 2, but got "+"length ".concat(a.length,"."))),M(a[0]>=1&&a[1]>=1,(()=>"cropSize must be atleast [1,1], but was ".concat(a))),M("bilinear"===r||"nearest"===r,(()=>"method must be bilinear or nearest, but was ".concat(r)));const l={image:o,boxes:i,boxInd:u},h={method:r,extrapolationValue:s,cropSize:a};return Hr.runKernel(ot,l,h)}});const od=ns({flipLeftRight_:function(e){const t=$r(e,"image","flipLeftRight","float32");M(4===t.rank,(()=>"Error in flipLeftRight: image must be rank 4,"+"but got rank ".concat(t.rank,".")));const n={image:t};return Hr.runKernel(It,n,{})}});const id=ns({grayscaleToRGB_:function(e){const t=$r(e,"image","grayscaleToRGB"),n=t.rank-1,a=t.shape[n];M(t.rank>=2,(()=>"Error in grayscaleToRGB: images must be at least rank 2, "+"but got rank ".concat(t.rank,"."))),M(1===a,(()=>"Error in grayscaleToRGB: last dimension of a grayscale image "+"should be size 1, but got size ".concat(a,".")));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,kc(t,r)}});const ud=ns({rgbToGrayscale_:function(e){const t=$r(e,"image","RGBToGrayscale"),n=t.rank-1,a=t.shape[n];M(t.rank>=2,(()=>"Error in RGBToGrayscale: images must be at least rank 2, "+"but got rank ".concat(t.rank,"."))),M(3===a,(()=>"Error in RGBToGrayscale: last dimension of an RGB image "+"should be size 3, but got size ".concat(a,".")));const r=t.dtype,s=vo(t,"float32"),o=yh([.2989,.587,.114]);let i;switch(t.rank){case 2:i=nc("ij,j->i",s,o);break;case 3:i=nc("ijk,k->ij",s,o);break;case 4:i=nc("ijkl,l->ijk",s,o);break;case 5:i=nc("ijklm,m->ijkl",s,o);break;case 6:i=nc("ijklmn,n->ijklm",s,o);break;default:throw new Error("Not a valid tensor rank.")}return i=wc(i,-1),vo(i,r)}});const cd=ns({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=$r(e,"image","rotateWithOffset","float32");M(4===r.rank,(()=>"Error in rotateWithOffset: image must be rank 4,"+"but got rank ".concat(r.rank,".")));const s={image:r},o={radians:t,fillValue:n,center:a};return Hr.runKernel(Ta,s,o)}});function ld(e,t,n,a,r,s){null==a&&(a=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=e.shape[0];return n=Math.min(n,o),M(0<=a&&a<=1,(()=>"iouThreshold must be in [0, 1], but was '".concat(a,"'"))),M(2===e.rank,(()=>"boxes must be a 2D tensor, but was of rank '".concat(e.rank,"'"))),M(4===e.shape[1],(()=>"boxes must have 4 columns, but 2nd dimension was ".concat(e.shape[1]))),M(1===t.rank,(()=>"scores must be a 1D tensor")),M(t.shape[0]===o,(()=>"scores has incompatible shape with boxes. Expected ".concat(o,", ")+"but was ".concat(t.shape[0]))),M(0<=s&&s<=1,(()=>"softNmsSigma must be in [0, 1], but was '".concat(s,"'"))),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s}}const hd=ns({nonMaxSuppression_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=$r(e,"boxes","nonMaxSuppression","float32"),o=$r(t,"scores","nonMaxSuppression","float32"),i=ld(s,o,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const u={maxOutputSize:n,iouThreshold:a,scoreThreshold:r};return Hr.runKernel(gn,{boxes:s,scores:o},u)}});function dd(e,t,n){const a=function(e,t,n){return function(e,t,n){let a=0,r=e.length,s=0,o=!1;for(;a<r;){s=a+(r-a>>>1);const i=n(t,e[s]);i>0?a=s+1:(r=s,o=!i)}return o?a:-a-1}(e,t,n||pd)}(e,t,n),r=a<0?-(a+1):a;e.splice(r,0,t)}function pd(e,t){return e>t?1:e<t?-1:0}function fd(e,t,n,a,r){return yd(e,t,n,a,r,0)}function md(e,t,n,a,r,s){return yd(e,t,n,a,r,0,!1,s,!0)}function gd(e,t,n,a,r,s){return yd(e,t,n,a,r,s,!0)}function yd(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],u=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const c=[];for(let g=0;g<t.length;g++)t[g]>r&&c.push({score:t[g],boxIndex:g,suppressBeginIndex:0});c.sort(xd);const l=s>0?-.5/s:0,h=[],d=[];for(;h.length<n&&c.length>0;){const t=c.pop(),{score:n,boxIndex:s,suppressBeginIndex:o}=t;if(n<r)break;let i=!1;for(let u=h.length-1;u>=o;--u){const n=bd(e,s,h[u]);if(n>=a){i=!0;break}if(t.score=t.score*vd(a,l,n),t.score<=r)break}t.suppressBeginIndex=h.length,i||(t.score===n?(h.push(s),d.push(t.score)):t.score>r&&dd(c,t,xd))}const p=h.length,f=n-p;i&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return o&&(m.selectedScores=d),u&&(m.validOutputs=p),m}function bd(e,t,n){const a=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),s=Math.min(a[0],a[2]),o=Math.min(a[1],a[3]),i=Math.max(a[0],a[2]),u=Math.max(a[1],a[3]),c=Math.min(r[0],r[2]),l=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(i-s)*(u-o),f=(h-c)*(d-l);if(p<=0||f<=0)return 0;const m=Math.max(s,c),g=Math.max(o,l),y=Math.min(i,h),b=Math.min(u,d),v=Math.max(y-m,0)*Math.max(b-g,0);return v/(p+f-v)}function vd(e,t,n){const a=Math.exp(t*n*n);return n<=e?a:0}function xd(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const wd=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=$r(e,"boxes","nonMaxSuppressionAsync"),o=$r(t,"scores","nonMaxSuppressionAsync"),i=ld(s,o,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const u=await Promise.all([s.data(),o.data()]),c=u[0],l=u[1],{selectedIndices:h}=fd(c,l,n,a,r);return s!==e&&s.dispose(),o!==t&&o.dispose(),yh(h,"int32")};const Dd=ns({nonMaxSuppressionWithScore_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=$r(e,"boxes","nonMaxSuppression"),i=$r(t,"scores","nonMaxSuppression"),u=ld(o,i,n,a,r,s);n=u.maxOutputSize,a=u.iouThreshold,r=u.scoreThreshold,s=u.softNmsSigma;const c={boxes:o,scores:i},l={maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s},h=Hr.runKernel(bn,c,l);return{selectedIndices:h[0],selectedScores:h[1]}}});const kd=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=$r(e,"boxes","nonMaxSuppressionAsync"),i=$r(t,"scores","nonMaxSuppressionAsync"),u=ld(o,i,n,a,r,s);n=u.maxOutputSize,a=u.iouThreshold,r=u.scoreThreshold,s=u.softNmsSigma;const c=await Promise.all([o.data(),i.data()]),l=c[0],h=c[1],{selectedIndices:d,selectedScores:p}=gd(l,h,n,a,r,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:yh(d,"int32"),selectedScores:yh(p)}};const Cd=ns({nonMaxSuppressionPadded_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=$r(e,"boxes","nonMaxSuppression"),i=$r(t,"scores","nonMaxSuppression"),u=ld(o,i,n,a,r,null),c={boxes:o,scores:i},l={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},h=Hr.runKernel(yn,c,l);return{selectedIndices:h[0],validOutputs:h[1]}}});const Nd=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=$r(e,"boxes","nonMaxSuppressionAsync"),i=$r(t,"scores","nonMaxSuppressionAsync"),u=ld(o,i,n,a,r,null),c=u.maxOutputSize,l=u.iouThreshold,h=u.scoreThreshold,[d,p]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=md(d,p,c,l,h,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:yh(f,"int32"),validOutputs:Fo(m,"int32")}};const Sd=ns({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=$r(e,"images","resizeBilinear");M(3===r.rank||4===r.rank,(()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+"rank ".concat(r.rank,"."))),M(2===t.length,(()=>"Error in resizeBilinear: new shape must 2D, but got shape "+"".concat(t,"."))),M(!1===a||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=r,o=!1;3===r.rank&&(o=!0,s=du(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,i={images:s},u={alignCorners:n,halfPixelCenters:a,size:t},c=Hr.runKernel(Mn,i,u);return o?du(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const Ed=ns({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=$r(e,"images","resizeNearestNeighbor");M(3===r.rank||4===r.rank,(()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+"rank ".concat(r.rank,"."))),M(2===t.length,(()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+"".concat(t,"."))),M("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),M(!1===a||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=r,o=!1;3===r.rank&&(o=!0,s=du(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,i={images:s},u={alignCorners:n,halfPixelCenters:a,size:t},c=Hr.runKernel(On,i,u);return o?du(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const Id=ns({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=$r(e,"image","threshold"),s=r.shape[0]*r.shape[1];let o,i,u,c,l=No(yh([a]),255);if(M(3===r.rank,(()=>"Error in threshold: image must be rank 3,"+"but got rank ".concat(r.rank,"."))),M(3===r.shape[2]||1===r.shape[2],(()=>"Error in threshold: image color channel must be equal to 3 or 1"+"but got ".concat(r.shape[2],"."))),M("int32"===r.dtype||"float32"===r.dtype,(()=>"Error in dtype: image dtype must be int32 or float32,"+"but got dtype ".concat(r.dtype,"."))),M("otsu"===t||"binary"===t,(()=>"Method must be binary or otsu, but was ".concat(t))),3===r.shape[2]){[o,i,u]=ch(r,[1,1,1],-1);const e=No(o,.2989),t=No(i,.587),n=No(u,.114);c=Do(Do(e,t),n)}else c=e;if("otsu"===t){l=function(e,t){let n,a,r,s,o,i,u=yh([-1]),c=yh([0]),l=yh([0]);for(let h=0;h<e.size-1;h++){n=bu(e,0,h+1),a=bu(e,h+1),o=Co(gc(n),t),i=Co(gc(a),t);const d=gc(No(n,zl(0,n.size)));r=Co(d,gc(n));const p=Bo(a.shape,n.size),f=Do(zl(0,a.size),p),m=No(a,f);s=Co(gc(m),gc(a));const g=Vo(r,s),y=Vo(r,s),b=No(o,i);l=No(No(b,g),y);const v=Ec(l,c);c=$u(v,l,c),u=$u(v,yh([h]),u)}return u}(Su(vo(Kl(c),"int32"),ss([]),256),s)}const h=n?Lc(c,l):Ec(c,l);return vo(No(h,255),"int32")}});const Td=ns({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5?arguments[5]:void 0;const o=$r(e,"image","transform","float32"),i=$r(t,"transforms","transform","float32");M(4===o.rank,(()=>"Error in transform: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),M(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),M(null==s||2===s.length,(()=>"Error in transform: outputShape must be [height, width] or null, "+"but got ".concat(s,".")));const u={image:o,transforms:i},c={interpolation:n,fillMode:a,fillValue:r,outputShape:s};return Hr.runKernel(wa,u,c)}});const Fd=ns({bandPart_:function(e,t,n){const a=$r(e,"a","bandPart");M(a.rank>=2,(()=>"bandPart(): Rank must be at least 2, got ".concat(a.rank,".")));const r=a.shape,[s,o]=a.shape.slice(-2);let i,u;"number"===typeof t?(M(t%1===0,(()=>"bandPart(): numLower must be an integer, got ".concat(t,"."))),M(t<=s,(()=>"bandPart(): numLower (".concat(t,")")+" must not be greater than the number of rows (".concat(s,")."))),i=$r(t<0?s:t,"numLower","bandPart")):(M("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),i=$u(Oc(t,0),s,sl(t,s))),"number"===typeof n?(M(n%1===0,(()=>"bandPart(): numUpper must be an integer, got ".concat(n,"."))),M(n<=o,(()=>"bandPart(): numUpper (".concat(n,")")+" must not be greater than the number of columns (".concat(o,")."))),u=$r(n<0?o:n,"numUpper","bandPart")):(M("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),u=$u(Oc(n,0),o,sl(n,o)));const c=du(zl(0,s,1,"int32"),[-1,1]),l=zl(0,o,1,"int32"),h=Vo(c,l),d=jc(Lc(h,i),Ic(h,Wc(u))),p=nl([s,o],a.dtype);return du(ph(Fh(du(a,[-1,s,o])).map((e=>$u(d,e,p)))),r)}});const Ad=ns({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,M(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)M(e[t].shape[0]===n,(()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+"(".concat(e[t].shape[0]," vs. ").concat(n,")")))}else t=!0,e=ch(e,e.shape[0],0).map((e=>dh(e,[0])));M(e.length<=e[0].shape[0],(()=>"Gram-Schmidt: Number of vectors (".concat(e.length,") exceeds ")+"number of dimensions (".concat(e[0].shape[0],").")));const n=[],a=e;for(let r=0;r<e.length;++r)n.push(Hr.tidy((()=>{let e=a[r];if(r>0)for(let t=0;t<r;++t){const a=No(gc(No(n[t],e)),n[t]);e=Vo(e,a)}return Co(e,bc(e,"euclidean"))})));return t?ph(n,0):n}});function Rd(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return Hr.tidy((()=>{M(2===e.shape.length,(()=>"qr2d() requires a 2D Tensor, but got a ".concat(e.shape.length,"D Tensor.")));const n=e.shape[0],a=e.shape[1];let r=Cc(n),s=xo(e);const o=bh([[1]],[1,1]);let i=xo(o);const u=n>=a?a:n;for(let e=0;e<u;++e){const t=s,u=i,c=r;[i,s,r]=Hr.tidy((()=>{const t=bu(s,[e,e],[n-e,1]),u=bc(t),c=bu(s,[e,e],[1,1]),l=$u(Ec(c,0),bh([[-1]]),bh([[1]])),h=Vo(c,No(l,u)),d=Co(t,h);i=1===d.shape[0]?xo(o):mu([o,bu(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Wc(Co(gu(l,h),u)),f=bu(s,[e,0],[n-e,a]),m=No(p,i),g=Mh(i);if(0===e)s=Vo(f,gu(m,gu(g,f)));else{const t=Vo(f,gu(m,gu(g,f)));s=mu([bu(s,[0,0],[e,a]),t],0)}const y=Mh(m),b=bu(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=Vo(b,gu(gu(b,i),y));else{const t=Vo(b,gu(gu(b,i),y));r=mu([bu(r,[0,0],[n,e]),t],1)}return[i,s,r]})),hs([t,u,c])}return!t&&n>a&&(r=bu(r,[0,0],[n,a]),s=bu(s,[0,0],[a,a])),[r,s]}))}const _d=ns({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(M(e.rank>=2,(()=>"qr() requires input tensor to have a rank >= 2, but got rank ".concat(e.rank))),2===e.rank)return Rd(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),a=Fh(du(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],s=[];a.forEach((e=>{const[n,a]=Rd(e,t);r.push(n),s.push(a)}));return[du(ph(r,0),e.shape),du(ph(s,0),e.shape)]}}});var Od;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Od||(Od={}));const Ld=ns({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Od.SUM_BY_NONZERO_WEIGHTS;const a=$r(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=$r(t,"weights","computeWeightedLoss"));const s=null==r?a:No(a,r);if(n===Od.NONE)return s;if(n===Od.SUM)return gc(s);if(n===Od.MEAN){if(null==r)return tl(s);{const e=a.size/r.size,t=Co(gc(s),gc(r));return e>1?Co(t,Fo(e)):t}}if(n===Od.SUM_BY_NONZERO_WEIGHTS){if(null==r)return Co(gc(s),Fo(a.size));{const e=No(r,al(a.shape)),t=vo(gc(hl(e,Fo(0))),"float32");return Co(gc(s),t)}}throw Error("Unknown reduction: ".concat(n))}});const Md=ns({absoluteDifference_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Od.SUM_BY_NONZERO_WEIGHTS;const r=$r(e,"labels","absoluteDifference"),s=$r(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=$r(n,"weights","absoluteDifference")),z(r.shape,s.shape,"Error in absoluteDifference: ");const i=Go(Vo(r,s));return Ld(i,o,a)}});const zd=ns({cosineDistance_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Od.SUM_BY_NONZERO_WEIGHTS;const s=$r(e,"labels","cosineDistance"),o=$r(t,"predictions","cosineDistance");let i=null;null!=a&&(i=$r(a,"weights","cosineDistance")),z(s.shape,o.shape,"Error in cosineDistance: ");const u=Fo(1),c=Vo(u,gc(No(s,o),n,!0));return Ld(c,i,r)}});const Bd=ns({hingeLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Od.SUM_BY_NONZERO_WEIGHTS,r=$r(e,"labels","hingeLoss");const s=$r(t,"predictions","hingeLoss");let o=null;null!=n&&(o=$r(n,"weights","hingeLoss")),z(r.shape,s.shape,"Error in hingeLoss: ");const i=Fo(1);r=Vo(No(Fo(2),r),i);const u=Wl(Vo(i,No(r,s)));return Ld(u,o,a)}});const Pd=ns({huberLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Od.SUM_BY_NONZERO_WEIGHTS;const s=$r(e,"labels","huberLoss"),o=$r(t,"predictions","huberLoss");let i=null;null!=n&&(i=$r(n,"weights","huberLoss")),z(s.shape,o.shape,"Error in huberLoss: ");const u=Fo(a),c=Go(Vo(o,s)),l=sl(c,u),h=Vo(c,l),d=Do(No(Fo(.5),Eo(l)),No(u,h));return Ld(d,i,r)}});const Wd=ns({logLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Od.SUM_BY_NONZERO_WEIGHTS;const s=$r(e,"labels","logLoss"),o=$r(t,"predictions","logLoss");let i=null;null!=n&&(i=$r(n,"weights","logLoss")),z(s.shape,o.shape,"Error in logLoss: ");const u=Fo(1),c=Fo(a),l=Wc(No(s,Bc(Do(o,c)))),h=No(Vo(u,s),Bc(Do(Vo(u,o),c))),d=Vo(l,h);return Ld(d,i,r)}});const Vd=ns({meanSquaredError_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Od.SUM_BY_NONZERO_WEIGHTS;const r=$r(e,"labels","meanSquaredError"),s=$r(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=$r(n,"weights","meanSquaredError")),z(r.shape,s.shape,"Error in meanSquaredError: ");const i=hh(r,s);return Ld(i,o,a)}});const Ud=ns({sigmoidCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Od.SUM_BY_NONZERO_WEIGHTS,s=$r(e,"multiClassLabels","sigmoidCrossEntropy");const o=$r(t,"logits","sigmoidCrossEntropy");let i=null;if(null!=n&&(i=$r(n,"weights","sigmoidCrossEntropy")),z(s.shape,o.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=Fo(a),t=Fo(1),n=Fo(.5);s=Do(No(s,Vo(t,e)),No(n,e))}const u=function(e,t){const n=$r(e,"labels","sigmoidCrossEntropyWithLogits"),a=$r(t,"logits","sigmoidCrossEntropyWithLogits");z(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=Wl(a),s=No(a,n),o=Pc(xc(Wc(Go(a))));return Do(Vo(r,s),o)}(s,o);return Ld(u,i,r)}});const Gd=ns({softmaxCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Od.SUM_BY_NONZERO_WEIGHTS,s=$r(e,"onehotLabels","softmaxCrossEntropy");const o=$r(t,"logits","softmaxCrossEntropy");let i=null;if(null!=n&&(i=$r(n,"weights","softmaxCrossEntropy")),z(s.shape,o.shape,"Error in softmaxCrossEntropy: "),a>0){const e=Fo(a),t=Fo(1),n=Fo(s.shape[1]);s=Do(No(s,Vo(t,e)),Co(e,n))}const u=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet "+"supported. Labels / logits was rank ".concat(t.rank," ")+"and dim was ".concat(n));const a=To(((e,t,a)=>{const r=Hc(t,[n],!0),s=Vo(vo(t,"float32"),r);a([e,s]);const o=Wc(No(s,e));return{value:gc(o,[n]),gradFunc:(e,t)=>{const[a,r]=t,s=cc(e.shape,[n]);return[No(du(e,s),Vo(vo(a,"float32"),xc(r))),No(du(e,s),Vo(xc(r),vo(a,"float32")))]}}}));return a(e,t)}(s,o);return Ld(u,i,r)}});const Hd=ns({sparseFillEmptyRows_:function(e,t,n,a){const r=$r(e,"indices","sparseFillEmptyRows","int32"),s=$r(t,"values","sparseFillEmptyRows"),o=$r(n,"denseShape","sparseFillEmptyRows","int32"),i=$r(a,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==r.rank)throw new Error("Indices should be Tensor2D but received shape\n        ".concat(r.shape));if(1!==s.rank)throw new Error("Values should be Tensor1D but received shape ".concat(s.shape));if(1!==o.rank)throw new Error("Dense shape should be Tensor1D but received shape ".concat(o.shape));if(0!==i.rank)throw new Error("Default value should be a scalar but received shape ".concat(i.shape));const u={indices:r,values:s,denseShape:o,defaultValue:i},c=Hr.runKernel(ra,u);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}});const jd=ns({sparseReshape_:function(e,t,n){const a=$r(e,"inputIndices","sparseReshape","int32"),r=$r(t,"inputShape","sparseReshape","int32"),s=$r(n,"newShape","sparseReshape","int32");if(2!==a.rank)throw new Error("Input indices should be Tensor2D but received shape\n        ".concat(a.shape));if(1!==r.rank)throw new Error("Input shape should be Tensor1D but received shape ".concat(r.shape));if(1!==s.rank)throw new Error("New shape should be Tensor1D but received shape ".concat(s.shape));const o={inputIndices:a,inputShape:r,newShape:s},i=Hr.runKernel(sa,o);return{outputIndices:i[0],outputShape:i[1]}}});const qd=ns({sparseSegmentMean_:function(e,t,n){const a=$r(e,"data","sparseSegmentMean"),r=$r(t,"indices","sparseSegmentMean","int32"),s=$r(n,"segmentIds","sparseSegmentMean","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error("Indices should be Tensor1D but received shape\n          ".concat(r.shape));if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n          ".concat(s.shape));const o={data:a,indices:r,segmentIds:s};return Hr.runKernel(oa,o)}});const Kd=ns({sparseSegmentSum_:function(e,t,n){const a=$r(e,"data","sparseSegmentSum"),r=$r(t,"indices","sparseSegmentSum","int32"),s=$r(n,"segmentIds","sparseSegmentSum","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error("Indices should be Tensor1D but received shape\n         ".concat(r.shape));if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n         ".concat(s.shape));const o={data:a,indices:r,segmentIds:s};return Hr.runKernel(ia,o)}});const Xd=ns({stringNGrams_:function(e,t,n,a,r,s,o,i){const u=$r(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error("Data must be a vector, saw: ".concat(u.shape));const c=$r(t,"dataSplits","stringNGrams");if("int32"!==c.dtype)throw new Error("Data splits must be of datatype int32");const l={separator:n,nGramWidths:a,leftPad:r,rightPad:s,padWidth:o,preserveShortSequences:i},h={data:u,dataSplits:c},d=Hr.runKernel(pa,h,l);return{nGrams:d[0],nGramsSplits:d[1]}}});const Yd=ns({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=$r(e,"input","stringSplit","string"),r=$r(t,"delimiter","stringSplit","string");if(1!==a.rank)throw new Error("Input should be Tensor1D but received shape ".concat(a.shape));if(0!==r.rank)throw new Error("Delimiter should be a scalar but received shape ".concat(r.shape));const s={skipEmpty:n},o={input:a,delimiter:r},i=Hr.runKernel(fa,o,s);return{indices:i[0],values:i[1],shape:i[2]}}});const Qd=ns({stringToHashBucketFast_:function(e,t){const n=$r(e,"input","stringToHashBucketFast","string"),a={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return Hr.runKernel(ma,r,a)}});const Zd=ns({staticRegexReplace_:function(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=$r(e,"input","staticRegexReplace","string"),s={pattern:t,rewrite:n,replaceGlobal:a};return Hr.runKernel(ha,{x:r},s)}}),Jd={fft:oh,ifft:ih,rfft:lh,irfft:uh},$d={hammingWindow:td,hannWindow:nd,frame:ad,stft:rd},ep={flipLeftRight:od,grayscaleToRGB:id,resizeNearestNeighbor:Ed,resizeBilinear:Sd,rgbToGrayscale:ud,rotateWithOffset:cd,cropAndResize:sd,nonMaxSuppression:hd,nonMaxSuppressionAsync:wd,nonMaxSuppressionWithScore:Dd,nonMaxSuppressionWithScoreAsync:kd,nonMaxSuppressionPadded:Cd,nonMaxSuppressionPaddedAsync:Nd,threshold:Id,transform:Td},tp={bandPart:Fd,gramSchmidt:Ad,qr:_d},np={absoluteDifference:Md,computeWeightedLoss:Ld,cosineDistance:zd,hingeLoss:Bd,huberLoss:Pd,logLoss:Wd,meanSquaredError:Vd,sigmoidCrossEntropy:Ud,softmaxCrossEntropy:Gd},ap={sparseFillEmptyRows:Hd,sparseReshape:jd,sparseSegmentMean:qd,sparseSegmentSum:Kd},rp={stringNGrams:Xd,stringSplit:Yd,stringToHashBucketFast:Qd,staticRegexReplace:Zd};const sp=class{static sgd(e){return new Yo(e)}static momentum(e,t){return new Qo(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new Zo(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new Uo(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new zo(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new Xo(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new Po(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}},op="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function ip(){return new Promise((e=>op((()=>e()))))}function up(e,t){const n=e[0].length;e.forEach(((e,t)=>{M(e.length===n,(()=>"Error in concat".concat(n,"D: rank of tensors[").concat(t,"] must be the same ")+"as the rank of the rest (".concat(n,")")))})),M(t>=0&&t<n,(()=>"Error in concat".concat(n,"D: axis must be between 0 and ").concat(n-1,".")));const a=e[0];e.forEach(((e,r)=>{for(let s=0;s<n;s++)M(s===t||e[s]===a[s],(()=>"Error in concat".concat(n,"D: Shape of tensors[").concat(r,"] (").concat(e,") ")+"does not match the shape of the rest (".concat(a,") ")+"along the non-concatenated axis ".concat(r,".")))}))}function cp(e,t){const n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}var lp;function hp(e,t,n){let a=new Array;if(null==n&&null==t)return a;if(null==t)for(;a.length<e+n.length;)a.push(-1);else a=t.slice();if(null==n)return a;if(e+n.length!==a.length)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.rank = ").concat(e+n.length,", but shape.rank = ").concat(a.length));for(let r=1;r<n.length;++r){const s=n[r],o=a[a.length-n.length+r],i=a[o];if(s>=0)if(i>=0){if(i!==s)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.shape[").concat(r+e,"] = ").concat(s," but shape[").concat(r+e,"] = ").concat(i))}else a[o]=s}return a}function dp(e){const t={FIRST_DIM_SIZE:lp.FIRST_DIM_SIZE,VALUE_ROWIDS:lp.VALUE_ROWIDS,ROW_LENGTHS:lp.ROW_LENGTHS,ROW_SPLITS:lp.ROW_SPLITS,ROW_LIMITS:lp.ROW_LIMITS,ROW_STARTS:lp.ROW_STARTS},n=[];for(const a of e){if(!(a in t))break;n.push(t[a])}return n}function pp(e){return 0===e.length?0:e[0]===lp.FIRST_DIM_SIZE?e.length-1:e.length}function fp(e,t){if(null==e||null==t)return;const n=e.length,a=t.length;if(n>=a)throw new Error("defaultValue.shape=".concat(e," and ragged tensor flatValues.shape=").concat(t,", are incompatible: defaultValue.rank = ").concat(n," must be less than ragged tensor input flatValues.rank = ").concat(a,")"));for(let r=0;r<Math.min(n,a-1);++r){const n=e[r],a=t[r+1];if(n>=0&&a>=0&&1!==n&&n!==a)throw new Error("defaultValue.shape=".concat(e,", and ragged tensor input flatValues.shape=").concat(t," are incompatible: defaultValue.shape[").concat(r-e.length,"] = ").concat(n," but ragged tensor input.flatValues.shape[").concat(r-e.length,"] = ").concat(a))}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(lp||(lp={}));const mp=30;function gp(e){return e<=mp?e:ne(e,Math.floor(Math.sqrt(e)))}function yp(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function bp(e,t,n){let a=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function vp(e,t){const n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(t);for(let a=t+1;a<e;++a)a<=2*t?(n.push(a),n.push(a-(t+1))):n.push(a)}else{const a=[],r=[];for(let n=1;n<e;++n)n>=2*t+1||n%2===1?r.push(n):a.push(n);n.push(...a),n.push(0),n.push(...r)}return n}function xp(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=[];a?r.push(e[0]/n):r.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?a?r.push(t[s-1]*e[s]):r.push(e[s]/t[s-1]):r.push(e[s]);return r}function wp(e,t){const n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function Dp(e,t,n){const a=e.slice(0,1);for(let r=0;r<n;++r)a.push(e[r+1]-t[r][0]-t[r][1]);return a}function kp(e,t){const n=e.shape.length,a=t.shape.length;if(n<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher,"+" but the rank was ".concat(n,"."));if(a<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(a,"."));if("int32"!==t.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type,"+" but the dtype was ".concat(t.dtype,"."));if(t.shape[a-1]>n)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+"".concat(t.shape[a-1]," vs. ").concat(n));if(0===P(e.shape))throw new Error("Requested more than 0 entries, but input is empty."+" Input shape: ".concat(e.shape,"."));const r=t.shape,s=r[r.length-1];let o=1;for(let h=0;h<r.length-1;++h)o*=r[h];const i=e.shape,u=r.slice();u.pop();let c=1;for(let h=s;h<n;++h)c*=i[h],u.push(i[h]);const l=[...ae(e.shape).map((e=>e/c)),1].slice(0,s);return[u,o,c,l]}const Cp=1.7580993408473768,Np=1.0507009873554805,Sp=.3275911,Ep=.254829592,Ip=-.284496736,Tp=1.421413741,Fp=-1.453152027,Ap=1.061405429;function Rp(e,t){if(e.length!==t.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+"".concat(e.length,", imag: ").concat(t.length,"."));const n=new Float32Array(2*e.length);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function _p(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function Op(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function Lp(e){const t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function Mp(e,t){return{real:e[2*t],imag:e[2*t+1]}}function zp(e,t,n,a){e[2*a]=t,e[2*a+1]=n}function Bp(e,t){const n=new Float32Array(e/2),a=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const s=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(s),a[r]=Math.sin(s)}return{real:n,imag:a}}function Pp(e,t,n){const a=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(a),imag:Math.sin(a)}}const Wp="->",Vp=/->/g,Up=",",Gp="...";function Hp(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Vp,"").length)/Wp.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("'.concat(Wp,'").'));const[a,r]=e.split(Wp);M(-1===a.indexOf(Gp),(()=>'The ellipsis notation ("'.concat(Gp,'") is not supported yet.')));const s=a.split(Up),o=s.length;if(t!==o)throw new Error("Expected ".concat(o," input tensors, received ").concat(t));if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let h=0;h<r.length;++h){const e=r[h];if(!s.some((t=>-1!==t.indexOf(e))))throw new Error("Output subscripts contain the label ".concat(e," ")+"not present in the input subscripts.");-1===i.indexOf(e)&&i.push(e)}for(let h=0;h<a.length;++h){const e=a[h];-1===i.indexOf(e)&&e!==Up&&i.push(e)}const u=new Array(s.length);for(let h=0;h<o;++h){if(new Set(s[h].split("")).size!==s[h].length)throw new Error("Found duplicate axes in input component ".concat(s[h],". ")+"Support for duplicate axes in input is not implemented yet.");u[h]=[];for(let e=0;e<s[h].length;++e)u[h].push(i.indexOf(s[h][e]))}const c=i.length,l=[];for(let h=r.length;h<c;++h)l.push(h);return{allDims:i,summedDims:l,idDims:u}}function jp(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;const a=[];for(let r=0;r<e;++r)-1===n[r]&&a.push(r);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:a}}function qp(e,t,n){const a=new Array(e);for(let r=0;r<n.length;++r){const e=n[r].shape;for(let n=0;n<t[r].length;++n)void 0===a[t[r][n]]?a[t[r][n]]=e[n]:M(a[t[r][n]]===e[n],(()=>"Expected dimension ".concat(a[t[r][n]]," at axis ").concat(n," ")+"of input shaped ".concat(JSON.stringify(e),", ")+"but got dimension ".concat(e[n])))}}function Kp(e,t){const n=e,a=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let o=0;o<r;++o)a.push([]);const s=[];for(let o=0;o<n.length;++o){const e=Yp(t,n[o]);for(const t of e)-1===s.indexOf(t)&&(a[o].push(t),s.push(t))}return{path:n,steps:a}}function Xp(e){return e.every(((e,t)=>e===t))}function Yp(e,t){const n=[];for(let a=0;a<e.length;++a)0!==e[a].length&&-1===e[a].indexOf(t)&&-1!==t||n.push(a);return n}function Qp(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=[];if("number"===typeof t)M(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);M(r<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const a=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-a}M(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=t}return a}function Zp(e){return"Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ".concat(e)}function Jp(e,t){return"indices(".concat(e,", 0) is invalid: ").concat(t," < 0")}function $p(e,t,n){return"indices(".concat(e,", 0) is invalid: ").concat(t," >= ").concat(n)}function ef(e,t){return"only one output dimension may be -1, not both ".concat(e," and ").concat(t)}function tf(e,t){return"size ".concat(e," must be non-negative, not ").concat(t)}function nf(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function af(e,t){const n=P(e),a=P(t);return"Input to reshape is a SparseTensor with ".concat(n,"\n  dense values, but the requested shape requires a multiple of ").concat(a,". inputShape=").concat(e," outputShape= ").concat(t)}function rf(e,t){const n=P(e),a=P(t);return"Input to reshape is a tensor with ".concat(n," dense values, but the requested shape has ").concat(a,". inputShape=").concat(e," outputShape=").concat(t)}function sf(){return"segment ids must be >= 0"}function of(){return"segment ids are not increasing"}function uf(e,t){return"Segment id ".concat(e," out of range [0, ").concat(t,"), possibly because segmentIds input is not sorted.")}function cf(e,t,n){return"Bad: indices[".concat(e,"] == ").concat(t," out of range [0, ").concat(n,")")}function lf(e,t){let n,a=!1;for(e<=mp?(n=e,a=!0):n=ne(e,Math.floor(Math.sqrt(e)));!a;)n>t||n===e?a=!0:n=ne(e,n+1);return n}function hf(e,t,n){const a=[],r=e.length;for(let s=0;s<r;s++)s!==t?a.push(e[s]):a.push(n);return a}function df(e,t,n,a){const r=t.shape.length,s=e.shape.length;if(0!==a&&(a<-r||a>r))throw new Error("Expect batchDims in the range of [-".concat(r,", ").concat(r,"], but got ").concat(a));if(a<0&&(a+=r),a>s)throw new Error("batchDims (".concat(a,") must be less than rank(x) (\n    ").concat(s,")."));if(n<a)throw new Error("batchDims (".concat(a,") must be less than or equal to axis (").concat(n,")."));for(let h=0;h<a;++h)if(e.shape[h]!==t.shape[h])throw new Error("x.shape[".concat(h,"]: ").concat(e.shape[h]," should be equal to indices.shape[").concat(h,"]: ").concat(t.shape[h],"."));const o=e.shape[n],i=[];let u=1,c=1,l=1;for(let h=0;h<a;++h)i.push(e.shape[h]),u*=e.shape[h];for(let h=a;h<n;h++)i.push(e.shape[h]),c*=e.shape[h];for(let h=a;h<r;h++)i.push(t.shape[h]);for(let h=n+1;h<s;h++)i.push(e.shape[h]),l*=e.shape[h];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:o,outputShape:i}}function pf(e){try{return e.map((e=>ur(e)))}catch(rW){throw new Error("Failed to decode encoded string bytes into utf-8, error: ".concat(rW))}}function ff(e){return e.map((e=>ir(e)))}!function(){for(const e of Jo)Lo(e)}();const mf={kernelName:we,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>No(e,fh(vo(n,"float32"),-1))}}},gf={kernelName:De,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Eo(vo(n,"float32")),a=So(Vo(Fo(1),t));return Wc(Co(e,a))}}}},yf={kernelName:ke,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=So(Vo(Eo(vo(n,"float32")),1));return Co(e,t)}}}},bf={kernelName:Ce,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=qo(n.shape,a.shape);return{a:()=>{let t=e;const a=jo(n.shape,r);return a.length>0&&(t=gc(t,a)),du(t,n.shape)},b:()=>{let t=e;const n=jo(a.shape,r);return n.length>0&&(t=gc(t,n)),du(t,a.shape)}}}},vf={kernelName:Ne,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,a)=>{n[a]=()=>e.clone()})),n}},xf={kernelName:Ie,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Io(n)}}},wf={kernelName:Te,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Io(n)}}},Df={kernelName:Fe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,So(Vo(Fo(1),Eo(vo(n,"float32")))))}}},kf={kernelName:Ae,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=So(Do(Fo(1),Eo(vo(n,"float32"))));return Co(e,t)}}}},Cf={kernelName:Oe,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=qo(n.shape,a.shape);return{a:()=>{const t=Do(Eo(n),Eo(a));let s=No(e,Co(a,t));const o=jo(n.shape,r);return o.length>0&&(s=gc(s,o)),du(s,n.shape)},b:()=>{const t=Do(Eo(n),Eo(a));let s=Wc(No(e,Co(n,t)));const o=jo(a.shape,r);return o.length>0&&(s=gc(s,o)),du(s,a.shape)}}}},Nf={kernelName:Re,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,Do(Eo(vo(n,"float32")),1))}}},Sf={kernelName:_e,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,Vo(Fo(1),Eo(vo(n,"float32"))))}}};const Ef=ns({avgPool3dGrad_:function(e,t,n,a,r,s){const o=$r(e,"dy","avgPool3dGrad"),i=$r(t,"input","avgPool3dGrad");let u=o,c=i,l=!1;4===i.rank&&(l=!0,u=du(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=du(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),M(5===u.rank,(()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+"".concat(u.rank,"."))),M(5===c.rank,(()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+"".concat(c.rank,"."))),hu("avgPool3dGrad",r,s);const h={dy:u,input:c},d={filterSize:n,strides:a,pad:r,dimRoundingMode:s},p=Hr.runKernel(Be,h,d);return l?du(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),If={kernelName:ze,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:s,pad:o,dimRoundingMode:i}=n;return{x:()=>Ef(e,a,r,s,o,i)}}};const Tf=ns({avgPoolGrad_:function(e,t,n,a,r){const s=$r(e,"dy","avgPoolGrad"),o=$r(t,"input","avgPoolGrad");M(o.rank===s.rank,(()=>"Rank of input (".concat(o.rank,") does not match rank of dy (").concat(s.rank,")")));let i=o,u=s,c=!1;3===o.rank&&(c=!0,i=du(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=du(s,[1,s.shape[0],s.shape[1],s.shape[2]])),M(4===u.rank,(()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+"".concat(u.rank,"."))),M(4===i.rank,(()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+"".concat(i.rank,".")));const l={dy:u,input:i},h={filterSize:n,strides:a,pad:r},d=Hr.runKernel(Me,l,h);return c?du(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Ff={kernelName:Le,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:s,pad:o}=n;return{x:()=>Tf(e,a,r,s,o)}}},Af={kernelName:Pe,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[a,r]=t,{transposeA:s,transposeB:o}=n;return s||o?!s&&o?{a:()=>gu(e,r,!1,!1),b:()=>gu(e,a,!0,!1)}:s&&!o?{a:()=>gu(r,e,!1,!0),b:()=>gu(a,e,!1,!1)}:{a:()=>gu(r,e,!0,!0),b:()=>gu(e,a,!0,!0)}:{a:()=>gu(e,r,!1,!0),b:()=>gu(a,e,!0,!1)}}},Rf={kernelName:We,gradFunc:(e,t,n)=>{const{blockShape:a,crops:r}=n;return{x:()=>xl(e,a,r)}}},_f={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const a=n,r=a.inputShape,s=a.shape,o=Array.from(s);for(let u=r.length-1;u>=0;u--)if(r[u]===s[u])o[u]=1;else if(1!==r[u])throw new Error("broadcastTo(): [".concat(r,"] cannot be broadcast to [").concat(s,"]."));const i=[];for(let u=0;u<o.length;u++)o[u]>1&&i.push(u);return{x:()=>gc(e,i,!0)}}},Of={kernelName:He,gradFunc:e=>({x:()=>e.clone()})},Lf={kernelName:je,gradFunc:e=>({x:()=>Io(e)})},Mf={kernelName:qe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{clipValueMin:r,clipValueMax:s}=n;return{x:()=>$u(jc(Ic(a,r),Lc(a,s)),e,Io(e))}}},zf={kernelName:Xe,inputsToSave:["x"],gradFunc:mf.gradFunc},Bf={kernelName:Ye,saveAllInputs:!0,gradFunc:(e,t,n)=>{const a=t.map((e=>e.shape)),{axis:r}=n,s=q(r,t[0].shape)[0],o=a.map((e=>e[s]));return ch(e,o,s).map((e=>()=>e))}},Pf={kernelName:Qe,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{dilations:s,strides:o,pad:i,dataFormat:u}=n;return M(iu(s),(()=>"Error in gradient of conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(s,"'"))),{x:()=>Bu(a.shape,e,r,o,i,u),filter:()=>jh(a,e,r.shape,o,i,u)}}},Wf={kernelName:Je,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{strides:s,pad:o,dataFormat:i,dimRoundingMode:u}=n;return{dy:()=>Mu(e,r,s,o,i,1,u),filter:()=>jh(e,a,r.shape,s,o,i,u)}}};const Vf=ns({conv3DBackpropFilter_:function(e,t,n,a,r){let s=e;4===e.rank&&(s=du(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;4===o.rank&&(o=du(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),M(5===s.rank,(()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+"".concat(s.shape,"."))),M(5===o.rank,(()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+"".concat(o.shape,"."))),M(5===n.length,(()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+"".concat(n,"."))),M(s.shape[4]===n[3],(()=>"Error in conv3dDerFilter: depth of input ".concat(s.shape[4],") must ")+"match input depth in filter (".concat(n[3],"."))),M(o.shape[4]===n[4],(()=>"Error in conv3dDerFilter: depth of dy (".concat(o.shape[4],") must ")+"match output depth for filter (".concat(n[4],").")));const i={x:s,dy:o},u={strides:a,pad:r,filterShape:n};return Hr.runKernel(et,i,u)}}),Uf={kernelName:$e,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:s}=n;M(iu(a),(()=>"Error in gradient of conv3D: dilation rates greater than 1 are "+"not yet supported in gradients. Got dilations '".concat(a,"'")));const[o,i]=t;return{x:()=>Vu(o.shape,e,i,r,s),filter:()=>Vf(o,e,i.shape,r,s)}}},Gf={kernelName:nt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>No(Wc($l(vo(n,"float32"))),e)}}},Hf={kernelName:at,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>No(eh(vo(n,"float32")),e)}}},jf={kernelName:st,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r,exclusive:s,reverse:o}=n;return{x:()=>{const t=hc([r],a.rank);let n=qu(e,r,s,!o);return null!=t&&(n=Mh(n,t)),n}}}},qf={kernelName:ct,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:s,dimRoundingMode:o}=n,i=null==a?[1,1]:a;M(iu(i),(()=>"Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(i,"'")));const[u,c]=t;return M(4===u.rank,(()=>"Error in gradient of depthwiseConv2dNative: input must be "+"rank 4, but got rank ".concat(u.rank,"."))),M(4===c.rank,(()=>"Error in gradient of depthwiseConv2dNative: filter must be "+"rank 4, but got rank ".concat(c.rank,"."))),M(u.shape[3]===c.shape[2],(()=>"Error in gradient of depthwiseConv2d: number of input "+"channels (".concat(u.shape[3],") must match the inChannels dimension ")+"in filter ".concat(c.shape[2],"."))),M(uu(r,i),(()=>"Error in gradient of depthwiseConv2d: Either strides or "+"dilations must be  1. Got strides ".concat(r," and dilations ")+"'".concat(i,"'."))),hu("depthwiseConv2d",s,o),{x:()=>Jh(u.shape,e,c,r,s,i,o),filter:()=>Zh(u,e,c.shape,r,s,i,o)}}},Kf={kernelName:pt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,s={x:a,filter:r,dy:e},o={x:a,filter:r,dy:e};return{x:()=>Hr.runKernel(ft,s,n),filter:()=>Hr.runKernel(mt,o,n)}}},Xf={kernelName:vt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,a={dy:e,y:n};return{x:()=>Hr.runKernel(xt,a)}}},Yf={kernelName:wt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=No(xc(Wc(Eo(n))),2/Math.sqrt(Math.PI));return{x:()=>No(e,a)}}},Qf={kernelName:kt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>No(e,n)}}},Zf={kernelName:Ct,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>du(e,n.shape)}}},Jf={kernelName:Nt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>No(e,xc(n))}}},$f={kernelName:Tt,gradFunc:e=>({x:()=>Io(e)})},em={kernelName:Ft,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=qo(n.shape,a.shape);return{a:()=>{const t=Co(e,vo(a,"float32")),s=jo(n.shape,r);return s.length>0?du(gc(t,s),n.shape):t},b:()=>{let t=No(e,vo(n,"float32"));const s=jo(a.shape,r);s.length>0&&(t=du(gc(t,s),a.shape));const o=Eo(a);return Wc(Co(t,vo(o,"float32")))}}}},tm={kernelName:At,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:a}=n,[r,s,o,i]=t,u=null==i?Fo(1):i,c=jo(s.shape,r.shape),l=[];if(1===s.rank){for(let e=0;e<r.shape.length-1;++e)l.push(r.shape[e]);l.push(1)}const h=Vo(r,s),d=No(e,u),p=Xl(Do(o,Fo(a))),f=No(No(No(p,p),p),Fo(-.5));return{x:()=>1===s.rank?du(No(No(e,kc(du(p,[1,1,1,s.shape[0]]),l)),u),r.shape):du(No(No(e,p),u),r.shape),mean:()=>{let e=No(No(p,Fo(-1)),d);return 1===s.rank&&(e=gc(e,c)),du(e,s.shape)},variance:()=>{let e=No(No(f,h),d);return 1===s.rank&&(e=gc(e,c)),du(e,s.shape)},scale:()=>{const t=No(h,p);let n=No(e,t);return 1===s.rank&&(n=gc(n,c)),du(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=gc(t,c)),du(t,s.shape)}}}},nm={kernelName:Rt,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[a,r]=t,{axis:s,batchDims:o}=n,i=q(s,a.shape)[0],u=(e,t,n)=>()=>{const a=e.shape,r=t.size,o=a.slice(0,i),u=o.length,c=a.slice(s,a.length).slice(1),l=c.length,h=am(0,u),d=am(u+1,u+1+l),p=rm([o,[r],c]),f=du(n,p),m=du(t,[r]),g=rm([[u],h,d]),y=Mh(f,g);let b=Th(y,m,e.shape[i]);const v=dc(g);return b=Mh(b,v),b};if(1===o){const t=a.shape[0],n=a.split(t,0);return{x:()=>{const t=ph(n.map(((t,n)=>u(t,r.slice(n,1),e.slice(n,1))())));return t.reshape(a.shape)},indices:()=>r}}return{x:u(a,r,e),indices:()=>r}}};function am(e,t){const n=[];for(let a=e;a<t;++a)n.push(a);return n}function rm(e){const t=[];for(let n=0;n<e.length;++n)for(let a=0;a<e[n].length;++a)t.push(e[n][a]);return t}const sm={kernelName:Lt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>Io(n),b:()=>Io(a)}}},om={kernelName:Mt,gradFunc:e=>({x:()=>vo(e,"float32")})},im={kernelName:Pt,gradFunc:e=>({x:()=>Io(e)})},um={kernelName:Wt,gradFunc:e=>({x:()=>Io(e)})},cm={kernelName:Vt,gradFunc:e=>({x:()=>Io(e)})},lm={kernelName:Ut,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{alpha:r}=n,s=Ec(a,0);return{x:()=>$u(s,e,No(e,r))}}},hm={kernelName:Kt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,Do(n,1))}}},dm={kernelName:qt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,vo(n,"float32"))}}},pm={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;return{logits:()=>{const t=xc(a);return Vo(e,No(gc(e,r,!0),t))}}}};const fm=ns({localResponseNormalizationBackprop_:function(e,t,n){const a={x:e,y:t,dy:n},r={depthRadius:arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,bias:arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,alpha:arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,beta:arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5};return Hr.runKernel(Jt,a,r)}}),mm={kernelName:Zt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{depthRadius:s,bias:o,alpha:i,beta:u}=n;return{x:()=>fm(a,r,e,s,o,i,u)}}};function gm(e,t,n,a){return t.rank<n.rank&&(t=du(t,cc(t.shape,a))),e.rank<n.rank&&(e=du(e,cc(e.shape,a))),{x:()=>No(e,vo(Ju(n,t),e.dtype))}}const ym={kernelName:$t,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{reductionIndices:r}=a,s=t[0],o=gm(e,t[1],s,q(r,s.shape));return{x:()=>o.x()}}},bm={kernelName:en,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>No(e,vo(Ic(n,a),"float32")),b:()=>No(e,vo(Oc(n,a),"float32"))}}};const vm=ns({maxPool3dGrad_:function(e,t,n,a,r,s,o){const i=$r(e,"dy","maxPool3dGrad"),u=$r(t,"input","maxPool3dGrad"),c=$r(n,"output","maxPool3dGrad");let l=i,h=u,d=c,p=!1;4===u.rank&&(p=!0,l=du(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),h=du(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=du(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),M(5===l.rank,(()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+"".concat(l.rank,"."))),M(5===h.rank,(()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+"".concat(h.rank,"."))),M(5===d.rank,(()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+"".concat(d.rank,"."))),hu("maxPool3dGrad",s,o);const f={dy:l,input:h,output:d},m={filterSize:a,strides:r,pad:s,dimRoundingMode:o},g=Hr.runKernel(rn,f,m);return p?du(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),xm={kernelName:an,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:u}=n;return{x:()=>vm(e,a,r,s,o,i,u)}}};const wm=ns({maxPoolGrad_:function(e,t,n,a,r,s,o){const i=$r(e,"dy","maxPoolGrad"),u=$r(t,"input","maxPoolGrad"),c=$r(n,"output","maxPoolGrad");M(u.rank===i.rank,(()=>"Rank of input (".concat(u.rank,") does not match rank of dy ")+"(".concat(i.rank,")"))),M(4===i.rank,(()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+"".concat(i.rank,"."))),M(4===u.rank,(()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+"".concat(u.rank,"."))),hu("maxPoolGrad",s,o);const l={dy:i,input:u,output:c},h={filterSize:a,strides:r,pad:s,dimRoundingMode:o};return Hr.runKernel(nn,l,h)}}),Dm={kernelName:tn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:s,strides:o,pad:i}=n;return{x:()=>wm(e,a,r,s,o,i)}}},km={kernelName:ln,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,s=r.map((e=>e[0]));return{x:()=>bu(e,s,a.shape)}}},Cm={kernelName:Dn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,s=r.map((e=>e[0]));return{x:()=>bu(e,s,a.shape)}}},Nm={kernelName:kn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,a,r]=t,s=n,o=a,i=qo(s.shape,o.shape);return{a:()=>{const t=vo(o,"float32");let n=No(e,No(t,Wo(s,Vo(t,Fo(1)))));const a=jo(s.shape,i);return a.length>0&&(n=gc(n,a)),du(n,s.shape)},b:()=>{const t=Ec(s,0),n=$u(t,Bc(s),Io(s));let a=No(e,No(r,n));const u=jo(o.shape,i);return u.length>0&&(a=gc(a,u)),du(a,o.shape)}}}};function Sm(e,t,n){const a=e.shape.length,r=a-n.length,s=hc(n,a);let o=e;null!=s&&(o=Mh(e,s));const i=o.shape.slice(),u=i.splice(a-n.length,n.length).reduce(((e,t)=>e*t),1);i.push(u);let c=function(e,t,n){const a=e.shape.slice();a[n]=1;const r=du(t,a),s=ju(e,n,!0,!1),o=ju(e,n,!0,!0),i=No(s,o);return No(r,i)}(o.reshape(i),t,r);if(c=c.reshape(o.shape),null!=s){const e=dc(s);c=Mh(c,e)}return c}const Em={kernelName:qn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ec(n,Fo(0)),a=Fo(Cp),r=Fo(Np),s=No(e,r),o=No(No(e,a),xc(vo(n,"float32")));return $u(t,s,o)}}}},Im={kernelName:ta,gradFunc:(e,t,n)=>{const{blockShape:a,paddings:r}=n;return{x:()=>wu(e,a,r)}}},Tm={kernelName:na,gradFunc:(e,t,n)=>{const{axis:a}=n;return{x:()=>mu(e,a)}}};const Fm=[mf,gf,yf,bf,vf,xf,wf,Df,kf,Cf,Nf,Sf,If,Ff,Af,Rf,_f,Of,Lf,Mf,zf,Bf,Wf,Pf,Uf,Gf,Hf,jf,qf,Kf,{kernelName:yt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=qo(n.shape,a.shape);return{a:()=>{const t=Co(e,vo(a,"float32")),s=jo(n.shape,r);return s.length>0?du(gc(t,s),n.shape):t},b:()=>{let t=No(e,vo(n,"float32"));const s=jo(a.shape,r);s.length>0&&(t=du(gc(t,s),a.shape));const o=Eo(a);return Wc(Co(t,vo(o,"float32")))}}}},Xf,Yf,Qf,Zf,Jf,em,$f,tm,nm,sm,om,im,um,cm,lm,hm,dm,pm,mm,ym,ym,bm,xm,Dm,{kernelName:on,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n,s=q(r,a.shape),o=P(uc(a.shape,s)[1]);return{x:()=>{const t=a.shape.slice();s.forEach((e=>{t[e]=1}));const n=du(e,t);return Co(No(n,al(a.shape,"float32")),o)}}}},{kernelName:un,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{axis:r}=a,[s,o]=t,i=gm(e,o,s,q(r,s.shape));return{x:()=>i.x()}}},{kernelName:cn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>No(e,vo(Lc(n,a),"float32")),b:()=>No(e,vo(Ec(n,a),"float32"))}}},km,{kernelName:hn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=qo(n.shape,a.shape);return{a:()=>{const t=jo(n.shape,r);return t.length>0?du(gc(e,t),n.shape):e},b:()=>{const t=No(e,Wc(Nc(Co(n,a)))),s=jo(a.shape,r);return s.length>0?du(gc(t,s),a.shape):t}}}},{kernelName:pn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=qo(n.shape,a.shape);return{a:()=>{const t=No(e,vo(a,"float32")),s=jo(n.shape,r);return s.length>0?du(gc(t,s),n.shape):t},b:()=>{const t=No(e,vo(n,"float32")),s=jo(a.shape,r);return s.length>0?du(gc(t,s),a.shape):t}}}},{kernelName:fn,gradFunc:e=>({x:()=>Wc(e)})},{kernelName:xn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>nl(n.shape,"float32")}}},{kernelName:vn,gradFunc:e=>({x:()=>Io(e)})},{kernelName:wn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:a}=n;return Fh(e,a).map((e=>()=>e))}},Cm,Cm,Nm,{kernelName:Cn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,a]=t,r=Ec(n,0);return{x:()=>$u(r,e,No(e,a)),alpha:()=>{let t=$u(r,Io(e),No(e,n));const s=jo(a.shape,e.shape);return s.length>0&&(t=gc(t,s)),du(t,a.shape)}}}},{kernelName:Nn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;let s=[];return s=void 0===r||null===r?a.shape.map(((e,t)=>t)):"number"===typeof r?[r]:r,{x:()=>Sm(a,e,s)}}},{kernelName:An,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,Wc(Eo(n)))}}},{kernelName:Bn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=No(Lc(n,6),fh(n));return{x:()=>No(e,vo(a,"float32"))}}},{kernelName:Rn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>No(e,vo(fh(n),"float32"))}}},{kernelName:_n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>du(e,n.shape)}}},{kernelName:Mn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>Hr.runKernel(zn,r,n)}}},{kernelName:On,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>Hr.runKernel(Ln,r,n)}}},{kernelName:Pn,gradFunc:(e,t,n)=>{const{dims:a}=n,r=q(a,e.shape);return{x:()=>Ul(e,r)}}},{kernelName:Wn,gradFunc:e=>({x:()=>Io(e)})},{kernelName:Vn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Wc(Co(e,No(Wo(n,1.5),2)))}}},{kernelName:jn,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>vo(Io(n),"float32"),t:()=>No(e,vo(n,e.dtype)),e:()=>No(e,vo(qc(n),e.dtype))}}},Em,{kernelName:Zn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>No(e,No(n,Vo(Fo(1),n)))}}},{kernelName:Qn,gradFunc:e=>({x:()=>Io(e)})},{kernelName:Xn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>No(Gu(vo(n,"float32")),e)}}},{kernelName:Yn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>No(Hu(vo(n,"float32")),e)}}},{kernelName:Kn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{begin:r,size:s}=n,o=a.shape,[i,u]=Mi(a,r,s),c=[];for(let l=0;l<e.rank;l++)c.push([i[l],o[l]-i[l]-u[l]]);return{x:()=>ml(e,c)}}},{kernelName:aa,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{dim:r}=n,s=No(e,a);return{logits:()=>Vo(s,No(gc(s,[r],true),a))}}},{kernelName:Jn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>No(e,yu(n))}}},Im,Im,Tm,Tm,{kernelName:$n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,No(So(vo(n,"float32")),2))}}},{kernelName:ca,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Fo(2);return{a:()=>No(e,No(r,Vo(n,a))),b:()=>No(e,No(r,Vo(a,n)))}}},{kernelName:la,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>No(e,No(vo(n,"float32"),2))}}},{kernelName:Ea,gradFunc:e=>({x:()=>Io(e)})},{kernelName:ga,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=qo(n.shape,a.shape);return{a:()=>{let t=e;const a=jo(n.shape,r);return a.length>0&&(t=gc(t,a)),du(t,n.shape)},b:()=>{let t=e;const n=jo(a.shape,r);return n.length>0&&(t=gc(t,n)),du(Wc(t),a.shape)}}}},{kernelName:ea,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,r=a.shape.slice(),{axis:s}=n;q(s,a.shape).forEach((e=>{r[e]=1}));const o=du(e,r),i=No(o,al(a.shape,"float32"));return{x:()=>i}}},{kernelName:ya,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(e,Eo(Gu(n)))}}},{kernelName:ba,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>No(Vo(Fo(1),Eo(n)),e)}}},{kernelName:va,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{reps:r}=n;return{x:()=>{let t=Io(a);if(1===a.rank)for(let n=0;n<r[0];++n)t=Do(t,bu(e,[n*a.shape[0]],[a.shape[0]]));else if(2===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)t=Do(t,bu(e,[n*a.shape[0],s*a.shape[1]],[a.shape[0],a.shape[1]]));else if(3===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let o=0;o<r[2];++o)t=Do(t,bu(e,[n*a.shape[0],s*a.shape[1],o*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else{if(4!==a.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+"".concat(a.rank," tensors yet."));for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let o=0;o<r[2];++o)for(let i=0;i<r[3];++i)t=Do(t,bu(e,[n*a.shape[0],s*a.shape[1],o*a.shape[2],i*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]))}return t}}}},{kernelName:Da,gradFunc:(e,t,n)=>{const a=n,{perm:r}=a,s=dc(r);return{x:()=>Mh(e,s)}}},{kernelName:Ca,gradFunc:(e,t,n)=>{const a=n,{axis:r}=a;return{value:()=>ph(e,r)}}},{kernelName:Na,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Ko(t,Io(t)),a=Sc(e,n);let r=Ic(t,Fo(0,"int32"));const s=a.rank-r.rank;for(let i=0;i<s;++i)r=wc(r,i+1);r=jc(r,al(a.shape,"bool"));const o=Io(a);return $u(r,a,o)}(e,n)}}},{kernelName:Sa,gradFunc:e=>({x:()=>Io(e)})}];for(const n of Fm)Va(n);Cr().prototype.abs=function(){return this.throwIfDisposed(),Go(this)},Cr().prototype.acos=function(){return this.throwIfDisposed(),Pi(this)},Cr().prototype.acosh=function(){return this.throwIfDisposed(),Wi(this)},Cr().prototype.add=function(e){return this.throwIfDisposed(),Do(this,e)},Cr().prototype.all=function(e,t){return this.throwIfDisposed(),Ui(this,e,t)},Cr().prototype.any=function(e,t){return this.throwIfDisposed(),Gi(this,e,t)},Cr().prototype.argMax=function(e){return this.throwIfDisposed(),Hi(this,e)},Cr().prototype.argMin=function(e){return this.throwIfDisposed(),ji(this,e)},Cr().prototype.asScalar=function(){return this.throwIfDisposed(),M(1===this.size,(()=>"The array must have only 1 element.")),du(this,[])},Cr().prototype.asType=function(e){return this.throwIfDisposed(),vo(this,e)},Cr().prototype.as1D=function(){return this.throwIfDisposed(),du(this,[this.size])},Cr().prototype.as2D=function(e,t){return this.throwIfDisposed(),du(this,[e,t])},Cr().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),du(this,[e,t,n])},Cr().prototype.as4D=function(e,t,n,a){return this.throwIfDisposed(),du(this,[e,t,n,a])},Cr().prototype.as5D=function(e,t,n,a,r){return this.throwIfDisposed(),du(this,[e,t,n,a,r])},Cr().prototype.asin=function(){return this.throwIfDisposed(),qi(this)},Cr().prototype.asinh=function(){return this.throwIfDisposed(),Ki(this)},Cr().prototype.atan=function(){return this.throwIfDisposed(),Xi(this)},Cr().prototype.atan2=function(e){return this.throwIfDisposed(),Yi(this,e)},Cr().prototype.atanh=function(){return this.throwIfDisposed(),Qi(this)},Cr().prototype.avgPool=function(e,t,n,a){return this.throwIfDisposed(),pu(this,e,t,n,a)},Cr().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),wu(this,e,t)},Cr().prototype.batchNorm=function(e,t,n,a,r){return this.throwIfDisposed(),Du(this,e,t,n,a,r)},Cr().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Tu(this,e)},Cr().prototype.cast=function(e){return this.throwIfDisposed(),vo(this,e)},Cr().prototype.ceil=function(){return this.throwIfDisposed(),Fu(this)},Cr().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Au(this,e,t)},Cr().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof kr&&(e=[e]),mu([this,...e],t)},Cr().prototype.conv1d=function(e,t,n,a,r,s){return this.throwIfDisposed(),zu(this,e,t,n,a,r,s)},Cr().prototype.conv2dTranspose=function(e,t,n,a,r){return this.throwIfDisposed(),Pu(this,e,t,n,a,r)},Cr().prototype.conv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),Mu(this,e,t,n,a,r,s)},Cr().prototype.cos=function(){return this.throwIfDisposed(),Gu(this)},Cr().prototype.cosh=function(){return this.throwIfDisposed(),Hu(this)},Cr().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),ju(this,e,t,n)},Cr().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),qu(this,e,t,n)},Cr().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Xu(this,e,t)},Cr().prototype.depthwiseConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),Yu(this,e,t,n,a,r,s)},Cr().prototype.dilation2d=function(e,t,n,a,r){return this.throwIfDisposed(),Zu(this,e,t,n,a,r)},Cr().prototype.divNoNan=function(e){return this.throwIfDisposed(),ec(this,e)},Cr().prototype.div=function(e){return this.throwIfDisposed(),Co(this,e)},Cr().prototype.dot=function(e){return this.throwIfDisposed(),tc(this,e)},Cr().prototype.elu=function(){return this.throwIfDisposed(),ac(this)},Cr().prototype.equal=function(e){return this.throwIfDisposed(),Ju(this,e)},Cr().prototype.erf=function(){return this.throwIfDisposed(),sc(this)},Cr().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),vc(this,e,t)},Cr().prototype.exp=function(){return this.throwIfDisposed(),xc(this)},Cr().prototype.expandDims=function(e){return this.throwIfDisposed(),wc(this,e)},Cr().prototype.expm1=function(){return this.throwIfDisposed(),Dc(this)},Cr().prototype.fft=function(){return this.throwIfDisposed(),oh(this)},Cr().prototype.flatten=function(){return this.throwIfDisposed(),du(this,[this.size])},Cr().prototype.floor=function(){return this.throwIfDisposed(),Nc(this)},Cr().prototype.floorDiv=function(e){return this.throwIfDisposed(),ko(this,e)},Cr().prototype.gather=function(e,t,n){return this.throwIfDisposed(),Sc(this,e,t,n)},Cr().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Ic(this,e)},Cr().prototype.greater=function(e){return this.throwIfDisposed(),Ec(this,e)},Cr().prototype.ifft=function(){return this.throwIfDisposed(),ih(this)},Cr().prototype.irfft=function(){return this.throwIfDisposed(),uh(this)},Cr().prototype.isFinite=function(){return this.throwIfDisposed(),Fc(this)},Cr().prototype.isInf=function(){return this.throwIfDisposed(),Ac(this)},Cr().prototype.isNaN=function(){return this.throwIfDisposed(),Rc(this)},Cr().prototype.leakyRelu=function(e){return this.throwIfDisposed(),_c(this,e)},Cr().prototype.lessEqual=function(e){return this.throwIfDisposed(),Lc(this,e)},Cr().prototype.less=function(e){return this.throwIfDisposed(),Oc(this,e)},Cr().prototype.localResponseNormalization=function(e,t,n,a){return this.throwIfDisposed(),zc(this,e,t,n,a)},Cr().prototype.logSigmoid=function(){return this.throwIfDisposed(),Uc(this)},Cr().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Gc(this,e)},Cr().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Hc(this,e,t)},Cr().prototype.log=function(){return this.throwIfDisposed(),Bc(this)},Cr().prototype.log1p=function(){return this.throwIfDisposed(),Pc(this)},Cr().prototype.logicalAnd=function(e){return this.throwIfDisposed(),jc(this,e)},Cr().prototype.logicalNot=function(){return this.throwIfDisposed(),qc(this)},Cr().prototype.logicalOr=function(e){return this.throwIfDisposed(),Kc(this,e)},Cr().prototype.logicalXor=function(e){return this.throwIfDisposed(),Xc(this,e)},Cr().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),gu(this,e,t,n)},Cr().prototype.maxPool=function(e,t,n,a){return this.throwIfDisposed(),Jc(this,e,t,n,a)},Cr().prototype.max=function(e,t){return this.throwIfDisposed(),fc(this,e,t)},Cr().prototype.maximum=function(e){return this.throwIfDisposed(),Ko(this,e)},Cr().prototype.mean=function(e,t){return this.throwIfDisposed(),tl(this,e,t)},Cr().prototype.min=function(e,t){return this.throwIfDisposed(),mc(this,e,t)},Cr().prototype.minimum=function(e){return this.throwIfDisposed(),sl(this,e)},Cr().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),ol(this,e,t)},Cr().prototype.mod=function(e){return this.throwIfDisposed(),il(this,e)},Cr().prototype.mul=function(e){return this.throwIfDisposed(),No(this,e)},Cr().prototype.neg=function(){return this.throwIfDisposed(),Wc(this)},Cr().prototype.norm=function(e,t,n){return this.throwIfDisposed(),bc(this,e,t,n)},Cr().prototype.notEqual=function(e){return this.throwIfDisposed(),hl(this,e)},Cr().prototype.oneHot=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),dl(this,e,t,n)},Cr().prototype.onesLike=function(){return this.throwIfDisposed(),pl(this)},Cr().prototype.pad=function(e,t){return this.throwIfDisposed(),ml(this,e,t)},Cr().prototype.pool=function(e,t,n,a,r,s){return this.throwIfDisposed(),wl(this,e,t,n,a,r,s)},Cr().prototype.pow=function(e){return this.throwIfDisposed(),Wo(this,e)},Cr().prototype.prelu=function(e){return this.throwIfDisposed(),Dl(this,e)},Cr().prototype.prod=function(e,t){return this.throwIfDisposed(),kl(this,e,t)},Cr().prototype.reciprocal=function(){return this.throwIfDisposed(),Pl(this)},Cr().prototype.relu=function(){return this.throwIfDisposed(),Wl(this)},Cr().prototype.relu6=function(){return this.throwIfDisposed(),Vl(this)},Cr().prototype.reshapeAs=function(e){return this.throwIfDisposed(),du(this,e.shape)},Cr().prototype.reshape=function(e){return this.throwIfDisposed(),du(this,e)},Cr().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Sd(this,e,t,n)},Cr().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Ed(this,e,t,n)},Cr().prototype.reverse=function(e){return this.throwIfDisposed(),Ul(this,e)},Cr().prototype.rfft=function(){return this.throwIfDisposed(),lh(this)},Cr().prototype.round=function(){return this.throwIfDisposed(),Kl(this)},Cr().prototype.rsqrt=function(){return this.throwIfDisposed(),Xl(this)},Cr().prototype.selu=function(){return this.throwIfDisposed(),Yl(this)},Cr().prototype.separableConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),Ql(this,e,t,n,a,r,s)},Cr().prototype.sigmoid=function(){return this.throwIfDisposed(),yu(this)},Cr().prototype.sign=function(){return this.throwIfDisposed(),Jl(this)},Cr().prototype.sin=function(){return this.throwIfDisposed(),$l(this)},Cr().prototype.sinh=function(){return this.throwIfDisposed(),eh(this)},Cr().prototype.slice=function(e,t){return this.throwIfDisposed(),bu(this,e,t)},Cr().prototype.softmax=function(e){return this.throwIfDisposed(),sh(this,e)},Cr().prototype.softplus=function(){return this.throwIfDisposed(),Vc(this)},Cr().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),xl(this,e,t)},Cr().prototype.split=function(e,t){return this.throwIfDisposed(),ch(this,e,t)},Cr().prototype.sqrt=function(){return this.throwIfDisposed(),So(this)},Cr().prototype.square=function(){return this.throwIfDisposed(),Eo(this)},Cr().prototype.squaredDifference=function(e){return this.throwIfDisposed(),hh(this,e)},Cr().prototype.squeeze=function(e){return this.throwIfDisposed(),dh(this,e)},Cr().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof kr?[this,e]:[this,...e];return ph(n,t)},Cr().prototype.step=function(e){return this.throwIfDisposed(),fh(this,e)},Cr().prototype.stridedSlice=function(e,t,n,a,r,s,o,i){return this.throwIfDisposed(),mh(this,e,t,n,a,r,s,o,i)},Cr().prototype.sub=function(e){return this.throwIfDisposed(),Vo(this,e)},Cr().prototype.sum=function(e,t){return this.throwIfDisposed(),gc(this,e,t)},Cr().prototype.tan=function(){return this.throwIfDisposed(),gh(this)},Cr().prototype.tanh=function(){return this.throwIfDisposed(),vu(this)},Cr().prototype.tile=function(e){return this.throwIfDisposed(),kc(this,e)},Cr().prototype.toBool=function(){return this.throwIfDisposed(),vo(this,"bool")},Cr().prototype.toFloat=function(){return this.throwIfDisposed(),vo(this,"float32")},Cr().prototype.toInt=function(){return this.throwIfDisposed(),vo(this,"int32")},Cr().prototype.topk=function(e,t){return this.throwIfDisposed(),Sh(this,e,t)},Cr().prototype.transpose=function(e){return this.throwIfDisposed(),Mh(this,e)},Cr().prototype.unique=function(e){return this.throwIfDisposed(),Ih(this,e)},Cr().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Th(this,e,t)},Cr().prototype.unstack=function(e){return this.throwIfDisposed(),Fh(this,e)},Cr().prototype.where=function(e,t){return this.throwIfDisposed(),$u(e,this,t)},Cr().prototype.zerosLike=function(){return this.throwIfDisposed(),Io(this)};class Am extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Am.prototype)}}class Rm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Rm.prototype)}}class _m extends Error{constructor(e){super(e),Object.setPrototypeOf(this,_m.prototype)}}class Om extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Om.prototype)}}class Lm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Lm.prototype)}}Error;class Mm{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error("The maxEntries of LRU caches must be at least 0, but got ".concat(e,"."));if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function zm(e,t){if(Array.isArray(e)){let n=[];for(let a=0;a<t;a++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Bm(e,t){if(!e)throw new Lm(t)}function Pm(e,t){let n=0;for(const a of e)a===t&&n++;return n}function Wm(e){return 1===e.length?e[0]:e}function Vm(e){return Array.isArray(e)?e:[e]}function Um(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Gm(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let Hm={};function jm(e){if(null===e||void 0===e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function qm(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach((e=>qm(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!==typeof t.value?qm(t):e[n]=t.value)}}}function Km(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"===typeof e){const r=e;let s;if(r in n)s=n[r];else if(r in Hm)s=Hm[r];else if(s=t[r],null==s)throw new _m("Unknown ".concat(a,": ").concat(e,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");return s}{const s=e;if(null==s.className||null==s.config)throw new _m("".concat(a,": Improper config format: ")+"".concat(JSON.stringify(s),".\n")+"'className' and 'config' must set.");const o=s.className;let i,u;if(o in n?[i,u]=n[o]:o in Hm?[i,u]=Hm.className:o in t&&([i,u]=t[o]),null==i)throw new _m("Unknown ".concat(a,": ").concat(o,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");if(null!=u){const e={};for(const n of Object.keys(Hm))e[n]=Hm[n];for(const r of Object.keys(n))e[r]=n[r];s.config.customObjects=e;const t=Object.assign({},Hm);for(const r of Object.keys(n))Hm[r]=n[r];qm(s.config);const a=u(i,s.config,n,r);return Hm=Object.assign({},t),a}{const e=Object.assign({},Hm);for(const a of Object.keys(n))Hm[a]=n[a];const t=new i(s.config);return Hm=Object.assign({},e),t}}}function Xm(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Ym(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Qm(e){if(null==e)throw new _m("Invalid value in obj: ".concat(JSON.stringify(e)));for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Zm(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new _m("".concat(n," is not a valid ").concat(t,".  Valid values are ").concat(e," or null/undefined."))}function Jm(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return Bm(n>=0),Bm(a>=n),Array.isArray(e)&&e.length>=n&&e.length<=a&&e.every((e=>typeof e===t))}function $m(e,t){Array.isArray(e)?(M(e.length>0,(()=>"".concat(t," is unexpectedly an empty array."))),e.forEach(((e,n)=>$m(e,"element ".concat(n+1," of ").concat(t))))):M(Number.isInteger(e)&&e>0,(()=>"Expected ".concat(t," to be a positive integer, but got ")+"".concat(eg(e),".")))}function eg(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>eg(e))).join(",")+"]":"string"===typeof e?'"'.concat(e,'"'):"".concat(e)}function tg(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let ng=0;function ag(){return ng++}const rg={};function sg(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e in rg||(rg[e]=0),rg[e]+=1,e+rg[e].toString()}const og=["channelsFirst","channelsLast"],ig=["nearest","bilinear"],ug=["valid","same","causal"],cg=["max","avg"],lg=["sum","mul","concat","ave"],hg=new Map;function dg(e){Zm(og,"DataFormat",e)}function pg(e){Zm(ug,"PaddingMode",e)}function fg(e){Zm(cg,"PoolMode",e)}const mg=[];function gg(e,t){mg.push(e);try{const e=t();return mg.pop(),e}catch(n){throw mg.pop(),n}}function yg(e){if(!xg(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===mg.length?"":mg.join("/")+"/")+e}function bg(e){if(!xg(e))throw new Error("Not a valid tensor name: '"+e+"'");hg.has(e)||hg.set(e,0);const t=hg.get(e);if(hg.set(e,hg.get(e)+1),t>0){const n="".concat(e,"_").concat(t);return hg.set(n,1),n}return e}const vg=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function xg(e){return!!e.match(vg)}function wg(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let a=1;for(let r=t;r<n;++r)a*=e[r];return a}function Dg(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a<t&&(t=a)}return t}function kg(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a>t&&(t=a)}return t}function Cg(e,t){if(t<e)throw new _m("end (".concat(t,") < begin (").concat(e,") is forbidden."));const n=[];for(let a=e;a<t;++a)n.push(a);return n}let Ng;function Sg(){return null==Ng&&(Ng=fs().epsilon()),Ng}function Eg(e,t){return vo(e,t)}function Ig(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),du(e,n)}function Tg(e,t,n){return ls((()=>{switch(e.rank){case 1:return th(e,t,n);case 2:return nh(e,[t,0],[n,e.shape[1]]);case 3:return ah(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return rh(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return bu(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return bu(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new _m("sliceAlongFirstAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function Fg(e,t,n){return ls((()=>{switch(e.rank){case 1:return th(e,t,n);case 2:return nh(e,[0,t],[e.shape[0],n]);case 3:return ah(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return rh(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new _m("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function Ag(e,t,n,a){return ls((()=>{switch(e.rank){case 1:return th(e,t,n);case 2:switch(a){case 1:return Tg(e,t,n);case 2:return Fg(e,t,n);default:throw new _m("The axis is not within the rank of the tensor "+"".concat(a))}case 3:switch(a){case 1:return Tg(e,t,n);case 2:return ah(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Fg(e,t,n);default:throw new _m("The axis is not within the rank of the tensor "+"".concat(a))}case 4:switch(a){case 1:return Tg(e,t,n);case 2:return rh(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return rh(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Fg(e,t,n);default:throw new _m("The axis is not within the rank of the tensor "+"".concat(a))}default:throw new _m("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function Rg(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(t=e[0].rank,n=0!==t?t:0),n===e[0].rank&&(n=-1),mu(e,n)}function _g(e,t){switch(e.rank){case 1:return Ru([e,t]);case 2:return _u([e,t],0);case 3:return Ou([e,t],0);case 4:return Lu([e,t],0);default:throw new _m("concatAlongFirstAxis() received an unsupported "+"tensor rank: ".concat(e.rank))}}function Og(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new _m("The length of input n (".concat(t.length,") does not match ")+"the number of dimensions in input x (".concat(e.rank,")"));return kc(e,t)}function Lg(e){return _l(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,arguments.length>3?arguments[3]:void 0,arguments.length>4?arguments[4]:void 0)}function Mg(e,t,n,a){if(e.rank<2||t.rank<2)throw new Om("dot requires both inputs to be rank >= 2"+" but got x shape = ".concat(e.shape," and y shape = ").concat(t.shape));if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Om("If rank y >= 3, then the second last dim"+" of y must equal the last dim of x but got x shape = ".concat(e.shape," and ")+" y shape = ".concat(t.shape))}if(2===e.rank&&2===t.rank){return ed({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?Pg(e.rank,a,"channelsLast"):null,activation:n})}{const r=e.shape.slice(),s=r.pop();e=du(e,[-1,s]);const o=t.shape.slice(),i=o.pop(),u=o.pop(),c=[...o,i],l=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=du(Mh(t,l),[u,-1]);const h=[...r,...c];return du(ed({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?Pg(e.rank,a,"channelsLast"):null,activation:n}),h)}}function zg(e,t,n){return ls((()=>(t=Array.isArray(t)?yh(t,"int32"):vo(t,"int32"),Sc(e,t,n))))}function Bg(e){return No(e,e)}function Pg(e,t,n){const a=t.shape;if(1!==t.rank&&t.rank!==e)throw new _m("Unexpected bias dimensions: ".concat(t.rank)+"; expected it to be 1 or ".concat(e));if(5===e){if("channelsFirst"===n)return 1===a.length?du(t,[1,a[0],1,1,1]):du(t,[1,a[3],a[0],a[1],a[2]]);if("channelsLast"===n)return 1===a.length?du(t,[1,1,1,1,a[0]]):du(t,[1].concat(a))}else if(4===e){if("channelsFirst"===n)return 1===a.length?du(t,[1,a[0],1,1]):du(t,[1,a[2],a[0],a[1]]);if("channelsLast"===n)return 1===a.length?du(t,[1,1,1,a[0]]):du(t,[1].concat(a))}else if(3===e){if("channelsFirst"===n)return 1===a.length?du(t,[1,a[0],1]):du(t,[1,a[1],a[0]]);if("channelsLast"===n)return 1===a.length?du(t,[1,1,a[0]]):du(t,[1].concat(a))}else if(e<3)return t;throw new _m("Unsupported input rank by biasAdd: ".concat(t.rank))}function Wg(e,t,n){return ls((()=>(null==n&&(n="channelsLast"),dg(n),Do(e,Pg(e.rank,t,n)))))}function Vg(e,t,n,a){return ls((()=>Vh(e,t,n,a)))}function Ug(e,t){return arguments.length>2&&void 0!==arguments[2]&&arguments[2]?e():t()}const Gg=["fanIn","fanOut","fanAvg"],Hg=["normal","uniform","truncatedNormal"];class jg extends _o{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class qg extends jg{apply(e,t){return nl(e,t)}}qg.className="Zeros",Lo(qg);class Kg extends jg{apply(e,t){return al(e,t)}}Kg.className="Ones",Lo(Kg);class Xg extends jg{constructor(e){if(super(),"object"!==typeof e)throw new _m("Expected argument of type ConstantConfig but got ".concat(e));if(void 0===e.value)throw new _m("config must have value set but got ".concat(e));this.value=e.value}apply(e,t){return ls((()=>No(Fo(this.value),al(e,t))))}getConfig(){return{value:this.value}}}Xg.className="Constant",Lo(Xg);class Yg extends jg{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Ll(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Yg.className="RandomUniform",Lo(Yg);class Qg extends jg{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Om("randomNormal does not support dType ".concat(t,"."));return Lg(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Qg.className="RandomNormal",Lo(Qg);class Zg extends jg{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Om("truncatedNormal does not support dType ".concat(t,"."));return Eh(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Zg.className="TruncatedNormal",Lo(Zg);class Jg extends jg{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return ls((()=>{if(2!==e.length||e[0]!==e[1])throw new _m("Identity matrix initializer can only be used for 2D square matrices.");return No(this.gain,Cc(e[0]))}))}getConfig(){return{gain:this.gain}}}Jg.className="Identity",Lo(Jg);class $g extends jg{constructor(e){if(super(),e.scale<0)throw new _m("scale must be a positive float. Got: ".concat(e.scale));var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Zm(Gg,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Zm(Hg,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e){let t,n,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(dg(a),2===e.length)t=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===a){const a=wg(e,2);t=e[1]*a,n=e[0]*a}else if("channelsLast"===a){const a=wg(e,0,e.length-2);t=e[e.length-2]*a,n=e[e.length-1]*a}}else{const a=wg(e);t=Math.sqrt(a),n=Math.sqrt(a)}return[t,n]}(e),a=n[0],r=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,a):"fanOut"===this.mode?s/=Math.max(1,r):s/=Math.max(1,(a+r)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Om("".concat(this.getClassName()," does not support dType ").concat(t,"."));return Eh(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return Ll(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}$g.className="VarianceScaling",Lo($g);class ey extends $g{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return $g.className}}ey.className="GlorotUniform",Lo(ey);class ty extends $g{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return $g.className}}ty.className="GlorotNormal",Lo(ty);class ny extends $g{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return $g.className}}ny.className="HeNormal",Lo(ny);class ay extends $g{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return $g.className}}ay.className="HeUniform",Lo(ay);class ry extends $g{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return $g.className}}ry.className="LeCunNormal",Lo(ry);class sy extends $g{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return $g.className}}sy.className="LeCunUniform",Lo(sy);class oy extends jg{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return ls((()=>{if(e.length<2)throw new Om("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError("Unsupported data type ".concat(t,"."));const n=P(e.slice(0,-1)),a=e[e.length-1],r=n*a;r>this.ELEMENTS_WARN_SLOW&&console.warn("Orthogonal initializer is being called on a matrix with more "+"than ".concat(this.ELEMENTS_WARN_SLOW," (").concat(r,") elements: ")+"Slowness may result.");const s=Lg([Math.max(a,n),Math.min(a,n)],0,1,t,this.seed),o=tp.qr(s,!1);let i=o[0];const u=o[1].flatten().stridedSlice([0],[Math.min(a,n)*Math.min(a,n)],[Math.min(a,n)+1]);return i=No(i,u.sign()),n<a&&(i=i.transpose()),No(Fo(this.gain),i.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}oy.className="Orthogonal",Lo(oy);const iy={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function uy(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Km(e,Oo.getMap().classNameMap,t,"initializer")}function cy(e){return jm(e)}function ly(e){if("string"===typeof e){const t=e in iy?iy[e]:e;if("GlorotNormal"===t)return new ty;if("GlorotUniform"===t)return new ey;if("HeNormal"===t)return new ny;if("HeUniform"===t)return new ay;if("LeCunNormal"===t)return new ry;if("LeCunUniform"===t)return new sy;{const e={};return e.className=t,e.config={},uy(e)}}return e instanceof jg?e:uy(e)}function hy(e){return Array.isArray(e)&&Array.isArray(e[0])}function dy(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function py(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new _m("Expected Tensor length to be 1; got ".concat(e.length));t=e[0]}else t=e;return t}function fy(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new _m("Expected exactly 1 Shape; got ".concat(e.length))}return e}function my(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const gy="Variable";class yy{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:gy,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=ag(),n=null==n?gy:n,this.originalName=yg(n),this.name=bg(this.originalName),this.trainable_=a,this.constraint=r,this.val=Rh(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error("LayersVariable ".concat(this.name," is already disposed."))}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function by(e){return e.map((e=>e.read()))}function vy(e){e.forEach((e=>{e[0].write(e[1])}))}class xy{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class wy{constructor(e,t,n,a,r,s,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=a,this.callArgs=r,this.outputTensorIndex=o,this.id=ag(),null!=s&&(this.originalName=yg(s),this.name=bg(this.originalName)),this.rank=t.length}}let Dy=0;class ky{constructor(e,t){this.callArgs=t,this.id=Dy++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Cy=0;class Ny extends _o{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Cy++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Um(e)+"_"+sg(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Rm("The layer has never been called "+"and thus has no defined ".concat(t,"."));if(this.inboundNodes.length<=e)throw new _m("Asked to get ".concat(t," at node ").concat(e,", ")+"but the layer has only ".concat(this.inboundNodes.length," inbound nodes."));return this.inboundNodes[e]}getInputAt(e){return Wm(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Wm(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Am("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new Am("Layer ".concat(this.name)+" is not connected, no input to return.");return Wm(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Am("Layer ".concat(this.name)+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new Am("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return Wm(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=Vm(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=Vm(this.inputSpec);if(t.length!==n.length)throw new _m("Layer ".concat(this.name," expects ").concat(n.length," inputs, ")+"but it received ".concat(t.length," input tensors. ")+"Input received: ".concat(e));for(let a=0;a<t.length;a++){const e=t[a],r=n[a];if(null==r)continue;const s=e.rank;if(null!=r.ndim&&s!==r.ndim)throw new _m("Input ".concat(a," is incompatible with layer ").concat(this.name,": ")+"expected ndim=".concat(r.ndim,", found ndim=").concat(s));if(null!=r.maxNDim&&s>r.maxNDim)throw new _m("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected max_ndim=".concat(r.maxNDim,", found ndim=").concat(s));if(null!=r.minNDim&&s<r.minNDim)throw new _m("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected min_ndim=".concat(r.minNDim,", found ndim=").concat(s,"."));if(null!=r.dtype&&e.dtype!==r.dtype)throw new _m("Input ".concat(a," is incompatible with layer ").concat(this.name," ")+": expected dtype=".concat(r.dtype,", found dtype=").concat(e.dtype,"."));if(r.axes){const t=e.shape;for(const e in r.axes){const n=Number(e),s=r.axes[e],o=n>=0?t[n]:t[t.length+n];if(null!=s&&-1===[s,null].indexOf(o))throw new _m("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected axis ").concat(n," of input shape to ")+"have value ".concat(s," but got shape ").concat(t,"."))}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){const n=r.shape[t],s=e.shape[t];if(null!=n&&null!=s&&n!==s)throw new _m("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected shape=").concat(r.shape,", ")+"found shape=".concat(e.shape,"."))}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Vm(e),a=function(e){let t=!0;for(const n of Vm(e))if(!(n instanceof wy)){t=!1;break}return t}(e),r=function(e){let t=!0;for(const n of Vm(e))if(n instanceof wy){t=!1;break}return t}(e);if(a===r)throw new _m("Arguments to apply() must be all SymbolicTensors or all Tensors");return gg(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Vm(e))t.push(n.shape);this.build(Wm(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,a);const r=Vm(a),s=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(a=Wm(s),null!=this.activityRegularizer)throw new Om("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}{const n=function(e){e=Vm(e);const t=[];for(const n of e)t.push(n.shape);return Wm(t)}(e),a=this.computeOutputShape(n);let r;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,a)=>new wy(s,n,this,Vm(e),t,this.name,a))):new wy(s,a,this,Vm(e),t,this.name),this.addInboundNode(e,r,null,null,n,a,t),this._refCount++,null!=this.activityRegularizer)throw new Om("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+"".concat(JSON.stringify(e),") does not match that of the ")+"batchInputShape (".concat(JSON.stringify(this.batchInputShape),") ")+"of the layer ".concat(this.name));else{let t=!1;this.batchInputShape.forEach(((n,a)=>{null!=n&&null!=e[a]&&e[a]!==n&&(t=!0)})),t&&console.warn("The shape of the input tensor "+"(".concat(JSON.stringify(e),") does not ")+"match the expectation of layer ".concat(this.name,": ")+"".concat(JSON.stringify(this.batchInputShape)))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Am("The layer ".concat(this.name," has never been called and thus has no ")+"defined output shape.");const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Am("The layer ".concat(this.name," has multiple inbound nodes with different ")+'output shapes. Hence the notion of "output shape" is ill-defined for the layer.')}countParams(){if(!this.built)throw new Rm("You tried to call countParams() on ".concat(this.name,", ")+"but the layer is not built yet. Build it first by calling build(batchInputShape).");return my(this.weights)}build(e){this.built=!0}getWeights(){return by(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(e){ls((()=>{const t=this.weights;if(t.length!==e.length)throw new _m('You called setWeights(weights) on layer "'.concat(this.name,'" ')+"with a weight list of length ".concat(e.length,", ")+"but the layer was expecting ".concat(t.length," weights. ")+"Provided weights: ".concat(e,"..."));if(0===t.length)return;const n=[],a=by(t);for(let r=0;r<a.length;++r){const s=a[r],o=t[r],i=e[r];if(!W(s.shape,i.shape))throw new _m("Layer weight shape ".concat(s.shape," ")+"not compatible with provided weight shape ".concat(i.shape));n.push([o,i])}vy(n)}))}addWeight(e,t,n,a,r,s,o,i){if(-1!==this._addedWeightNames.indexOf(e))throw new _m("Duplicate weight name ".concat(e," for layer ").concat(this.name));this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(a=null!=i?i():ly("zeros"));const u=a.apply(t,n),c=new yy(u,n,e,s,o);return u.dispose(),null!=r&&this.addLoss((()=>r.apply(c.read()))),null==s&&(s=!0),s?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Vm(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.");t.forEach((e=>{if(null!=e)throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.")}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const a=this.computeMask(e,n),r=Vm(t),s=Vm(a);if(r.length!==s.length)throw new Error("".concat(this.name," outputs ").concat(r.length," tensors ")+"but ".concat(r.length," masks for those tensors"));for(let o=0;o<r.length;o++)r[o].kerasMask=s[o]}addInboundNode(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const i=Vm(e);t=Vm(t),n=Vm(n),a=Vm(a),r=dy(r),s=dy(s);const u=[],c=[],l=[];for(const h of i)u.push(h.sourceLayer),c.push(h.nodeIndex),l.push(h.tensorIndex);new ky({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:l,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:a,inputShapes:r,outputShapes:s},o);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error("Layer '".concat(this.name,"' is already disposed."))}dispose(){if(!this.built)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been ")+"built yet.");if(null===this._refCount)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been used ")+"yet.");this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Sy(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const a=Sy(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of a)-1===t.indexOf(e)&&t.push(e)}return t}}}class Ey extends Ny{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:sg("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new _m("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new _m("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new _m("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const a=new wy(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new ky({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new _m("Cannot pass any input to an "+"InputLayer's apply() method. InputLayer name: ".concat(this.name))}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Ey.className="InputLayer",Lo(Ey);class Iy{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Iy)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new _m("Duplicate key: name=".concat(e.name,", id=").concat(e.id));return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return vo(t,e.dtype)}catch(rW){throw new _m("The dtype of the feed (".concat(t.dtype,") can not be cast to the dtype ")+"of the key '".concat(e.name,"' (").concat(e.dtype,")."))}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof wy){if(null==this.id2Value[e.id])throw new _m("Nonexistent key: ".concat(e.name));return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new _m("Feed dict has no SymbolicTensor name: ".concat(e));return this.id2Value[t]}}getMask(e){if(e instanceof wy){if(null==this.id2Value[e.id])throw new _m("Nonexistent key: ".concat(e.name));return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new _m("Feed dict has no SymbolicTensor name: ".concat(e));return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&hs(this.id2Mask)}}const Ty=new Mm,Fy=new Mm;function Ay(e,t,n,a){const r=null!=n&&n.training,s=Array.isArray(e),o=s?e:[e],i=o.map((e=>e.name)),u=[],c=t.names();for(const f of i)-1!==c.indexOf(f)?u.push(t.getValue(f)):u.push(null);null!=a&&(a.maxNumTensors=-1/0,a.minNumTensors=1/0);const l=i.join(",")+"|"+t.names().sort().join(",");let h,d=Ty.get(l);if(null==d){const e=function(e,t){M(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],a={};if(1===e.length){const r=_y(e[0],t);n=r.sorted,a=r.recipientMap}else{const r=new Set;for(const s of e){const{sorted:e,recipientMap:o}=_y(s,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const t in o)null==a[t]&&(a[t]=new Set),o[t].forEach((e=>a[t].add(e)))}}return{sorted:n,recipientCounts:Ry(a)}}(o,t);d=e.sorted,h=e.recipientCounts,Ty.put(l,d),Fy.put(l,h)}h={},r||Object.assign(h,Fy.get(l));const p=new Iy(t);for(let f=0;f<d.length;++f){if(null!=a){const e=cs().numTensors;e>a.maxNumTensors&&(a.maxNumTensors=e),e<a.minNumTensors&&(a.minNumTensors=e)}const e=d[f],s=e.sourceLayer;if(s instanceof Ey)continue;const o=[],c=[],l=[];let m=!1;for(const n of e.inputs){const e=p.getValue(n),a=p.getMask(n);o.push(e),c.push(a),null!=a&&(m=!0),r||(h[n.name]--,0!==h[n.name]||t.hasKey(n)||-1!==i.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||l.push(e))}m&&((n=n||{}).mask=c[0]);const g=Vm(s.apply(o,n));let y=null;s.supportsMasking&&(y=s.computeMask(o,c));const b=Oy(e),v=Array.isArray(b)?b:[b];for(let t=0;t<v.length;++t){p.hasKey(v[t])||p.add(v[t],g[t],Array.isArray(y)?y[0]:y);const e=i.indexOf(v[t].name);-1!==e&&(u[e]=g[t])}r||hs(l)}return p.disposeMasks(),s?u:u[0]}function Ry(e){const t={};for(const n in e)t[n]=e[n].size;return t}function _y(e,t){const n=new Set,a=[],r={};for(const i of t.names())n.add(i);const s=[],o=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=o[o.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),a.push(e),n.add(e.name),t&&o.pop();else{o.push(s.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:a,recipientMap:r}}function Oy(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const a of e.sourceLayer.inboundNodes[t].outputTensors)if(a.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function Ly(e,t){return ls((()=>So(gc(No(e,e),t,!0))))}ge().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=Ty&&Ty.setMaxEntries(e),null!=Fy&&Fy.setMaxEntries(e)}));class My extends _o{getConfig(){return{}}}class zy extends My{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ls((()=>{const t=Ly(e,this.axis),n=Au(t,0,this.maxValue);return No(e,Co(n,Do(Sg(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}zy.className="MaxNorm",Lo(zy);class By extends My{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ls((()=>Co(e,Do(Sg(),Ly(e,this.axis)))))}getConfig(){return{axis:this.axis}}}By.className="UnitNorm",Lo(By);class Py extends My{apply(e){return Wl(e)}}Py.className="NonNeg",Lo(Py);class Wy extends My{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ls((()=>{const t=Ly(e,this.axis),n=Do(No(this.rate,Au(t,this.minValue,this.maxValue)),No(1-this.rate,t));return No(e,Co(n,Do(Sg(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Wy.className="MinMaxNorm",Lo(Wy);const Vy={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Uy(e){return jm(e)}function Gy(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Km(e,Oo.getMap().classNameMap,t,"constraint")}function Hy(e){if(null==e)return null;if("string"===typeof e){return Gy({className:e in Vy?Vy[e]:e,config:{}})}return e instanceof My?e:Gy(e)}async function jy(e){if(null==e)return;const t=[],n=[],a=[];for(const r in e){const s=e[r];if("number"!==typeof s){const e=s;t.push(e.data()),n.push(r),a.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];hs(a)}}function qy(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}var Ky;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Ky||(Ky={}));class Xy{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Yy{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Qy extends Xy{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const a in t){const e=t[a];if("number"===typeof e)this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+e*n;else{let t;a in this.totals?t=this.totals[a]:this.totals[a]=0;const r=ls((()=>Do(this.totals[a],No(e,n))));this.totals[a]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:ls((()=>{const e=No(Co(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),ds(t[n])})))}}class Zy extends Xy{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!==typeof a[s]){const o=a[s];e.push(o.data()),t.push(r),n.push(s)}}const a=await Promise.all(e);for(let r=0;r<a.length;++r){this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=a[r][0]}}}class Jy extends Xy{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||ip,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");$(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let a,r=null!=n?n():or();return function(){const s=null!=n?n():or();return s-r<t||(r=s,a=e(...arguments)),a}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const a=[];null!=this.yield&&(await jy(n),a.push(this.yield(e,t,n))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await jy(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await jy(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await jy(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await jy(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):$(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await jy(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await jy(e),await this.trainEnd(e))}}function $y(e,t){if(null==e&&(e={}),e instanceof Xy)return[e];if(Array.isArray(e)&&e[0]instanceof Xy)return e;return Vm(e).map((e=>new Jy(e,t)))}class eb{constructor(){}static registerCallbackConstructor(e,t){M(e>=0&&Number.isInteger(e),(()=>"Verbosity level is expected to be an integer >= 0, "+"but got ".concat(e))),eb.checkForDuplicate(t),null==eb.constructors[e]&&(eb.constructors[e]=[]),eb.constructors[e].push(t)}static checkForDuplicate(e){for(const t in eb.constructors){eb.constructors[+t].forEach((t=>{if(t===e)throw new _m("Duplicate callback constructor.")}))}}static clear(){eb.constructors={}}static createCallbacks(e){const t=[];for(const n in eb.constructors){const a=+n;e>=a&&t.push(...eb.constructors[a])}return t.map((e=>new e))}}function tb(e,t,n,a,r,s,o,i,u){const c=new Zy,l=[new Qy,...eb.createCallbacks(t)];null!=e&&l.push(...e),l.push(c);const h=new Yy(l);return h.setParams({epochs:n,initialEpoch:a,samples:r,steps:s,batchSize:o,verbose:t,doValidation:i,metrics:u}),{callbackList:h,history:c}}function nb(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Km(e,Oo.getMap().classNameMap,t,"layer",n)}function ab(e,t){return ls((()=>{"float32"!==e.dtype&&(e=vo(e,"float32"));const n=gc(Bg(e),t,!0),a=Bo(n.shape,Sg()),r=So(Ko(n,a));return Co(e,r)}))}function rb(e,t){return ls((()=>tl(Bg(Vo(t,e)),-1)))}function sb(e,t){return ls((()=>tl(Go(Vo(t,e)),-1)))}function ob(e,t){return ls((()=>{const n=Vo(e,t),a=Au(Go(e),Sg(),Number.MAX_VALUE),r=Go(Co(n,a));return No(100,tl(r,-1))}))}function ib(e,t){return ls((()=>{const n=Au(t,Sg(),Number.MAX_VALUE),a=Bc(Do(1,n)),r=Au(e,Sg(),Number.MAX_VALUE),s=Bc(Do(1,r));return tl(Bg(Vo(a,s)),-1)}))}function ub(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return ls((()=>{if(n)t=sh(t);else{const e=gc(t,t.shape.length-1,!0);t=Co(t,e)}return t=Au(t,Sg(),1-Sg()),Wc(gc(No(vo(e,"float32"),Bc(t)),t.shape.length-1))}))}function cb(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return ls((()=>{const a=vo(Nc(function(e){const t=[wg(e.shape)];return du(e,t)}(e)),"int32"),r=(t=Au(t,Sg(),1-Sg())).shape;return ub(du(dl(a,r[r.length-1]),r),t,n)}))}function lb(e,t){return ls((()=>{let n;return n=Au(t,Sg(),1-Sg()),n=Bc(Co(n,Vo(1,n))),tl(function(e,t){if(!W(e.shape,t.shape))throw new _m("logits and labels must have the same shape, but got shapes "+"".concat(JSON.stringify(e.shape)," and ").concat(JSON.stringify(t.shape)));return ls((()=>{const n=Wl(t),a=Wc(Go(t));return Do(Vo(n,No(t,e)),Pc(xc(a)))}))}(e,n),-1)}))}function hb(e,t){return ls((()=>{const n=Au(e,Sg(),1),a=Au(t,Sg(),1);return gc(No(e,Bc(Co(n,a))),-1)}))}function db(e,t){return ls((()=>{const n=ab(e,-1),a=ab(t,-1),r=No(n,a);return Wc(gc(r,-1))}))}eb.constructors={};const pb={meanSquaredError:rb,meanAbsoluteError:sb,meanAbsolutePercentageError:ob,meanSquaredLogarithmicError:ib,squaredHinge:function(e,t){return ls((()=>{const n=Ko(0,Vo(1,No(e,t)));return tl(Bg(n),-1)}))},hinge:function(e,t){return ls((()=>{const n=Ko(0,Vo(1,No(e,t)));return tl(n,-1)}))},categoricalHinge:function(e,t){return ls((()=>{const n=gc(No(e,t),-1),a=fc(No(Vo(1,e),t),-1);return Ko(0,Do(1,Vo(a,n)))}))},logcosh:function(e,t){return ls((()=>{const n=Math.log(2),a=Vo(t,e),r=Vo(Do(a,Vc(No(-2,a))),n);return tl(r,-1)}))},categoricalCrossentropy:ub,sparseCategoricalCrossentropy:cb,binaryCrossentropy:lb,kullbackLeiblerDivergence:hb,poisson:function(e,t){return ls((()=>{const n=Bc(Do(Sg(),t));return tl(Vo(t,No(e,n)),-1)}))},cosineProximity:db};function fb(e){if("string"===typeof e){if(e in pb)return pb[e];let t="Unknown loss ".concat(e);throw e.toLowerCase().includes("softmaxcrossentropy")&&(t="Unknown loss ".concat(e,". ")+'Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy'),new _m(t)}return e}function mb(e,t){return ls((()=>{const n=No(.5,pl(t)),a=Eg(Ec(t,n),e.dtype);return tl(Ju(e,a),-1)}))}function gb(e,t){return ls((()=>Eg(Ju(Hi(e,-1),Hi(t,-1)),"float32")))}function yb(e,t){return ls((()=>vo(gc(jc(Ju(e,1),Ju(t,1))),"float32")))}function bb(e,t){return lb(e,t)}function vb(e,t){return e.rank===t.rank&&(e=dh(e,[e.rank-1])),(t=Hi(t,-1)).dtype!==e.dtype&&(t=vo(t,e.dtype)),vo(Ju(e,t),"float32")}const xb=ub,wb=cb,Db={binaryAccuracy:mb,categoricalAccuracy:gb,precision:function(e,t){return ls((()=>{const n=yb(e,t),a=function(e,t){return ls((()=>vo(gc(jc(Ju(e,0),Ju(t,1))),"float32")))}(e,t),r=Do(n,a);return vo($u(Ec(r,0),Co(n,r),0),"float32")}))},categoricalCrossentropy:xb,sparseCategoricalCrossentropy:wb,mse:rb,MSE:rb,mae:sb,MAE:sb,mape:ob,MAPE:ob,cosine:db};function kb(e){if("string"===typeof e&&e in Db)return Db[e];if("string"!==typeof e&&null!=e)return e;throw new _m("Unknown metric ".concat(e))}function Cb(e){if(Bm(null!==e,"Unknown LossOrMetricFn ".concat(e)),"string"===typeof e)return e;{let t;for(const n of Object.keys(pb))if(pb[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Db))if(Db[n]===e){t=n;break}return void 0!==t?t:e.name}}const Nb=1048576;function Sb(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Eb(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>Nb&&console.warn('User-defined metadata of model "'.concat(t,'" is too large in ')+"size (length=".concat(n.length," when serialized). It is not ")+"recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= "+"".concat(Nb,"."))}}function Eb(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!Eb(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Eb(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Ib(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const r=function(e){let t=!0;const n=[],a=[];for(const r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(const r of n){if(r.length>1||1===r.length&&r[0].inboundLayers.length>1){t=!1;break}a.push(...r)}if(t)for(const r of e.layers){let e=!1;for(const n of r.inboundNodes)if(-1!==a.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Input Shape","Output shape","Param #"];let o;if(r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){s.push("Receives inputs"),o=[];for(const t in e.nodesByDepth)o.push(...e.nodesByDepth[t])}a("_".repeat(t)),Tb(s,n,a),a("=".repeat(t));const i=e.layers;for(let l=0;l<i.length;++l)r?Fb(i[l],n,a):Ab(i[l],n,o,a),a((l===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;t=null!=e.collectedTrainableWeights?my(e.collectedTrainableWeights):my(e.trainableWeights);return t}(e),c=my(e.nonTrainableWeights);a("Total params: ".concat(u+c)),a("Trainable params: ".concat(u)),a("Non-trainable params: ".concat(c)),a("_".repeat(t))}function Tb(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,a="";for(let r=0;r<e.length;++r)r>0&&(a=a.slice(0,a.length-1)+" "),a+=e[r],a=a.slice(0,t[r]),a+=" ".repeat(t[r]-a.length);n(a)}function Fb(e,t,n){let a,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(rW){r="multiple"}try{a=JSON.stringify(e.outputShape)}catch(rW){a="multiple"}const s=e.name,o=e.getClassName();Tb(["".concat(s," (").concat(o,")"),r,a,e.countParams().toString()],t,n)}function Ab(e,t,n,a){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(rW){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(rW){r="multiple"}const o=[];for(const l of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(l)))for(let e=0;e<l.inboundLayers.length;++e){const t=l.inboundLayers[e].name,n=l.nodeIndices[e],a=l.tensorIndices[e];o.push("".concat(t,"[").concat(n,"][").concat(a,"]"))}const i=e.name,u=e.getClassName(),c=0===o.length?"":o[0];Tb(["".concat(i," (").concat(u,")"),s,r,e.countParams().toString(),c],t,a);for(let l=1;l<o.length;++l)Tb(["","","","",o[l]],t,a)}function Rb(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function _b(e,t){if(null===e)return null;if("string"===typeof e)return Gm(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];Rb(t,r,a)?n.push(a):n.push(_b(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n];if("name"===n&&"string"===typeof a)t[n]=a;else{const e=Gm(n);t[e]=_b(a,e)}}return t}}function Ob(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return Um(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];Rb(t,r,a)?n.push(a):n.push(Ob(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n],r=Um(n);t[r]="name"!==n&&"className"!==n||"string"!==typeof a?Ob(a,n):a}return t}}const Lb="4.22.0";class Mb extends Ny{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=sg(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Ym(this.inputs).length!==this.inputs.length)throw new _m("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+"".concat(this.inputs.map((e=>e.name))));Ym(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+"".concat(this.outputs.map((e=>e.name)))),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const y of this.inputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;Bm(0===t,"input layer has >1 nodes"),Bm(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const t=this.inputLayers[y];if(!(t instanceof Ey))throw new TypeError("Input layers to a LayersModel must be InputLayer objects. "+"Received inputs: ".concat(e.inputs,". ")+"Input ".concat(y," (0-based) originates ")+"from layer type ".concat(t.getClassName(),"."));this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},a={},r={},s={},o=[],i=(e,t,n,a,r,u)=>{null!=a&&null!=r&&null!=u||(a=e.sourceLayer,r=e.nodeIndex,u=e.tensorIndex);const c=a.inboundNodes[r];if(-1!==n.indexOf(c))throw new Rm("The tensor ".concat(e.name,' at layer "').concat(a.name,'" ')+"is part of a cycle.");if(-1!==t.indexOf(c))return;this.containerNodes.add(Mb.nodeKey(a,r)),a.id in s||(s[a.id]=Object.keys(s).length),-1===n.indexOf(c)&&n.push(c);const l=c.inboundLayers.length;for(let s=0;s<l;s++){const e=c.inputTensors[s],a=c.inboundLayers[s],r=c.nodeIndices[s],o=c.tensorIndices[s];i(e,t,n,a,r,o)}for(t.push(c);n.indexOf(c)>=0;)n.splice(n.indexOf(c),1);o.push(c)},u=[],c=[];for(const y of this.outputs)i(y,u,c);const l=o.slice().reverse();for(const y of l){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id];const s=null==a[y.outboundLayer.id]?0:a[y.outboundLayer.id];e=Math.max(e,s),a[y.outboundLayer.id]=e,r[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let a=0;a<y.inboundLayers.length;a++){const r=y.inboundLayers[a],s=y.nodeIndices[a],o=r.inboundNodes[s],i=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(e+1,i),n[o.id]=o}}const h={};for(const y in t){const e=t[y];e in h||(h[e]=[]),h[e].push(n[y])}const d={};for(const y in a){const e=a[y];e in d||(d[e]=[]),d[e].push(r[y])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(Xm);this.layers=[];for(const y of p){const e=d[y];e.sort(((e,t)=>{const n=s[e.id],a=s[t.id];return n<a?-1:n>a?1:0}));for(const t of e)t instanceof Mb&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(Xm);const f=this.inputs.slice(),m=[];for(const y of p)for(const e of h[y]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Rm("Graph disconnected: cannot obtain value for tensor ".concat(n)+' at layer "'.concat(t.name,'". ')+"The following previous layers were accessed without "+"issue: ".concat(m));for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const y of g){const e=g.filter((e=>e===y)).length;if(1!==e)throw new Rm('The name "'.concat(y,'" is used ').concat(e," times ")+"in the model. All layer names should be unique. Layer names: "+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new ky({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error("Container '".concat(this.name,"' is already disposed."))}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new _m("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let a=0;const r=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);r&&this.parseWeights(e);for(const o of this.layers)for(const[e,t]of o.weights.entries()){const s=r?"".concat(t.name.split("/").slice(0,-1).join("/")+"/").concat(e):t.originalName;if(null!=n[s])throw new _m("Duplicate weight name: ".concat(s));n[s]=t,a++}const s=[];for(const o in e){let a=o;if(null==n[o]){const e=o.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])s.push([n[a],e[o]]);else if(t)throw new _m("Provided weight data has no target variable: ".concat(o));delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new _m("".concat(e.length," of ").concat(a," weights are not set: ")+"".concat(e))}vy(s)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),a=["vars","layer_checkpoint_dependencies"],r=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!a.includes(e))).join("/");r!==t&&(e[r]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers ".concat(Lb),t.backend="TensorFlow.js",t}toJSON(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=Ob(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return ls((()=>{e=Vm(e);const n=new Iy;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Ay(this.outputs,n,t)}))}computeMask(e,t){return ls((()=>{let n;return e=Vm(e),n=null==t?zm(null,e.length):Vm(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=dy(e);if(t.length!==this.inputLayers.length)throw new _m("Invalid inputShape argument ".concat(e,": ")+"model has ".concat(this.inputLayers.length," tensor inputs."));const n={};for(let o=0;o<t.length;o++){const e=this.inputLayers[o],a=t[o];n[e.name+"_0_0"]=a}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Xm);if(a.length>1)for(const o of a){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const a=[];for(let o=0;o<t.inboundLayers.length;o++){const e=t.inboundLayers[o],r=t.nodeIndices[o],s=t.tensorIndices[o],i=n["".concat(e.name,"_").concat(r,"_").concat(s)];a.push(i)}const r=dy(e.computeOutputShape(Wm(a))),s=e.inboundNodes.indexOf(t);for(let t=0;t<r.length;t++){n["".concat(e.name,"_").concat(s,"_").concat(t)]=r[t]}}}const r=[],s=[];for(let o=0;o<this.outputLayers.length;o++){const e=this.outputLayers[o],t=this.outputLayersNodeIndices[o],n=this.outputLayersTensorIndices[o],a="".concat(e.name,"_").concat(t,"_").concat(n);s.push(a)}for(let o=0;o<s.length;o++){const e=s[o];Bm(e in n),r.push(n[e])}return Wm(r)}runInternalGraph(e,t){null==t&&(t=zm(null,e.length));const n={};for(let i=0;i<this.inputs.length;++i){const a=this.inputs[i],r=e[i],s=t[i];n[a.id]=[r,s]}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Xm);for(const i of a){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer,a=t.inputTensors,r=t.outputTensors,s=new Array;for(const t of a)t.id in n&&s.push(n[t.id]);if(s.length===a.length){let a,o,i,u,c={};if(null!=t.callArgs&&(c=t.callArgs),1===s.length){const[t,n]=s[0];null==c.mask&&(c.mask=n),i=Vm(e.call(t,c)),u=Vm(e.computeMask(t,n)),a=[t],o=[n]}else a=s.map((e=>e[0])),o=s.map((e=>e[1])),null==c.mask&&(c.mask=o),i=Vm(e.call(a,c)),u=Vm(e.computeMask(a,o));if(e.activityRegularizer)throw new Om("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],a=i[e],s=u[e];n[t.id]=[a,s]}}}}const r=[],s=[],o=[];for(const i of this.outputs){Bm(i.id in n,"Could not compute output ".concat(i.name," : ").concat(i.id));const[e,t]=n[i.id];o.push(e.shape),r.push(e),s.push(t)}return[r,s,o]}buildNodeConversionMap(e){const t={};let n;for(const a of this.layers){n=a instanceof Mb?1:0;for(let e=0;e<a.inboundNodes.length;e++){const r=Mb.nodeKey(a,e);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new _m("Provide either a layer name or layer index");if("number"===typeof e)return this.findLayer(e);for(const n of this.layers)if(n.name===e)return n;throw new _m("No such layer: ".concat(e))}findLayer(e){if(this.layers.length<=e)throw new _m("Was asked to retrieve layer at index ".concat(e,", but model only ")+"has ".concat(this.layers.length," layer(s)."));return this.layers[e]}calculateLosses(){return ls((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const a=Mb.nodeKey(t,n);this.containerNodes.has(a)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const s of this.layers){const e=s.getClassName(),a=s.getConfig(),r=[];for(let n=0;n<s.inboundNodes.length;n++){const e=s.inboundNodes[n],a=Mb.nodeKey(s,n);let o={};if(this.containerNodes.has(a)){if(e.callArgs)try{JSON.stringify(e.callArgs),o=e.callArgs}catch(rW){console.warn("Layer ".concat(s.name," was passed ")+"non-serializable keyword arguments: "+"".concat(e.callArgs,". They will not be included ")+"in the serialized model (and thus will be missing at deserialization time)."),o={}}if(e.inboundLayers.length>0){const n=[];for(let a=0;a<e.inboundLayers.length;a++){const r=e.inboundLayers[a],s=e.nodeIndices[a],i=e.tensorIndices[a];let u=t[Mb.nodeKey(r,s)];null==u&&(u=0),n.push([r.name,u,i,o])}r.push(n)}}}const o={};o.name=s.name,o.className=e,o.config=a,o.inboundNodes=r,n.push(o)}e.layers=n;const a=[];for(let s=0;s<this.inputLayers.length;s++){const e=this.inputLayers[s],n=this.inputLayersNodeIndices[s],r=Mb.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let o=t[r];null!==o&&void 0!==o||(o=0);const i=this.inputLayersTensorIndices[s];a.push([e.name,o,i])}e.inputLayers=a;const r=[];for(let s=0;s<this.outputLayers.length;s++){const e=this.outputLayers[s],n=this.outputLayersNodeIndices[s],a=Mb.nodeKey(e,n);if(!this.containerNodes.has(a))continue;let o=t[a];null!==o&&void 0!==o||(o=0);const i=this.outputLayersTensorIndices[s];r.push([e.name,o,i])}return e.outputLayers=r,e}static fromConfig(e,t){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a={},r={};function s(e,t){e.name in r?r[e.name].push(t):r[e.name]=[t]}function o(e,t){const n=[];let r;for(const o of t){const i=o[0],u=o[1],c=o[2];if(r=null==o[3]?{}:o[3],!(i in a))return void s(e,t);const l=a[i];if(l.inboundNodes.length<=u)return void s(e,t);const h=l.inboundNodes[u];n.push(h.outputTensors[c])}n.length>0&&e.apply(Wm(n),r)}function i(e){const r=e.name,o=nb(e,null!=t.customObjects?t.customObjects:{});o.setFastWeightInitDuringBuild(n),a[r]=o;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new _m("Corrupted configuration, expected array for nodeData: ".concat(e));s(o,e)}))}const u=t.name,c=t.layers;for(const f of c)i(f);for(;!Qm(r);)for(const e of c){const t=a[e.name];if(t.name in r){const e=r[t.name];delete r[t.name];for(const n of e)o(t,n)}}const l=[],h=[],d=t.inputLayers;for(const f of d){const e=f[0],t=f[1],n=f[2];Bm(e in a);const r=a[e].inboundNodes[t].outputTensors;l.push(r[n])}const p=t.outputLayers;for(const f of p){const e=f[0],t=f[1],n=f[2];Bm(e in a);const r=a[e].inboundNodes[t].outputTensors;h.push(r[n])}return new e({inputs:l,outputs:h,name:u})}get stateful(){if(this._stateful)throw new _m("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){ls((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function zb(e,t,n){const a=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===a)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==a)throw new Error("Provided ".concat(n," is an array of ").concat(e.length," ")+"element(s), but the model has ".concat(a," outputs. ")+"Make sure a set of weights is provided for each model output.");return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error("The model has multiple (".concat(a,") outputs, ")+"so ".concat(n," must be either an array with ")+"".concat(a," elements or an object with ").concat(t," keys. ")+"Provided ".concat(n," not understood: ").concat(JSON.stringify(e)))}function Bb(e,t){return zb(e,t,"classWeight")}async function Pb(e,t,n,a){if(null!=t||null!=a)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=ls((()=>{if(1===e.shape.length)return xo(e);if(2===e.shape.length){if(e.shape[1]>1){return Hi(e,1)}if(1===e.shape[1])return du(e,[e.shape[0]]);throw new Error("Encountered unexpected last-dimension size (".concat(e.shape[1],") ")+"during handling of class weights. The size is expected to be >= 1.")}throw new Error("Unexpected rank of target (y) tensor (".concat(e.rank,") during ")+"handling of class weights. The rank is expected to be 1 or 2.")})),a=Array.from(await t.data());hs(t);const r=[];return a.forEach((e=>{if(null==n[e])throw new Error("classWeight must contain all classes in the training data. "+"The class ".concat(e," exists in the data but not in ")+"classWeight");r.push(n[e])})),yh(r,"float32")}return null}function Wb(e,t){return No(e,t)}function Vb(e,t){let n,a;const r=t;n=r.xs,a=r.ys,M(null!=n&&null!=a,(()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+"".concat(t)));const s=Ub("input",e.inputNames,n),o=Ub("output",e.outputNames,a),i=s[0].shape[0];M(s.length===e.inputs.length,(()=>"LayersModel has ".concat(e.inputs.length," inputs, but the dataset ")+"provides ".concat(s.length," inputs.  (Expected input keys: ")+"".concat(JSON.stringify(e.inputNames),")"))),M(o.length===e.outputs.length,(()=>"LayersModel has ".concat(e.outputs.length," outputs, but the dataset ")+"provides ".concat(o.length," outputs.  (Expected output keys: ")+"".concat(JSON.stringify(e.outputNames),")")));for(let u=0;u<s.length;u++)M(s[u].shape[0]===i,(()=>"Batch size mismatch: input "+"".concat(e.inputNames[u]," has ").concat(s[u].shape[0],"; ")+"expected  ".concat(i," based on input ").concat(e.inputNames[0],".")));for(let u=0;u<o.length;u++)M(o[u].shape[0]===i,(()=>"Batch size mismatch: output "+"".concat(e.outputNames[u]," has ").concat(o[u].shape[0],"; ")+"expected  ".concat(i," based on input ").concat(e.inputNames[0],".")));return{xs:s,ys:o}}function Ub(e,t,n){if(n instanceof kr)return[n];if(Array.isArray(n))return M(n.length===t.length,(()=>"Received an array of ".concat(n.length," Tensors, but expected ").concat(t.length," to match the ").concat(e," keys ").concat(t,"."))),n;{const a=[];for(const r of t){if(null==n[r])throw new _m("The feature data generated by the dataset lacks the required "+"".concat(e," key '").concat(r,"'."));a.push(n[r])}return a}}async function Gb(e,t,n){const a=null!=n.batchesPerEpoch;if(M(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),M(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),M(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>"For fitDataset(), config.epochs is expected to be a positive "+"integer, but got ".concat(n.epochs))),M(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>"For fitDataset(), config.batchesPerEpoch is expected to be a "+"positive integer if specified, but got ".concat(n.batchesPerEpoch))),M(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let s,o;if(r)if(Hb(n.validationData))M(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, "+"but got ".concat(n.validationBatches)));else{const e=function(e){if(3===e.length)throw new Om("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,o=e.ys}const i=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let c;c=r?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const l=$y(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=tb(l,h,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,r,c);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const c={};await d.onEpochBegin(f);let l=0,h=0;for(a||(m=await t.iterator());!a||l<n.batchesPerEpoch;){const t=await m.next();if(a&&t.done){console.warn("You provided `batchesPerEpoch` as "+"".concat(n.batchesPerEpoch,", ")+"but your dataset iterator ran out of data after "+"".concat(l," batches; ")+"interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+"".concat(n.batchesPerEpoch*n.epochs," batches). ")+"You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:a,ys:r}=Vb(e,t.value),s={};s.batch=h,s.size=a[0].shape[0],await d.onBatchBegin(h,s);const o=[];if(null!=n.classWeight){const t=Bb(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)o.push(await Pb(r[e],null,t[e]))}const c=a.concat(r).concat(o),p=i(c);hs(c);for(let e=0;e<u.length;++e){const t=u[e],n=p[e];s[t]=n,ds(n)}await d.onBatchEnd(h,s),qy(s),h++,l++}if(a?l>=n.batchesPerEpoch:t.done){if(r){let t;t=Hb(n.validationData)?Vm(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Vm(e.evaluate(s,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)c["val_".concat(e.metricsNames[n])]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,c),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function Hb(e){return"function"===typeof e.iterator}function jb(e){M(e>0&&Number.isInteger(e),(()=>"batchSize is required to be a positive integer, but got ".concat(e)))}function qb(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Tg(e,t,n-t))):Tg(e,t,n-t)}function Kb(e,t){return ls((()=>null==e?null:Array.isArray(e)?e.map((e=>Kb(e,t))):zg(e,"int32"===t.dtype?t:vo(t,"int32"))))}function Xb(e,t){const n=[];let a=0,r=null;for(;a<e;)r=a+t,r>=e&&(r=e),n.push([a,r]),a=r;return n}function Yb(e){const t=[];e instanceof kr&&(e=[e]);for(let n=0;n<e.length;++n){const a=e[n];if(1===a.rank)t.push(Ig(a,1));else{if(0===a.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(a)}}return t}function Qb(e,t){if(null==e)return;const n=[];if(t instanceof kr)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const r in t){const e=t[r];n.push(e.id)}const a=[];if(e instanceof kr)-1===n.indexOf(e.id)&&a.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&a.push(e)}));else if(null!=e)for(const r in e){const t=e[r];-1===n.indexOf(t.id)&&a.push(t)}a.forEach((e=>{e.isDisposed||e.dispose()}))}function Zb(e){return Array.isArray(e)}function Jb(e){return!function(e){return e instanceof kr}(e)&&!Zb(e)}function $b(e,t,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==t||0===t.length){if(null!=e){let t=!1;if(Zb(e)&&e.length>0)t=!0;else if(Jb(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new _m("Error when checking model ".concat(s," expected no data, ")+"but got ".concat(e))}return[]}if(null==e)return t.map((e=>null));if(Jb(e)){a=[];for(const n of t){if(null==e[n])throw new _m('No data provided for "'.concat(n,'". Need data for each key in: ')+"".concat(t));a.push(e[n])}}else if(Zb(e)){if(e.length!==t.length)throw new _m("Error when checking model ".concat(s,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"model expected. Expected to see ".concat(t.length," Tensor(s), but ")+"instead got the following list of Tensor(s): ".concat(e));a=e}else{if(t.length>1)throw new _m("The model ".concat(s," expects ").concat(t.length," Tensor(s), ")+"but only received one Tensor. Found: Tensor with shape ".concat(e.shape));a=[e]}if(a=Yb(a),null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=a[o];if(e.shape.length!==n[o].length)throw new _m("Error when checking ".concat(s,": expected ").concat(t[o]," ")+"to have ".concat(n[o].length," dimension(s). but got array with ")+"shape ".concat(e.shape));for(let t=0;t<n[o].length;++t){if(0===t&&!r)continue;const a=e.shape[t],i=n[o][t];if(null!=i&&i>=0&&a!==i)throw new _m("".concat(s," expected a batch of elements where each ")+"example has shape [".concat(n[o].slice(1,n[o].length),"] ")+"(i.e.,tensor shape [*,".concat(n[o].slice(1,n[o].length),"])")+" but the ".concat(s," received an input with ").concat(e.shape[0])+" examples, each with shape [".concat(e.shape.slice(1,e.shape.length),"]")+" (tensor shape [".concat(e.shape,"])"))}}return a}function ev(e,t,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(e)){if(e.length!==t.length)throw new _m("Error when checking model ".concat(s,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"the model expected. Expected to see ".concat(t.length," Tensor(s),")+" but instead got ".concat(e.length," Tensors(s)."));a=e}else{if(t.length>1)throw new _m("The model expects ".concat(t.length," ").concat(s," Tensors, ")+"but only received one Tensor. Found: array with shape "+"".concat(JSON.stringify(e.shape),"."));a=[e]}if(null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=a[o];if(e.shape.length!==n[o].length)throw new _m("Error when checking ".concat(s,": expected ").concat(t[o]," ")+"to have ".concat(n[o].length," dimension(s), but got array with ")+"shape ".concat(JSON.stringify(e.shape)));for(let a=0;a<n[o].length;++a){if(0===a&&!r)continue;const i=e.shape[a],u=n[o][a];if(null!=u&&u!==i)throw new _m("Error when checking ".concat(s,": expected ")+"".concat(t[o]," to have shape ").concat(JSON.stringify(n[o])," but ")+"got array with shape ".concat(JSON.stringify(e.shape),"."))}}}class tv extends Mb{constructor(e){super(e),this.isTraining=!1}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new _m("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Ib(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>sp.adagrad(.01),Adadelta:()=>sp.adadelta(1,.95,Sg()),Adam:()=>sp.adam(.001,.9,.999,Sg()),Adamax:()=>sp.adamax(.002,.9,.999,Sg(),0),RMSProp:()=>sp.rmsprop(.001,.9,0,Sg()),SGD:()=>sp.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new _m("Unknown Optimizer ".concat(e))}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Mo))throw new _m("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new _m("When passing an Array as loss, it should have one entry per "+"model output. The model has ".concat(this.outputs.length," output(s), ")+"but you passed loss=".concat(e.loss,"."));const n=e.loss;t=n.map((e=>fb(e)))}else{const n=fb(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new _m('Unknown entry in loss dictionary: "'.concat(t,'". ')+"Only expected the following keys: ".concat(this.outputNames));for(const n of this.outputNames)null==e.loss[n]&&console.warn('Output "'.concat(n,'" is missing from loss dictionary. We assume ')+"this was done on purpose, and we will not be expecting data "+"to be passed to ".concat(n," during training")),t.push(fb(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){const e=this.internalOutputShapes[s],t=this.outputNames[s];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[s])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],gg("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const a=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError("Type of metrics argument not understood. Expected an string,"+"function, Array, or Object, found: ".concat(e));n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const a of t){let t=n.hasOwnProperty(a)?n[a]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};gg("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,a,s;for(const o of t){if("string"===typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===lb?-1!==["accuracy","acc"].indexOf(o)?a=mb:-1!==["crossentropy","ce"].indexOf(o)&&(a=bb):this.lossFunctions[e]===cb?-1!==["accuracy","acc"].indexOf(o)?a=vb:-1!==["crossentropy","ce"].indexOf(o)&&(a=wb):-1!==["accuracy","acc"].indexOf(o)?a=gb:-1!==["crossentropy","ce"].indexOf(o)&&(a=xb),-1!==["accuracy","acc"].indexOf(o)?r="acc":-1!==["crossentropy","ce"].indexOf(o)&&(r="ce"),s=a,n=""+r}else{const e=kb(o);s=e,n=""+Cb(o)}let t;gg(n,(()=>{t=s})),r(e,n,t)}})(a[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=null==n.batchSize?32:n.batchSize;jb(a);const r=this.standardizeUserDataXY(e,t,!0,a);try{const e=r[0].concat(r[1]);this.makeTestFunction();const t=this.testFunction;return Wm(this.testLoop(t,e,a,n.verbose,n.steps))}finally{Qb(r[0],e),Qb(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const a=null!=(n=n||{}).batches,r=e.testFunction;let s=[];if(n.verbose>0)throw new Om("Verbose mode is not implemented yet.");M(!a||n.batches>0&&Number.isInteger(n.batches),(()=>"Test loop expects `batches` to be a positive integer, but "+"received ".concat(JSON.stringify(n.batches))));const o="function"===typeof t.next?t:await t.iterator();let i=0,u=0;for(;!a||u<n.batches;){const t=await o.next();if(s=ls((()=>{if(t.value){const{xs:n,ys:a}=Vb(e,t.value),o=n.concat(a),c=ls((()=>r(o)));if(hs(o),0===u)for(let e=0;e<c.length;++e)s.push(Fo(0));const l=o[0].shape[0];for(let e=0;e<c.length;++e){const t=c[e],n=s[e];s[e]=ls((()=>Do(s[e],No(l,t)))),u>0&&hs(n)}hs(c),i+=l,++u}return s})),t.done){a&&console.warn("Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least `batches` "+"batches (in this case, ".concat(n.batches," batches). ")+"You may need to use the repeat() function when building your dataset.");break}}for(let c=0;c<s.length;++c){const e=s[c];s[c]=Co(s[c],i),hs(e)}return Wm(s)}(this,e,t)}checkNumSamples(e,t,n){let a,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(a=null,null!=t)throw new _m("If ".concat(r," is set, batchSize must be null or undefined.")+"Got batchSize = ".concat(t))}else{if(null==e)throw new _m("Either the input data should have a defined shape, or "+"".concat(r," shoud be specified."));a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new _m("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),a=n?t:[t],r=this.retrieveSymbolicTensors(a),s=new Iy;if(e instanceof kr&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new _m("The number of inputs provided (".concat(e.length,") ")+"does not match the number of inputs of this model "+"(".concat(this.inputs.length,")."));for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const i of this.inputs){const t=e[i.name];if(null==t)throw new _m("No value is provided for the model's input ".concat(i.name));s.add(i,t)}const o=Ay(r,s);return n?o:o[0]}retrieveSymbolicTensors(e){const t=zm(null,e.length);let n=e.length;for(const a of this.layers){const r=Array.isArray(a.output)?a.output:[a.output],s=r.map((e=>e.name));for(let a=0;a<e.length;++a){const o=s.indexOf(e[a]);if(-1!==o&&(t[a]=r[o],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,a)=>{null==t&&n.push(e[a])})),new _m("Cannot find SymbolicTensors for output name(s): "+"".concat(JSON.stringify(n)))}return t}predictLoop(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return ls((()=>{const a=this.checkNumSamples(e);if(n)throw new Om("Verbose predictLoop() is not implemented yet.");const r=Xb(a,t),s=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t){ls((()=>{const n=r[t][0],a=r[t][1],s=qb(e,n,a),o=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)o.push({key:this.inputs[e],value:s[e]});else o.push({key:this.inputs[0],value:s});const i=new Iy(o);return Ay(this.outputs,i)})).forEach(((e,t)=>s[t].push(e)))}return Wm(s.map((e=>mu(e,0))))}))}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=Yb(e);ev(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return jb(e),this.predictLoop(n,e)}finally{Qb(n,e)}}predictOnBatch(e){ev(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new Rm("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let r=0;r<this.feedOutputShapes.length;++r){const e=this.feedOutputShapes[r];this.feedLossFns[r]===cb?a.push(e.slice(0,e.length-1).concat([1])):a.push(e)}if(function(e,t){const n=Ym(e.map((e=>e.shape[0])));n.sort();const a=Ym(t.map((e=>e.shape[0])));if(a.sort(),n.length>1)throw new _m("All input Tensors (x) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(e.map((e=>e.shape)))));if(a.length>1)throw new _m("All target Tensors (y) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(t.map((e=>e.shape)))));if(n.length>0&&a.length>0&&!W(n,a))throw new _m("Input Tensors should have the same number of samples as target "+"Tensors. Found ".concat(n[0]," input sample(s) and ").concat(a[0]," target ")+"sample(s).")}(e=$b(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=$b(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const a=[rb,lb,ub];for(let r=0;r<e.length;++r){const s=e[r],o=t[r],i=n[r];if(null!=o){if(o===ub&&1===s.shape[s.shape.length-1])throw new _m("You are passing a target array of shape ".concat(s.shape," while using ")+"a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].");if(-1!==a.indexOf(o)){const e=s.shape.slice(1),t=i.slice(1);for(let n=0;n<e.length;++n){const a=e[n],r=t[n];if(null!=r&&a!==r)throw new _m("A target Tensor with shape ".concat(s.shape," was passed for an ")+"output of shape ".concat(i,", while using a loss function that ")+"expects targets to have the same shape as the output.")}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&e[0].shape[0]%n!==0)throw new _m("In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size "+"".concat(n,". Found: ").concat(e[0].shape[0]," sample(s)."));return[e,t]}async standardizeUserData(e,t,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=arguments.length>5?arguments[5]:void 0;const[o,i]=this.standardizeUserDataXY(e,t,r,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=a){const e=Bb(a,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await Pb(i[t],null,e[t]))}return[o,i,u]}testLoop(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4?arguments[4]:void 0;return ls((()=>{const s=this.checkNumSamples(t,n,r,"steps"),o=[];if(a>0)throw new Om("Verbose mode is not implemented yet.");if(null!=r)throw new Om("steps mode in testLoop() is not implemented yet");{const a=Xb(s,n),r=yh(Cg(0,s));for(let n=0;n<a.length;++n){const s=a[n][0],i=a[n][1],u=Tg(r,s,i-s),c=Kb(t,u),l=e(c);if(0===n)for(let e=0;e<l.length;++e)o.push(Fo(0));for(let e=0;e<l.length;++e){const t=l[e];o[e]=Do(o[e],No(i-s,t))}}for(let e=0;e<o.length;++e)o[e]=Co(o[e],s)}return o}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const a=e[n];let r=a;if(Pm(e,a)>1){const t=Pm(e.slice(0,n),a);r+="_".concat(t)}t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],o=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const o=new Iy(e),i=Ay(this.outputs,o,{training:!0});let u;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(a[n],i[n]);null!=r[n]&&(e=Wb(e,r[n]));const s=tl(e);t.push(s),u=0===n?e:Do(u,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],r=this.metricsTensors[n][1];e=tl(t(a[r],i[r]))}ds(e),s.push(e)}return u=tl(u),this.calculateLosses().forEach((e=>{u=Do(u,e)})),u}),!0,o)].concat(s)}}makeTestFunction(){this.testFunction=e=>ls((()=>{const t=[];let n;const a=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:a[e]});const o=new Iy(s),i=Ay(this.outputs,o);for(let e=0;e<this.lossFunctions.length;++e){const a=this.lossFunctions[e],s=tl(a(r[e],i[e]));n=0===e?s:Do(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],a=this.metricsTensors[e][1],s=tl(n(r[a],i[a]));t.push(s)}return t}))}async fit(e,t){let n,a,r,s,o,i,u,c,l,h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{const d=null==h.batchSize?32:h.batchSize;jb(d);const p=!1,f=await this.standardizeUserData(e,t,h.sampleWeight,h.classWeight,p,d);n=f[0],a=f[1],l=f[2];let m,g=!1;if(null!=h.validationData&&h.validationData.length>0){if(g=!0,2!==h.validationData.length)throw 3===h.validationData.length?new Om("validationData including sample weights is not supported yet."):new _m("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+"".concat(h.validationData," is invalid."));o=h.validationData[0],i=h.validationData[1];const e=!0,t=await this.standardizeUserData(o,i,null,null,e,d);u=t[0],c=t[1],m=u.concat(c)}else if(null!=h.validationSplit&&h.validationSplit>0&&h.validationSplit<1){g=!0;const e=Math.floor(n[0].shape[0]*(1-h.validationSplit)),t=n[0].shape[0];u=qb(n,e,t),r=n,n=qb(n,0,e),c=qb(a,e,t),s=a,a=qb(a,0,e),m=u.concat(c)}else null!=h.validationSteps&&(g=!0);const y=n.concat(a).concat(l);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),v=this.getDedupedMetricsNames();let x,w;g?(this.makeTestFunction(),x=this.testFunction,w=v.slice().concat(v.map((e=>"val_"+e)))):(x=null,m=[],w=v.slice());const D=$y(h.callbacks,h.yieldEvery);return await this.fitLoop(b,y,v,d,h.epochs,h.verbose,D,x,m,h.shuffle,w,h.initialEpoch,null,null)}finally{this.isTraining=!1,Qb(n,e),Qb(a,t),Qb(r,e),Qb(s,t),Qb(u,o),Qb(c,i),null!=l&&hs(l)}}async fitLoop(e,t,n,a,r,s,o,i,u,c,l,h,d,p){null==a&&(a=32),null==r&&(r=1),null==c&&(c=!0),null==h&&(h=0);let f=!1;if(null!=i&&null!=u&&(f=!0),null!=p&&(f=!0,null==d))throw new _m("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,a,d,"steps_per_epoch");let g;null!=m&&(g=Cg(0,m)),null==s&&(s=1);const{callbackList:y,history:b}=tb(o,s,r,h,m,d,a,f,l);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let v=h;v<r;++v){await y.onEpochBegin(v);const r={};if(null!=d)throw new Om("stepsPerEpoch mode is not implemented yet.");{if("batch"===c)throw new Om("batch shuffling is not implemneted yet");c&&R(g);const s=yh(g),o=Xb(m,a);for(let c=0;c<o.length;++c){const l={};if(await y.onBatchBegin(c,l),ls((()=>{const h=o[c][0],d=o[c][1],p=Tg(s,h,d-h);l.batch=c,l.size=d-h;const m=Kb(t,p),g=e(m);for(let e=0;e<n.length;++e){const t=n[e],a=g[e];l[t]=a,ds(a)}if(c===o.length-1&&f){const e=this.testLoop(i,u,a);for(let t=0;t<n.length;++t){const a=n[t],s=e[t];ds(s),r["val_"+a]=s}}})),await y.onBatchEnd(c,l),qy(l),this.stopTraining_)break}s.dispose()}if(await y.onEpochEnd(v,r),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return Gb(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),a=n[0],r=n[1],s=this.makeTrainFunction()(a.concat(r)),o=[];for(const i of s){const e=await i.data();o.push(e[0])}return hs(s),Qb(n[0],e),Qb(n[1],t),Wm(o)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,a=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let s=0;s<a.length;++s)n&&!a[s].trainable||t.push({name:a[s].originalName,tensor:r[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=cs().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-cs().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=Um(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Um(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const a of t){if("string"!==typeof n[a])throw new Error("Serialization of non-string loss is not supported.");e[a]=Um(n[a])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[Um(Cb(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Um(Cb(e))));{const e={};for(const t in this.metrics)e[t]=Um(Cb(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=nb(_b(e.optimizer_config));let n,a;if("string"===typeof e.loss)n=Gm(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Gm(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Gm(e.loss[t])}if(Array.isArray(e.metrics))a=e.metrics.map((e=>Gm(e)));else if(null!=e.metrics){a={};for(const t in e.metrics)a[t]=Gm(e.metrics[t])}this.compile({loss:n,metrics:a,optimizer:t})}async save(e,t){if("string"===typeof e){const t=Ms(e);if(0===t.length)throw new _m("Cannot find any save handlers for URL '".concat(e,"'"));if(t.length>1)throw new _m("Found more than one (".concat(t.length,") save handlers for ")+"URL '".concat(e,"'"));e=t[0]}if(null==e.save)throw new _m("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await gs(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v".concat(Lb),convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:r}=await gs(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=Ss([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Sb(this.userDefinedMetadata,this.name,e),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=n.data,a.weightSpecs=n.specs,e.save(a)}setUserDefinedMetadata(e){Sb(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}tv.className="Model",Lo(tv);class nv extends tv{}nv.className="Functional",Lo(nv);class av extends tv{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:sg("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new _m("Negative dimension size caused by adding layer "+"".concat(e.name," with input shape [")+"".concat(e.inboundNodes[0].inputTensors[0].shape,"]"))}add(e){const t=e instanceof av||e instanceof tv;let n;if(t){if(n=e,1!==n.outputs.length)throw new _m("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new _m("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new _m("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new _m("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Ey({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new _m("A layer added to a Sequential model must not already be "+"connected somewhere else. LayersModel received layer ".concat(e.name," ")+"which has ".concat(e.inboundNodes.length," pre-existing inbound ")+"connections.");if(1!==e.inboundNodes[0].outputTensors.length)throw new _m("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Sy(this.outputs[0])}this.inboundNodes=[],new ky({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:zm(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(fy(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new tv({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new Rm("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Rm("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new Rm("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Rm("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t){let n,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new _m("Legacy serialization format not supported yet.");n=t}else M(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),n=t.layers,delete t.layers,r=t;const s=new e(r);if(!(s instanceof av))throw new Om("Sequential.fromConfig called on non-Sequential input: ".concat(s));for(const o of n){const e=nb(o,void 0,a);a&&e.setFastWeightInitDuringBuild(!0),s.add(e)}return s}set stopTraining(e){if(null==this.model)throw new _m("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new _m("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}av.className="Sequential",Lo(av);class rv extends _o{getConfig(){return{}}}class sv extends rv{apply(e){return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==t)throw new Om("Support for alpha values other than 1 (".concat(t,") is not implemented ")+"yet.");return ac(e)}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}}sv.className="elu",Lo(sv);class ov extends rv{apply(e){return Yl(e)}}ov.className="selu",Lo(ov);class iv extends rv{apply(e){return Wl(e)}}iv.className="relu",Lo(iv);class uv extends rv{apply(e){return ls((()=>sl(6,Wl(e))))}}uv.className="relu6",Lo(uv);class cv extends rv{apply(e){return e}}cv.className="linear",Lo(cv);class lv extends rv{apply(e){return yu(e)}}lv.className="sigmoid",Lo(lv);class hv extends rv{apply(e){return function(e){return ls((()=>{const t=Do(.5,No(.2,e));return Au(t,0,1)}))}(e)}}hv.className="hardSigmoid",Lo(hv);class dv extends rv{apply(e){return Vc(e)}}dv.className="softplus",Lo(dv);class pv extends rv{apply(e){return function(e){return ls((()=>Co(e,Do(Go(e),1))))}(e)}}pv.className="softsign",Lo(pv);class fv extends rv{apply(e){return vu(e)}}fv.className="tanh",Lo(fv);class mv extends rv{apply(e){return sh(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}}mv.className="softmax",Lo(mv);class gv extends rv{apply(e){return Gc(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}}gv.className="logSoftmax",Lo(gv);class yv extends rv{apply(e){return ls((()=>ls((()=>{const t=Math.sqrt(2),n=No(.5,Do(1,sc(Co(e,t))));return No(e,n)}))))}}yv.className="gelu",Lo(yv);class bv extends rv{apply(e){return ls((()=>No(.5,No(e,Do(1,vu(No(So(Co(2,Math.PI)),Do(e,No(.044715,Wo(e,3))))))))))}}bv.className="gelu_new",Lo(bv);class vv extends rv{apply(e){return ls((()=>No(e,vu(Vc(e)))))}}vv.className="mish",Lo(vv);class xv extends rv{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return ls((()=>No(yu(No(e,t)),e)))}}function wv(e){return e.getClassName()}function Dv(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Km(e,Oo.getMap().classNameMap,t,"activation")}function kv(e){if(null==e){const e={className:"linear",config:{}};return Dv(e)}if("string"===typeof e){const t={};return t.className=e,t.config={},Dv(t)}return e instanceof rv?e:Dv(e)}function Cv(e){if(null!=e&&"object"!==typeof e)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an "+"object, but received: ".concat(e))}xv.className="swish",Lo(xv);class Nv extends _o{}class Sv extends Nv{constructor(e){super(),Cv(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return ls((()=>{let t=nl([1]);return this.hasL1&&(t=Do(t,gc(No(this.l1,Go(e))))),this.hasL2&&(t=Do(t,gc(No(this.l2,Bg(e))))),du(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Sv.className="L1L2",Lo(Sv);const Ev={l1l2:"L1L2"};function Iv(e){return jm(e)}function Tv(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Km(e,Oo.getMap().classNameMap,t,"regularizer")}function Fv(e){if(null==e)return null;if("string"===typeof e){return Tv({className:e in Ev?Ev[e]:e,config:{}})}return e instanceof Nv?e:Tv(e)}class Av extends Ny{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=py(e);let n=Wl(e);return null!=this.maxValue&&(n=Au(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Av.className="ReLU",Lo(Av);class Rv extends Ny{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=py(e);return _c(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Rv.className="LeakyReLU",Lo(Rv);class _v extends Ny{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=ly(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Fv(e.alphaRegularizer),this.alphaConstraint=Hy(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new _m("Expected sharedAxes to be a number or an array of numbers, "+"but got ".concat(e.sharedAxes));this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=fy(e)).slice(1);if(null!=this.sharedAxes)for(const a of this.sharedAxes)t[a-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let a=1;a<e.length;++a)n[a]=e[a];this.inputSpec=[new xy({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=py(e),Dl(e,this.alpha.read())}getConfig(){const e={alphaInitializer:cy(this.alphaInitializer),alphaRegularizer:Iv(this.alphaRegularizer),alphaConstraint:Uy(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}_v.className="PReLU",Lo(_v);class Ov extends Ny{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Om("Non-default alpha value (".concat(e.alpha,") is not supported by the ")+"ELU layer yet.");this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=py(e);return ac(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Ov.className="ELU",Lo(Ov);class Lv extends Ny{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=py(e);return No(n,vo(Ec(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Lv.className="ThresholdedReLU",Lo(Lv);class Mv extends Ny{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new mv).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return ls((()=>{let n=py(e);const a=t.mask;if(null!=a){const e=No(Vo(al(n.shape),vo(a,n.dtype)),Fo(-1e9));n=Do(n,e)}return this.axis instanceof Array?this.axis.length>1?xc(Vo(n,Hc(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function zv(e,t,n){if("number"===typeof e)return zm(e,t);if(e.length!==t)throw new _m("The ".concat(n," argument must be an integer or tuple of ").concat(t," integers.")+" Received: ".concat(e.length," elements."));for(let r=0;r<t;++r){const s=e[r];if((a=s)!==parseInt(a.toString(),10))throw new _m("The ".concat(n," argument must be an integer or tuple of ").concat(t)+" integers. Received: ".concat(JSON.stringify(e)," including a")+" non-integer number ".concat(s))}return e;var a}function Bv(e,t,n,a){if(null==e)return e;let r;return r="same"===n?e:e-(t+(t-1)*((arguments.length>4&&void 0!==arguments[4]?arguments[4]:1)-1))+1,Math.floor((r+a-1)/a)}function Pv(e,t,n,a){if(null==e)return null;if("valid"===a)e=e*t+kg([n-t,0]);else{if("same"!==a)throw new _m("Unsupport padding mode: ".concat(a,"."));e*=t}return e}function Wv(e,t){return ls((()=>(dg(t),"channelsFirst"===t?Mh(e,[0,2,3,1]):e)))}function Vv(e,t){return ls((()=>(dg(t),"channelsFirst"===t?Mh(e,[0,2,3,4,1]):e)))}function Uv(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return ls((()=>{if(null==s&&(s="channelsLast"),dg(s),3!==e.shape.length)throw new _m("The input of a conv1dWithBias operation should be 3, but is "+"".concat(e.shape.length," instead."));if(3!==t.shape.length)throw new _m("The kernel for a conv1dWithBias operation should be 3, but is "+"".concat(t.shape.length," instead"));if(null!=n&&1!==n.shape.length)throw new _m("The bias for a conv1dWithBias operation should be 1, but is "+"".concat(n.shape.length," instead"));if("channelsFirst"===s&&(e=Mh(e,[0,2,1])),"causal"===r)throw new Om("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=zu(e,t,a,"same"===r?"same":"valid","NWC",o);return null!=n&&(i=Wg(i,n)),i}))}function Gv(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0,i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return ls((()=>{if(null==s&&(s="channelsLast"),dg(s),3!==e.rank&&4!==e.rank)throw new _m("conv2dWithBiasActivation expects input to be of rank 3 or 4, "+"but received ".concat(e.rank,"."));if(3!==t.rank&&4!==t.rank)throw new _m("conv2dWithBiasActivation expects kernel to be of rank 3 or 4, "+"but received ".concat(e.rank,"."));let u=Wv(e,s);if("causal"===r)throw new Om("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Qh({x:u,filter:t,strides:a,pad:"same"===r?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),"channelsFirst"===s&&(u=Mh(u,[0,3,1,2])),u}))}function Hv(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0;return ls((()=>{if(null==s&&(s="channelsLast"),dg(s),4!==e.rank&&5!==e.rank)throw new _m("conv3dWithBias expects input to be of rank 4 or 5, but received "+"".concat(e.rank,"."));if(4!==t.rank&&5!==t.rank)throw new _m("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+"".concat(e.rank,"."));let i=Vv(e,s);if("causal"===r)throw new Om("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=Wu(i,t,a,"same"===r?"same":"valid","NDHWC",o),null!=n&&(i=Wg(i,n)),"channelsFirst"===s&&(i=Mh(i,[0,4,1,2,3])),i}))}Mv.className="Softmax",Lo(Mv);class jv extends Ny{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",jv.verifyArgs(t),this.rank=e,$m(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Om("Convolution layer for rank other than 1, 2, or 3 (".concat(this.rank,") is ")+"not implemented yet.");if(this.kernelSize=zv(t.kernelSize,e,"kernelSize"),this.strides=zv(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,pg(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,dg(this.dataFormat),this.activation=kv(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=ly(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Hy(t.biasConstraint),this.biasRegularizer=Fv(t.biasRegularizer),this.activityRegularizer=Fv(t.activityRegularizer),this.dilationRate=zv(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new _m("dilationRate must be a number or an array of a single number for 1D convolution, but received "+"".concat(JSON.stringify(this.dilationRate)));if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new _m("dilationRate must be a number or array of two numbers for 2D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new _m("dilationRate must be a number or array of three numbers for 3D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}static verifyArgs(e){if(Bm("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!Jm(e.kernelSize,"number",1,3))throw new _m("BaseConv expects config.kernelSize to be number or number[] with "+"length 1, 2, or 3, but received ".concat(JSON.stringify(e.kernelSize),"."))}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:wv(this.activation),useBias:this.useBias,biasInitializer:cy(this.biasInitializer),biasRegularizer:Iv(this.biasRegularizer),activityRegularizer:Iv(this.activityRegularizer),biasConstraint:Uy(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class qv extends jv{constructor(e,t){super(e,t),this.kernel=null,qv.verifyArgs(t),this.filters=t.filters,$m(this.filters,"filters"),this.kernelInitializer=ly(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Hy(t.kernelConstraint),this.kernelRegularizer=Fv(t.kernelRegularizer)}build(e){e=fy(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new _m("The channel dimension of the input should be defined. "+"Found ".concat(e[t]));const n=e[t],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return ls((()=>{let t;e=py(e);const n=null==this.bias?null:this.bias.read(),a=tg(this.activation.getClassName());if(null!=a&&2===this.rank)t=Gv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)t=Uv(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Gv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Om("convolutions greater than 3D are not implemented yet.");t=Hv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=fy(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){const e=Bv(n[r],this.kernelSize[r],this.padding,this.strides[r],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[r]);t.push(e)}let a=[e[0]];return"channelsLast"===this.dataFormat?(a=a.concat(t),a.push(this.filters)):(a.push(this.filters),a=a.concat(t)),a}getConfig(){const e={filters:this.filters,kernelInitializer:cy(this.kernelInitializer),kernelRegularizer:Iv(this.kernelRegularizer),kernelConstraint:Uy(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new _m("Convolution layer expected config.filters to be a 'number' > 0 "+"but got ".concat(JSON.stringify(e.filters)))}}class Kv extends qv{constructor(e){super(2,e),Kv.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!Jm(e.kernelSize,"number",1,2))throw new _m("Conv2D expects config.kernelSize to be number or number[] with "+"length 1 or 2, but received ".concat(JSON.stringify(e.kernelSize),"."))}}Kv.className="Conv2D",Lo(Kv);class Xv extends qv{constructor(e){super(3,e),Xv.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new _m("Conv3D expects config.kernelSize to be number or"+" [number, number, number], but received ".concat(JSON.stringify(e.kernelSize),"."))}}Xv.className="Conv3D",Lo(Xv);class Yv extends Kv{constructor(e){if(super(e),this.inputSpec=[new xy({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new _m("Conv2DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(e){if(4!==(e=fy(e)).length)throw new _m("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new _m("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new xy({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return ls((()=>{let t=py(e);if(4!==t.shape.length)throw new _m("Conv2DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(t.shape.length));const n=t.shape,a=n[0];let r,s;"channelsFirst"===this.dataFormat?(r=2,s=3):(r=1,s=2);const o=n[r],i=n[s],u=this.kernelSize[0],c=this.kernelSize[1],l=this.strides[0],h=this.strides[1],d=[a,Pv(o,l,u,this.padding),Pv(i,h,c,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Mh(t,[0,2,3,1]));let p=Pu(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Mh(p,[0,3,1,2])),null!=this.bias&&(p=Wg(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=fy(e)).slice();let n,a,r;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3):(n=3,a=1,r=2);const s=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[a]=Pv(t[a],i,s,this.padding),t[r]=Pv(t[r],u,o,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Yv.className="Conv2DTranspose",Lo(Yv);class Qv extends Xv{constructor(e){if(super(e),this.inputSpec=[new xy({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new _m("Conv3DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(e){if(5!==(e=fy(e)).length)throw new _m("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new _m("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new xy({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return ls((()=>{let t=py(e);if(5!==t.shape.length)throw new _m("Conv3DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(t.shape.length));const n=t.shape,a=n[0];let r,s,o;"channelsFirst"===this.dataFormat?(o=2,r=3,s=4):(o=1,r=2,s=3);const i=n[o],u=n[r],c=n[s],l=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[a,Pv(i,p,l,this.padding),Pv(u,f,h,this.padding),Pv(c,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Mh(t,[0,2,3,4,1]));let y=Uu(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Mh(y,[0,4,1,2,3])),null!==this.bias&&(y=Wg(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=fy(e)).slice();let n,a,r,s;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3,s=4):(n=4,a=1,r=2,s=3);const o=this.kernelSize[0],i=this.kernelSize[1],u=this.kernelSize[2],c=this.strides[0],l=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[a]=Pv(t[a],c,o,this.padding),t[r]=Pv(t[r],l,i,this.padding),t[s]=Pv(t[s],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Qv.className="Conv3DTranspose",Lo(Qv);class Zv extends qv{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new _m("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new _m("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new _m("SeparableConv".concat(this.rank,"D supports only padding modes: ")+"'same' and 'valid', but received ".concat(JSON.stringify(t.padding)));this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=ly(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Fv(t.depthwiseRegularizer),this.depthwiseConstraint=Hy(t.depthwiseConstraint),this.pointwiseInitializer=ly(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Fv(t.pointwiseRegularizer),this.pointwiseConstraint=Hy(t.pointwiseConstraint)}build(e){if((e=fy(e)).length<this.rank+2)throw new _m("Inputs to SeparableConv".concat(this.rank,"D should have rank ")+"".concat(this.rank+2,", but received input shape: ")+"".concat(JSON.stringify(e)));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new _m("The channel dimension of the inputs should be defined, "+"but found ".concat(JSON.stringify(e[t])));const n=e[t],a=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let o=0;o<this.rank;++o)r.push(1);r.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new xy({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return ls((()=>{let t;if(e=py(e),1===this.rank)throw new Om("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Mh(e,[0,2,3,1])),t=Ql(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Wg(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Mh(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=cy(this.depthwiseInitializer),e.pointwiseInitializer=cy(this.pointwiseInitializer),e.depthwiseRegularizer=Iv(this.depthwiseRegularizer),e.pointwiseRegularizer=Iv(this.pointwiseRegularizer),e.depthwiseConstraint=Uy(this.depthwiseConstraint),e.pointwiseConstraint=Uy(this.pointwiseConstraint),e}}Zv.className="SeparableConv";class Jv extends Zv{constructor(e){super(2,e)}}Jv.className="SeparableConv2D",Lo(Jv);class $v extends qv{constructor(e){super(1,e),$v.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!Jm(e.kernelSize,"number",1,1))throw new _m("Conv1D expects config.kernelSize to be number or number[] with "+"length 1, but received ".concat(JSON.stringify(e.kernelSize),"."))}}$v.className="Conv1D",Lo($v);class ex extends Ny{constructor(e){super(e),"number"===typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return ls((()=>{if(e=py(e),"channelsLast"===this.dataFormat){const t=Ag(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Ag(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Ag(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Ag(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}ex.className="Cropping2D",Lo(ex);class tx extends Ny{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,dg(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Zm(ig,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return ls((()=>{let t=py(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Mh(t,[0,2,3,1]);const e=this.size[0]*n[2],a=this.size[1]*n[3],r="nearest"===this.interpolation?ep.resizeNearestNeighbor(t,[e,a]):ep.resizeBilinear(t,[e,a]);return Mh(r,[0,3,1,2])}{const e=this.size[0]*n[1],a=this.size[1]*n[2];return"nearest"===this.interpolation?ep.resizeNearestNeighbor(t,[e,a]):ep.resizeBilinear(t,[e,a])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}tx.className="UpSampling2D",Lo(tx);class nx extends jv{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=ly(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Hy(e.depthwiseConstraint),this.depthwiseRegularizer=Fv(e.depthwiseRegularizer)}build(e){if((e=fy(e)).length<4)throw new _m("Inputs to DepthwiseConv2D should have rank 4. "+"Received input shape: ".concat(JSON.stringify(e),"."));const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new _m("The channel dimension of the inputs to DepthwiseConv2D should "+"be defined, but is not (".concat(e[t],")."));const n=e[t],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ls((()=>{let t=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0;return ls((()=>{null==r&&(r="channelsLast"),dg(r);let o=Wv(e,r);if(4!==e.rank)throw new _m("Input for depthwiseConv2d is required to be 4-D, but is instead "+"".concat(e.rank,"-D"));if(4!==t.rank)throw new _m("depthwiseKernel is required to be 4-D, but is instead "+"".concat(t.rank,"-D"));return o=Yu(o,t,n,"same"===a?"same":"valid","NHWC",s),"channelsFirst"===r&&(o=Mh(o,[0,3,1,2])),o}))}(e=py(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Wg(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=fy(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Bv(t,this.kernelSize[0],this.padding,this.strides[0]),s=Bv(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],a,r,s]:[e[0],r,s,a]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=cy(this.depthwiseInitializer),e.depthwiseRegularizer=Iv(this.depthwiseRegularizer),e.depthwiseConstraint=Uy(this.depthwiseRegularizer),e}}function ax(e,t,n,a){if(Array.isArray(e)){if(null!=t||null!=n)throw new _m("When inputs is an array, neither initialState or constants should be provided");null!=a&&(n=e.slice(e.length-a,e.length),e=e.slice(0,e.length-a)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function rx(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return ls((()=>{const u=t.shape.length;if(u<3)throw new _m("Input should be at least 3D, but is ".concat(u,"D."));const c=[1,0].concat(Cg(2,u));if(t=Mh(t,c),null!=s)throw new Om("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&(r=vo(vo(r,"bool"),"float32"),r.rank===u-1&&(r=wc(r,-1)),r=Mh(r,c)),a&&(t=Ul(t,0),null!=r&&(r=Ul(r,0)));const l=[];let h,d=n;const p=t.shape[0],f=Fh(t);let m,g;null!=r&&(m=Fh(r));for(let t=0;t<p;++t){const n=f[t],a=ls((()=>e(n,d)));if(null==r)h=a[0],d=a[1];else{const e=ls((()=>{const e=m[t],n=Vo(pl(e),e);return{output:Do(No(a[0],e),No(d[0],n)),newStates:d.map(((t,r)=>Do(No(a[1][r],e),No(t,n))))}}));h=e.output,d=e.newStates}i&&l.push(h)}if(i){g=ph(l,1)}return[h,g,d]}))}nx.className="DepthwiseConv2D",Lo(nx);class sx extends Ny{constructor(e){let t;if(super(e),null==e.cell)throw new _m("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new px({cells:e.cell}):e.cell,null==t.stateSize)throw new _m("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new xy({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return Cg(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){hy(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let a;if(a=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const a of t)n.push([e[0],a]);return[a].concat(n)}return a}computeMask(e,t){return ls((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Om("Constants support is not implemented in RNN yet.");hy(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new xy({shape:[t,null,...n]});const a=[e[0]].concat(e.slice(2));let r;if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!W(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new _m("An initialState was passed that is not compatible with "+"cell.stateSize. Received stateSpec=".concat(this.stateSpec,"; ")+"However cell.stateSize is ".concat(this.cell.stateSize))}else this.stateSpec=r.map((e=>new xy({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];ls((()=>{if(!this.stateful)throw new Am("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new _m("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>nl([n,e]))):this.states_=[nl([n,this.cell.stateSize])];else if(null==e)hs(this.states_),null!=this.keptStates&&(hs(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>nl([n,e]))):this.states_[0]=nl([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new _m("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(e.length," state value(s). Input ")+"received: ".concat(e));!0===t?this.keptStates.push(this.states_.slice()):hs(this.states_);for(let t=0;t<this.states_.length;++t){const a=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,r];if(!W(a.shape,s))throw new _m("State ".concat(t," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(s,", received shape=").concat(a.shape));this.states_[t]=a}}this.states_=this.states_.map((e=>ds(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=ax(e,n,a,this.numConstants);e=r.inputs,n=r.initialState,a=r.constants;let s=[],o=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new xy({shape:e.shape}));o=o.concat(this.stateSpec)}null!=a&&(t.constants=a,s=s.concat(a),this.numConstants=a.length);if(s[0]instanceof wy){const n=[e].concat(s),a=this.inputSpec.concat(o),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,t);return this.inputSpec=r,i}return super.apply(e,t)}call(e,t){return ls((()=>{const n=null==t?null:t.mask,a=null==t?null:t.training;let r=null==t?null:t.initialState;e=py(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==s)throw new _m("RNN Layer has ".concat(s," state(s) but was passed ")+"".concat(r.length," initial state(s)."));this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:a},i=rx(((e,t)=>{const n=this.cell.call([e].concat(t),o);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),u=i[0],c=i[1],l=i[2];this.stateful&&this.resetStates(l,a);const h=this.returnSequences?c:u;return this.returnState?[h].concat(l):h}))}getInitialState(e){return ls((()=>{let t=nl(e.shape);return t=gc(t,[1,2]),t=Ig(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Og(t,[1,e]):t)):this.cell.stateSize>1?[Og(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===sx.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=nb(t.cell,n);return new e(Object.assign(t,{cell:a}))}}sx.className="RNN",Lo(sx);class ox extends Ny{}class ix extends ox{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,$m(this.units,"units"),this.activation=kv(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ly(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ly(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ly(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Fv(e.kernelRegularizer),this.recurrentRegularizer=Fv(e.recurrentRegularizer),this.biasRegularizer=Fv(e.biasRegularizer),this.kernelConstraint=Hy(e.kernelConstraint),this.recurrentConstraint=Hy(e.recurrentConstraint),this.biasConstraint=Hy(e.biasConstraint),this.dropout=Dg([1,kg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Dg([1,kg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=fy(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ls((()=>{if(2!==e.length)throw new _m("SimpleRNNCell expects 2 input Tensors, got ".concat(e.length,"."));let n=e[1];e=e[0];const a=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=fx({ones:()=>pl(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=fx({ones:()=>pl(n),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,o=this.recurrentDropoutMask;r=Mg(null!=s?No(e,s):e,this.kernel.read()),null!=this.bias&&(r=Wg(r,this.bias.read())),null!=o&&(n=No(n,o));let i=Do(r,Mg(n,this.recurrentKernel.read()));return null!=this.activation&&(i=this.activation.apply(i)),[i,i]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:wv(this.activation),useBias:this.useBias,kernelInitializer:cy(this.kernelInitializer),recurrentInitializer:cy(this.recurrentInitializer),biasInitializer:cy(this.biasInitializer),kernelRegularizer:Iv(this.kernelRegularizer),recurrentRegularizer:Iv(this.recurrentRegularizer),biasRegularizer:Iv(this.biasRegularizer),activityRegularizer:Iv(this.activityRegularizer),kernelConstraint:Uy(this.kernelConstraint),recurrentConstraint:Uy(this.recurrentConstraint),biasConstraint:Uy(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}ix.className="SimpleRNNCell",Lo(ix);class ux extends sx{constructor(e){e.cell=new ix(e),super(e)}call(e,t){return ls((()=>{null!=this.cell.dropoutMask&&(hs(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(hs(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return new e(t)}}ux.className="SimpleRNN",Lo(ux);class cx extends ox{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new _m("GRUCell does not support reset_after parameter set to true.");this.units=e.units,$m(this.units,"units"),this.activation=kv(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=kv(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ly(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ly(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ly(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Fv(e.kernelRegularizer),this.recurrentRegularizer=Fv(e.recurrentRegularizer),this.biasRegularizer=Fv(e.biasRegularizer),this.kernelConstraint=Hy(e.kernelConstraint),this.recurrentConstraint=Hy(e.recurrentConstraint),this.biasConstraint=Hy(e.biasConstraint),this.dropout=Dg([1,kg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Dg([1,kg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=fy(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ls((()=>{if(2!==e.length)throw new _m("GRUCell expects 2 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));const n=null!=t.training&&t.training;let a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=fx({ones:()=>pl(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=fx({ones:()=>pl(a),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,s=this.recurrentDropoutMask;let o,i,u;0<this.dropout&&this.dropout<1&&(e=No(e,r[0]));let c=Mg(e,this.kernel.read());this.useBias&&(c=Wg(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=No(a,s[0]));const l=this.recurrentKernel.read(),[h,d]=ch(l,[2*this.units,this.units],l.rank-1),p=Mg(a,h),[f,m,g]=ch(c,3,c.rank-1),[y,b]=ch(p,2,p.rank-1);o=this.recurrentActivation.apply(Do(f,y)),i=this.recurrentActivation.apply(Do(m,b));const v=Mg(No(i,a),d);u=this.activation.apply(Do(g,v));const x=Do(No(o,a),No(Do(1,Wc(o)),u));return[x,x]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:wv(this.activation),recurrentActivation:wv(this.recurrentActivation),useBias:this.useBias,kernelInitializer:cy(this.kernelInitializer),recurrentInitializer:cy(this.recurrentInitializer),biasInitializer:cy(this.biasInitializer),kernelRegularizer:Iv(this.kernelRegularizer),recurrentRegularizer:Iv(this.recurrentRegularizer),biasRegularizer:Iv(this.biasRegularizer),activityRegularizer:Iv(this.activityRegularizer),kernelConstraint:Uy(this.kernelConstraint),recurrentConstraint:Uy(this.recurrentConstraint),biasConstraint:Uy(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}cx.className="GRUCell",Lo(cx);class lx extends sx{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new cx(e),super(e)}call(e,t){return ls((()=>{null!=this.cell.dropoutMask&&(hs(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(hs(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}lx.className="GRU",Lo(lx);class hx extends ox{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,$m(this.units,"units"),this.activation=kv(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=kv(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ly(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ly(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ly(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Fv(e.kernelRegularizer),this.recurrentRegularizer=Fv(e.recurrentRegularizer),this.biasRegularizer=Fv(e.biasRegularizer),this.kernelConstraint=Hy(e.kernelConstraint),this.recurrentConstraint=Hy(e.recurrentConstraint),this.biasConstraint=Hy(e.biasConstraint),this.dropout=Dg([1,kg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Dg([1,kg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=fy(e))[e.length-1];let a;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;a=new((t=class extends jg{apply(t,a){const r=e.apply([n]),s=(new Kg).apply([n]),o=e.apply([2*n]);return _g(_g(r,s),o)}}).className="CustomInit",t)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return ls((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new _m("LSTMCell expects 3 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));let a=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=fx({ones:()=>pl(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=fx({ones:()=>pl(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,o=this.recurrentDropoutMask;let i,u,c,l;0<this.dropout&&this.dropout<1&&(e=No(e,s[0]));let h=Mg(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=No(a,o[0])),h=Do(h,Mg(a,this.recurrentKernel.read())),this.useBias&&(h=Wg(h,this.bias.read()));const[d,p,f,m]=ch(h,4,h.rank-1);i=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(p),c=Do(No(u,r),No(i,this.activation.apply(f))),l=this.recurrentActivation.apply(m);const g=No(l,this.activation.apply(c));return[g,g,c]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:wv(this.activation),recurrentActivation:wv(this.recurrentActivation),useBias:this.useBias,kernelInitializer:cy(this.kernelInitializer),recurrentInitializer:cy(this.recurrentInitializer),biasInitializer:cy(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Iv(this.kernelRegularizer),recurrentRegularizer:Iv(this.recurrentRegularizer),biasRegularizer:Iv(this.biasRegularizer),activityRegularizer:Iv(this.activityRegularizer),kernelConstraint:Uy(this.kernelConstraint),recurrentConstraint:Uy(this.recurrentConstraint),biasConstraint:Uy(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}hx.className="LSTMCell",Lo(hx);class dx extends sx{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new hx(e),super(e)}call(e,t){return ls((()=>{null!=this.cell.dropoutMask&&(hs(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(hs(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}dx.className="LSTM",Lo(dx);class px extends ox{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return ls((()=>{let n=e.slice(1);const a=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?a.push(n.splice(0,e.stateSize.length)):a.push(n.splice(0,1));a.reverse();const r=[];let s;for(let o=0;o<this.cells.length;++o){const i=this.cells[o];n=a[o],s=0===o?[e[0]].concat(n):[s[0]].concat(n),s=i.call(s,t),r.push(s.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;hy(e)&&(e=e[0]),this.cells.forEach(((n,a)=>{gg("RNNCell_".concat(a),(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=[];for(const r of t.cells)a.push(nb(r,n));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return by(e)}setWeights(e){const t=[];for(const n of this.cells){const a=n.weights.length,r=e.splice(a);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}vy(t)}}function fx(e){const{ones:t,rate:n,training:a=!1,count:r=1,dropoutFunc:s}=e,o=()=>null!=s?s(t(),n):Vg(t(),n),i=()=>Ug(o,t,a);if(!r||r<=1)return ds(i().clone());return Array(r).fill(void 0).map(i).map((e=>ds(e.clone())))}px.className="StackedRNNCells",Lo(px);var mx=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(n[a[r]]=e[a[r]])}return n};class gx extends sx{constructor(e){if(e.unroll)throw new Om("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Om("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new xy({ndim:5})]}call(e,t){return ls((()=>{if(null!=this.cell.dropoutMask&&(hs(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(hs(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new _m("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return ls((()=>{const{stateSize:t}=this.cell,n=e.shape,a=this.computeSingleOutputShape(n),r=nl([a[0],...a.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]}))}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];ls((()=>{if(!this.stateful)throw new Am("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)];if(null==n[0])throw new _m("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>nl(r))):this.states_=[nl(r)];else if(null==e)hs(this.states_),null!=this.keptStates&&(hs(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>nl(r))):this.states_[0]=nl(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new _m("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(e.length," state value(s). Input ")+"received: ".concat(e));t?this.keptStates.push(this.states_.slice()):hs(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],a=r;if(!W(n.shape,a))throw new _m("State ".concat(t," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(a,", received shape=").concat(n.shape));this.states_[t]=n}}this.states_=this.states_.map((e=>ds(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:a,padding:r,strides:s,dilationRate:o}=this.cell,i="channelsFirst"===t,u=e[i?3:2],c=e[i?4:3],l=Bv(u,a[0],r,s[0],o[0]),h=Bv(c,a[1],r,s[1],o[1]);return[...e.slice(0,2),...i?[n,l,h]:[l,h,n]]}}gx.className="ConvRNN2D";class yx extends hx{constructor(e){const{filters:t,kernelSize:n,strides:a,padding:r,dataFormat:s,dilationRate:o}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,$m(this.filters,"filters"),this.kernelSize=zv(n,2,"kernelSize"),this.kernelSize.forEach((e=>$m(e,"kernelSize"))),this.strides=zv(a||1,2,"strides"),this.strides.forEach((e=>$m(e,"strides"))),this.padding=r||"valid",pg(this.padding),this.dataFormat=s||"channelsLast",dg(this.dataFormat),this.dilationRate=zv(o||1,2,"dilationRate"),this.dilationRate.forEach((e=>$m(e,"dilationRate")))}build(e){var t;e=fy(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new _m("The channel dimension of the input should be defined. "+"Found ".concat(e[n]));const a=e[n],r=this.kernelSize.concat([a,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,a=this.filters;e=new((t=class extends jg{apply(e,t){return Rg([n.apply([a]),al([a]),n.apply([2*a])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return ls((()=>{if(3!==e.length)throw new _m("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));const n=t.training||!1,a=e[0],r=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=fx({ones:()=>pl(a),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=(e,t,n)=>t&&t[n]?No(t[n],e):e;let u=i(a,o,0),c=i(a,o,1),l=i(a,o,2),h=i(a,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=fx({ones:()=>pl(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=i(r,d,0),f=i(r,d,1),m=i(r,d,2),g=i(r,d,3);const[y,b,v,x]=ch(this.kernel.read(),4,3),[w,D,k,C]=this.useBias?ch(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,w,this.padding),c=this.inputConv(c,b,D,this.padding),l=this.inputConv(l,v,k,this.padding),h=this.inputConv(h,x,C,this.padding);const[N,S,E,I]=ch(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,N),f=this.recurrentConv(f,S),m=this.recurrentConv(m,E),g=this.recurrentConv(g,I);const T=this.recurrentActivation.apply(Do(u,p)),F=this.recurrentActivation.apply(Do(c,f)),A=Do(No(F,s),No(T,this.activation.apply(Do(l,m)))),R=No(this.recurrentActivation.apply(Do(h,g)),this.activation.apply(A));return[R,R,A]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=mx(e,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),a)}inputConv(e,t,n,a){const r=Mu(e,t,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Wg(r,n,this.dataFormat):r}recurrentConv(e,t){return Mu(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}yx.className="ConvLSTM2DCell",Lo(yx);class bx extends gx{constructor(e){const t=new yx(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}bx.className="ConvLSTM2D",Lo(bx);class vx extends Ny{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let a=0;a<this.noiseShape.length;++a)n.push(null==this.noiseShape[a]?t[a]:this.noiseShape[a]);return n}call(e,t){return ls((()=>{this.invokeCallHook(e,t);const n=py(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,a=this.getNoiseShape(n);return Ug((()=>Vg(n,this.rate,a,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}vx.className="Dropout",Lo(vx);class xx extends vx{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}xx.className="SpatialDropout1D",Lo(xx);class wx extends Ny{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,$m(this.units,"units"),this.activation=kv(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=ly(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=ly(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Hy(e.kernelConstraint),this.biasConstraint=Hy(e.biasConstraint),this.kernelRegularizer=Fv(e.kernelRegularizer),this.biasRegularizer=Fv(e.biasRegularizer),this.activityRegularizer=Fv(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=fy(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=fy(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return ls((()=>{this.invokeCallHook(e,t);const n=py(e),a=tg(this.activation.getClassName());let r;return null!=a?r=Mg(n,this.kernel.read(),a,this.bias?this.bias.read():null):(r=Mg(n,this.kernel.read()),null!=this.bias&&(r=Wg(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:wv(this.activation),useBias:this.useBias,kernelInitializer:cy(this.kernelInitializer),biasInitializer:cy(this.biasInitializer),kernelRegularizer:Iv(this.kernelRegularizer),biasRegularizer:Iv(this.biasRegularizer),activityRegularizer:Iv(this.activityRegularizer),kernelConstraint:Uy(this.kernelConstraint),biasConstraint:Uy(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}wx.className="Dense",Lo(wx);class Dx extends Ny{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=fy(e);for(const t of e.slice(1))if(null==t)throw new _m('The shape of the input to "Flatten" is not fully defined '+"(got ".concat(e.slice(1),"). Make sure to pass a complete ")+'"input_shape" or "batch_input_shape" argument to the first layer in your model.');return[e[0],wg(e,1)]}call(e,t){return ls((()=>{this.invokeCallHook(e,t);let n=py(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Mh(n,e)}return function(e){if(e.rank<=1)throw new _m("batchFlatten requires a minimum rank of 2. Got rank: ".concat(e.rank,"."));const t=[e.shape[0],wg(e.shape,1)];return du(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Dx.className="Flatten",Lo(Dx);class kx extends Ny{constructor(e){super(e),this.supportsMasking=!0,this.activation=kv(e.activation)}call(e,t){return ls((()=>{this.invokeCallHook(e,t);const n=py(e);return this.activation.apply(n)}))}getConfig(){const e={activation:wv(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}kx.className="Activation",Lo(kx);class Cx extends Ny{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return ls((()=>{return e=py(e),t=e,n=this.n,ls((()=>{if(2!==t.shape.length)throw new _m("repeat() expects a rank-2 tensor, but received a "+"rank-".concat(t.shape.length," tensor."));return Og(Ig(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Cx.className="RepeatVector",Lo(Cx);class Nx extends Ny{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",a=t.slice();let r=1,s=null;for(let i=0;i<a.length;++i){const e=a[i];if(this.isUnknown(e)){if(null!==s)throw new _m("Can only specifiy one unknown dimension.");s=i}else r*=e}const o=wg(e);if(null!==s){if(0===r||o%r!==0)throw new _m(n);a[s]=o/r}else if(o!==r)throw new _m(n);return a}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return ls((()=>{this.invokeCallHook(e,t);const n=py(e),a=n.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return du(n,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Nx.className="Reshape",Lo(Nx);class Sx extends Ny{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+"".concat(e.dims," instead."));const t=Cg(1,e.dims.length+1);if(!W(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new xy({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=fy(e)).slice();return this.dims.forEach(((n,a)=>{t[a+1]=e[n]})),t}call(e,t){return Mh(py(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Sx.className="Permute",Lo(Sx);class Ex extends Ny{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=py(e);return Gi(hl(n,this.maskValue),-1)}call(e,t){return ls((()=>{this.invokeCallHook(e,t);const n=py(e),a=Gi(hl(n,this.maskValue),-1,!0);return No(n,vo(a,n.dtype))}))}}Ex.className="Masking",Lo(Ex);class Ix extends Ny{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Vm(e.inputLength))}this.inputDim=e.inputDim,$m(this.inputDim,"inputDim"),this.outputDim=e.outputDim,$m(this.outputDim,"outputDim"),this.embeddingsInitializer=ly(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Fv(e.embeddingsRegularizer),this.activityRegularizer=Fv(e.activityRegularizer),this.embeddingsConstraint=Hy(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return ls((()=>this.maskZero?(e=py(e),hl(e,Io(e))):null))}computeOutputShape(e){if(e=fy(e),null==this.inputLength)return[...e,this.outputDim];const t=Vm(this.inputLength);if(t.length!==e.length-1)throw new _m('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(e));{let n=0;for(let a=0;a<t.length;++a){const r=t[a],s=e[a+1];if(null!=r&&null!=s&&r!==s)throw new _m('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(e));null==r&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return ls((()=>{this.invokeCallHook(e,t);let n=py(e);"int32"!==n.dtype&&(n=Eg(n,"int32"));const a=zg(this.embeddings.read(),du(n,[n.size]));return du(a,fy(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:cy(this.embeddingsInitializer),embeddingsRegularizer:Iv(this.embeddingsRegularizer),activityRegularizer:Iv(this.activityRegularizer),embeddingsConstraint:Uy(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Ix.className="Embedding",Lo(Ix);class Tx extends Ny{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Om}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let a=0;a<t.length;++a){const r=e[e.length-t.length+a],s=t[a];if(null==r||null==s||r<0||s<0)n.push(null);else if(1===r)n.push(s);else if(1===s)n.push(r);else{if(r!==s)throw new _m("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[fy(e)]),e.length<2)throw new _m("A merge layer should be called on an Array of at least 2 inputs."+" Got ".concat(e.length," input(s)."));let t=[];for(const r of e)null!=r&&null!==r[0]&&t.push(r[0]);if(t=Ym(t),t.length>1)throw new _m("Can not merge tensors with different batch sizes. "+"Got tensors with shapes: ".concat(JSON.stringify(e),"."));let n=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const t=null==e[r]?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const a=e.map((e=>e.length));-1===e.indexOf(null)&&1===Ym(a).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return ls((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const a=kg(n);for(let n of e){const e=n.rank;for(let t=0;t<a-e;++t)n=Ig(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const s of e){const e=s.rank;if(null==e){const e=s.shape,a=e[0],r=e.slice(1).concat([a]);let o=du(s,[a].concat(wg(e.slice(1))));o=Mh(o,[1,0]),o=du(o,r),t.push(o),n=!0}else if(e>1){const a=Cg(1,e).concat([0]);t.push(Mh(s,a)),n=!0}else t.push(s)}let a=this.mergeFunction(t);const r=a.rank;if(n)if(null==r){const e=a.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));a=du(Mh(du(a,[-1,t]),[1,0]),n)}else if(r>1){const e=[r-1].concat(Cg(0,r-1));a=Mh(a,e)}return a}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){const n=null==e[a]?null:e[a].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const a of e)null!=a&&null!==a[0]&&n.push(a[0]);return n=Ym(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return ls((()=>{if(null==t)return null;if(!Array.isArray(t))throw new _m("`mask` should be an Array");if(!Array.isArray(e))throw new _m("`inputs` should be an Array");if(t.length!==e.length)throw new _m("The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths "+"(".concat(e.length," vs ").concat(t.length,")"));if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:wc(e,0))))[0];for(let e=1;e<t.length-1;++e)n=jc(n,t[e]);return n}))}}class Fx extends Tx{constructor(e){super(e)}mergeFunction(e){return ls((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Do(t,e[n]);return t}))}}Fx.className="Add",Lo(Fx);class Ax extends Tx{constructor(e){super(e)}mergeFunction(e){return ls((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=No(t,e[n]);return t}))}}Ax.className="Multiply",Lo(Ax);class Rx extends Tx{constructor(e){super(e)}mergeFunction(e){return ls((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Do(t,e[n]);return No(1/e.length,t)}))}}Rx.className="Average",Lo(Rx);class _x extends Tx{constructor(e){super(e)}mergeFunction(e){return ls((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ko(t,e[n]);return t}))}}_x.className="Maximum",Lo(_x);class Ox extends Tx{constructor(e){super(e)}mergeFunction(e){return ls((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=sl(t,e[n]);return t}))}}Ox.className="Minimum",Lo(Ox);class Lx extends Tx{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new _m("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const a of e)if(null!=a){t=!1;break}if(t)return;const n=[];for(let a=0;a<e.length;++a){const t=e[a].slice();t.splice(this.axis,1);let r=!1;for(const e of n)if(W(e,t)){r=!0;break}r||n.push(t)}if(n.length>1)throw new _m("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return ls((()=>Rg(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new _m("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(const r of t.slice(1)){if(null==n[a]||null==r[a]){n[a]=null;break}n[a]+=r[a]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new _m("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new _m("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new _m("Mismatch in the length of mask (".concat(t.length,") ")+"and the legnth of inputs (".concat(e.length,")"));return ls((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const a=[];for(let s=0;s<e.length;++s)null==t[s]?a.push(vo(pl(e[s]),"bool")):t[s].rank<e[s].rank?a.push(wc(t[s],-1)):a.push(t[s]);const r=mu(a,this.axis);return Ui(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Mx(e,t){for(;e<0;)e+=t;return e}Lx.className="Concatenate",Lo(Lx);class zx extends Tx{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){M(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Om("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);if(t[a[0]]!==n[a[1]])throw new _m("Dimension incompatibility: "+"".concat(t[a[0]]," !== ").concat(n[a[1]]))}mergeFunction(e){if(2!==e.length)throw new _m("A `Dot` layer must be called on exactly 2 inputs, "+"but received ".concat(e.length," input(s)."));let t,n=e[0],a=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Mx(t,e[n].shape.length))):[Mx(this.axes,n.shape.length),Mx(this.axes,a.shape.length)],this.normalize&&(n=ab(n,t[0]),a=ab(a,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Om("batchDot is not implemented for tensors of 4D or higher rank yet");if(M(e.shape.length>=2,(()=>"batchDot requires the rank of x to be >= 2, "+"but got ".concat(e.shape.length))),M(e.shape.length>=2,(()=>"batchDot requires the rank of y to be >= 2, "+"but got ".concat(t.shape.length))),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Om("batchDot is not implemented for complex64-type Tensors yet.");const a=e.shape.length,r=t.shape.length;null==n&&(n=[a-1,r-2]);const s=n;return ls((()=>{let n,o;if(a>r){n=a-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=du(t,t.shape.concat(e))}else if(r>a){n=r-a;const t=[];for(let e=0;e<n;++e)t.push(1);e=du(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)o=s[0]===s[1]?gc(No(e,t),s[0]):gc(No(Mh(e,[1,0]),t),s[1]);else{const n=s[0]!==e.shape.length-1,a=s[1]===t.shape.length-1;o=gu(e,t,n,a)}if(n>0){let e;e=a>r?a+r-3:a-1;const t=[];for(let a=e;a<e+n;++a)t.push(a);o=dh(o,t)}return 1===o.shape.length&&(o=wc(o,1)),o}))}(n,a,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Mx(this.axes,e.length),Mx(this.axes,t.length)],n}computeOutputShape(e){M(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Om("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);t.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}zx.className="Dot",Lo(zx);class Bx extends Ny{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return ls((()=>{this.invokeCallHook(e,t);const n=py(e);return Ug((()=>Do(Lg(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}Bx.className="GaussianNoise",Lo(Bx);class Px extends Ny{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ls((()=>{this.invokeCallHook(e,t);const n=py(e);if(this.rate>0&&this.rate<1){return Ug((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return No(n,Lg(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}Px.className="GaussianDropout",Lo(Px);class Wx extends Ny{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||py(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ls((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),a=()=>{const t=py(e),a=-1.7580993408473766;let r=Ic(Ll(n),this.rate);r=Eg(r,"float32");const s=((1-this.rate)*(1+this.rate*a**2))**-.5,o=-s*a*this.rate,i=Do(No(t,r),No(Do(r,-1),a));return Do(No(i,s),o)};return Ug(a,(()=>py(e)),t.training||!1)}return e}))}}function Vx(e,t,n,a,r){let s,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===e.rank)s=ku(e,t,n,a,r,o);else if(3===e.rank)s=Cu(e,t,n,a,r,o);else{if(4!==e.rank)throw new Om("batchNormalization is not implemented for array of rank ".concat(e.rank," ")+"yet");s=Nu(e,t,n,a,r,o)}return s}function Ux(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return W(a.slice().sort(),Cg(0,e.rank-1))?function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return ls((()=>{const s=ul(e,a),o=s.mean,i=s.variance;return[Vx(e,o,i,n,t,r),o,i]}))}(e,t,n,a,r):function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return ls((()=>{const s=ul(e,a),o=s.mean,i=s.variance,u=[];for(const t of Cg(0,e.rank))-1!==a.indexOf(t)?u.push(1):u.push(e.shape[t]);const c=du(o,u),l=du(i,u),h=null==t?null:du(t,u),d=null==n?null:du(n,u);return[Vx(e,c,l,d,h,r),o,i]}))}(e,t,n,a,r)}Wx.className="AlphaDropout",Lo(Wx);class Gx extends Ny{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=ly(e.betaInitializer||"zeros"),this.gammaInitializer=ly(e.gammaInitializer||"ones"),this.movingMeanInitializer=ly(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=ly(e.movingVarianceInitializer||"ones"),this.betaConstraint=Hy(e.betaConstraint),this.gammaConstraint=Hy(e.gammaConstraint),this.betaRegularizer=Fv(e.betaRegularizer),this.gammaRegularizer=Fv(e.gammaRegularizer)}build(e){e=fy(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new _m("Axis ".concat(t," of input tensor should have a defined dimension but ")+"the layer received an input with shape "+"".concat(JSON.stringify(e),"."));this.inputSpec=[new xy({ndim:e.length,axes:{[t]:n}})];const a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return ls((()=>{const n=null!=t.training&&t.training,a=py(e),r=a.shape,s=r.length,o=Cg(0,s),i=this.axis>=0?this.axis:this.axis+s;o.splice(i,1);const u=zm(1,s);u[i]=r[i];const c=o.slice();c.sort();const l=!W(c,Cg(0,s).slice(0,s-1));if(!n)return(()=>{if(l){const e=du(this.movingMean.read(),u),t=du(this.movingVariance.read(),u),n=this.center?du(this.beta.read(),u):null,r=this.scale?du(this.gamma.read(),u):null;return Vx(a,e,t,n,r,this.epsilon)}return Vx(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=Ux(a,this.gamma.read(),this.beta.read(),o,this.epsilon),f=(e,t,n)=>{ls((()=>{const a=1-n,r=e.read(),s=No(Vo(r,t),a);e.write(Vo(r,s))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:cy(this.betaInitializer),gammaInitializer:cy(this.gammaInitializer),movingMeanInitializer:cy(this.movingMeanInitializer),movingVarianceInitializer:cy(this.movingVarianceInitializer),betaRegularizer:Iv(this.betaRegularizer),gammaRegularizer:Iv(this.gammaRegularizer),betaConstraint:Uy(this.betaConstraint),gammaConstraint:Uy(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Gx.className="BatchNormalization",Lo(Gx);class Hx extends Ny{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received ".concat(this.axis))}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, "+"but received ".concat(JSON.stringify(this.axis)));for(const e of this.axis)if(!Number.isInteger(e))throw new Error("Expected axis to be an array of integers, "+"but received ".concat(JSON.stringify(this.axis)))}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=ly(e.betaInitializer||"zeros"),this.gammaInitializer=ly(e.gammaInitializer||"ones"),this.betaRegularizer=Fv(e.betaRegularizer),this.gammaRegularizer=Fv(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=fy(e)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error("Invalid axis: ".concat(r));if(this.axis.length!==Ym(this.axis).length)throw new Error("Found duplicate axes in: ".concat(this.axis));const n=this.axis.map((t=>e[t])),a=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(e,t){const n=py(e),a=n.shape,r=a.length;return ls((()=>{let{mean:e,variance:t}=ul(n,this.axis,!0);const s=zm(1,r);for(const n of this.axis)s[n]=a[n];const o=e=>null!=e&&e.shape.length!==r?du(e,s):e;let i=this.scale?o(this.gamma.read()):null,u=this.center?o(this.beta.read()):null;const c=[],l=[];for(let n=0;n<r;++n)-1!==this.axis.indexOf(n)?(c.push(a[n]),l.push(1)):(c.push(1),l.push(a[n]));return e=kc(e,c),t=kc(t,c),null!=i&&(i=kc(i,l)),null!=u&&(u=kc(u,l)),Vx(n,e,t,u,i,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:cy(this.betaInitializer),gammaInitializer:cy(this.gammaInitializer),betaRegularizer:Iv(this.betaRegularizer),gammaRegularizer:Iv(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Hx.className="LayerNormalization",Lo(Hx);class jx extends Ny{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new _m("ZeroPadding2D expects padding to be a length-2 array, but "+"received a length-".concat(e.padding.length," array."));let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new _m("ZeroPadding2D expects height padding to be a length-2 array, "+"but received a length-".concat(e.padding[0].length," array."));if(t=e.padding[0],2!==e.padding[1].length)throw new _m("ZeroPadding2D expects width padding to be a length-2 array, "+"but received a length-".concat(e.padding[1].length," array."));n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new xy({ndim:4})]}computeOutputShape(e){let t,n;return e=fy(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return ls((()=>{return t=py(e),n=this.padding,a=this.dataFormat,ls((()=>{if(4!==t.rank)throw new _m("temporalPadding expects input tensor to be 4-D, but received a "+"".concat(t.rank,"-D tensor."));if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new _m("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==a&&(a="channelsLast"),"channelsLast"!==a&&"channelsFirst"!==a)throw new _m("Unknown data format: ".concat(a,". ")+"Supported data formats are 'channelsLast' and 'channelsFirst.");let e;return e="channelsFirst"===a?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],ml(t,e)}));var t,n,a}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function qx(e,t,n,a,r,s){return ls((()=>{let o;dg(r),fg(s),pg(a),null==n&&(n=[1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==s&&(s="max"),e=Wv(e,r);const i="same"===a?"same":"valid";return o="max"===s?Jc(e,t,n,i):pu(e,t,n,i),"channelsFirst"===r&&(o=Mh(o,[0,3,1,2])),o}))}function Kx(e,t,n,a,r,s){return ls((()=>{let o;dg(r),fg(s),pg(a),null==n&&(n=[1,1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==s&&(s="max"),e=Vv(e,r);const i="same"===a?"same":"valid";return o="max"===s?$c(e,t,n,i):fu(e,t,n,i),"channelsFirst"===r&&(o=Mh(o,[0,4,1,2,3])),o}))}jx.className="ZeroPadding2D",Lo(jx);class Xx extends Ny{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new _m("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(e.poolSize)));this.poolSize=e.poolSize}if($m(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new _m("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(e.strides)));this.strides=e.strides}$m(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,pg(this.padding),this.inputSpec=[new xy({ndim:3})]}computeOutputShape(e){const t=Bv((e=fy(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return ls((()=>{this.invokeCallHook(e,t),e=Ig(py(e),2);const n=this.poolingFunction(py(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return dh(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Yx extends Xx{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return dg(r),pg(a),qx(e,t,n,a,r,"max")}}Yx.className="MaxPooling1D",Lo(Yx);class Qx extends Xx{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return dg(r),pg(a),qx(e,t,n,a,r,"avg")}}Qx.className="AveragePooling1D",Lo(Qx);class Zx extends Ny{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new _m("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+"".concat(e.strides.length,"."));this.strides=e.strides}else this.strides=[e.strides,e.strides];$m(this.poolSize,"poolSize"),$m(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,dg(this.dataFormat),pg(this.padding),this.inputSpec=[new xy({ndim:4})]}computeOutputShape(e){e=fy(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Bv(t,this.poolSize[0],this.padding,this.strides[0]),n=Bv(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return ls((()=>(this.invokeCallHook(e,t),this.poolingFunction(py(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Jx extends Zx{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return dg(r),pg(a),qx(e,t,n,a,r,"max")}}Jx.className="MaxPooling2D",Lo(Jx);class $x extends Zx{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return dg(r),pg(a),qx(e,t,n,a,r,"avg")}}$x.className="AveragePooling2D",Lo($x);class ew extends Ny{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new _m("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+"".concat(e.strides.length,"."));this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];$m(this.poolSize,"poolSize"),$m(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,dg(this.dataFormat),pg(this.padding),this.inputSpec=[new xy({ndim:5})]}computeOutputShape(e){e=fy(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Bv(t,this.poolSize[0],this.padding,this.strides[0]),n=Bv(n,this.poolSize[1],this.padding,this.strides[1]),a=Bv(a,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,a]:[e[0],t,n,a,e[4]]}call(e,t){return ls((()=>(this.invokeCallHook(e,t),this.poolingFunction(py(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class tw extends ew{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return dg(r),pg(a),Kx(e,t,n,a,r,"max")}}tw.className="MaxPooling3D",Lo(tw);class nw extends ew{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return dg(r),pg(a),Kx(e,t,n,a,r,"avg")}}nw.className="AveragePooling3D",Lo(nw);class aw extends Ny{constructor(e){super(e),this.inputSpec=[new xy({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Om}}class rw extends aw{constructor(e){super(e||{})}call(e,t){return ls((()=>{const t=py(e);return tl(t,1)}))}}rw.className="GlobalAveragePooling1D",Lo(rw);class sw extends aw{constructor(e){super(e||{})}call(e,t){return ls((()=>{const t=py(e);return fc(t,1)}))}}sw.className="GlobalMaxPooling1D",Lo(sw);class ow extends Ny{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,dg(this.dataFormat),this.inputSpec=[new xy({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Om}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class iw extends ow{call(e,t){return ls((()=>{const t=py(e);return"channelsLast"===this.dataFormat?tl(t,[1,2]):tl(t,[2,3])}))}}iw.className="GlobalAveragePooling2D",Lo(iw);class uw extends ow{call(e,t){return ls((()=>{const t=py(e);return"channelsLast"===this.dataFormat?fc(t,[1,2]):fc(t,[2,3])}))}}uw.className="GlobalMaxPooling2D",Lo(uw);class cw extends Ny{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=nb(t.layer,n);delete t.layer;const r={layer:a};return Object.assign(r,t),new e(r)}}class lw extends cw{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=fy(e)).length<3)throw new _m("TimeDistributed layer expects an input shape >= 3D, but received "+"input shape ".concat(JSON.stringify(e)));this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=fy(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),a=e[1];return[n[0],a].concat(n.slice(1))}call(e,t){return ls((()=>rx(((e,n)=>[py(this.layer.call(e,t)),[]]),e=py(e),[],!1,null,null,!1,!0)[1]))}}lw.className="TimeDistributed",Lo(lw);class hw extends cw{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=nb(n),t.goBackwards=!0!==t.goBackwards;const a={};var r;if(a.className=e.layer.getClassName(),a.config=t,this.backwardLayer=nb(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,Zm(lg,"BidirectionalMergeMode",r),e.weights)throw new Om("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,a,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(a=r.slice(1),t=r[0]):t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(a).concat(a.slice()):[t].concat(a).concat(a.slice()):Wm(n)}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=ax(e,n,a,this.numConstants);if(e=r.inputs,n=r.initialState,a=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==a)return super.apply(e,t);const s=[],o=[];if(null!=n){const e=n.length;if(e%2>0)throw new _m("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const a=n.map((e=>new xy({shape:e.shape})));this.forwardLayer.stateSpec=a.slice(0,e/2),this.backwardLayer.stateSpec=a.slice(e/2),o.push(...a)}if(null!=a)throw new Om("Support for constants in Bidirectional layers is not implemented yet.");const i=s[0]instanceof wy;for(const u of s)if(u instanceof wy!==i)throw new _m("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[e].concat(s),a=this.inputSpec.concat(o),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,t);return this.inputSpec=r,i}return super.apply(e,t)}call(e,t){return ls((()=>{const n=t.initialState;let a,r,s,o;if(null==n)a=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),o=n.slice(n.length/2);a=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:o}))}return this.returnState&&(Array.isArray(a)&&(s=a.slice(1).concat(r.slice(1))),a=a[0],r=r[0]),this.returnSequences&&(r=Ul(r,1)),"concat"===this.mergeMode?o=Rg([a,r]):"sum"===this.mergeMode?o=Do(a,r):"ave"===this.mergeMode?o=No(.5,Do(a,r)):"mul"===this.mergeMode?o=No(a,r):null==this.mergeMode&&(o=[a,r]),this.returnState?null==this.mergeMode?o.concat(s):[o].concat(s):o}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){gg(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),gg(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=nb(t.layer);if(delete t.layer,null!=t.numConstants)throw new Om("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=t;return a.layer=n,new e(a)}}hw.className="Bidirectional",Lo(hw);class dw extends Ny{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return ls((()=>("float32"!==(e=py(e)).dtype&&(e=Eg(e,"float32")),Do(No(e,this.scale),this.offset))))}}dw.className="Rescaling",Lo(dw);const{resizeBilinear:pw,cropAndResize:fw}=ep;class mw extends Ny{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,a,r,s,o,i){return ls((()=>{let u,c=!1;const l=[t/s,n/o,(a+t)/s,(r+n)/o],h=[];3===e.rank?(c=!0,u=ph([e])):u=e;for(let e=0;e<u.shape[0];e++)h.push(l);const d=ss(h,[h.length,4]),p=zl(0,h.length,1,"int32"),f=fw(u,d,p,[a,r],"nearest");return Eg(c?py(Fh(f)):f,i)}))}upsize(e,t,n,a){return ls((()=>Eg(pw(e,[t,n]),a)))}call(e,t){return ls((()=>{const t=py(e),n=t.dtype,a=t.shape,r=a[a.length-3],s=a[a.length-2];let o=0;r!==this.height&&(o=Math.floor((r-this.height)/2));let i=0;return s!==this.width&&(i=Math.floor((s-this.width)/2),0===i&&(i=1)),o>=0&&i>=0?this.centerCrop(t,o,i,this.height,this.width,r,s,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=fy(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}mw.className="CenterCrop",Lo(mw);class gw extends Ny{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=fy(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return ls((()=>{let n;if("int32"!==(e=py(e)).dtype&&(e=Eg(e,"int32")),"undefined"!==typeof t.countWeights){if("count"!==this.outputMode)throw new _m("countWeights is not used when outputMode !== count.\n              Received countWeights=".concat(t.countWeights));n=py(t.countWeights)}const a=fc(e),r=mc(e),s=Ec(this.numTokens,a).bufferSync().get(0),o=Ic(r,0).bufferSync().get(0);if(!s||!o)throw new _m("Input values must be between 0 < values <="+" numTokens with numTokens=".concat(this.numTokens));return function(e,t,n,a){let r=py(e);if("int32"!==r.dtype&&(r=Eg(r,"int32")),"int"===t)return r;const s=r.shape;if(0===r.rank&&(r=wc(r,-1)),"oneHot"===t&&1!==r.shape[r.shape.length-1]&&(r=wc(r,-1)),r.rank>2)throw new _m("When outputMode is not int, maximum output rank is 2"+" Received outputMode ".concat(t," and input shape ").concat(s)+" which would result in output rank ".concat(r.rank,"."));const o=["multiHot","oneHot"].includes(t),i=r;let u;if(u=Ku(i,"undefined"!==typeof a&&"count"===t?a:[],n,o),"tfIdf"!==t)return u;if(a)return No(u,a);throw new _m("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}gw.className="CategoryEncoding",Lo(gw);const yw=new Set(["bilinear","nearest"]);class bw extends Ny{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!yw.has(e.interpolation))throw new _m("Invalid interpolation parameter: ".concat(e.interpolation," is not implemented"));this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=fy(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return ls((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return ep.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return ep.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error("Interpolation is ".concat(this.interpolation," but only ").concat([...yw]," are supported"))}))}}bw.className="Resizing",Lo(bw);class vw{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}vw.className="RandomSeed";class xw extends Ny{constructor(e){super(e),this.randomGenerator=new vw(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}xw.className="BaseRandomLayer";const ww=new Set(["bilinear","nearest"]);class Dw extends xw{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new _m("Invalid factor: ".concat(this.factor,". Must be positive number or tuple of 2 numbers"));this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new _m("factor must have values larger than -1. Got: ".concat(this.factor));if(this.widthUpper<this.widthLower)throw new _m("factor cannot have upper bound less than lower bound.\n        Got upper bound: ".concat(this.widthUpper,".\n        Got lower bound: ").concat(this.widthLower,"\n      "));if(n){if(!ww.has(n))throw new _m("Invalid interpolation parameter: ".concat(n," is not implemented"));this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=fy(e))[2];return[this.imgHeight,-1,t]}call(e,t){return ls((()=>{const t=py(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=Ll([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*n;a=Math.round(a);const r=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return ep.resizeBilinear(e,r);case"nearest":return ep.resizeNearestNeighbor(e,r);default:throw new Error("Interpolation is ".concat(this.interpolation,"\n          but only ").concat([...ww]," are supported"))}}))}}Dw.className="RandomWidth",Lo(Dw);var kw,Cw;ge().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(kw||(kw={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Cw||(Cw={}));const Nw={};function Sw(e){return Nw[e]}function Ew(e,t,n,a,r){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,o=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd,i=e<0?t.inputNames.length+e:e;if("tensor"===s.type)return Iw(t.inputNames[i],n,a,r);if("tensors"===s.type){const s=t.inputs.slice(e,o);return t.inputNames.slice(e,o).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=s[t])||void 0===n?void 0:n.op)})).map((e=>Iw(e,n,a,r)))}const u=Iw(t.inputNames[i],n,a,r),c=u.dataSync();return"number"===s.type?c[0]:se(u.shape,c)}const o=t.attrParams[e];return o&&o.value}function Iw(e,t,n,a){const[r,s]=Rw(e,n);if(null!=a){const e=a.getHashTableHandleByName(r);if(null!=e)return e}const o=n.currentContextIds.find((e=>!!t[Aw(r,e)]));return void 0!==o?t[Aw(r,o)][s]:void 0}function Tw(e,t,n){return t[Aw(e,n.currentContextId)]}function Fw(e,t){const[n,a,r]=Rw(e,t);return[Aw(n,t&&t.currentContextId),a,r]}function Aw(e,t){return t?"".concat(e,"-").concat(t):e}function Rw(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const a=e.split(":");let r;if(1===a.length)r=[e,0,void 0];else{const e=a[0],t=3===a.length?a[1]:void 0;r=[e,Number(a[a.length-1]),t]}return n&&t.parseNodeNameCache.set(e,r),r}function _w(e,t,n){let a=Ew("pad",e,t,n);if("explicit"===a){a=Ew("explicitPaddings",e,t,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)r[e][0]=a[2*e],r[e][1]=a[2*e+1];return r}return a}function Ow(e){return e.kept?e:xo(e)}const Lw=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Mw=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],zw=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],Bw=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Pw=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Ww=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Vw=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],Uw=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Gw=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Hw=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],jw=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],qw=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],Kw=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],Xw=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Yw=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Qw=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],Zw=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Jw=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],$w=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class eD{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[o,i,u,c,l,h,d,p,f,m,g,y,b,v,x,w,D,k,C].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=e.node,a=[],r=[],s=[],o=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?a.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let i=[];const u=[];let c={},l={};null!=t&&(c=this.mapSignatureEntries(t.inputs),l=this.mapSignatureEntries(t.outputs));const h=Object.keys(o);h.forEach((e=>{const t=o[e];t.inputNames.forEach(((e,n)=>{const[a,,r]=Fw(e),s=o[a];if(null!=s.outputs){const e=s.outputs.indexOf(r);if(-1!==e){const r="".concat(a,":").concat(e);t.inputNames[n]=r}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(l).length?h.forEach((e=>{const t=o[e];0===t.children.length&&u.push(t)})):Object.keys(l).forEach((e=>{const[t]=Fw(e),n=o[t];null!=n&&(n.signatureKey=l[e],u.push(n))})),Object.keys(c).length>0?Object.keys(c).forEach((e=>{const[t]=Fw(e),n=o[t];n&&(n.signatureKey=c[e],i.push(n))})):i=a;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:o,inputs:i,outputs:u,weights:r,placeholders:a,signature:t,functions:d};return s.length>0&&(p.initNodes=s),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=Sw(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const a=n.type;let r;switch(n.type){case"string":r=nD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=nD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=dD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=dD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=rD(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=rD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=hD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=hD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=aD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=aD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=fD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=fD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=lD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=lD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=pD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=pD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=iD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=iD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=uD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=uD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=oD(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=oD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: ".concat(n.type," for op: ").concat(e.op))}return t[n.name]={value:r,type:a},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let a={};null!=t&&(a=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const r=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=Fw(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:sD(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),a[t]=n}));Object.keys(a).forEach((e=>{const t=a[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=Fw(e),o=a[r];if(null!=o.outputs){const e=o.outputs.indexOf(s);if(-1!==e){const a="".concat(r,":").concat(e);t.inputNames[n]=a}}t.inputs.push(o),o.children.push(t)}))}));const o=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=Fw(o[e.name]),r=a[t];null!=r&&(r.defaultOutput=n,s.push(r))}));const i=this.mapArgsToSignature(e);return{nodes:a,inputs:r,outputs:s,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function tD(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=ge().global;if("undefined"!==typeof t.atob)return t.atob(e);if("undefined"!==typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function nD(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e[t];return null!=r?tD(r.s,a):n}function aD(e,t,n){const a=e[t];return a?a.b:n}function rD(e,t,n){const a=e[t]||{},r=null!=a.i?a.i:null!=a.f?a.f:n;return"number"===typeof r?r:parseInt(r,10)}function sD(e){switch("string"===typeof e&&(e=kw[e]),e){case kw.DT_FLOAT:case kw.DT_HALF:return"float32";case kw.DT_INT32:case kw.DT_INT64:case kw.DT_INT8:case kw.DT_UINT8:return"int32";case kw.DT_BOOL:return"bool";case kw.DT_DOUBLE:return"float32";case kw.DT_STRING:return"string";case kw.DT_COMPLEX64:case kw.DT_COMPLEX128:return"complex64";default:return null}}function oD(e,t,n){const a=e[t];return a&&a.func?a.func.name:n}function iD(e,t,n){const a=e[t];return a&&a.type?sD(a.type):n}function uD(e,t,n){const a=e[t];return a&&a.list&&a.list.type?a.list.type.map((e=>sD(e))):n}function cD(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"===typeof e.size?e.size:parseInt(e.size,10))):[]}function lD(e,t,n){const a=e[t];return a&&a.shape?cD(a.shape):n}function hD(e,t,n){const a=e[t];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map((e=>"number"===typeof e?e:parseInt(e,10))):n}function dD(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e[t];return r&&r.list&&r.list.s?r.list.s.map((e=>tD(e,a))):n}function pD(e,t,n){const a=e[t];return a&&a.list&&a.list.shape?a.list.shape.map((e=>cD(e))):n}function fD(e,t,n){const a=e[t];return a&&a.list&&a.list.b?a.list.b:n}class mD{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return Iw(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return Iw(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return rD(this.node.rawAttrs,e,t);if(null!=n.s)return nD(this.node.rawAttrs,e,t);if(null!=n.b)return aD(this.node.rawAttrs,e,t);if(null!=n.shape)return lD(this.node.rawAttrs,e,t);if(null!=n.type)return iD(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return hD(this.node.rawAttrs,e,t);if(null!=n.list.s)return dD(this.node.rawAttrs,e,t);if(null!=n.list.shape)return pD(this.node.rawAttrs,e,t);if(null!=n.list.b)return fD(this.node.rawAttrs,e,t);if(null!=n.list.type)return uD(this.node.rawAttrs,e,t)}return t}}function gD(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!==typeof e&&"number"!==typeof t){M(e.length===t.length,(()=>n+" Shapes ".concat(e," and ").concat(t," must match")));for(let a=0;a<e.length;a++){const r=e[a],s=t[a];M(r<0||s<0||r===s,(()=>n+" Shapes ".concat(e," and ").concat(t," must match")))}}}function yD(e){return"number"!==typeof e&&!e.some((e=>e<0))}function bD(e,t,n){let a=vD(e,n);const r=!yD(a);if(r&&0===t.length)throw new Error("Tried to calculate elements of an empty list"+" with non-fully-defined elementShape: ".concat(a));if(r&&t.forEach((e=>{a=vD(e.shape,a)})),!yD(a))throw new Error("Non-fully-defined elementShape: ".concat(a));return a}function vD(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error("Incompatible ranks during merge: ".concat(e," vs. ").concat(t));const n=[];for(let a=0;a<e.length;++a){const r=e[a],s=t[a];if(r>=0&&s>=0&&r!==s)throw new Error("Incompatible shape during merge: ".concat(e," vs. ").concat(t));n[a]=r>=0?r:s}return n}class xD{constructor(e,t,n,a,r,s,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=s,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Fo(0),ds(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(e<0||e>=this.size())throw new Error("Tried to read from index ".concat(e,", but array size is: ").concat(this.size()));const t=this.tensors[e];if(t.cleared)throw new Error("TensorArray ".concat(this.name,": Could not read index ").concat(e," twice because it was cleared after a previous read ")+"(perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error("Tried to write to index ".concat(e,", but array is not resizeable and size is: ").concat(this.maxSize));const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,",\n          because the value dtype is ").concat(t.dtype,", but TensorArray dtype is ").concat(this.dtype,"."));if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),gD(this.elementShape,t.shape,"TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,".")),n.read)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,", because it has already been read."));if(n.written)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,", because it has already been written."));n.tensor=t,ds(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error("TensorArray ".concat(this.name,": could not write multiple tensors,")+"because the index size: ".concat(e.length," is not the same as tensors size: ").concat(t.length,"."));e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but gather requested dtype ").concat(t));if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return ss([],[0].concat(this.elementShape));const n=this.readMany(e);return gD(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),ph(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but concat requested dtype ").concat(e));if(0===this.size())return ss([],[0].concat(this.elementShape));const t=[];for(let a=0;a<this.size();a++)t.push(a);const n=this.readMany(t);return gD(this.elementShape,n[0].shape,"TensorArray shape mismatch: tensor array shape (".concat(this.elementShape,") vs first tensor shape (").concat(n[0].shape,")")),mu(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(t.dtype));if(e.length!==t.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(e.length," vs. ").concat(t.shape[0]));const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error("Max index must be < array size (".concat(n,"  vs. ").concat(this.maxSize,")"));this.writeMany(e,Fh(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(t.dtype));let n=0;const a=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(n,", and tensor's shape is: ").concat(t.shape));if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error("TensorArray's size is not equal to the size of lengths (".concat(this.maxSize," vs. ").concat(e.length,"), ")+"and the TensorArray is not marked as dynamically resizeable");const r=0===n?0:t.size/n,s=[];ls((()=>{t=du(t,[1,n,r]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:a[n-1],0],i=[1,e[n],r];s[n]=du(bu(t,o,i),this.elementShape)}return s}));const o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,s)}}class wD{get id(){return this.idTensor.id}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(e.dtype));gD(t,e.shape,"TensorList shape mismatch: "),ds(e)})),this.idTensor=Fo(0),this.maxNumElements=a,ds(this.idTensor)}copy(){return new wD([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));if(-1!==n&&this.tensors.length!==n)throw new Error("Operation expected a list with ".concat(n," elements but got a list with ").concat(this.tensors.length," elements."));gD(e,this.elementShape,"TensorList shape mismatch: ");const a=bD(this.elementShape,this.tensors,e);return ls((()=>{const e=this.tensors.map((e=>du(e,a)));return ph(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=bD(this.elementShape,this.tensors,e),a=this.tensors.pop();return a.kept=!1,gD(a.shape,e,"TensorList shape mismatch: "),du(a,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(this.elementDtype));if(gD(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");ds(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: ".concat(e));if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error("TensorListResize input size ".concat(e," is greater maxNumElement ").concat(this.maxNumElements,"."));const t=new wD([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(this.elementDtype));if(e<0||e>this.tensors.length)throw new Error("Trying to access element ".concat(e," in a list with ").concat(this.tensors.length," elements."));if(null==this.tensors[e])throw new Error("element at index ".concat(e," is null."));gD(this.tensors[e].shape,t,"TensorList shape mismatch: ");const a=bD(this.elementShape,this.tensors,t);return du(this.tensors[e],a)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t.dtype,", but list elements ").concat(this.elementDtype));if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error("Trying to set element ".concat(e," in a list with max ").concat(this.maxNumElements," elements."));gD(this.elementShape,t.shape,"TensorList shape mismatch: "),ds(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));gD(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const a=bD(this.elementShape,this.tensors,n);return 0===e.length?ss([],[0].concat(a)):ls((()=>{const t=e.map((e=>du(this.tensors[e],a)));return ph(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error("TensorList dtype is ".concat(this.elementDtype," but concat requested dtype ").concat(e));gD(this.elementShape,t,"TensorList shape mismatch: ");const n=bD(this.elementShape,this.tensors,t);return 0===this.size()?ss([],[0].concat(n)):ls((()=>{const e=this.tensors.map((e=>du(e,n)));return mu(e,0)}))}}const DD=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const a=Ew("thenBranch",e,t,n),r=Ew("elseBranch",e,t,n),s=Ew("cond",e,t,n),o=Ew("args",e,t,n);return(await s.data())[0]?n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const a=Ew("body",e,t,n),r=Ew("cond",e,t,n),s=Ew("args",e,t,n),o=await n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),i=s.map((e=>e.id));let u=await o[0].data();o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let c=s;for(;u[0];){const e=c;c=await n.functionMap[a].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);const t=c.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[r].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return c}case"LoopCond":return[Ow(Ew("pred",e,t,n))];case"Switch":{const a=Ew("pred",e,t,n);let r=Ew("data",e,t,n);return r.kept||(r=Ow(r)),(await a.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const a=e.inputNames.find((e=>void 0!==Iw(e,t,n)));if(a){return[Ow(Iw(a,t,n))]}return}case"Enter":{const a=Ew("frameName",e,t,n),r=Ew("tensor",e,t,n);return n.enterFrame(a),[Ow(r)]}case"Exit":{const a=Ew("tensor",e,t,n);return n.exitFrame(),[Ow(a)]}case"NextIteration":{const a=Ew("tensor",e,t,n);return n.nextIteration(),[Ow(a)]}case"TensorArrayV3":{const a=Ew("size",e,t,n),r=Ew("dtype",e,t,n),s=Ew("elementShape",e,t,n),o=Ew("dynamicSize",e,t,n),i=Ew("clearAfterRead",e,t,n),u=Ew("identicalElementShapes",e,t,n),c=Ew("name",e,t,n),l=new xD(c,r,a,s,u,o,i);return n.addTensorArray(l),[l.idTensor,Fo(1)]}case"TensorArrayWriteV3":{const a=Ew("tensorArrayId",e,t,n),r=Ew("index",e,t,n),s=Ew("tensor",e,t,n),o=n.getTensorArray(a.id);return o.write(r,s),[o.idTensor]}case"TensorArrayReadV3":{const a=Ew("tensorArrayId",e,t,n),r=Ew("index",e,t,n);return[n.getTensorArray(a.id).read(r)]}case"TensorArrayGatherV3":{const a=Ew("tensorArrayId",e,t,n),r=Ew("indices",e,t,n),s=Ew("dtype",e,t,n);return[n.getTensorArray(a.id).gather(r,s)]}case"TensorArrayScatterV3":{const a=Ew("tensorArrayId",e,t,n),r=Ew("indices",e,t,n),s=Ew("tensor",e,t,n),o=n.getTensorArray(a.id);return o.scatter(r,s),[o.idTensor]}case"TensorArrayConcatV3":{const a=Ew("tensorArrayId",e,t,n),r=n.getTensorArray(a.id),s=Ew("dtype",e,t,n);return[r.concat(s)]}case"TensorArraySplitV3":{const a=Ew("tensorArrayId",e,t,n),r=Ew("tensor",e,t,n),s=Ew("lengths",e,t,n),o=n.getTensorArray(a.id);return o.split(s,r),[o.idTensor]}case"TensorArraySizeV3":{const a=Ew("tensorArrayId",e,t,n);return[Fo(n.getTensorArray(a.id).size(),"int32")]}case"TensorArrayCloseV3":{const a=Ew("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const a=Ew("tensorListId",e,t,n),r=Ew("index",e,t,n),s=Ew("tensor",e,t,n),o=n.getTensorList(a.id);return o.setItem(r,s),[o.idTensor]}case"TensorListGetItem":{const a=Ew("tensorListId",e,t,n),r=Ew("index",e,t,n),s=Ew("elementShape",e,t,n),o=Ew("elementDType",e,t,n);return[n.getTensorList(a.id).getItem(r,s,o)]}case"TensorListScatterV2":case"TensorListScatter":{const a=Ew("indices",e,t,n),r=function(e,t,n,a){if(t.length!==e.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(t.length," vs. ").concat(e.shape[0]));const r=Math.max(...t);if(null!=a&&-1!==a&&r>=a)throw new Error("Max index must be < array size (".concat(r,"  vs. ").concat(a,")"));const s=new wD([],n,e.dtype,a),o=Fh(e,0);return t.forEach(((e,t)=>{s.setItem(e,o[t])})),s}(Ew("tensor",e,t,n),a,Ew("elementShape",e,t,n),Ew("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const a=Ew("elementShape",e,t,n),r=Ew("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const o=Ew(s,e,t,n),i=function(e,t,n,a){return new wD([],e,t,a)}(a,r,0,"TensorListReserve"===e.op?-1:o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const a=Ew("tensorListId",e,t,n),r=Ew("indices",e,t,n),s=Ew("elementShape",e,t,n),o=Ew("elementDType",e,t,n);return[n.getTensorList(a.id).gather(r,o,s)]}case"TensorListStack":{const a=Ew("tensorListId",e,t,n),r=Ew("elementShape",e,t,n),s=Ew("elementDType",e,t,n),o=Ew("numElements",e,t,n);return[n.getTensorList(a.id).stack(r,s,o)]}case"TensorListFromTensor":{const a=function(e,t,n){const a=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: ".concat(e.shape));if(e.dtype!==n)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(n));gD(e.shape.slice(1),t,"TensorList shape mismatch: ");const r=Fh(e);return new wD(r,t,a)}(Ew("tensor",e,t,n),Ew("elementShape",e,t,n),Ew("elementDType",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const a=Ew("tensorListId",e,t,n),r=n.getTensorList(a.id),s=Ew("dtype",e,t,n),o=Ew("elementShape",e,t,n);return[r.concat(s,o)]}case"TensorListPushBack":{const a=Ew("tensorListId",e,t,n),r=Ew("tensor",e,t,n),s=n.getTensorList(a.id);return s.pushBack(r),[s.idTensor]}case"TensorListPopBack":{const a=Ew("tensorListId",e,t,n),r=Ew("elementShape",e,t,n),s=Ew("elementDType",e,t,n);return[n.getTensorList(a.id).popBack(r,s)]}case"TensorListSplit":{const a=Ew("tensor",e,t,n),r=Ew("elementShape",e,t,n),s=function(e,t,n){let a=0;const r=t.map((e=>(a+=e,a)));if(a!==e.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(a,", and tensor's shape is: ").concat(e.shape));const s=vD(e.shape.slice(1),n),o=0===a?0:e.size/a,i=ls((()=>{const n=[];e=du(e,[1,a,o]);for(let a=0;a<t.length;++a){const i=[0,0===a?0:r[a-1],0],u=[1,t[a],o];n[a]=du(bu(e,i,u),s)}return e.dispose(),n})),u=new wD([],n,e.dtype,t.length);for(let c=0;c<i.length;c++)u.setItem(c,i[c]);return u}(a,Ew("lengths",e,t,n),r);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{const a=Ew("tensorListId",e,t,n);return[Fo(n.getTensorList(a.id).size(),"int32")]}case"TensorListResize":{const a=Ew("tensorListId",e,t,n),r=Ew("size",e,t,n),s=n.getTensorList(a.id).resize(r);return n.addTensorList(s),[s.idTensor]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}};function kD(e,t,n){const[a,r]=Ew("fusedOps",e,t,n),s="biasadd"===a,o=!s,i="prelu"===r,u="fusedbatchnorm"===a,c=Ew("numArgs",e,t,n);if(s){if(i&&2!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&1!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const l=Ew("strides",e,t,n),h=_w(e,t,n),d=Ew("dataFormat",e,t,n).toUpperCase(),p=Ew("dilations",e,t,n);let[f,m]=Ew("args",e,t,n);o&&(m=f,f=void 0);return{stride:l,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:Ew("leakyreluAlpha",e,t,n)}}function CD(e,t,n){return{boxes:Ew("boxes",e,t,n),scores:Ew("scores",e,t,n),maxOutputSize:Ew("maxOutputSize",e,t,n),iouThreshold:Ew("iouThreshold",e,t,n),scoreThreshold:Ew("scoreThreshold",e,t,n),softNmsSigma:Ew("softNmsSigma",e,t,n)}}class ND{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Fo(0),this.tensorMap=new Map,ds(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Fo(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),ls((()=>{const e=Fh(t),a=n.length,r=e.length;M(a===r,(()=>"The number of elements doesn't match, keys has "+"".concat(a," elements, the values has ").concat(r," ")+"elements."));for(let t=0;t<a;t++){const a=n[t],r=e[t];ds(r),this.tensorMap.set(a,r)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return ls((()=>{const e=[];for(let a=0;a<n.length;a++){const r=n[a],s=this.findWithDefault(r,t);e.push(s)}return ph(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error("Expect key dtype ".concat(this.keyDType,", but got ")+"".concat(e.dtype));if(t.dtype!==this.valueDType)throw new Error("Expect value dtype ".concat(this.valueDType,", but got ")+"".concat(t.dtype))}}function SD(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:ls;const s=((e,t,n)=>{switch(e.category){case"arithmetic":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[a.add(Ew("a",e,t,n),Ew("b",e,t,n))];case"AddN":return[a.addN(Ew("tensors",e,t,n))];case"FloorMod":case"Mod":return[a.mod(Ew("a",e,t,n),Ew("b",e,t,n))];case"Mul":return[a.mul(Ew("a",e,t,n),Ew("b",e,t,n))];case"RealDiv":case"Div":return[a.div(Ew("a",e,t,n),Ew("b",e,t,n))];case"DivNoNan":return[a.divNoNan(Ew("a",e,t,n),Ew("b",e,t,n))];case"FloorDiv":return[a.floorDiv(Ew("a",e,t,n),Ew("b",e,t,n))];case"Sub":return[a.sub(Ew("a",e,t,n),Ew("b",e,t,n))];case"Minimum":return[a.minimum(Ew("a",e,t,n),Ew("b",e,t,n))];case"Maximum":return[a.maximum(Ew("a",e,t,n),Ew("b",e,t,n))];case"Pow":return[a.pow(Ew("a",e,t,n),Ew("b",e,t,n))];case"SquaredDifference":return[a.squaredDifference(Ew("a",e,t,n),Ew("b",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"basic_math":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"Abs":case"ComplexAbs":return[a.abs(Ew("x",e,t,n))];case"Acos":return[a.acos(Ew("x",e,t,n))];case"Acosh":return[a.acosh(Ew("x",e,t,n))];case"Asin":return[a.asin(Ew("x",e,t,n))];case"Asinh":return[a.asinh(Ew("x",e,t,n))];case"Atan":return[a.atan(Ew("x",e,t,n))];case"Atan2":return[a.atan2(Ew("x",e,t,n),Ew("y",e,t,n))];case"Atanh":return[a.atanh(Ew("x",e,t,n))];case"Ceil":return[a.ceil(Ew("x",e,t,n))];case"Complex":return[a.complex(Ew("real",e,t,n),Ew("imag",e,t,n))];case"Cos":return[a.cos(Ew("x",e,t,n))];case"Cosh":return[a.cosh(Ew("x",e,t,n))];case"Elu":return[a.elu(Ew("x",e,t,n))];case"Erf":return[a.erf(Ew("x",e,t,n))];case"Exp":return[a.exp(Ew("x",e,t,n))];case"Expm1":return[a.expm1(Ew("x",e,t,n))];case"Floor":return[a.floor(Ew("x",e,t,n))];case"Log":return[a.log(Ew("x",e,t,n))];case"Log1p":return[a.log1p(Ew("x",e,t,n))];case"Imag":return[a.imag(Ew("x",e,t,n))];case"Neg":return[a.neg(Ew("x",e,t,n))];case"Reciprocal":return[a.reciprocal(Ew("x",e,t,n))];case"Real":return[a.real(Ew("x",e,t,n))];case"Relu":return[a.relu(Ew("x",e,t,n))];case"Round":return[a.round(Ew("x",e,t,n))];case"Selu":return[a.selu(Ew("x",e,t,n))];case"Sigmoid":return[a.sigmoid(Ew("x",e,t,n))];case"Sin":return[a.sin(Ew("x",e,t,n))];case"Sign":return[a.sign(Ew("x",e,t,n))];case"Sinh":return[a.sinh(Ew("x",e,t,n))];case"Softplus":return[a.softplus(Ew("x",e,t,n))];case"Sqrt":return[a.sqrt(Ew("x",e,t,n))];case"Square":return[a.square(Ew("x",e,t,n))];case"Tanh":return[a.tanh(Ew("x",e,t,n))];case"Tan":return[a.tan(Ew("x",e,t,n))];case"ClipByValue":return[a.clipByValue(Ew("x",e,t,n),Ew("clipValueMin",e,t,n),Ew("clipValueMax",e,t,n))];case"Relu6":return[a.relu6(Ew("x",e,t,n))];case"Rsqrt":return[a.rsqrt(Iw(e.inputNames[0],t,n))];case"LeakyRelu":return[a.leakyRelu(Ew("x",e,t,n),Ew("alpha",e,t,n))];case"Prelu":return[a.prelu(Ew("x",e,t,n),Ew("alpha",e,t,n))];case"IsNan":return[a.isNaN(Iw(e.inputNames[0],t,n))];case"IsInf":return[a.isInf(Iw(e.inputNames[0],t,n))];case"IsFinite":return[a.isFinite(Iw(e.inputNames[0],t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"control":return DD(e,t,n);case"convolution":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"Conv1D":{const r=Ew("stride",e,t,n),s=Ew("pad",e,t,n),o=Ew("dataFormat",e,t,n).toUpperCase(),i=Ew("dilation",e,t,n);return[a.conv1d(Ew("x",e,t,n),Ew("filter",e,t,n),r,s,o,i)]}case"Conv2D":{const r=Ew("strides",e,t,n),s=_w(e,t,n),o=Ew("dataFormat",e,t,n).toUpperCase(),i=Ew("dilations",e,t,n);return[a.conv2d(Ew("x",e,t,n),Ew("filter",e,t,n),[r[1],r[2]],s,o,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:s,dataFormat:o,dilations:i,biasArg:u,preluArg:c,activationFunc:l,leakyreluAlpha:h}=kD(e,t,n);return[a.fused.conv2d({x:Ew("x",e,t,n),filter:Ew("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:u,activation:l,preluActivationWeights:c,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:s,dataFormat:o,dilations:i,biasArg:u,preluArg:c,activationFunc:l,leakyreluAlpha:h}=kD(e,t,n);return[a.fused.depthwiseConv2d({x:Ew("x",e,t,n),filter:Ew("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:u,activation:l,preluActivationWeights:c,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Ew("outputShape",e,t,n),s=Ew("strides",e,t,n),o=_w(e,t,n);return[a.conv2dTranspose(Ew("x",e,t,n),Ew("filter",e,t,n),r,[s[1],s[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Ew("strides",e,t,n),s=_w(e,t,n),o=Ew("dilations",e,t,n),i=Ew("dataFormat",e,t,n).toUpperCase();return[a.depthwiseConv2d(Ew("input",e,t,n),Ew("filter",e,t,n),[r[1],r[2]],s,i,[o[1],o[2]])]}case"Conv3D":{const r=Ew("strides",e,t,n),s=Ew("pad",e,t,n),o=Ew("dataFormat",e,t,n).toUpperCase(),i=Ew("dilations",e,t,n);return[a.conv3d(Ew("x",e,t,n),Ew("filter",e,t,n),[r[1],r[2],r[3]],s,o,[i[1],i[2],i[3]])]}case"AvgPool":{const r=Ew("strides",e,t,n),s=Ew("pad",e,t,n),o=Ew("kernelSize",e,t,n);return[a.avgPool(Ew("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s)]}case"MaxPool":{const r=Ew("strides",e,t,n),s=Ew("pad",e,t,n),o=Ew("kernelSize",e,t,n);return[a.maxPool(Ew("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{const r=Ew("strides",e,t,n),s=Ew("pad",e,t,n),o=Ew("kernelSize",e,t,n),i=Ew("includeBatchInIndex",e,t,n),{result:u,indexes:c}=a.maxPoolWithArgmax(Ew("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s,i);return[u,c]}case"AvgPool3D":{const r=Ew("strides",e,t,n),s=Ew("pad",e,t,n),o=Ew("kernelSize",e,t,n);return[a.avgPool3d(Ew("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{const r=Ew("strides",e,t,n),s=Ew("pad",e,t,n),o=Ew("kernelSize",e,t,n);return[a.maxPool3d(Ew("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{const r=Ew("strides",e,t,n),s=Ew("pad",e,t,n),o=Ew("dilations",e,t,n),i=r[1],u=r[2],c=o[1],l=o[2];return[a.dilation2d(Ew("x",e,t,n),Ew("filter",e,t,n),[i,u],s,[c,l],"NHWC")]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"creation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"Fill":{const r=Ew("shape",e,t,n),s=Ew("dtype",e,t,n),o=Ew("value",e,t,n);return[a.fill(r,o,s)]}case"LinSpace":{const r=Ew("start",e,t,n),s=Ew("stop",e,t,n),o=Ew("num",e,t,n);return[a.linspace(r,s,o)]}case"Multinomial":{const r=Ew("logits",e,t,n),s=Ew("numSamples",e,t,n),o=Ew("seed",e,t,n);return[a.multinomial(r,s,o)]}case"OneHot":{const r=Ew("indices",e,t,n),s=Ew("depth",e,t,n),o=Ew("onValue",e,t,n),i=Ew("offValue",e,t,n),u=Ew("dtype",e,t,n);return[a.oneHot(r,s,o,i,u)]}case"Ones":return[a.ones(Ew("shape",e,t,n),Ew("dtype",e,t,n))];case"OnesLike":return[a.onesLike(Ew("x",e,t,n))];case"RandomStandardNormal":return[a.randomStandardNormal(Ew("shape",e,t,n),Ew("dtype",e,t,n),Ew("seed",e,t,n))];case"RandomUniform":return[a.randomUniform(Ew("shape",e,t,n),Ew("minval",e,t,n),Ew("maxval",e,t,n),Ew("dtype",e,t,n))];case"RandomUniformInt":return[a.randomUniformInt(Ew("shape",e,t,n),Ew("minval",e,t,n),Ew("maxval",e,t,n),Ew("seed",e,t,n))];case"Range":{const r=Ew("start",e,t,n),s=Ew("stop",e,t,n),o=Ew("step",e,t,n);return[a.range(r,s,o,Ew("dtype",e,t,n))]}case"TruncatedNormal":{const r=Ew("shape",e,t,n),s=Ew("mean",e,t,n),o=Ew("stdDev",e,t,n),i=Ew("seed",e,t,n);return[a.truncatedNormal(r,s,o,Ew("dtype",e,t,n),i)]}case"Zeros":return[a.zeros(Ew("shape",e,t,n),Ew("dtype",e,t,n))];case"ZerosLike":return[a.zerosLike(Ew("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"dynamic":return async function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:N;switch(e.op){case"NonMaxSuppressionV5":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=CD(e,t,n),l=await r.image.nonMaxSuppressionWithScoreAsync(a,s,o,i,u,c);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=CD(e,t,n),c=Ew("padToMaxOutputSize",e,t,n),l=await r.image.nonMaxSuppressionPaddedAsync(a,s,o,i,u,c);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=CD(e,t,n);return[await r.image.nonMaxSuppressionAsync(a,s,o,i,u)]}case"Where":{const a=r.cast(Ew("condition",e,t,n),"bool"),s=[await r.whereAsync(a)];return a.dispose(),s}case"ListDiff":return r.setdiff1dAsync(Ew("x",e,t,n),Ew("y",e,t,n));default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n);case"evaluation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"LowerBound":{const r=Ew("sortedSequence",e,t,n),s=Ew("values",e,t,n);return[a.lowerBound(r,s)]}case"TopKV2":{const r=Ew("x",e,t,n),s=Ew("k",e,t,n),o=Ew("sorted",e,t,n),i=a.topk(r,s,o);return[i.values,i.indices]}case"UpperBound":{const r=Ew("sortedSequence",e,t,n),s=Ew("values",e,t,n);return[a.upperBound(r,s)]}case"Unique":{const r=Ew("x",e,t,n),s=a.unique(r);return[s.values,s.indices]}case"UniqueV2":{const r=Ew("x",e,t,n),s=Ew("axis",e,t,n),o=a.unique(r,s);return[o.values,o.indices]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"image":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"ResizeBilinear":{const r=Ew("images",e,t,n),s=Ew("size",e,t,n),o=Ew("alignCorners",e,t,n),i=Ew("halfPixelCenters",e,t,n);return[a.image.resizeBilinear(r,[s[0],s[1]],o,i)]}case"ResizeNearestNeighbor":{const r=Ew("images",e,t,n),s=Ew("size",e,t,n),o=Ew("alignCorners",e,t,n),i=Ew("halfPixelCenters",e,t,n);return[a.image.resizeNearestNeighbor(r,[s[0],s[1]],o,i)]}case"CropAndResize":{const r=Ew("image",e,t,n),s=Ew("boxes",e,t,n),o=Ew("boxInd",e,t,n),i=Ew("cropSize",e,t,n),u=Ew("method",e,t,n),c=Ew("extrapolationValue",e,t,n);return[a.image.cropAndResize(r,s,o,i,u,c)]}case"ImageProjectiveTransformV3":{const r=Ew("images",e,t,n),s=Ew("transforms",e,t,n),o=Ew("outputShape",e,t,n),i=Ew("fillValue",e,t,n),u=Ew("interpolation",e,t,n),c=Ew("fillMode",e,t,n);return[a.image.transform(r,s,u.toLowerCase(),c.toLowerCase(),i,o)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"graph":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=Ew("default",e,t,n);return[Iw(e.name,t,n)||r];case"Placeholder":return[Iw(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[Ow(Ew("x",e,t,n))];case"IdentityN":return Ew("x",e,t,n).map((e=>Ow(e)));case"Shape":return[a.tensor1d(Ew("x",e,t,n).shape,"int32")];case"ShapeN":return Ew("x",e,t,n).map((e=>a.tensor1d(e.shape)));case"Size":return[a.scalar(Ew("x",e,t,n).size,"int32")];case"Rank":return[a.scalar(Ew("x",e,t,n).rank,"int32")];case"NoOp":return[a.scalar(1)];case"Print":const s=Ew("x",e,t,n),o=Ew("data",e,t,n),i=Ew("message",e,t,n),u=Ew("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<o.length;e++)console.log(Array.prototype.slice.call(o[e].dataSync()).slice(0,u));return[s];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"logical":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"Equal":return[a.equal(Ew("a",e,t,n),Ew("b",e,t,n))];case"NotEqual":return[a.notEqual(Ew("a",e,t,n),Ew("b",e,t,n))];case"Greater":return[a.greater(Ew("a",e,t,n),Ew("b",e,t,n))];case"GreaterEqual":return[a.greaterEqual(Ew("a",e,t,n),Ew("b",e,t,n))];case"Less":return[a.less(Ew("a",e,t,n),Ew("b",e,t,n))];case"LessEqual":return[a.lessEqual(Ew("a",e,t,n),Ew("b",e,t,n))];case"LogicalAnd":return[a.logicalAnd(Ew("a",e,t,n),Ew("b",e,t,n))];case"LogicalNot":return[a.logicalNot(Ew("a",e,t,n))];case"LogicalOr":return[a.logicalOr(Ew("a",e,t,n),Ew("b",e,t,n))];case"Select":case"SelectV2":return[a.where(Ew("condition",e,t,n),Ew("a",e,t,n),Ew("b",e,t,n))];case"BitwiseAnd":return[a.bitwiseAnd(Ew("a",e,t,n),Ew("b",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"matrices":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[a.matMul(Ew("a",e,t,n),Ew("b",e,t,n),Ew("transposeA",e,t,n),Ew("transposeB",e,t,n))];case"Einsum":return[a.einsum(Ew("equation",e,t,n),...Ew("tensors",e,t,n))];case"Transpose":return[a.transpose(Ew("x",e,t,n),Ew("perm",e,t,n))];case"_FusedMatMul":const[r,s]=Ew("fusedOps",e,t,n),o="biasadd"===r,i="prelu"===s,u=Ew("numArgs",e,t,n),c=Ew("leakyreluAlpha",e,t,n);if(o){if(i&&2!==u)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==u)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,h]=Ew("args",e,t,n);return[a.fused.matMul({a:Ew("a",e,t,n),b:Ew("b",e,t,n),transposeA:Ew("transposeA",e,t,n),transposeB:Ew("transposeB",e,t,n),bias:l,activation:s,preluActivationWeights:h,leakyreluAlpha:c})];case"MatrixBandPart":return[a.linalg.bandPart(Ew("a",e,t,n),Ew("numLower",e,t,n),Ew("numUpper",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"normalization":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"EuclideanNorm":return[a.euclideanNorm(Ew("x",e,t,n),Ew("axis",e,t,n),Ew("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[a.batchNorm(Ew("x",e,t,n),Ew("mean",e,t,n),Ew("variance",e,t,n),Ew("offset",e,t,n),Ew("scale",e,t,n),Ew("epsilon",e,t,n))];case"LRN":return[a.localResponseNormalization(Ew("x",e,t,n),Ew("radius",e,t,n),Ew("bias",e,t,n),Ew("alpha",e,t,n),Ew("beta",e,t,n))];case"Softmax":return[a.softmax(Ew("x",e,t,n))];case"LogSoftmax":return[a.logSoftmax(Ew("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"ragged":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:s}=a.raggedGather(Ew("paramsNestedSplits",e,t,n),Ew("paramsDenseValues",e,t,n),Ew("indices",e,t,n),Ew("outputRaggedRank",e,t,n));return r.concat(s)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:s}=a.raggedRange(Ew("starts",e,t,n),Ew("limits",e,t,n),Ew("splits",e,t,n));return[r,s]}case"RaggedTensorToTensor":return[a.raggedTensorToTensor(Ew("shape",e,t,n),Ew("values",e,t,n),Ew("defaultValue",e,t,n),Ew("rowPartitionTensors",e,t,n),Ew("rowPartitionTypes",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"reduction":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"Max":{const r=Ew("axis",e,t,n),s=Ew("keepDims",e,t,n);return[a.max(Ew("x",e,t,n),r,s)]}case"Mean":{const r=Ew("axis",e,t,n),s=Ew("keepDims",e,t,n);return[a.mean(Ew("x",e,t,n),r,s)]}case"Min":{const r=Ew("axis",e,t,n),s=Ew("keepDims",e,t,n);return[a.min(Ew("x",e,t,n),r,s)]}case"Sum":{const r=Ew("axis",e,t,n),s=Ew("keepDims",e,t,n);return[a.sum(Ew("x",e,t,n),r,s)]}case"All":{const r=Ew("axis",e,t,n),s=Ew("keepDims",e,t,n);return[a.all(Ew("x",e,t,n),r,s)]}case"Any":{const r=Ew("axis",e,t,n),s=Ew("keepDims",e,t,n);return[a.any(Ew("x",e,t,n),r,s)]}case"ArgMax":{const r=Ew("axis",e,t,n);return[a.argMax(Ew("x",e,t,n),r)]}case"ArgMin":{const r=Ew("axis",e,t,n);return[a.argMin(Ew("x",e,t,n),r)]}case"Prod":{const r=Ew("axis",e,t,n),s=Ew("keepDims",e,t,n);return[a.prod(Ew("x",e,t,n),r,s)]}case"Cumprod":{const r=Ew("axis",e,t,n),s=Ew("exclusive",e,t,n),o=Ew("reverse",e,t,n);return[a.cumprod(Ew("x",e,t,n),r,s,o)]}case"Cumsum":{const r=Ew("axis",e,t,n),s=Ew("exclusive",e,t,n),o=Ew("reverse",e,t,n);return[a.cumsum(Ew("x",e,t,n),r,s,o)]}case"Bincount":const r=Ew("x",e,t,n),s=Ew("weights",e,t,n),o=Ew("size",e,t,n);return[a.bincount(r,s,o)];case"DenseBincount":{const r=Ew("x",e,t,n),s=Ew("weights",e,t,n),o=Ew("size",e,t,n),i=Ew("binaryOutput",e,t,n);return[a.denseBincount(r,s,o,i)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"slice_join":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"ConcatV2":case"Concat":{const r=Ew("n",e,t,n),s=Ew("axis",e,t,n);let o=Ew("tensors",e,t,n);return o=o.slice(0,r),[a.concat(o,s)]}case"Gather":{const r=Ew("x",e,t,n),s=Ew("indices",e,t,n);return[a.gather(r,a.cast(s,"int32"),0)]}case"GatherV2":{const r=Ew("axis",e,t,n),s=Ew("batchDims",e,t,n),o=Ew("x",e,t,n),i=Ew("indices",e,t,n);return[a.gather(o,a.cast(i,"int32"),r,s)]}case"Reverse":{const r=Ew("dims",e,t,n),s=[];for(let e=0;e<r.length;e++)r[e]&&s.push(e);const o=Ew("x",e,t,n);return[a.reverse(o,s)]}case"ReverseV2":{const r=Ew("axis",e,t,n),s=Ew("x",e,t,n);return[a.reverse(s,r)]}case"Slice":{const r=Ew("begin",e,t,n),s=Ew("size",e,t,n);return[a.slice(Ew("x",e,t,n),r,s)]}case"StridedSlice":{const r=Ew("begin",e,t,n),s=Ew("end",e,t,n),o=Ew("strides",e,t,n),i=Ew("beginMask",e,t,n),u=Ew("endMask",e,t,n),c=Ew("ellipsisMask",e,t,n),l=Ew("newAxisMask",e,t,n),h=Ew("shrinkAxisMask",e,t,n),d=Ew("x",e,t,n);return[a.stridedSlice(d,r,s,o,i,u,c,l,h)]}case"Pack":return ls((()=>{const r=Ew("axis",e,t,n),s=Ew("tensors",e,t,n),o=s[0].shape,i=a.squeeze(s[0]).shape,u=s.map((e=>{const t=W(e.shape,o);if(!t&&!W(a.squeeze(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:a.reshape(e,o)}));return[a.stack(u,r)]}));case"Unpack":{const r=Ew("axis",e,t,n),s=Ew("tensor",e,t,n);return a.unstack(s,r)}case"Tile":{const r=Ew("reps",e,t,n);return[a.tile(Ew("x",e,t,n),r)]}case"Split":case"SplitV":{const r=Ew("axis",e,t,n),s=Ew("numOrSizeSplits",e,t,n),o=Ew("x",e,t,n);return a.split(o,s,r)}case"ScatterNd":{const r=Ew("indices",e,t,n),s=Ew("values",e,t,n),o=Ew("shape",e,t,n);return[a.scatterND(r,s,o)]}case"GatherNd":{const r=Ew("x",e,t,n),s=Ew("indices",e,t,n);return[a.gatherND(r,s)]}case"SparseToDense":{const r=Ew("sparseIndices",e,t,n),s=Ew("outputShape",e,t,n),o=Ew("sparseValues",e,t,n),i=Ew("defaultValue",e,t,n);return[a.sparseToDense(r,o,s,o.dtype===i.dtype?i:a.cast(i,o.dtype))]}case"TensorScatterUpdate":{const r=Ew("indices",e,t,n),s=Ew("values",e,t,n),o=Ew("tensor",e,t,n);return[a.tensorScatterUpdate(o,r,s)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"sparse":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:s,emptyRowIndicator:o,reverseIndexMap:i}=a.sparse.sparseFillEmptyRows(Ew("indices",e,t,n),Ew("values",e,t,n),Ew("denseShape",e,t,n),Ew("defaultValue",e,t,n));return[r,s,o,i]}case"SparseReshape":{const{outputIndices:r,outputShape:s}=a.sparse.sparseReshape(Ew("inputIndices",e,t,n),Ew("inputShape",e,t,n),Ew("newShape",e,t,n));return[r,s]}case"SparseSegmentMean":return[a.sparse.sparseSegmentMean(Ew("data",e,t,n),Ew("indices",e,t,n),Ew("segmentIds",e,t,n))];case"SparseSegmentSum":return[a.sparse.sparseSegmentSum(Ew("data",e,t,n),Ew("indices",e,t,n),Ew("segmentIds",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"spectral":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"FFT":return[a.fft(Ew("x",e,t,n))];case"IFFT":return[a.ifft(Ew("x",e,t,n))];case"RFFT":return[a.rfft(Ew("x",e,t,n))];case"IRFFT":return[a.irfft(Ew("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"string":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"StaticRegexReplace":return[a.string.staticRegexReplace(Ew("input",e,t,n),Ew("pattern",e,t,n),Ew("rewrite",e,t,n),Ew("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:r,nGramsSplits:s}=a.string.stringNGrams(Ew("data",e,t,n),Ew("dataSplits",e,t,n),Ew("separator",e,t,n),Ew("nGramWidths",e,t,n),Ew("leftPad",e,t,n),Ew("rightPad",e,t,n),Ew("padWidth",e,t,n),Ew("preserveShortSequences",e,t,n));return[r,s]}case"StringSplit":{const{indices:r,values:s,shape:o}=a.string.stringSplit(Ew("input",e,t,n),Ew("delimiter",e,t,n),Ew("skipEmpty",e,t,n));return[r,s,o]}case"StringToHashBucketFast":return[a.string.stringToHashBucketFast(Ew("input",e,t,n),Ew("numBuckets",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"transformation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:N;switch(e.op){case"Cast":return[a.cast(Ew("x",e,t,n),Ew("dtype",e,t,n))];case"ExpandDims":{const r=Ew("axis",e,t,n);return[a.expandDims(Ew("x",e,t,n),r)]}case"Squeeze":{const r=Ew("axis",e,t,n);return[a.squeeze(Ew("x",e,t,n),r)]}case"Reshape":return[a.reshape(Ew("x",e,t,n),Ew("shape",e,t,n))];case"EnsureShape":return[a.ensureShape(Ew("x",e,t,n),Ew("shape",e,t,n))];case"MirrorPad":return[a.mirrorPad(Ew("x",e,t,n),Ew("padding",e,t,n),Ew("mode",e,t,n))];case"PadV2":case"Pad":return[a.pad(Ew("x",e,t,n),Ew("padding",e,t,n),Ew("constantValue",e,t,n))];case"SpaceToBatchND":{const r=Ew("blockShape",e,t,n),s=Ew("paddings",e,t,n);return[a.spaceToBatchND(Ew("x",e,t,n),r,s)]}case"BatchToSpaceND":{const r=Ew("blockShape",e,t,n),s=Ew("crops",e,t,n);return[a.batchToSpaceND(Ew("x",e,t,n),r,s)]}case"DepthToSpace":{const r=Ew("blockSize",e,t,n),s=Ew("dataFormat",e,t,n).toUpperCase();return[a.depthToSpace(Ew("x",e,t,n),r,s)]}case"BroadcastTo":return[a.broadcastTo(Ew("x",e,t,n),Ew("shape",e,t,n))];case"BroadcastArgs":return[a.broadcastArgs(Ew("s0",e,t,n),Ew("s1",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"hash_table":return(async(e,t,n,a)=>{switch(e.op){case"HashTable":case"HashTableV2":{const r=a.getHashTableHandleByName(e.name);if(null!=r)return[r];{const r=Ew("keyDType",e,t,n),s=Ew("valueDType",e,t,n),o=new ND(r,s);return a.addHashTable(e.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=Ew("tableHandle",e,t,n,a),s=Ew("keys",e,t,n),o=Ew("values",e,t,n),i=a.getHashTableById(r.id);return[await i.import(s,o)]}case"LookupTableFind":case"LookupTableFindV2":{const r=Ew("tableHandle",e,t,n,a),s=Ew("keys",e,t,n),o=Ew("defaultValue",e,t,n),i=a.getHashTableById(r.id);return[await i.find(s,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=Ew("tableHandle",e,t,n,a);return[a.getHashTableById(r.id).tensorSize()]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}})(e,t,n,a);case"custom":const s=Sw(e.op);if(s&&s.customExecutor)return s.customExecutor(new mD(e,t,n));throw TypeError("Custom op ".concat(e.op," is not registered."));default:throw TypeError("Unknown op '".concat(e.op,"'. File an issue at ")+"https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}})(e,t,n);return de(s)?s.then((e=>[].concat(e))):[].concat(s)}class ED{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4?arguments[4]:void 0;this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=a,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":"".concat(e.frameName,"-").concat(e.iterationId))).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function ID(e,t,n,a){const r=new Set,s=[];let o=null,i=null;const u=new Set,c=new Set(Object.keys(e).map((e=>Rw(e)[0])));a=a||[];const l=new Set(a.map((e=>Rw(e.name)[0]))),h=[...t];for(;h.length>0;){const e=h.pop();(OD(e)||LD(e)||MD(e))&&null==o&&(o=e,i=o.children.map((e=>e.name)).filter((e=>r.has(e)))),r.add(e.name),null==n[e.name]&&(c.has(e.name)||l.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),h.push(e))})):s.push(e.name)))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:s,dynamicNode:o,syncInputs:i}}function TD(e,t){const{usedNodes:n,inputs:a}=t,r=Object.keys(a).map((e=>Rw(e)[0])).map((t=>e.nodes[t])),s=e.initNodes||[],o=e=>n.has("string"===typeof e?e:e.name);function i(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const u=i([...r,...e.weights,...s]).filter(o),c=i([...u,...Object.values(e.nodes)]).filter(o),l=new Map(c.map((e=>[e.name,e]))),h={};for(const m of c){h[m.name]=h[m.name]||0;for(const e of m.children)o(e)||(h[e.name]=Number.POSITIVE_INFINITY),h[e.name]=(h[e.name]||0)+1}const d=Object.entries(h).filter((e=>{let[,t]=e;return 0===t})).map((e=>{let[t]=e;return t})),p=[...d];for(;d.length>0;){const e=d.pop(),t=l.get(e);for(const n of t.children.filter(o))0===--h[n.name]&&(p.push(n.name),d.push(n.name))}const f=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),a=t.map((e=>e.name)),r=new Set(a);for(;a.length>0;){const e=a.pop(),t=n.get(e);for(const s of t.children)n.has(s.name)&&!r.has(s.name)&&(r.add(s.name),a.push(s.name))}const s=e.filter((e=>r.has(e.name)));return s}(p.map((e=>l.get(e))),u);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),a=new Set(t.map((e=>e.name))),r=e=>a.has("string"===typeof e?e:e.name),s=new Set(e.map((e=>e.name))),o=e=>s.has("string"===typeof e?e:e.name);for(const i of e){for(const e of i.children.filter(o)){if(!n.has(e.name))throw new FD("Child ".concat(e.name," of node ").concat(i.name," is unreachable."));if(n.get(i.name)>n.get(e.name))throw new FD("Node ".concat(i.name," is scheduled to run after its child ").concat(e.name,"."))}if(!r(i))for(const e of i.inputs){if(!n.has(e.name))throw new FD("Input ".concat(e.name," of node ").concat(i.name," is unreachable."));if(n.get(e.name)>n.get(i.name))throw new FD("Node ".concat(i.name," is scheduled to run before its input ").concat(e.name,"."))}}}(f,u),f}class FD extends Error{constructor(e){super("NodesExecutionOrderError: ".concat(e))}}const AD=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),RD=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),_D=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function OD(e){return AD.has(e.op)}function LD(e){return RD.has(e.op)}function MD(e){return _D.has(e.op)}class zD{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?"".concat(t,":").concat(e.defaultOutput):t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new zD(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),a=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(e,t){const n=ID(e,t,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:s}=n;if(null!=r)throw new Error("This execution contains the node '".concat(r.name,"', which has ")+"the dynamic op '".concat(r.op,"'. Please use ")+"model.executeAsync() instead. Alternatively, to avoid the "+"dynamic ops, specify the inputs [".concat(s,"]"));if(a.length>0){const n=t.map((e=>e.name)),r=Object.keys(e);throw new Error("Cannot compute the outputs [".concat(n,"] from the provided inputs ")+"[".concat(r,"]. Missing the following inputs: [").concat(a,"]"))}const o=TD(this.graph,n),i=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,a=e.map(((e,t)=>OD(e)?n:t)),r=e=>{const n=a[t.get(e.name)];return null==n?-1:n},s=e.map(((e,t)=>e.children.map(r).reduce(((e,t)=>Math.max(e,t)),a[t]))),o=new Map;for(let i=0;i<e.length;++i){const t=s[i];if(t===n)continue;const a=e[i],r=e[t];o.has(r.name)||o.set(r.name,[]),o.get(r.name).push(a)}return o}(o);return{orderedNodes:o,nodeLiveUntilMap:i}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return ds(t),t}cloneTensorList(e){if(!e)return null;return e.map((e=>this.cloneAndKeepTensor(e)))}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((e=>{let[t,n]=e;return[t,this.cloneTensorList(n)]})))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const a=n.map((e=>this.graph.nodes[Rw(e)[0]])),r=t.map((e=>Rw(e)[0])),s=new Set(r);let o=r.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const i=this.getCompilationKey(a,o);let u=this.compiledMap.get(i);null==u&&(u=this.compile(e,o),this.compiledMap.set(i,u));try{this.keepIntermediateTensors=ge().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const c={},l={};return ls((()=>{const n=new ED(this.weightMap,c,l,this.functionExecutorMap,this.parseNodeNameCache),a=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[r,s]=Rw(t,n),o=[];o[s]=e[t],a[r]=o,this.keepIntermediateTensors&&(this.clonedTensorsMap[r]=this.cloneTensorList(o))}));const r=this.getFrozenTensorIds(a),{orderedNodes:o,nodeLiveUntilMap:i}=u;for(const e of o){if(a[e.name])continue;const t=SD(e,a,n,this._resourceManager);if(de(t))throw new Error("The execution of the op '".concat(e.op,"' returned a promise. ")+"Please use model.executeAsync() instead.");a[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,a,n,r,s,i.get(e.name))}return null==this.parent&&n.dispose(r),t.map((e=>Iw(e,a,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,a,r,s,o){if(!OD(t)&&!s.has(e)){for(const a of n[e])null!=a&&(o[a.id]=(o[a.id]||0)+t.children.length);for(const e of t.inputs){if(OD(e))continue;const t=Tw(e.name,n,a);if(null!=t)for(const e of t){if(!e||e.kept||r.has(e.id))continue;const t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,a,r,s){function o(e){return OD(e)||r.has(e.name)}if(!OD(e)&&null!=s)for(const i of s){if(o(i))continue;const e=Tw(i.name,t,n);for(const t of e)!t||t.kept||a.has(t.id)||t.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=ge().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const s=new ED(this.weightMap,a,r,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(e,s,t,n),i=t.map((e=>Iw(e,o,s))),u=i.map((e=>e.id)),c=Object.keys(e).map((t=>e[t].id)),l=new Set([...u,...c,...this.weightIds]);return Object.values(o).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||l.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(l),i}async executeFunctionAsync(e,t,n){const a=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(a,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,a){const r=Object.keys(e),s=r.map((e=>this.graph.nodes[Rw(e)[0]])),o=n.map((e=>Rw(e)[0])),i=new Set(o);let u=o.map((e=>this.graph.nodes[e]));0===u.length&&(u=this._outputs);const{usedNodes:c,missingInputs:l,dynamicNode:h,syncInputs:d}=ID(e,u,this.weightMap,this._initNodes),p=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=Rw(t),r=[];r[a]=e[t],f[n]=r}));const m={},g=this.getFrozenTensorIds(f),y={};for(;p.length>0;){const e=this.processStack(s,p,t,f,y,g,i,m,c);await Promise.all(e)}null!=h||a||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=u.filter((e=>!OD(e)&&!Iw(e.name,f,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=h&&(e="Alternatively, to avoid the dynamic ops, use model.execute() "+"and specify the inputs [".concat(d,"]")),new Error("Cannot compute the outputs [".concat(b,"] from the provided ")+"inputs [".concat(r,"]. Consider providing the following inputs: ")+"[".concat(l,"]. ").concat(e))}return f}processStack(e,t,n,a,r,s,o,i,u){const c=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let l="";if("Enter"===e.node.op&&Ew("isConstant",e.node,a,n)&&([l]=Fw(e.node.name,n)),null==a[e.node.name]){const h=SD(e.node,a,n,this._resourceManager);l||([l]=Fw(e.node.name,n));const d=n.currentContext;de(h)?c.push(h.then((c=>(a[l]=c,this.keepIntermediateTensors&&(this.clonedTensorsMap[l]=this.cloneTensorList(c)),n.currentContext=d,this.checkTensorForDisposal(l,e.node,a,n,s,o,i),this.processChildNodes(e.node,t,n,a,r,u),c)))):(a[l]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[l]=this.cloneTensorList(h)),this.checkTensorForDisposal(l,e.node,a,n,s,o,i),this.processChildNodes(e.node,t,n,a,r,u))}else this.processChildNodes(e.node,t,n,a,r,u)}return c}processChildNodes(e,t,n,a,r,s){e.children.forEach((e=>{const[o]=Fw(e.name,n);!r[o]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!Iw(e,a,n)))&&(r[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!Iw(e,a,n)))&&(r[o]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[a]=Rw(t),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){const e=r.attrParams.shape.value;M(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>"The shape of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be [".concat(e,"], but was ")+"[".concat(n.shape,"]")))}r.attrParams.dtype&&r.attrParams.dtype.value&&M(n.dtype===r.attrParams.dtype.value,(()=>"The dtype of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be "+"".concat(r.attrParams.dtype.value,", but was ").concat(n.dtype)))}))}mapInputs(e){var t,n;const a={};for(const r in e){const s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[r];null!=s?a[s.name]=e[r]:a[r]=e[r]}return a}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=Rw(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error("The dict provided in model.execute(dict) has "+"keys: [".concat(t,"] that are not part of graph"))}mapOutputs(e){return e.map((e=>{var t,n;const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=a?a.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=Rw(e);if(!this.graph.nodes[t])throw new Error("The output '".concat(e,"' is not found in the graph"))}))}}class BD{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}const PD="?tfjs-format=file",WD="model.json";class VD{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e;this.modelUrl=t,this.loadOptions=n,this.version="n/a",this.io=a,null==n&&(this.loadOptions={}),this.resourceManager=new BD}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error("Found more than one (".concat(t.length,") load handlers for ")+"URL '".concat([e],"'"));this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return de(e)?e.then((e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e))):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await Ds(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let a=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(a=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=a,this.version="".concat(n.versions.producer,".").concat(n.versions.minConsumer),this.executor=new zD(eD.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=eD.Instance.transformGraph(e.modelInitializer);this.initializer=new zD(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"===typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error("Cannot find any save handlers for URL '".concat(e,"'"));if(t.length>1)throw new Error("Found more than one (".concat(t.length,") save handlers for ")+"URL '".concat(e,"'"));e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t={};return(e instanceof kr?[e]:e).forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof kr)&&!Array.isArray(e)){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const a=n[t];null!=a.resourceId&&(e[t]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error("Input tensor count mismatch, the graph model has ".concat(this.inputNodes.length-n," non-resource placeholders, while there are ").concat(e.length," input tensors provided."));let a=0;return this.inputNodes.reduce(((t,n)=>{var r,s,o;const i=null===(o=null===(s=null===(r=this.signature)||void 0===r?void 0:r.inputs)||void 0===s?void 0:s[n])||void 0===o?void 0:o.resourceId;return t[n]=null!=i?this.resourceIdToCapturedInput[i]:e[a++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let a=0;a<n.length;a++){const r=t[n[a]];this.resourceIdToCapturedInput[r.resourceId]=e[a]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&hs(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function UD(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e;if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==n&&(n={}),n.fromTFHub&&"string"===typeof t&&(t=function(e){e.endsWith("/")||(e+="/");return"".concat(e).concat(WD).concat(PD)}(t));const r=new VD(t,n,a);return await r.load(),r}function GD(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(a.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(KD(e)){const r=Array.isArray(e)?[]:{};a.add(e);for(const s in e){const o=GD(e[s],t,n,a);r[s]=o}return a.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error("Can't recurse into non-iterable type: ".concat(e))}return n.set(e,r.value),r.value}function HD(e){return jD(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:qD)}function jD(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const a=e[0];if(n.has(a))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(KD(a)){const r=Array.isArray(a)?[]:{};n.add(a);for(const s in a){const a=jD(e.map((e=>e[s])),t,n);r[s]=a}return n.delete(a),r}throw new Error("Can't recurse into non-iterable type: ".concat(a))}return r.value}function qD(e){return null===e?null:KD(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function KD(e){let t=!1;if(ge().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:a}=n(551);t=e instanceof a}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof kr)&&!(e instanceof Promise)&&!t)}function XD(e){return function(e,t){return GD(e,t)}(e,YD)}function YD(e){return e instanceof kr?{value:e.clone(),recurse:!1}:KD(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class QD{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class ZD extends QD{constructor(){super(ZD.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let a=0;a<n;a++)t[a]=this.get(this.wrap(this.begin+a));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function JD(e){return new nk(e)}function $D(e,t){return new pk(e,t)}ZD.INITIAL_CAPACITY=32;class ek{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new ck(this,e)}filter(e){return new ik(this,e)}map(e){return new uk(this,e)}mapAsync(e){return new lk(this,e)}serialMapAsync(e){return new lk(this,e).serial()}flatmap(e){return new dk(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e){return new ok(this,e,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:qD;return this.rowMajorBatch(e,t).map((e=>HD(e,n)))}concatenate(e,t){return new pk(new tk([this,e]),t)}take(e){return e<0||null==e?this:new sk(this,e)}skip(e){return e<0||null==e?this:new rk(this,e)}prefetch(e){return new mk(this,e)}shuffle(e,t){return new gk(this,e,t)}serial(){return new ak(this)}}class tk extends ek{constructor(e){super(),this.items=e,this.trav=0}summary(){return"Array of ".concat(this.items.length," items")}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:XD(e),done:!1}}}class nk extends ek{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message="Error thrown while iterating through a dataset: ".concat(e.message),e}}}class ak extends ek{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Serial")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class rk extends ek{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Skip")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;hs(e.value)}return this.upstream.next()}}class sk extends ek{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return"".concat(this.upstream.summary()," -> Take")}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class ok extends ek{constructor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> RowMajorBatch")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class ik extends ek{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Filter")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;hs(e.value)}}}class uk extends ek{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> Map")}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Br(e.value),n=this.transform(e.value),a=Br(n);for(const r of t)zr(r,a)||r.dispose();return{value:n,done:!1}}}class ck extends ek{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> handleErrors")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class lk extends ek{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> AsyncMap")}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Br(e.value),n=await this.transform(e.value),a=Br(n);for(const r of t)zr(r,a)||r.dispose();return{value:n,done:!1}}}class hk extends ek{constructor(){super(),this.outputQueue=new ZD,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class dk extends hk{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> Flatmap")}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Br(e.value),n=this.transform(e.value),a=Br(n);this.outputQueue.pushAll(n);for(const r of t)zr(r,a)||r.dispose();return!0}}class pk extends ek{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"".concat("TODO: fill in upstream of chained summaries"," -> Chained")}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var fk;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(fk||(fk={}));class mk extends ek{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new QD(t)}summary(){return"".concat(this.upstream.summary()," -> Prefetch")}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class gk extends mk{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Il.alea(n||or().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class yk{constructor(){this.size=null}batch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let a;return M(e>0,(()=>"batchSize needs to be positive, but it is\n      ".concat(e))),a=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),bk((async()=>(await n.iterator()).columnMajorBatch(e,t,vk)),a)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,bk((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,bk((async()=>(await t.iterator()).filter((t=>ls((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return bk((async()=>(await t.iterator()).map((t=>ls((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return bk((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return bk((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,bk((async()=>$D(JD((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,bk((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError("`Dataset.shuffle()` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for `tf.Tensor`s), consider setting "+"bufferSize to the dataset size (".concat(this.size," elements)"));const a=this,r=Il.alea(t||or().toString());return bk((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await a.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,bk((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function bk(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends yk{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function vk(e){if(null===e)return null;if(function(e){return null==e||null===(t=e)||"object"!==typeof t&&"function"!==typeof t||Array.isArray(e)||"object"===typeof e&&e instanceof kr||cr(e);var t}(e[0])){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof kr?ph(e):ss(e)}(e),recurse:!1}}return{value:null,recurse:!0}}yk.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");function xk(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&M("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors in the CPU backend.")))}))}const wk=_h;class Dk extends F{nextDataId(){return Dk.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new T(this,us())}write(e,t,n){this.firstUse&&(this.firstUse=!1,ge().get("IS_NODE")&&_a("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&J(n[0])){const r=n.map((e=>ir(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,a,r){this.data.set(e,{values:t,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){return Rp(this.readSync(n.real.dataId),this.readSync(n.imag.dataId))}return function(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error("Unknown dtype ".concat(t))}(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>ur(e)));return bo(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return bo(e.shape,e.dtype,t)}makeOutput(e,t,n){return us().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=or();e();return{kernelMs:or()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){xk([e],"where");const t=this.readSync(e.dataId);return wk(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Dk.nextDataId=0;function kk(e){return(t,n,a)=>{const r=Y(n,t.length);for(let s=0;s<t.length;++s)r[s]=e(t[s],a);return r}}function Ck(e,t,n){return Nk(e,kk(t),n)}function Nk(e,t,n){return a=>{let{inputs:r,attrs:s,backend:o}=a;const{x:i}=r;xk(i,e);const u=o,c=u.data.get(i.dataId).values;let l;if("string"===i.dtype){if(!Array.isArray(c))throw new Error("String tensor's value was not an instance of Array");l=pf(c)}else l=c;const h=n||i.dtype,d=t(l,h,s);return u.makeTensorInfo(i.shape,h,d)}}ps("cpu",(()=>new Dk),1);const Sk=Ck(vt,(e=>e>=0?e:Math.exp(e)-1)),Ek={kernelName:vt,backendName:"cpu",kernelFunc:Sk};function Ik(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const Tk={kernelName:Mt,backendName:"cpu",kernelFunc:Ik};function Fk(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a;xk([r],"leakyRelu");const o=P(r.shape),i=n.data.get(r.dataId).values,u=X("float32",o);for(let c=0;c<i.length;c++)u[c]=i[c]<0?s*i[c]:i[c];return n.makeTensorInfo(r.shape,"float32",u)}const Ak={kernelName:Ut,backendName:"cpu",kernelFunc:Fk};function Rk(e){return(t,n,a,r,s)=>{const o=qo(t,n),i=o.length,u=ae(o),c=X(s,P(o)),l=t.length,h=n.length,d=ae(t),p=ae(n),f=Ho(t,o),m=Ho(n,o);if(f.length+m.length===0)for(let g=0;g<c.length;++g)c[g]=e(a[g%a.length],r[g%r.length]);else for(let g=0;g<c.length;++g){const t=he(g,i,u),n=t.slice(-l);f.forEach((e=>n[e]=0));const s=le(n,l,d),o=t.slice(-h);m.forEach((e=>o[e]=0));const y=le(o,h,p);c[g]=e(a[s],r[y])}return[c,o]}}const _k=Rk(((e,t)=>e<0?t*e:e));function Ok(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t;xk([a,r],"prelu");const s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,[i,u]=_k(a.shape,r.shape,s,o,"float32");return n.makeTensorInfo(u,"float32",i)}const Lk={kernelName:Cn,backendName:"cpu",kernelFunc:Ok},Mk=Ck(Rn,(e=>Math.max(0,e))),zk={kernelName:Rn,backendName:"cpu",kernelFunc:Mk},Bk=Ck(Bn,(e=>Math.min(Math.max(0,e),6))),Pk={kernelName:Bn,backendName:"cpu",kernelFunc:Bk},Wk=kk((e=>1/(1+Math.exp(-e)))),Vk=Ck(Zn,(e=>1/(1+Math.exp(-e)))),Uk={kernelName:Zn,backendName:"cpu",kernelFunc:Vk};function Gk(e,t,n,a,r){if("linear"===n)return Ik({inputs:{x:t},backend:e});if("relu"===n)return Mk({inputs:{x:t},backend:e});if("elu"===n)return Sk({inputs:{x:t},backend:e});if("relu6"===n)return Bk({inputs:{x:t},backend:e});if("prelu"===n)return Ok({inputs:{x:t,alpha:a},backend:e});if("leakyrelu"===n)return Fk({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return Vk({inputs:{x:t},backend:e});throw new Error("Activation ".concat(n," has not been implemented for the CPU backend."))}function Hk(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,i=n.makeTensorInfo(a.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",s),imag:n.makeTensorInfo(r.shape,"float32",o)},i}const jk={kernelName:Ke,backendName:"cpu",kernelFunc:Hk};function qk(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){return Hk({inputs:{real:qk(e,t,"float32"),imag:qk(e,t,"float32")},backend:e})}const a=ie(P(t),n);return e.makeTensorInfo(t,n,a)}function Kk(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.real,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const Xk={kernelName:Fn,backendName:"cpu",kernelFunc:Kk};function Yk(e,t,n,a){if("int32"===a){return[t,"int32",Int32Array.from(e)]}if("bool"===a){const a=sr([0],n),[r,s]=Rk(((e,t)=>e!==t?1:0))(t,[],e,a,"bool");return[s,"bool",r]}throw new Error("Error in Cast: failed to cast ".concat(n," to ").concat(a))}function Qk(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dtype:s}=a;if("complex64"===s){if("complex64"===r.dtype)return Ik({inputs:{x:r},backend:n});const e=qk(n,r.shape,r.dtype),t=Qk({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=Hk({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),a}if("complex64"===r.dtype){const e=Kk({inputs:{input:r},backend:n}),t=Qk({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!Q(r.dtype,s)){const e=Ik({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}const o=n.data.get(r.dataId).values,[i,u,c]=Yk(o,r.shape,r.dtype,s);return n.makeTensorInfo(i,u,c)}const Zk={kernelName:He,backendName:"cpu",kernelFunc:Qk};function Jk(e,t,n,a){return null==n?n=>{let{inputs:r,backend:s}=n;const{a:o,b:i}=r,u=s;xk([o,i],e);const c=u.data.get(o.dataId).values,l=u.data.get(i.dataId).values,h="string"===o.dtype?pf(c):c,d="string"===o.dtype?pf(l):l,p=a||o.dtype,[f,m]=t(o.shape,i.shape,h,d,p);return u.makeTensorInfo(m,p,f)}:e=>{let{inputs:r,backend:s}=e;const{a:o,b:i}=r,u=s;if("complex64"===o.dtype||"complex64"===i.dtype){const e=Qk({inputs:{x:o},backend:u,attrs:{dtype:"complex64"}}),t=u.data.get(e.dataId),a=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,s=u.data.get(a.dataId).values,c=u.data.get(r.dataId).values,l=Qk({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),h=u.data.get(l.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=u.data.get(d.dataId).values,m=u.data.get(p.dataId).values,[g,y,b]=n(o.shape,i.shape,s,c,f,m),v=u.makeTensorInfo(b,"float32",g),x=u.makeTensorInfo(b,"float32",y),w=Hk({inputs:{real:v,imag:x},backend:u});return u.disposeIntermediateTensorInfo(e),u.disposeIntermediateTensorInfo(l),u.disposeIntermediateTensorInfo(v),u.disposeIntermediateTensorInfo(x),w}{const e=u.data.get(o.dataId).values,n=u.data.get(i.dataId).values,r=a||o.dtype,[s,c]=t(o.shape,i.shape,e,n,r);return u.makeTensorInfo(c,r,s)}}}function $k(e){return(t,n,a,r,s,o)=>{const i=qo(t,n),u=P(i),c=i.length,l=ae(i),h=X("float32",u),d=X("float32",u),p=Ho(t,i),f=Ho(n,i),m=Rp(a,r),g=Rp(s,o),y=t.length,b=ae(t),v=n.length,x=ae(n);if(p.length+f.length===0)for(let w=0;w<h.length;w++){const t=w%m.length,n=w%g.length,a=e(m[2*t],m[2*t+1],g[2*n],g[2*n+1]);h[w]=a.real,d[w]=a.imag}else for(let w=0;w<h.length;w++){const t=he(w,c,l),n=t.slice(-y);p.forEach((e=>n[e]=0));const a=le(n,y,b),r=t.slice(-v);f.forEach((e=>r[e]=0));const s=le(r,v,x),o=e(m[2*a],m[2*a+1],g[2*s],g[2*s+1]);h[w]=o.real,d[w]=o.imag}return[h,d,i]}}const eC=Rk(((e,t)=>e+t)),tC=$k(((e,t,n,a)=>({real:e+n,imag:t+a}))),nC=Jk(Ce,eC,tC),aC={kernelName:Ce,backendName:"cpu",kernelFunc:nC};function rC(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,o=P(r.shape),i=j(s,o),u=P(i);M(o===u,(()=>"The new shape (".concat(i,") has ").concat(u," elements and the old ")+"shape (".concat(r.shape,") has ").concat(o," elements. The new shape and old ")+"shape must have the same number of elements.")),n.incRef(r.dataId);const c=n.data.get(r.dataId);if(null!=c.complexTensorInfos){const e=c.complexTensorInfos.real,t=c.complexTensorInfos.imag;e.shape=i,t.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}const sC={kernelName:_n,backendName:"cpu",kernelFunc:rC};function oC(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:o,transposeB:i}=a;xk([r,s],"matMul");const u=r.shape.length,c=s.shape.length,l=o?r.shape[u-2]:r.shape[u-1],h=i?s.shape[c-1]:s.shape[c-2],d=o?r.shape[u-1]:r.shape[u-2],p=i?s.shape[c-2]:s.shape[c-1],f=r.shape.slice(0,-2),m=s.shape.slice(0,-2),g=P(f),y=P(m),b=qo(r.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,p]);M(l===h,(()=>"Error in matMul: inner shapes (".concat(l,") and (")+"".concat(h,") of Tensors with shapes ").concat(r.shape," and ")+"".concat(s.shape," and transposeA=").concat(o)+" and transposeB=".concat(i," must match.")));const v=i?[y,p,h]:[y,h,p],x=rC({inputs:{x:r},backend:n,attrs:{shape:o?[g,l,d]:[g,d,l]}}),w=rC({inputs:{x:s},backend:n,attrs:{shape:v}}),D=o?x.shape[1]:x.shape[2],k=o?x.shape[2]:x.shape[1],C=i?w.shape[1]:w.shape[2],N=Math.max(g,y),S=n.data.get(x.dataId).values,E=n.data.get(w.dataId).values,I=ae(x.shape),T=ae(w.shape),[F,A,R]=o?[I[0],1,I[1]]:[I[0],I[1],1],[_,O,L]=i?[1,T[1],T[0]]:[T[1],1,T[0]],z=k*C,B=bo([N,k,C],x.dtype),W=B.values,V=n.blockSize;for(let M=0;M<N;M++){const e=M%g,t=M%y;for(let n=0;n<k;n+=V){const a=Math.min(n+V,k);for(let r=0;r<C;r+=V){const s=Math.min(r+V,C);for(let o=0;o<D;o+=V){const i=Math.min(o+V,D);for(let u=n;u<a;u++)for(let n=r;n<s;n++){let a=0;for(let r=o;r<i;r++){a+=S[e*F+u*A+r*R]*E[r*_+n*O+t*L]}W[M*z+(u*C+n)]+=a}}}}}return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,B.dtype,B.values)}const iC={kernelName:Pe,backendName:"cpu",kernelFunc:oC};const uC={kernelName:Fa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:h}=a;let d,p,f;const m=[];d=oC({inputs:{a:r,b:s},attrs:{transposeA:u,transposeB:c},backend:n}),o&&(p=nC({inputs:{a:d,b:o},backend:n}),m.push(d),d=p),l&&(f=Gk(n,d,l,i,h),m.push(d),d=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return d}};function cC(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const lC={kernelName:we,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;xk(t,"abs");let a=new Float32Array(P(t.shape));return a=cC(n.data.get(t.dataId).values),n.makeOutput(a,t.shape,t.dtype)}},hC=Ck(De,(e=>Math.acos(e))),dC={kernelName:De,backendName:"cpu",kernelFunc:hC},pC=Ck(ke,(e=>Math.acosh(e))),fC={kernelName:ke,backendName:"cpu",kernelFunc:pC};const mC={kernelName:Ne,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,a=t;xk(t,"addN");const r=a.map((e=>n.data.get(e.dataId).values)),s=bo(a[0].shape,a[0].dtype),o=s.values;for(let i=0;i<a.length;i++){const e=r[i];for(let t=0;t<o.length;t++)o[t]+=e[t]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function gC(e,t,n,a,r){const s=t.length,o=P(t),i=ae(t),u=ae(r),c=X(n,P(r));for(let l=0;l<o;++l){const t=he(l,s,i),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[a[e]];c[le(n,s,u)]=e[l]}return c}function yC(e){const{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{perm:s}=n;xk(r,"transpose");const o=r.shape.length,i=new Array(o);for(let c=0;c<i.length;c++)i[c]=r.shape[s[c]];const u=gC(a.data.get(r.dataId).values,r.shape,r.dtype,s,i);return{dataId:a.write(u,i,r.dtype),shape:i,dtype:r.dtype}}const bC={kernelName:Da,backendName:"cpu",kernelFunc:yC};const vC={kernelName:Se,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;xk(r,"all");const i=q(s,r.shape);let u=i;const c=hc(u,r.shape.length);let l=r;null!=c&&(l=yC({inputs:{x:r},backend:n,attrs:{perm:c}}),u=pc(u.length,r.shape.length)),lc("all",u,l.shape.length);const[h,d]=uc(l.shape,u),p=P(d),f=ie(P(h),l.dtype),m=n.data.get(l.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const a=m[e+n];t=t&&a}f[y]=t}null!=c&&n.disposeIntermediateTensorInfo(l);const g=n.makeTensorInfo(h,l.dtype,f);if(o){const e=rC({inputs:{x:g},backend:n,attrs:{shape:cc(h,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const xC={kernelName:Ee,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;xk(r,"any");const i=q(s,r.shape);let u=i;const c=hc(u,r.shape.length);let l=r;null!=c&&(l=yC({inputs:{x:r},backend:n,attrs:{perm:c}}),u=pc(u.length,r.shape.length)),lc("any",u,l.shape.length);const[h,d]=uc(l.shape,u),p=P(d),f=ie(P(h),l.dtype),m=n.data.get(l.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const a=m[e+n];t=t||a}f[y]=t}null!=c&&n.disposeIntermediateTensorInfo(l);const g=n.makeTensorInfo(h,l.dtype,f);if(o){const e=rC({inputs:{x:g},backend:n,attrs:{shape:cc(h,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const wC={kernelName:Ie,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;xk(r,"argMax");let o=q(s,r.shape);const i=hc(o,r.shape.length);let u=r;const c=[];null!=i&&(u=yC({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(u),o=pc(o.length,u.shape.length)),o=[o[0]],lc("argMax",o,u.shape.length);const[l,h]=uc(u.shape,o),d=ie(P(l),"int32"),p=P(h),f=n.data.get(u.dataId).values;for(let m=0;m<d.length;++m){const e=m*p;let t=f[e],n=0;for(let a=0;a<p;++a){const r=f[e+a];r>t&&(t=r,n=a)}d[m]=n}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l,"int32",d)}};const DC={kernelName:Te,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;xk(r,"argMin");let o=q(s,r.shape);const i=hc(o,r.shape.length);let u=r;const c=[];null!=i&&(u=yC({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(u),o=pc(o.length,u.shape.length)),o=[o[0]],lc("argMin",o,u.shape.length);const[l,h]=uc(u.shape,o),d=ie(P(l),"int32"),p=P(h),f=n.data.get(u.dataId).values;for(let m=0;m<d.length;++m){const e=m*p;let t=f[e],n=0;for(let a=0;a<p;++a){const r=f[e+a];r<t&&(t=r,n=a)}d[m]=n}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l,"int32",d)}},kC=Ck(Fe,(e=>Math.asin(e))),CC={kernelName:Fe,backendName:"cpu",kernelFunc:kC},NC=Ck(Ae,(e=>Math.asinh(e))),SC={kernelName:Ae,backendName:"cpu",kernelFunc:NC},EC=Ck(Re,(e=>Math.atan(e))),IC={kernelName:Re,backendName:"cpu",kernelFunc:EC},TC=Rk(((e,t)=>Math.atan2(e,t))),FC=Jk(Oe,TC),AC={kernelName:Oe,backendName:"cpu",kernelFunc:FC},RC=Ck(_e,(e=>Math.atanh(e))),_C={kernelName:_e,backendName:"cpu",kernelFunc:RC};function OC(e,t,n,a,r,s){const o=r.strideHeight,i=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,l=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=bo(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],v=r.outShape[3];for(let x=0;x<r.batchSize;++x){const t=x*y,n=x*a[0];for(let m=0;m<r.inChannels;++m)for(let y=0;y<r.outHeight;++y){const x=y*o-d,w=Math.max(0,x),D=Math.min(r.inHeight,l+x),k=t+y*b;for(let t=0;t<r.outWidth;++t){const o=t*i-p,l=Math.max(0,o),d=Math.min(r.inWidth,h+o);let y=f,b=0,x=0;for(let t=w;t<D;t+=u){const r=n+t*a[1];for(let t=l;t<d;t+=c){const n=e[r+t*a[2]+m];"max"===s&&n>y?y=n:"avg"===s&&(b+=n,x++)}if(isNaN(y))break}g[k+t*v+m]="avg"===s?b/x:y}}}return m}function LC(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=bo(a.outShape,"int32"),i=a.strideHeight,u=a.strideWidth,c=a.dilationHeight,l=a.dilationWidth,h=a.effectiveFilterHeight,d=a.effectiveFilterWidth,p=a.padInfo.top,f=a.padInfo.left,m=bo(t,n,e);for(let g=0;g<a.batchSize;++g)for(let e=0;e<a.inChannels;++e)for(let t=0;t<a.outHeight;++t){const n=t*i-p;let y=n;for(;y<0;)y+=c;const b=Math.min(a.inHeight,h+n);for(let i=0;i<a.outWidth;++i){const h=i*u-f;let p=h;for(;p<0;)p+=l;const v=Math.min(a.inWidth,d+h);let x=Number.NEGATIVE_INFINITY,w=-1;for(let t=y;t<b;t+=c){const o=t-n;for(let n=p;n<v;n+=l){const i=n-h,u=m.get(g,t,n,e);u>x&&(x=u,w=r?s?((g*a.inHeight+t)*a.inWidth+n)*a.inChannels+e:(t*a.inWidth+n)*a.inChannels+e:o*d+i)}}o.set(w,g,t,i,e)}}return o}function MC(e,t,n,a,r,s){const o=r.strideDepth,i=r.strideHeight,u=r.strideWidth,c=r.dilationDepth,l=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=bo(r.outShape,n),x=v.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],D=r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[3]*r.outShape[4],C=r.outShape[4];for(let N=0;N<r.batchSize;++N){const t=N*w,n=N*a[0];for(let v=0;v<r.inChannels;++v)for(let w=0;w<r.outDepth;++w){const N=w*o-m;let S=N;for(;S<0;)S+=c;const E=Math.min(r.inDepth,d+N),I=t+w*D;for(let t=0;t<r.outHeight;++t){const o=t*i-g;let d=o;for(;d<0;)d+=l;const m=Math.min(r.inHeight,p+o),w=I+t*k;for(let t=0;t<r.outWidth;++t){const o=t*u-y;let i=o;for(;i<0;)i+=h;const p=Math.min(r.inWidth,f+o),g=w+t*C;let D=b,k=0,N=0;for(let t=S;t<E;t+=c){const r=n+t*a[1];for(let t=d;t<m;t+=l){const n=r+t*a[2];for(let t=i;t<p;t+=h){const r=e[n+t*a[3]+v];if("max"===s&&r>D?D=r:"avg"===s&&(k+=r,N++),isNaN(D))break}if(isNaN(D))break}if(isNaN(D))break}x[g+v]="avg"===s?k/Math.max(N,1):D}}}}return v}const zC={kernelName:Le,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;xk(r,"avgPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:u}=a;M(uu(o,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const c=Ji(r.shape,s,o,1,i,u);let l;if(1===c.filterWidth&&1===c.filterHeight&&W(c.inShape,c.outShape))l=Ik({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=ae(r.shape),a=OC(e,r.shape,r.dtype,t,c,"avg");l=n.makeTensorInfo(c.outShape,r.dtype,a.values)}return l}};const BC={kernelName:ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:u,dataFormat:c}=a;xk(r,"avgPool3d");const l=$i(r.shape,s,o,1,i,u,c),h=MC(n.data.get(r.dataId).values,r.shape,r.dtype,ae(r.shape),l,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};const PC={kernelName:Be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:o,strides:i,pad:u,dimRoundingMode:c}=a;xk([r,s],"avgPool3DGrad");const l=$i(s.shape,o,i,1,u,c),h=l.strideDepth,d=l.strideHeight,p=l.strideWidth,f=l.filterDepth,m=l.filterHeight,g=l.filterWidth,y=l.dilationDepth,b=l.dilationHeight,v=l.dilationWidth,x=l.effectiveFilterDepth,w=l.effectiveFilterHeight,D=l.effectiveFilterWidth,k=x-1-l.padInfo.front,C=D-1-l.padInfo.left,N=w-1-l.padInfo.top,S=bo(s.shape,"float32"),E=1/(f*m*g),I=n.bufferSync(r);for(let T=0;T<l.batchSize;++T)for(let e=0;e<l.inChannels;++e)for(let t=0;t<l.inDepth;++t)for(let n=0;n<l.inHeight;++n)for(let a=0;a<l.inWidth;++a){const r=t-k,s=n-N,o=a-C;let i=0;for(let t=0;t<x;t+=y){const n=(r+t)/h;if(!(n<0||n>=l.outDepth||Math.floor(n)!==n))for(let t=0;t<w;t+=b){const a=(s+t)/d;if(!(a<0||a>=l.outHeight||Math.floor(a)!==a))for(let t=0;t<D;t+=v){const r=(o+t)/p;if(r<0||r>=l.outWidth||Math.floor(r)!==r)continue;i+=I.get(T,n,a,r,e)}}}S.set(i*E,T,t,n,a,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const WC={kernelName:Me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s;xk([r,s],"avgPoolGrad");const{filterSize:i,strides:u,pad:c}=a,l=Ji(o.shape,i,u,1,c),h=l.strideHeight,d=l.strideWidth,p=l.filterHeight,f=l.filterWidth,m=l.dilationHeight,g=l.dilationWidth,y=l.effectiveFilterHeight,b=l.effectiveFilterWidth,v=b-1-l.padInfo.left,x=y-1-l.padInfo.top,w=bo(o.shape,"float32"),D=1/(p*f),k=n.data.get(r.dataId).values,C=bo(r.shape,"float32",k);for(let N=0;N<l.batchSize;++N)for(let e=0;e<l.inChannels;++e)for(let t=0;t<l.inHeight;++t)for(let n=0;n<l.inWidth;++n){const a=t-x,r=n-v;let s=0;for(let t=0;t<y;t+=m){const n=(a+t)/h;if(!(n<0||n>=l.outHeight||Math.floor(n)!==n))for(let t=0;t<b;t+=g){const a=(r+t)/d;if(a<0||a>=l.outWidth||Math.floor(a)!==a)continue;s+=C.get(N,n,a,e)}}w.set(s*D,N,t,n,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const VC={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,scale:s,offset:o,mean:i,variance:u}=t;M(i.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),M(null==o||i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),M(null==s||i.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),xk([r,i,u,s,o],"batchNorm");let{varianceEpsilon:c}=a;null==c&&(c=.001);const l=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,d=n.data.get(u.dataId).values,p=s?n.data.get(s.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(l.length),g=f.length,y=p.length,b=d.length,v=h.length;let x=0,w=0,D=0,k=0;for(let C=0;C<l.length;++C)m[C]=f[x++]+(l[C]-h[w++])*p[D++]/Math.sqrt(d[k++]+c),x>=g&&(x=0),w>=v&&(w=0),D>=y&&(D=0),k>=b&&(k=0);return n.makeTensorInfo(r.shape,r.dtype,m)}};function UC(e,t,n,a,r){const s=Oi(a,t,n),o=P(n),i=ae(a);if(s){const n=Li(t,i);return"string"===r?e.slice(n,n+o):e.subarray(n,n+o)}const u=bo(a,r,"string"===r?pf(e):e),c=bo(n,r);for(let l=0;l<c.size;++l){const e=c.indexToLoc(l),n=e.map(((e,n)=>e+t[n]));c.set(u.get(...n),...e)}return"string"===r?ff(c.values):c.values}function GC(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:o}=a;xk(r,"slice");const[i,u]=Mi(r,s,o);Di(r,i,u);const c=UC(n.data.get(r.dataId).values,i,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,c)}const HC={kernelName:Kn,backendName:"cpu",kernelFunc:GC};const jC={kernelName:We,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:o}=a;xk([r],"batchToSpaceND");const i=s.reduce(((e,t)=>e*t)),u=bp(r.shape,s,i),c=vp(u.length,s.length),l=xp(r.shape,s,i),h=wp(o,s.length),d=Dp(l,o,s.length),p=rC({inputs:{x:r},backend:n,attrs:{shape:u}}),f=yC({inputs:{x:p},backend:n,attrs:{perm:c}}),m=rC({inputs:{x:f},backend:n,attrs:{shape:l}}),g=GC({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function qC(e,t,n,a,r){const s=P(a),o=ie(r,n);for(let i=0;i<e.length;i++){const n=e[i];if(n<0)throw new Error("Input x must be non-negative!");n>=r||(o[n]+=s>0?t[i]:1)}return o}function KC(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e.shape[0],s=e.shape[1],o=bo([r,n],t.dtype);for(let i=0;i<r;i++)for(let r=0;r<s;r++){const s=e.get(i,r);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(a?o.set(1,i,s):t.size>0?o.set(o.get(i,s)+t.get(i,r),i,s):o.set(o.get(i,s)+1,i,s))}return o}const XC={kernelName:Ve,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o}=a,i=qC(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,i)}},YC=Rk(((e,t)=>e&t)),QC=Jk(Ue,YC),ZC={kernelName:Ue,backendName:"cpu",kernelFunc:QC};const JC={kernelName:Ge,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,i=qo(Array.from(s),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},$C=kk((e=>Math.ceil(e))),eN=Nk(je,$C),tN={kernelName:je,backendName:"cpu",kernelFunc:eN},nN=Ck(qe,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),aN={kernelName:qe,backendName:"cpu",kernelFunc:nN},rN={kernelName:Xe,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(P(t.shape)),r=n.data.get(t.dataId),s=r.complexTensorInfos.real,o=r.complexTensorInfos.imag,i=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values;for(let c=0;c<i.length;c++){const e=i[c],t=u[c];a[c]=Math.hypot(e,t)}return n.makeOutput(a,t.shape,"float32")}};function sN(e,t,n,a){const r=Y(n,P(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{const n=P(e.shape);r.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{const s="string"===n?pf(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const i=n*t[1]+a;for(let t=0;t<e.shape[1];++t)r[i+t]=s[o++]}a+=e.shape[1]}))}return r}function oN(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.imag,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const iN={kernelName:Bt,backendName:"cpu",kernelFunc:oN};function uN(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=q(r,t[0].shape)[0];up(t.map((e=>e.shape)),s);let o=cp(t.map((e=>e.shape)),s);if(0===P(o))return n.makeTensorInfo(o,t[0].dtype,[]);const i=t.filter((e=>P(e.shape)>0));if(1===i.length)return Ik({inputs:{x:i[0]},backend:n});if("complex64"===i[0].dtype){const e=i.map((e=>Kk({inputs:{input:e},backend:n}))),t=i.map((e=>oN({inputs:{input:e},backend:n}))),a=uN({inputs:e,backend:n,attrs:{axis:s}}),r=uN({inputs:t,backend:n,attrs:{axis:s}}),o=Hk({inputs:{real:a,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),o}const u=i.map((e=>{const t=P(e.shape.slice(s));return rC({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),c=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=cp(u.map((e=>e.shape)),1);const l=1===u[0].shape[0],h=sN(c,o,t[0].dtype,l),d=cp(i.map((e=>e.shape)),s),p=n.makeTensorInfo(d,t[0].dtype,h);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const cN={kernelName:Ye,backendName:"cpu",kernelFunc:uN};function lN(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dataFormat:u,dilations:c,dimRoundingMode:l}=a;xk([r,s],"conv2d");const h=lu(u),d=eu(r.shape,s.shape,o,c,i,l,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,v="channelsLast"===d.dataFormat,x=new vr(d.outShape,r.dtype),w=ae(r.shape),D=ae(s.shape),k=w[0],C=v?w[1]:w[2],N=v?w[2]:1,S=v?1:w[1],E=x.strides[0],I=v?x.strides[1]:x.strides[2],T=v?x.strides[2]:1,F=v?1:x.strides[1],A=n.data.get(r.dataId).values,R=n.data.get(s.dataId).values,_=x.values;for(let O=0;O<d.batchSize;++O){const e=O*k,t=O*E;for(let n=0;n<d.outHeight;++n){const a=t+n*I,r=n*d.strideHeight-b;for(let t=0;t<p;++t){const n=r+t*m;if(n<0||n>=d.inHeight)continue;const s=t*D[0],o=e+n*C;for(let e=0;e<d.outWidth;++e){const t=a+e*T,n=e*d.strideWidth-y;for(let e=0;e<f;++e){const a=n+e*g;if(a<0||a>=d.inWidth)continue;const r=o+a*N;let i=s+e*D[1];for(let e=0;e<d.inChannels;++e){const n=A[r+e*S];for(let e=0;e<d.outChannels;++e)_[t+e*F]+=n*R[i+e];i+=d.outChannels}}}}}}return n.makeTensorInfo(x.shape,x.dtype,_)}const hN={kernelName:Qe,backendName:"cpu",kernelFunc:lN};const dN={kernelName:Ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:i,dataFormat:u,dimRoundingMode:c,filterShape:l}=a;xk([r,s],"conv2dBackpropFilter");const h=lu(u),d=eu(r.shape,l,o,1,i,c,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new vr(d.filterShape,"float32"),v=d.padInfo.left,x=d.padInfo.top,w=n.data.get(r.dataId).values,D=n.data.get(s.dataId).values,k=new vr(r.shape,r.dtype,w),C=new vr(s.shape,s.dtype,D);for(let N=0;N<m;++N){const e=Math.max(0,Math.ceil((x-N)/p)),t=Math.min(d.outHeight,(d.inHeight+x-N)/p);for(let n=0;n<g;++n){const a=Math.max(0,Math.ceil((v-n)/f)),r=Math.min(d.outWidth,(d.inWidth+v-n)/f);for(let s=0;s<d.inChannels;++s)for(let o=0;o<d.outChannels;++o){let i=0;for(let u=0;u<d.batchSize;++u)for(let c=e;c<t;++c){const e=N+c*p-x;for(let t=a;t<r;++t){const a=n+t*f-v;i+=y?k.get(u,e,a,s)*C.get(u,c,t,o):k.get(u,s,e,a)*C.get(u,o,c,t)}}b.set(i,N,n,s,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const pN={kernelName:Je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:o,strides:i,pad:u,dataFormat:c,dimRoundingMode:l}=a;xk([r,s],"conv2dBackpropInput");const h=ae(s.shape),d=ae(r.shape);let p=lu(c);const f=eu(o,s.shape,i,1,u,l,!1,p),m=new vr(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,b=n.data.get(s.dataId).values,[v,x,w]=h,{batchSize:D,filterHeight:k,filterWidth:C,inChannels:N,inHeight:S,inWidth:E,outChannels:I,outHeight:T,outWidth:F,strideHeight:A,strideWidth:R}=f;p=f.dataFormat;const _=k-1-f.padInfo.top,O=C-1-f.padInfo.left,L="channelsLast"===p,M=m.strides[0],z=L?m.strides[1]:m.strides[2],B=L?m.strides[2]:1,P=L?1:m.strides[1],W=d[0],V=L?d[1]:d[2],U=L?d[2]:1,G=L?1:d[1];for(let H=0;H<D;++H)for(let e=0;e<N;++e)for(let t=0;t<S;++t){const n=t-_,a=Math.max(0,Math.ceil(n/A)),r=Math.min(T,(k+n)/A);for(let s=0;s<E;++s){const o=s-O,i=Math.max(0,Math.ceil(o/R)),u=Math.min(F,(C+o)/R);let c=0;for(let t=a;t<r;++t){const a=t*A-n;for(let n=i;n<u;++n){const r=W*H+V*t+U*n,s=v*(k-1-a)+x*(C-1-(n*R-o))+w*e;for(let e=0;e<I;++e){c+=y[r+G*e]*b[s+e]}}}g[M*H+z*t+B*s+P*e]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const fN={kernelName:$e,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:u}=a;xk([r,s],"conv3d");const c=tu(r.shape,s.shape,o,u,i),{filterDepth:l,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=c,y=g.front,b=g.left,v=g.top,x=new vr(c.outShape,r.dtype),w=n.data.get(r.dataId).values,D=n.data.get(s.dataId).values,k=x.values,C=ae(r.shape),N=ae(s.shape);for(let S=0;S<c.batchSize;++S){const e=S*C[0],t=S*x.strides[0];for(let n=0;n<c.outDepth;++n){const a=t+n*x.strides[1],r=n*c.strideDepth-y;for(let t=0;t<l;++t){const n=r+t*p;if(n<0||n>=c.inDepth)continue;const s=t*N[0],o=e+n*C[1];for(let e=0;e<c.outHeight;++e){const t=a+e*x.strides[2],n=e*c.strideHeight-v;for(let e=0;e<h;++e){const a=n+e*f;if(a<0||a>=c.inHeight)continue;const r=s+e*N[1],i=o+a*C[2];for(let e=0;e<c.outWidth;++e){const n=t+e*c.outChannels,a=e*c.strideWidth-b;for(let e=0;e<d;++e){const t=a+e*m;if(t<0||t>=c.inWidth)continue;const s=r+e*N[2],o=i+t*c.inChannels;let u=s;for(let e=0;e<c.inChannels;++e){const t=w[o+e];for(let e=0;e<c.outChannels;++e)k[n+e]+=t*D[u+e];u+=c.outChannels}}}}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const mN={kernelName:et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:i,filterShape:u}=a;xk([r,s],"conv3dBackpropFilterV2");const c=ae(r.shape),l=ae(s.shape),h=tu(r.shape,u,o,1,i),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new vr(h.filterShape,"float32"),v=b.values,[x,w,D,k]=b.strides,C=n.data.get(s.dataId).values,[N,S,E,I]=l,T=n.data.get(r.dataId).values,[F,A,R,_]=c,O=h.padInfo.front,L=h.padInfo.left,M=h.padInfo.top;for(let z=0;z<m;++z){const e=Math.max(0,Math.ceil((O-z)/d)),t=Math.min(h.outDepth,(h.inDepth+O-z)/d),n=z*x;for(let a=0;a<g;++a){const r=Math.max(0,Math.ceil((M-a)/p)),s=Math.min(h.outHeight,(h.inHeight+M-a)/p),o=a*w+n;for(let n=0;n<y;++n){const i=Math.max(0,Math.ceil((L-n)/f)),u=Math.min(h.outWidth,(h.inWidth+L-n)/f),c=n*D+o;for(let o=0;o<h.inChannels;++o){const l=o*k+c;for(let c=0;c<h.outChannels;++c){let m=0;for(let l=0;l<h.batchSize;++l){const h=l*F,g=l*N;for(let l=e;l<t;++l){const e=(z+l*d-O)*A+h,t=l*S+g;for(let l=r;l<s;++l){const r=(a+l*p-M)*R+e,s=l*E+t;for(let e=i;e<u;++e){const t=e*I+s;m+=T[(n+e*f-L)*_+r+o]*C[t+c]}}}}v[l+c]=m}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const gN={kernelName:tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:o,strides:i,inputShape:u}=a;xk([r],"conv3dBackpropInputV2");const c=ae(r.shape),l=ae(s.shape),h=tu(u,s.shape,i,1,o),d=new vr(h.inShape,"float32"),p=d.values,[f,m,g,y]=d.strides,b=n.data.get(r.dataId).values,[v,x,w,D]=c,k=n.data.get(s.dataId).values,[C,N,S,E]=l,{batchSize:I,filterDepth:T,filterHeight:F,filterWidth:A,inChannels:R,inDepth:_,inHeight:O,inWidth:L,outChannels:M,outDepth:z,outHeight:B,outWidth:P,strideDepth:W,strideHeight:V,strideWidth:U}=h,G=T-1-h.padInfo.front,H=F-1-h.padInfo.top,j=A-1-h.padInfo.left;for(let q=0;q<I;++q)for(let e=0;e<R;++e)for(let t=0;t<_;++t){const n=t-G,a=Math.max(0,Math.ceil(n/W)),r=Math.min(z,(T+n)/W);for(let s=0;s<O;++s){const o=s-H,i=Math.max(0,Math.ceil(o/V)),u=Math.min(B,(F+o)/V);for(let c=0;c<L;++c){const l=c-j,h=Math.max(0,Math.ceil(l/U)),d=Math.min(P,(A+l)/U);let I=0;for(let t=a;t<r;++t){const a=t*W-n;for(let n=i;n<u;++n){const r=n*V-o;for(let s=h;s<d;++s){const o=v*q+x*t+w*n+D*s,i=C*(T-1-a)+N*(F-1-r)+S*(A-1-(s*U-l))+E*e;for(let e=0;e<M;++e){I+=b[o+e]*k[i+e]}}}}p[f*q+m*t+g*s+y*c+e]=I}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},yN=Ck(nt,(e=>Math.cos(e))),bN={kernelName:nt,backendName:"cpu",kernelFunc:yN},vN=Ck(at,(e=>Math.cosh(e))),xN={kernelName:at,backendName:"cpu",kernelFunc:vN};const wN={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:o}=t,{cropSize:i,method:u,extrapolationValue:c}=a,[l,h,d,p]=r.shape,f=s.shape[0],[m,g]=i,y=bo([f,m,g,p],"float32"),b=n.data.get(s.dataId).values,v=n.data.get(o.dataId).values,x=n.data.get(r.dataId).values,w=ae(r.shape),D=ae(y.shape);for(let k=0;k<f;k++){const e=4*k,t=b[e],n=b[e+1],a=b[e+2],r=b[e+3],s=v[k];if(s>=l)continue;const o=m>1?(a-t)*(h-1)/(m-1):0,i=g>1?(r-n)*(d-1)/(g-1):0;for(let l=0;l<m;l++){const e=m>1?t*(h-1)+l*o:.5*(t+a)*(h-1);if(e<0||e>h-1)for(let t=0;t<g;t++)for(let e=0;e<p;e++){const n=e+t*D[2]+l*D[1]+k*D[0];y.values[n]=c}else if("bilinear"===u){const t=Math.floor(e),a=Math.ceil(e),o=e-t;for(let e=0;e<g;e++){const u=g>1?n*(d-1)+e*i:.5*(n+r)*(d-1);if(u<0||u>d-1){for(let t=0;t<p;t++){const n=t+e*D[2]+l*D[1]+k*D[0];y.values[n]=c}continue}const h=Math.floor(u),f=Math.ceil(u),m=u-h;for(let n=0;n<p;n++){let r=n+h*w[2]+t*w[1]+s*w[0];const i=x[r];r=n+f*w[2]+t*w[1]+s*w[0];const u=x[r];r=n+h*w[2]+a*w[1]+s*w[0];const c=x[r];r=n+f*w[2]+a*w[1]+s*w[0];const d=i+(u-i)*m,p=c+(x[r]-c)*m;r=n+e*D[2]+l*D[1]+k*D[0],y.values[r]=d+(p-d)*o}}}else for(let t=0;t<g;++t){const a=g>1?n*(d-1)+t*i:.5*(n+r)*(d-1);if(a<0||a>d-1){for(let e=0;e<p;e++){const n=e+t*D[2]+l*D[1]+k*D[0];y.values[n]=c}continue}const o=Math.round(a),u=Math.round(e);for(let e=0;e<p;e++){const n=e+o*w[2]+u*w[1]+s*w[0],a=e+t*D[2]+l*D[1]+k*D[0];y.values[a]=x[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const DN={kernelName:rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;xk(r,"cumprod");const u=hc([s],r.shape.length);let c=r;null!=u&&(c=yC({inputs:{x:r},backend:n,attrs:{perm:u}}));const l=pc(1,r.shape.length)[0];if(l!==c.shape.length-1)throw new Error("backend.cumprod in CPU expects an inner-most "+"axis=".concat(c.shape.length-1," but got axis=").concat(l));const h=Rr(c.dtype,"int32"),d=oe(P(c.shape),h),p=n.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=i?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<p.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)d[t]=o?1:p[t];else{const n=m(y,e-1);d[t]=o?p[n]*d[n]:p[t]*d[n]}}const g=n.makeTensorInfo(c.shape,h,d);if(null!=u){const e=yC({inputs:{x:g},backend:n,attrs:{perm:dc(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(c),e}return g}};const kN={kernelName:st,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;xk(r,"cumsum");const u=hc([s],r.shape.length);let c=r;null!=u&&(c=yC({inputs:{x:r},backend:n,attrs:{perm:u}}));const l=pc(1,r.shape.length)[0];if(l!==c.shape.length-1)throw new Error("backend.cumsum in CPU expects an inner-most "+"axis=".concat(c.shape.length-1," but got axis=").concat(l));const h=Rr(c.dtype,"int32"),d=ie(P(c.shape),h),p=n.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=i?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<p.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)d[t]=o?0:p[t];else{const n=m(y,e-1);d[t]=o?p[n]+d[n]:p[t]+d[n]}}const g=n.makeTensorInfo(c.shape,h,d);if(null!=u){const e=yC({inputs:{x:g},backend:n,attrs:{perm:dc(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(c),e}return g}};const CN={kernelName:it,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o,binaryOutput:i}=a;if(1===r.shape.length){const e=qC(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,e)}if(2===r.shape.length){const e=KC(n.bufferSync(r),n.bufferSync(s),o,i);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};const NN={kernelName:ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:o}=a;M("NHWC"===o,(()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got ".concat(o)));const i=r.shape[0],u=r.shape[1],c=r.shape[2],l=r.shape[3],h=u*s,d=c*s,p=l/(s*s),f=n.data.get(r.dataId).values,m=new Float32Array(i*h*d*p);let g=0;for(let y=0;y<i;++y)for(let e=0;e<h;++e){const t=Math.floor(e/s),n=e%s;for(let e=0;e<d;++e){const a=Math.floor(e/s),r=(n*s+e%s)*p;for(let e=0;e<p;++e){const n=e+r+l*(a+c*(t+u*y));m[g++]=f[n]}}}return n.makeTensorInfo([i,h,d,p],r.dtype,m)}};function SN(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:u,dimRoundingMode:c}=a;xk([r,s],"depthwiseConv2DNative");const l=ae(r.shape),h=ae(s.shape);let d=u;null==d&&(d=[1,1]),M(uu(o,d),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(o," and dilations '").concat(d,"'")));const p=eu(r.shape,s.shape,o,d,i,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=p,v=b.left,x=b.top,w=p.outChannels/p.inChannels,D=new vr(p.outShape,r.dtype),k=n.data.get(r.dataId).values,C=n.data.get(s.dataId).values,N=D.values;for(let S=0;S<p.batchSize;++S){const e=S*l[0],t=S*D.strides[0];for(let n=0;n<p.outHeight;++n){const a=t+n*D.strides[1],r=n*p.strideHeight-x;for(let t=0;t<f;++t){const n=r+t*g;if(n<0||n>=p.inHeight)continue;const s=t*h[0],o=e+n*l[1];for(let e=0;e<p.outWidth;++e){const t=a+e*D.strides[2],n=e*p.strideWidth-v;for(let e=0;e<m;++e){const a=n+e*y;if(a<0||a>=p.inWidth)continue;const r=s+e*h[1],i=o+a*p.inChannels;let u=t,c=r;for(let e=0;e<p.inChannels;++e){const t=k[i+e];for(let e=0;e<w;++e)N[u+e]+=t*C[c+e];u+=w,c+=w}}}}}}return n.makeTensorInfo(D.shape,D.dtype,D.values)}const EN={kernelName:ct,backendName:"cpu",kernelFunc:SN};const IN={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:c,filterShape:l}=a;xk([r,s],"depthwiseConv2dNativeBackpropFilter");const h=eu(r.shape,l,o,i,u,c,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new vr(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,v=h.outChannels/h.inChannels,x=n.data.get(r.dataId).values,w=new vr(r.shape,r.dtype,x),D=n.data.get(s.dataId).values,k=new vr(s.shape,s.dtype,D);for(let C=0;C<f;++C){const e=Math.max(0,Math.ceil((b-C)/d)),t=Math.min(h.outHeight,(h.inHeight+b-C)/d);for(let n=0;n<m;++n){const a=Math.max(0,Math.ceil((y-n)/p)),r=Math.min(h.outWidth,(h.inWidth+y-n)/p);for(let s=0;s<h.outChannels;++s){const o=Math.trunc(s/v),i=s%v;let u=0;for(let c=0;c<h.batchSize;++c)for(let i=e;i<t;++i){const e=C+i*d-b;for(let t=a;t<r;++t){const a=n+t*p-y;u+=w.get(c,e,a,o)*k.get(c,i,t,s)}}g.set(u,C,n,o,i)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const TN={kernelName:ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:c,inputShape:l}=a;xk([r,s],"depthwiseConv2DNativeBackpropInput");const h=ae(r.shape),d=ae(s.shape),p=eu(l,s.shape,o,i,u,c,!0),f=new vr(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,v=n.data.get(r.dataId).values,[x,w,D]=h,k=n.data.get(s.dataId).values,[C,N,S]=d,{batchSize:E,filterHeight:I,filterWidth:T,inChannels:F,inHeight:A,inWidth:R,outChannels:_,outHeight:O,outWidth:L,strideHeight:M,strideWidth:z}=p,B=I-1-p.padInfo.top,P=T-1-p.padInfo.left,W=_/F;for(let V=0;V<E;++V)for(let e=0;e<F;++e)for(let t=0;t<A;++t){const n=t-B,a=Math.max(0,Math.ceil(n/M)),r=Math.min(O,(I+n)/M);for(let s=0;s<R;++s){const o=s-P,i=Math.max(0,Math.ceil(o/z)),u=Math.min(L,(T+o)/z);let c=0;for(let t=a;t<r;++t){const a=t*M-n;for(let n=i;n<u;++n){const r=x*V+w*t+D*n,s=C*(I-1-a)+N*(T-1-(n*z-o))+S*e;for(let t=0;t<W;++t){c+=v[r+(e*W+t)]*k[s+t]}}}m[g*V+y*t+b*s+e]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const FN={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=P(a.shape),s=n.data.get(a.dataId).values,o=bo([r,r],a.dtype),i=o.values;for(let c=0;c<s.length;c++)i[c*r+c]=s[c];const u=[...a.shape,...a.shape];return n.makeTensorInfo(u,o.dtype,o.values)}},AN={kernelName:pt,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:s}=t,{strides:o,pad:i,dilations:u}=a,c=n,l=c.data.get(r.dataId).values,h=r.shape.length,d=c.data.get(s.dataId).values,p=s.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:v,padInfo:x,strideHeight:w,strideWidth:D,filterHeight:k,filterWidth:C,dilationHeight:N,dilationWidth:S,outShape:E}=Zi(r.shape,s.shape,o,i,"NHWC",u),I=P(E),T=E.length,F=Y(r.dtype,I);for(let A=0;A<f;++A)for(let e=0;e<b;++e){const t=e*w-x.top;for(let n=0;n<v;++n){const a=n*D-x.left;for(let o=0;o<y;++o){let i=Number.MIN_SAFE_INTEGER;for(let e=0;e<k;++e){const n=t+e*N;if(n>=0&&n<m)for(let t=0;t<C;++t){const u=a+t*S;if(u>=0&&u<g){const a=le([A,n,u,o],h,ae(r.shape)),c=le([e,t,o],p,ae(s.shape)),f=l[a]+d[c];f>i&&(i=f)}}}F[le([A,e,n,o],T,ae(E))]=i}}}return{dataId:c.write(sr(F,r.dtype),E,r.dtype),shape:E,dtype:r.dtype}}},RN={kernelName:mt,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:s,dy:o}=t,{strides:i,pad:u,dilations:c}=a,l=n,h=se(r.shape,l.data.get(r.dataId).values),d=se(s.shape,l.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:v,strideHeight:x,strideWidth:w,filterHeight:D,filterWidth:k,dilationHeight:C,dilationWidth:N,outShape:S}=Zi(r.shape,s.shape,i,u,"NHWC",c);M(o.rank===S.length,(()=>"Error in ".concat(mt,", dy ")+"must have the same rank as output ".concat(S.length,", but got ")+"".concat(o.rank)));const E=se(S,l.data.get(o.dataId).values),I=ue(s.shape,s.dtype);for(let T=0;T<p;++T)for(let e=0;e<y;++e){const t=e*x-v.top;for(let n=0;n<b;++n){const a=n*w-v.left;for(let r=0;r<g;++r){let s=Number.MIN_SAFE_INTEGER,o=0,i=0;for(let e=0;e<D;++e){const n=t+e*C;if(n>=0&&n<f)for(let t=0;t<k;++t){const u=a+t*N;if(u>=0&&u<m){const a=h[T][n][u][r]+d[e][t][r];a>s&&(s=a,o=e,i=t)}}}I[o][i][r]+=E[T][e][n][r]}}}return{dataId:l.write(sr(I,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},_N={kernelName:ft,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:s,dy:o}=t,{strides:i,pad:u,dilations:c}=a,l=n,h=se(r.shape,l.data.get(r.dataId).values),d=se(s.shape,l.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:v,strideHeight:x,strideWidth:w,filterHeight:D,filterWidth:k,dilationHeight:C,dilationWidth:N,outShape:S}=Zi(r.shape,s.shape,i,u,"NHWC",c);M(o.rank===S.length,(()=>"Error in ".concat(ft,", dy ")+"must have the same rank as output ".concat(S.length,", but got ")+"".concat(o.rank)));const E=se(S,l.data.get(o.dataId).values),I=ue(r.shape,r.dtype);for(let T=0;T<p;++T)for(let e=0;e<y;++e){const t=e*x-v.top;for(let n=0;n<b;++n){const a=n*w-v.left;for(let r=0;r<g;++r){let s=Number.MIN_SAFE_INTEGER,o=t<0?0:t,i=a<0?0:a;for(let e=0;e<D;++e){const n=t+e*C;if(n>=0&&n<f)for(let t=0;t<k;++t){const u=a+t*N;if(u>=0&&u<m){const a=h[T][n][u][r]+d[e][t][r];a>s&&(s=a,o=n,i=u)}}}I[T][o][i][r]+=E[T][e][n][r]}}}return{dataId:l.write(sr(I,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};const ON={kernelName:gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{canvas:s,options:o}=a,{contextOptions:i,imageOptions:u}=o||{},c=(null===u||void 0===u?void 0:u.alpha)||1,l=(null===i||void 0===i?void 0:i.contextType)||"2d";if("2d"!==l)throw new Error("Context type ".concat(i.contextType," is not supported by the CPU backend."));const h=s.getContext(l,(null===i||void 0===i?void 0:i.contextAttributes)||{});if(null==h)throw new Error("Could not get the context with ".concat(l," type."));const[d,p]=r.shape.slice(0,2),f=2===r.shape.length?1:r.shape[2],m=n.data.get(r.dataId).values,g="float32"===r.dtype?255:1,y=new Uint8ClampedArray(p*d*4);for(let v=0;v<d*p;++v){const e=[0,0,0,255*c];for(let n=0;n<f;n++){const t=m[v*f+n];if("float32"===r.dtype){if(t<0||t>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(t,"."))}else if("int32"===r.dtype&&(t<0||t>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(t,"."));1===f?(e[0]=t*g,e[1]=t*g,e[2]=t*g):e[n]=t*g}const t=4*v;y[t+0]=Math.round(e[0]),y[t+1]=Math.round(e[1]),y[t+2]=Math.round(e[2]),y[t+3]=Math.round(e[3])}s.width=p,s.height=d;const b=new ImageData(y,p,d);return h.putImageData(b,0,0),r}},LN=Rk(((e,t)=>e*t)),MN=$k(((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n}))),zN=Jk(pn,LN,MN),BN={kernelName:pn,backendName:"cpu",kernelFunc:zN};function PN(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;let i;xk(r,"sum"),i="bool"===r.dtype?Qk({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):Ik({inputs:{x:r},backend:n});const u=i.shape.length,c=q(s,i.shape),l=hc(c,u);let h=c,d=i;null!=l&&(d=yC({inputs:{x:i},backend:n,attrs:{perm:l}}),h=pc(h.length,u)),lc("sum",h,d.shape.length);const[p,f]=uc(d.shape,h);let m=qk(n,p,Rr(d.dtype,"int32"));const g=P(f),y=n.data.get(m.dataId).values,b=n.data.get(d.dataId).values;for(let v=0;v<y.length;++v){const e=v*g;let t=0;for(let n=0;n<g;++n)t+=b[e+n];y[v]=t}if(o){const e=m;m=rC({inputs:{x:m},backend:n,attrs:{shape:cc(m.shape,c)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(i),null!=l&&n.disposeIntermediateTensorInfo(d),m}const WN={kernelName:ea,backendName:"cpu",kernelFunc:PN};const VN={kernelName:bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:o,summedDims:i,idDims:u}=Hp(r,s.length);qp(o.length,u,s);const{path:c,steps:l}=Kp(i,u),h=l.length;let d=null,p=o.length;const f=[];for(let m=0;m<h;++m){for(const e of l[m]){const{permutationIndices:t,expandDims:a}=jp(p,u[e]);let r;Xp(t)?r=s[e]:(r=yC({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),f.push(r));const o=r.shape.slice();for(let e=0;e<a.length;++e)o.splice(a[e],0,1);W(r.shape,o)||(r=rC({inputs:{x:r},backend:n,attrs:{shape:o}}),f.push(r)),null===d?d=r:(d=zN({inputs:{a:r,b:d},backend:n}),f.push(d))}m<h-1&&(c[m]>=0&&(d=PN({inputs:{x:d},backend:n,attrs:{axis:c[m]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}};const UN={kernelName:xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:a,y:r}=t;xk([a,r],"eluGrad");const s=new Float32Array(P(r.shape)),o=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values;for(let u=0;u<o.length;++u){const e=o[u];s[u]=e>=0?i[u]:i[u]*(e+1)}return n.makeTensorInfo(r.shape,"float32",s)}},GN=Rk(((e,t)=>e===t?1:0)),HN=Jk(Dt,GN,null,"bool"),jN={kernelName:Dt,backendName:"cpu",kernelFunc:HN},qN=Sp,KN=Ep,XN=Ip,YN=Tp,QN=Fp,ZN=Ap,JN=Ck(wt,(e=>{const t=Math.sign(e),n=Math.abs(e),a=1/(1+qN*n);return t*(1-((((ZN*a+QN)*a+YN)*a+XN)*a+KN)*a*Math.exp(-n*n))})),$N={kernelName:wt,backendName:"cpu",kernelFunc:JN},eS=kk((e=>Math.exp(e))),tS=Nk(kt,eS,"float32"),nS={kernelName:kt,backendName:"cpu",kernelFunc:tS};function aS(e){const{inputs:t,backend:n,attrs:a}=e,{input:r}=t,{dim:s}=a,o=r.shape.length,i=r.shape.slice();let u=s;return s<0&&(M(-(o+1)<=s,(()=>"Axis must be in the interval [".concat(-(o+1),", ").concat(o,"]"))),u=o+s+1),i.splice(u,0,1),rC({inputs:{x:r},backend:n,attrs:{shape:i}})}const rS={kernelName:Ct,backendName:"cpu",kernelFunc:aS},sS=kk((e=>Math.expm1(e))),oS=Nk(Nt,sS),iS={kernelName:Nt,backendName:"cpu",kernelFunc:oS},uS=Rk(((e,t)=>e/t)),cS=Jk(yt,uS),lS={kernelName:yt,backendName:"cpu",kernelFunc:cS},hS=Rk(((e,t)=>e-t)),dS=$k(((e,t,n,a)=>({real:e-n,imag:t-a}))),pS=Jk(ga,hS,dS),fS={kernelName:ga,backendName:"cpu",kernelFunc:pS};function mS(e,t,n){const a=e.shape,r=a[0],s=a[1],o=n.data.get(e.dataId),i=o.complexTensorInfos.real,u=o.complexTensorInfos.imag,c=[r,s],l=P(c),h=X("float32",l),d=X("float32",l);for(let g=0;g<r;g++){const e=GC({inputs:{x:i},backend:n,attrs:{begin:[g,0],size:[1,s]}}),a=GC({inputs:{x:u},backend:n,attrs:{begin:[g,0],size:[1,s]}}),r=Hk({inputs:{real:e,imag:a},backend:n}),{real:o,imag:c}=gS(r,t,n),l=Rp(o,c);for(let t=0;t<s;t++){const e=Mp(l,t);h[g*s+t]=e.real,d[g*s+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r)}const p=n.makeTensorInfo(c,"float32",h),f=n.makeTensorInfo(c,"float32",d),m=Hk({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function gS(e,t,n){const a=P(e.shape),r=n.data.get(e.dataId),s=n.data.get(r.complexTensorInfos.real.dataId).values,o=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0===((i=a)&i-1)){const r=yS(s,o,a,t,n),i=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(i,"float32",r.real),t=n.makeTensorInfo(i,"float32",r.imag),s=n.makeTensorInfo([],"float32",rr(a,"float32")),o=Ik({inputs:{x:s},backend:n}),u=lS.kernelFunc({inputs:{a:e,b:s},backend:n}),c=lS.kernelFunc({inputs:{a:t,b:o},backend:n}),l=n.data.get(u.dataId).values,h=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),{real:l,imag:h}}return r}{const e=function(e,t,n){const a=new Float32Array(2*t);for(let r=0;r<t;r++){let s=0,o=0;for(let a=0;a<t;a++){const i=Pp(r*a,t,n),u=Mp(e,a);s+=u.real*i.real-u.imag*i.imag,o+=u.real*i.imag+u.imag*i.real}n&&(s/=t,o/=t),zp(a,s,o,r)}return a}(Rp(s,o),a,t);return _p(e)}var i}function yS(e,t,n,a,r){if(1===n)return{real:e,imag:t};const s=Rp(e,t),o=n/2,i=Op(s),u=i.real,c=i.imag,l=[u.length],h=r.makeTensorInfo(l,"float32",u),d=r.makeTensorInfo(l,"float32",c),p=Hk({inputs:{real:h,imag:d},backend:r}),f=Lp(s),m=f.real,g=f.imag,y=[m.length],b=r.makeTensorInfo(y,"float32",m),v=r.makeTensorInfo(y,"float32",g),x=Hk({inputs:{real:b,imag:v},backend:r}),w=yS(u,c,o,a,r),D=w.real,k=w.imag,C=[D.length],N=r.makeTensorInfo(C,"float32",D),S=r.makeTensorInfo(C,"float32",k),E=Hk({inputs:{real:N,imag:S},backend:r}),I=yS(m,g,o,a,r),T=I.real,F=I.imag,A=[T.length],R=r.makeTensorInfo(A,"float32",T),_=r.makeTensorInfo(A,"float32",F),O=Hk({inputs:{real:R,imag:_},backend:r}),L=Bp(n,a),M=[L.real.length],z=r.makeTensorInfo(M,"float32",L.real),B=r.makeTensorInfo(M,"float32",L.imag),P=Hk({inputs:{real:z,imag:B},backend:r}),W=zN({inputs:{a:P,b:O},backend:r}),V=nC({inputs:{a:E,b:W},backend:r}),U=pS({inputs:{a:E,b:W},backend:r}),G=Kk({inputs:{input:V},backend:r}),H=Kk({inputs:{input:U},backend:r}),j=oN({inputs:{input:V},backend:r}),q=oN({inputs:{input:U},backend:r}),K=uN({inputs:[G,H],backend:r,attrs:{axis:0}}),X=uN({inputs:[j,q],backend:r,attrs:{axis:0}}),Y=r.data.get(K.dataId).values,Q=r.data.get(X.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(X),{real:Y,imag:Q}}const bS={kernelName:St,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=P(a.shape),s=a.shape[a.shape.length-1],o=rC({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),i=mS(o,!1,n),u=rC({inputs:{x:i},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),u}};function vS(e){const{backend:t,attrs:n}=e,{shape:a,value:r,dtype:s}=n,o=s||ee(r),i=Y(o,P(a));return function(e,t){e.fill(t)}(i,r),t.makeTensorInfo(a,o,i)}const xS={kernelName:Et,backendName:"cpu",kernelFunc:vS};const wS={kernelName:It,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,s=a,o=X(r.dtype,P(r.shape)),[i,u,c,l]=r.shape,h=s.data.get(r.dataId).values;for(let d=0;d<i;d++){const e=d*c*u*l;for(let t=0;t<u;t++){const n=t*(c*l);for(let t=0;t<c;t++){const a=t*l;for(let r=0;r<l;r++){const s=Math.round(c-t-1),i=e+n+a+r;let u=h[i];if(s>=0&&s<c){u=h[e+n+s*l+r]}o[i]=u}}}}return{dataId:s.write(o,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},DS=kk((e=>Math.floor(e))),kS=Nk(Tt,DS),CS={kernelName:Tt,backendName:"cpu",kernelFunc:kS},NS=Rk(((e,t)=>Math.floor(e/t))),SS=Jk(Ft,NS,null,"int32"),ES={kernelName:Ft,backendName:"cpu",kernelFunc:SS};const IS={kernelName:Aa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a;let m=lN({inputs:{x:r,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d}});if(o){const e=m;if("NCHW"===l&&1===o.shape.length&&1!==o.shape[0]){const e=rC({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=nC({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=nC({inputs:{a:m,b:o},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===l&&"prelu"===p&&1===i.shape.length&&1!==i.shape[0]){const e=rC({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=Gk(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=Gk(n,m,p,i,f);n.disposeIntermediateTensorInfo(e)}return m}};const TS={kernelName:Ra,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a;let m=SN({inputs:{x:r,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d}});if(o){const e=m;m=nC({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=Gk(n,m,p,i,f),n.disposeIntermediateTensorInfo(e)}return m}};function FS(e,t,n,a,r,s,o,i,u){const c=bo([a,s],n);for(let l=0;l<a;l++){const n=[];let a=0;for(let t=0;t<r;t++){const s=e[l*r+t];a+=s*o[t],n.push(s)}if(a<0||a>=u/s)throw new Error("Invalid indices: ".concat(n," does not index into ").concat(i));for(let e=0;e<s;e++)c.values[l*s+e]=t.get(...t.indexToLoc(a*s+e))}return c}const AS={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=P(a.shape),o=r.shape,i=o[o.length-1],[u,c,l,h]=kp(a,r);if(0===c)return n.makeTensorInfo(u,a.dtype,[]);const d=FS(n.data.get(r.dataId).values,n.bufferSync(a),a.dtype,c,i,l,h,a.shape,s);return n.makeTensorInfo(u,a.dtype,d.values)}};function RS(e,t,n){const a=bo(n,e.dtype);for(let r=0;r<a.size;++r){const n=a.indexToLoc(r).slice(),s=n[0],o=n[2],i=t.locToIndex([s,o]);n[2]=t.values[i];const u=e.locToIndex(n);0<=u&&u<e.values.length&&(a.values[r]=e.values[u])}return a}const _S={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:o,batchDims:i}=a;xk([r,s],"gatherV2");const u=q(o,r.shape)[0],c=n.data.get(s.dataId).values,l=r.shape[u];for(let v=0;v<c.length;++v){const e=c[v];M(e<=l-1&&e>=0,(()=>"GatherV2: the index value ".concat(e," is not in [0, ").concat(l-1,"]")))}let h=i;null==i&&(h=0);const d=P(s.shape),p=df(r,s,u,h),f=rC({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=rC({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=n.bufferSync(m),b=RS(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}},OS=Rk(((e,t)=>e>t?1:0)),LS=Jk(Ot,OS,null,"bool"),MS={kernelName:Ot,backendName:"cpu",kernelFunc:LS},zS=Rk(((e,t)=>e>=t?1:0)),BS=Jk(Lt,zS,null,"bool"),PS={kernelName:Lt,backendName:"cpu",kernelFunc:BS};const WS={kernelName:zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=P(a.shape),s=a.shape[a.shape.length-1],o=rC({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),i=mS(o,!0,n),u=rC({inputs:{x:i},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),u}},VS=Ck(Pt,(e=>Number.isFinite(e)?1:0),"bool"),US={kernelName:Pt,backendName:"cpu",kernelFunc:VS},GS=Ck(Wt,(e=>Math.abs(e)===1/0?1:0),"bool"),HS={kernelName:Wt,backendName:"cpu",kernelFunc:GS},jS=Ck(Vt,(e=>Number.isNaN(e)?1:0),"bool"),qS={kernelName:Vt,backendName:"cpu",kernelFunc:jS},KS=Rk(((e,t)=>e<t?1:0)),XS=Jk(Gt,KS,null,"bool"),YS={kernelName:Gt,backendName:"cpu",kernelFunc:XS},QS=Rk(((e,t)=>e<=t?1:0)),ZS=Jk(Ht,QS,null,"bool"),JS={kernelName:Ht,backendName:"cpu",kernelFunc:ZS};function $S(e,t,n){const a=(t-e)/(n-1),r=ie(n,"float32");r[0]=e;for(let s=1;s<r.length;s++)r[s]=r[s-1]+a;return r}const eE={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,o=$S(a,r,s);return t.makeTensorInfo([o.length],"float32",o)}},tE=kk((e=>Math.log(e))),nE=Nk(qt,tE),aE={kernelName:qt,backendName:"cpu",kernelFunc:nE},rE=Ck(Kt,(e=>Math.log1p(e))),sE={kernelName:Kt,backendName:"cpu",kernelFunc:rE},oE=Rk(((e,t)=>e&&t)),iE=Jk(Xt,oE,null,"bool"),uE={kernelName:Xt,backendName:"cpu",kernelFunc:iE},cE=Ck(Yt,(e=>e?0:1),"bool"),lE={kernelName:Yt,backendName:"cpu",kernelFunc:cE},hE=Rk(((e,t)=>e||t)),dE=Jk(Qt,hE,null,"bool"),pE={kernelName:Qt,backendName:"cpu",kernelFunc:dE};const fE={kernelName:Zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:o,alpha:i,beta:u}=a;xk(r,"LRN");const c=r.shape[3],l=c-1,h=n.data.get(r.dataId).values,d=P(r.shape),p=new Float32Array(d);function f(e){const t=e%c;let n=e-t+Math.max(0,t-s);const a=e-t+Math.min(t+s,l);let r=0;for(;n<=a;n++){const e=h[n];r+=e*e}return r}for(let m=0;m<d;m++){const e=f(m),t=h[m]*Math.pow(o+i*e,-u);p[m]=t}return n.makeTensorInfo(r.shape,r.dtype,p)}};const mE={kernelName:Jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:o}=t,{depthRadius:i,bias:u,alpha:c,beta:l}=a;xk(o,"LRNGrad");const h=P(o.shape),d=o.shape[3],p=n.data.get(o.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let b=0;b<y;b++){const e=b%d,t=b-e+Math.max(0,e-i),n=b-e+Math.min(d,e+i+1);let a=0;for(let r=t;r<n;r++)a+=Math.pow(f[r],2);a=c*a+u;for(let r=t;r<n;r++){let e=-2*c*l*f[r]*m[b]/a;b===r&&(e+=Math.pow(a,-l)),e*=p[b],g[r]+=e}}return n.makeTensorInfo(o.shape,r.dtype,g)}};function gE(e,t,n,a){const r=X(a,P(n));for(let s=0;s<r.length;++s){const n=s*t;let a=e[n];for(let r=0;r<t;++r){const t=e[n+r];(Number.isNaN(t)||t>a)&&(a=t)}r[s]=a}return r}function yE(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:o}=a,i=n;let u=r.shape;const c=u.length,l=q(s,u);let h=l;const d=hc(h,c);let p=i.data.get(r.dataId).values;if(null!=d){const e=new Array(c);for(let t=0;t<e.length;t++)e[t]=u[d[t]];p=gC(p,u,r.dtype,d,e),h=pc(h.length,c),u=e}xk(r,"max"),lc("max",h,c);const[f,m]=uc(u,h),g=gE(p,P(m),f,r.dtype),y=i.write(g,f,r.dtype);let b=f;if(o){b=cc(f,l)}return{dataId:y,shape:b,dtype:r.dtype}}const bE={kernelName:$t,backendName:"cpu",kernelFunc:yE},vE=Rk(((e,t)=>Math.max(e,t))),xE=Jk(en,vE),wE={kernelName:en,backendName:"cpu",kernelFunc:xE};const DE={kernelName:tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;xk(r,"maxPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:u}=a;M(uu(o,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const c=Ji(r.shape,s,o,1,i,u);let l;if(1===c.filterWidth&&1===c.filterHeight&&W(c.inShape,c.outShape))l=Ik({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=ae(r.shape),a=OC(e,r.shape,r.dtype,t,c,"max");l=n.makeTensorInfo(c.outShape,r.dtype,a.values)}return l}};const kE={kernelName:an,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:u,dataFormat:c}=a;xk(r,"maxPool3d");const l=$i(r.shape,s,o,1,i,u,c),h=MC(n.data.get(r.dataId).values,r.shape,r.dtype,ae(r.shape),l,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};const CE={kernelName:rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:o,strides:i,pad:u,dimRoundingMode:c}=a;xk([r,s],"maxPool3DGrad");const l=$i(s.shape,o,i,1,u,c),h=function(e,t){const n=bo(t.outShape,"int32"),a=t.strideDepth,r=t.strideHeight,s=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,l=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*a-d;let v=b;for(;v<0;)v+=o;const x=Math.min(t.inDepth,c+b);for(let a=0;a<t.outHeight;++a){const c=a*r-p;let d=c;for(;d<0;)d+=i;const w=Math.min(t.inHeight,l+c);for(let r=0;r<t.outWidth;++r){const p=r*s-f;let D=p;for(;D<0;)D+=u;const k=Math.min(t.inWidth,h+p);let C=Number.NEGATIVE_INFINITY,N=-1;for(let t=v;t<x;t+=o){const n=t-b;for(let a=d;a<w;a+=i){const r=a-c;for(let s=D;s<k;s+=u){const o=s-p,i=e.get(m,t,a,s,g);i>=C&&(C=i,N=n*l*h+r*l+o)}}}n.set(N,m,y,a,r,g)}}}return n}(n.bufferSync(s),l),d=l.strideDepth,p=l.strideHeight,f=l.strideWidth,m=l.dilationDepth,g=l.dilationHeight,y=l.dilationWidth,b=l.effectiveFilterDepth,v=l.effectiveFilterHeight,x=l.effectiveFilterWidth,w=b-1-l.padInfo.front,D=x-1-l.padInfo.left,k=v-1-l.padInfo.top,C=bo(s.shape,"float32"),N=n.bufferSync(r);for(let S=0;S<l.batchSize;++S)for(let e=0;e<l.inChannels;++e)for(let t=0;t<l.inDepth;++t)for(let n=0;n<l.inHeight;++n)for(let a=0;a<l.inWidth;++a){const r=t-w,s=n-k,o=a-D;let i=0;for(let t=0;t<b;t+=m){const n=(r+t)/d;if(!(n<0||n>=l.outDepth||Math.floor(n)!==n))for(let a=0;a<v;a+=g){const r=(s+a)/p;if(!(r<0||r>=l.outHeight||Math.floor(r)!==r))for(let s=0;s<x;s+=y){const u=(o+s)/f;if(u<0||u>=l.outWidth||Math.floor(u)!==u)continue;const c=b*v*x-1-h.get(S,n,r,u,e)===t*v*x+a*x+s?1:0;if(0===c)continue;i+=N.get(S,n,r,u,e)*c}}}C.set(i,S,t,n,a,e)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};const NE={kernelName:nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:o}=t,i=s;xk([s,o],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:h}=a,d=Ji(i.shape,u,c,1,l,h),p=n.data.get(i.dataId).values,f=bo(d.outShape,i.dtype,LC(p,i.shape,i.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,v=d.effectiveFilterHeight,x=d.effectiveFilterWidth,w=x-1-d.padInfo.left,D=v-1-d.padInfo.top,k=bo(i.shape,"float32"),C=n.data.get(r.dataId).values,N=bo(r.shape,"float32",C);for(let S=0;S<d.batchSize;++S)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){const a=t-D,r=n-w;let s=0;for(let t=0;t<v;t+=y){const n=(a+t)/m;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let a=0;a<x;a+=b){const o=(r+a)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const i=v*x-1-f.get(S,n,o,e)===t*x+a?1:0;if(0===i)continue;s+=N.get(S,n,o,e)*i}}k.set(s,S,t,n,e)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};const SE={kernelName:sn,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{filterSize:s,strides:o,pad:i,includeBatchInIndex:u}=n,c=a;xk(r,"MaxPoolWithArgmax");const l=c.data.get(r.dataId).values,h=Ji(r.shape,s,o,[1,1],i),[d,p]=function(e,t,n,a,r){const s=OC(e,0,n,ae(t),r,"max"),o=LC(e,t,n,r,!0,a);return[s.values,o.values]}(l,r.shape,r.dtype,u,h),f=c.write(d,h.outShape,r.dtype),m=c.write(p,h.outShape,r.dtype);return[{dataId:f,shape:h.outShape,dtype:r.dtype},{dataId:m,shape:h.outShape,dtype:"int32"}]}};const EE={kernelName:on,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=q(s,r.shape),u=P(uc(r.shape,i)[1]),c=[],l=n.makeTensorInfo([],"float32",new Float32Array([u]));c.push(l);const h=Qk({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});c.push(h);const d=cS({inputs:{a:h,b:l},backend:n});c.push(d);const p=PN({inputs:{x:d},backend:n,attrs:{axis:s,keepDims:o}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};const IE={kernelName:un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;xk(r,"min");const i=q(s,r.shape);let u=i;const c=hc(u,r.shape.length);let l=r;null!=c&&(l=yC({inputs:{x:r},backend:n,attrs:{perm:c}}),u=pc(u.length,r.shape.length)),lc("min",u,l.shape.length);const[h,d]=uc(l.shape,u),p=P(d),f=ie(P(h),l.dtype),m=n.data.get(l.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const a=m[e+n];(Number.isNaN(a)||a<t)&&(t=a)}f[y]=t}null!=c&&n.disposeIntermediateTensorInfo(l);const g=n.makeTensorInfo(h,l.dtype,f);if(o){const e=rC({inputs:{x:g},backend:n,attrs:{shape:cc(h,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}},TE=Rk(((e,t)=>Math.min(e,t))),FE=Jk(cn,TE),AE={kernelName:cn,backendName:"cpu",kernelFunc:FE};const RE={kernelName:ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,mode:o}=a;xk(r,"mirrorPad");const i=s.map(((e,t)=>e[0]+r.shape[t]+e[1])),u=s.map((e=>e[0])),c=s.map(((e,t)=>e[0]+r.shape[t])),l="reflect"===o?0:1,h=n.data.get(r.dataId).values,d=r.shape.length,p=ae(r.shape),f=P(i),m=i.length,g=ae(i),y=X(r.dtype,f);for(let b=0;b<f;b++){let e=he(b,m,g);for(let n=0;n<m;n++)e[n]<u[n]?e[n]=2*u[n]-e[n]-l:e[n]>=c[n]&&(e[n]=2*(c[n]-1)-e[n]+l);e=e.map(((e,t)=>e-u[t]));const t=le(e,d,p);y[b]=h[t]}return{dataId:n.write(y,i,r.dtype),shape:i,dtype:r.dtype}}},_E=Rk(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),OE=Jk(hn,_E),LE={kernelName:hn,backendName:"cpu",kernelFunc:OE};function ME(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,o=r.shape.length;let i=s;if(-1===i&&(i=o-1),i!==o-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(o," and dim was ").concat(i));const u=q([i],r.shape),c=yE({inputs:{x:r},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),l=cc(c.shape,u),h=rC({inputs:{x:c},backend:n,attrs:{shape:l}}),d=pS({inputs:{a:r,b:h},backend:n}),p=tS({inputs:{x:d},backend:n}),f=PN({inputs:{x:p},backend:n,attrs:{axis:u,keepDims:!1}}),m=rC({inputs:{x:f},backend:n,attrs:{shape:l}}),g=cS({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const zE={kernelName:aa,backendName:"cpu",kernelFunc:ME};const BE={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:o,normalized:i}=a;xk(r,"multinomial");const u=i?r:ME({inputs:{logits:r},backend:n,attrs:{dim:-1}}),c=u.shape[0],l=u.shape[1],h=n.data.get(u.dataId).values,d=[c,s],p=ie(P(d),"int32");for(let f=0;f<c;++f){const e=f*l,t=new Float32Array(l-1);t[0]=h[e];for(let r=1;r<t.length;++r)t[r]=t[r-1]+h[e+r];const n=Il.alea(o.toString()),a=f*s;for(let r=0;r<s;++r){const e=n();p[a+r]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){p[a+r]=n;break}}}return i||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(d,"int32",p)}};function PE(e,t,n){const a=rr(-1,n);return LN([],t,a,e,n)}const WE={kernelName:fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;xk(a,"neg");const r=n.data.get(a.dataId).values,[s,o]=PE(r,a.shape,a.dtype);return n.makeTensorInfo(o,a.dtype,s)}},VE=fd;const UE={kernelName:gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=a;xk(r,"NonMaxSuppression");const c=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,{selectedIndices:h}=VE(c,l,o,i,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},GE=md;const HE={kernelName:yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:c}=a;xk(r,"NonMaxSuppressionPadded");const l=n.data.get(r.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:p}=GE(l,h,o,i,u,c);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},jE=gd;const qE={kernelName:bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=a;xk(r,"NonMaxSuppressionWithScore");const l=n.data.get(r.dataId).values,h=n.data.get(s.dataId).values,d=o,p=i,f=u,m=c,{selectedIndices:g,selectedScores:y}=jE(l,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},KE=Rk(((e,t)=>e!==t?1:0)),XE=Jk(mn,KE,null,"bool"),YE={kernelName:mn,backendName:"cpu",kernelFunc:XE};const QE={kernelName:xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:o,onValue:i,offValue:u}=a;xk(r,"oneHot");const c=P(r.shape),l=new Float32Array(c*o);l.fill(u);const h=n.data.get(r.dataId).values;for(let d=0;d<c;++d)h[d]>=0&&h[d]<o&&(l[d*o+h[d]]=i);return n.makeTensorInfo([...r.shape,o],s,l)}};function ZE(e){const{inputs:t,backend:n}=e,{x:a}=t;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){const e=Kk({inputs:{input:a},backend:n}),t=ZE({inputs:{x:e},backend:n}),r=oN({inputs:{input:a},backend:n}),s=ZE({inputs:{x:r},backend:n}),o=Hk({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}return vS({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}const JE={kernelName:Sa,backendName:"cpu",kernelFunc:ZE};const $E={kernelName:vn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=Kk({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=oN({inputs:{input:r},backend:a}),o=ZE({inputs:{x:s},backend:a}),i=Hk({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}return vS({backend:a,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function eI(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return aS({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,o=t[0].dtype;t.forEach((e=>{z(s,e.shape,"All tensors passed to stack must have matching shapes"),M(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],u=uN({inputs:t.map((e=>{const t=aS({inputs:{input:e},backend:n,attrs:{dim:r}});return i.push(t),t})),backend:n,attrs:{axis:r}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const tI={kernelName:wn,backendName:"cpu",kernelFunc:eI};const nI={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:o}=a;xk(r,"pad");const i=s.map(((e,t)=>e[0]+r.shape[t]+e[1])),u=s.map((e=>e[0])),c=n.data.get(r.dataId).values,l=P(r.shape),h=r.shape.length,d=ae(r.shape),p=P(i),f=i.length,m=ae(i),g=X(r.dtype,p);0!==o&&g.fill(o);for(let y=0;y<l;y++){g[le(he(y,h,d).map(((e,t)=>e+u[t])),f,m)]=c[y]}return{dataId:n.write(g,i,r.dtype),shape:i,dtype:r.dtype}}},aI=Rk(((e,t)=>Math.pow(e,t))),rI=Jk(kn,aI),sI={kernelName:kn,backendName:"cpu",kernelFunc:rI};function oI(e,t,n,a){const[r,s]=uc(e,a),o=Rr(t,"int32"),i=ie(P(r),o),u=P(s);for(let c=0;c<i.length;++c){const e=c*u;let t=1;for(let a=0;a<u;++a)t*=n[e+a];i[c]=t}return{outVals:i,outShape:r,outDtype:o}}const iI={kernelName:Nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;xk(r,"prod");const i=r.shape.length,u=q(s,r.shape),c=hc(u,i);let l=u,h=r;const d=[];null!=c&&(h=yC({inputs:{x:r},backend:n,attrs:{perm:c}}),d.push(h),l=pc(l.length,i));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=oI(h.shape,h.dtype,p,l);let y=m;return o&&(y=cc(m,u)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function uI(e,t,n,a){const r=[];let s=0;const o=t.length-1+n.length,i=new Array(o).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const a=e[n],r=n===e.length-1?t:e[n+1].length;if(0===a.length)throw new Error("Ragged splits may not be empty");if(a[0]<0)throw new Error("Ragged splits must be non-negative");if(a[a.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<a.length;++e)if(a[e-1]>a[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,a);let u=1;for(let c=0;c<t.length-1;++c){u*=t[c];const e=t[c+1];for(let t=1;t<u+1;++t)i[c].push(t*e)}for(let c=0;c<e.length;++c){let a=e[c],o=e[c]+1;for(let e=0;e<n.length;++e){const r=n[e],s=e+t.length-1;if(s>=0){const e=i[s],t=e[e.length-1]-r[a];for(let n=a;n<o;++n)i[s].push(r[n+1]+t)}a=r[a],o=r[o]}o!==a&&(r.push([a,o]),s+=o-a)}return{outSplits:i,valueSlices:r,numValues:s}}function cI(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let a=t;a<e.length;a++)n[t-1]*=e[a];return n}function lI(e,t,n,a,r){const s=t.slice();s[0]=r;const o=Y(n,P(s)),i=e.length;return function(e,t,n,a,r,s){const o=cI(t,2)[1],i=cI(s,2)[1];let u=0;for(const c of n)for(let t=c[0];t<c[1];++t){for(let n=0;n<a;++n)r[u*i+n]=e[t*o+n];++u}}(e,t,a,0===i?0:i/t[0],o,s),[o,s]}function hI(e,t,n,a,r,s,o,i){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,a)=>{if(e<0||e>=n){const r=he(a,t.length,ae(t)).join(",");throw new Error("indices[".concat(r,"] = ").concat(e," is not in [0, ").concat(n,")"))}}))}(s,o,t[0][0]-1),0===a.length)throw new Error("params.rank must be nonzero");const u=a[0],{outSplits:c,valueSlices:l,numValues:h}=uI(s,o,e,u),d=function(e){const t=[];for(let n=0;n<e.length;++n){const a=Y("int32",e[n].length);t.push(a),e[n].forEach(((e,t)=>a[t]=e))}return t}(c),p=lI(n,a,r,l,h);return[d,p[0],p[1]]}const dI={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:o}=t,{outputRaggedRank:i}=a,u=r.map((e=>n.data.get(e.dataId).values)),c=r.map((e=>e.shape)),l=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,[d,p,f]=hI(u,c,l,s.shape,s.dtype,h,o.shape),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}},pI=2147483647;function fI(e,t,n,a,r,s,o){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const i=0===t.length,u=0===r.length,c=0===o.length,l=[];i||l.push(t[0]),u||l.push(r[0]),c||l.push(o[0]);for(let m=1;m<l.length;++m)if(l[m]!==l[m-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===l.length?1:l[0],d=Y("int32",h+1);d[0]=0;for(let m=0;m<h;++m){const t=i?e[0]:e[m],n=u?a[0]:a[m],r=c?s[0]:s[m];if(0===r)throw new Error("Requires delta != 0");let o;if(r>0&&n<t||r<0&&n>t)o=0;else if(o=Math.ceil(Math.abs((n-t)/r)),o>pI)throw new Error("Requires ((limit - start) / delta) <= ".concat(pI));d[m+1]=d[m]+o}const p=Y(n,d[h]);let f=0;for(let m=0;m<h;++m){const t=d[m+1]-d[m];let n=i?e[0]:e[m];const a=c?s[0]:s[m];for(let e=0;e<t;++e)p[f++]=n,n+=a}return[d,p]}const mI={kernelName:En,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:s}=t,o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,[c,l]=fI(o,a.shape,a.dtype,i,r.shape,u,s.shape);return[n.makeTensorInfo([c.length],"int32",c),n.makeTensorInfo([l.length],a.dtype,l)]}};var gI=lp;class yI{constructor(e,t,n,a,r,s,o,i,u,c){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=a,this.valuesDType=r,this.defaultValue=s,this.defaultValueShape=o,this.rowPartitionValues=i,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=dp(c),this.raggedRank=pp(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===gI.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===gI.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case gI.VALUE_ROWIDS:return yI.getMaxWidthValueRowID(t);case gI.ROW_SPLITS:return yI.getMaxWidthRowSplit(t);default:throw new Error("Cannot handle partition type ".concat(gI[this.getRowPartitionTypeByDimension(e-1)]))}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let a=0;a<t-1;++a){const t=e[a+1]-e[a];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,a=e[0],r=0;for(let s=1;s<t;++s){const t=e[s];t!==a&&(a=t,r=Math.max(s-n,r),n=s)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return vI(e,n)}calculateOutputSize(e){const t=this.valuesShape;fp(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=hp(this.raggedRank,n,t);a[0]<0&&(a[0]=e);for(let r=1;r<=this.raggedRank;++r)a[r]<0&&(a[r]=this.getMaxWidth(r));return a}calculateFirstParentOutputIndex(e,t,n){const a=Math.min(e,n),r=[];let s=0;for(let o=0;o<a;++o,s+=t)r.push(s);for(let o=a;o<e;++o)r.push(-1);return M(r.length===e,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(e,t,n,a){const r=e.length,s=[];for(let o=0;o<r-1;++o){const r=e[o+1]-e[o];let i=Math.min(a,r),u=t[o];-1===u&&(i=0);for(let e=0;e<i;++e)s.push(u),u+=n;for(let e=0;e<r-i;++e)s.push(-1)}if(r>0&&s.length!==e[r-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,a){const r=e.length,s=[];if(0===r)return[];let o=0,i=e[0];if(i>=t.length)throw new Error("Got currentValueRowId=".concat(i,", which is not less than ").concat(t.length));let u=t[i];s.push(u);for(let c=1;c<r;++c){const r=e[c];if(r===i)u>=0&&(++o,o<a?u+=n:u=-1);else{if(o=0,i=r,r>=t.length)throw new Error("Got nextValueRowId=".concat(r," which is not less than ").concat(t.length));u=t[r]}s.push(u)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,a){const r=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case gI.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,a);case gI.ROW_SPLITS:if(r.length-1>t.length)throw new Error("Row partition size is greater than output size: ".concat(r.length-1," > ").concat(t.length));return this.calculateOutputIndexRowSplit(r,t,n,a);default:throw new Error("Unsupported partition type: ".concat(gI[s]))}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case gI.FIRST_DIM_SIZE:return e[0];case gI.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case gI.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error("Cannot handle type ".concat(gI[t]))}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let s=n.length-2;s>=0;--s)n[s]=n[s+1]*t[s+1];const a=vI(t,!1),r=Y(this.valuesDType,P(a));if(n[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){s=this.calculateOutputIndex(e-1,s,n[e],t[e])}this.setOutput(this.raggedRank,s,r,a)}return[a,r]}setOutput(e,t,n,a){if(0===n.length)return;const r=this.values,s=n;let o=a.slice();o=o.slice(e+1);const i=P(o),u=t.length;let c=this.defaultValue;if(c.length!==i&&1!==c.length){const e=this.defaultValueShape;ls((()=>{const t=du(c,e),n=Tu(t,o);c=n.dataSync()}))}let l=0,h=0,d=0;for(let p=0;p<=u;++p){let e=p<u?t[p]:-1;if(e!==d){if(h<d){const e=r.subarray(l*i);bI(s.subarray(h*i),e,(d-h)*i)}if(p>=u){const t=n.length;e=Math.floor(t/i)}if(e>d)if(1===this.defaultValue.length)s.subarray(d*i,e*i).fill(this.defaultValue[0]),d=e;else for(;e>d;){bI(s.slice(d*i),c,i),++d}e<0?(l=p+1,h=d):(l=p,h=d,d=h+1)}else++d}}}function bI(e,t,n){for(let a=0;a<n;a++)e[a]=t[a]}function vI(e,t){const n=[];for(let a of e){if(a<0){if(!t)throw new Error("Dimension ".concat(a," must be >= 0"));if(a<-1)throw new Error("Dimension ".concat(a," must be >= -1"));a=-1}n.push(a)}return n}function xI(e,t,n,a,r,s,o,i,u,c){return new yI(e,t,n,a,r,s,o,i,u,c).compute()}const wI={kernelName:In,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:s,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:u}=a,c=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=i.map((e=>n.data.get(e.dataId).values)),p=i.map((e=>e.shape)),[f,m]=xI(c,r.shape,l,s.shape,s.dtype,h,o.shape,d,p,u);return n.makeTensorInfo(f,s.dtype,m)}};function DI(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return ie(0,a);const r=ie(Math.abs(Math.ceil((t-e)/n)),a);t<e&&1===n&&(n=-1),r[0]=e;for(let s=1;s<r.length;s++)r[s]=r[s-1]+n;return r}const kI={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,dtype:s,step:o}=n,i=DI(a,r,o,s);return t.makeTensorInfo([i.length],s,i)}},CI=Ck(An,(e=>1/e)),NI={kernelName:An,backendName:"cpu",kernelFunc:CI};const SI={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:i}=a;xk(r,"resizeBilinear");const u=ae(r.shape),[c,l]=i,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(P([h,c,l,f])),y=[s&&c>1?d-1:d,s&&l>1?p-1:p],b=[s&&c>1?c-1:c,s&&l>1?l-1:l];let v=0;const x=y[0]/b[0],w=y[1]/b[1];for(let D=0;D<h;D++)for(let e=0;e<c;e++){let t;t=o?x*(e+.5)-.5:x*e;const n=Math.max(0,Math.floor(t)),a=t-n,r=Math.min(d-1,Math.ceil(t)),s=D*u[0]+n*u[1],i=D*u[0]+r*u[1];for(let e=0;e<l;e++){let t;t=o?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,c=Math.min(p-1,Math.ceil(t)),l=s+n*u[2],h=i+n*u[2],d=s+c*u[2],y=i+c*u[2];for(let e=0;e<f;e++){const t=m[l+e],n=m[h+e],s=t+(m[d+e]-t)*r,o=s+(n+(m[y+e]-n)*r-s)*a;g[v++]=o}}}return n.makeTensorInfo([h,c,l,f],"float32",g)}};const EI={kernelName:zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a;xk([s,r],"resizeBilinearGrad");const i=ae(r.shape),[u,c,l,h]=r.shape,[,d,p]=s.shape,f=new Float32Array(u*c*l*h),m=[o&&d>1?c-1:c,o&&p>1?l-1:l],g=[o&&d>1?d-1:d,o&&p>1?p-1:p],y=m[0]/g[0],b=m[1]/g[1],v=n.data.get(s.dataId).values;let x=0;for(let w=0;w<u;w++){const e=w*i[0];for(let t=0;t<d;t++){const n=t*y,a=Math.floor(n),r=Math.min(Math.ceil(n),c-1),s=e+a*i[1],o=e+r*i[1],u=n-a,d=1-u;for(let e=0;e<p;e++){const t=e*b,n=Math.floor(t),a=Math.min(Math.ceil(t),l-1),r=t-n,c=1-r,p=s+n*i[2],m=s+a*i[2],g=o+n*i[2],y=o+a*i[2],w=d*c,D=d*r,k=u*c,C=u*r;for(let e=0;e<h;e++){const t=v[x++];f[p+e]+=t*w,f[m+e]+=t*D,f[g+e]+=t*k,f[y+e]+=t*C}}}}return n.makeTensorInfo([u,l,c,h],"float32",f)}};const II={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:i}=a;xk(r,"resizeNearestNeighbor");const u=ae(r.shape),[c,l]=i,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(h*c*l*f),y=[s&&c>1?d-1:d,s&&l>1?p-1:p],b=[s&&c>1?c-1:c,s&&l>1?l-1:l],v=y[0]/b[0],x=y[1]/b[1];let w=0;for(let D=0;D<h;D++){const e=D*u[0];for(let t=0;t<c;t++){const n=o?v*(t+.5):v*t;let a=Math.min(d-1,s?Math.round(n):Math.floor(n));o&&(a=Math.max(0,a));const r=e+a*u[1];for(let e=0;e<l;e++){const t=o?x*(e+.5):x*e;let n=Math.min(p-1,s?Math.round(t):Math.floor(t));o&&(n=Math.max(0,n));const a=r+n*u[2];for(let e=0;e<f;e++){const t=m[a+e];g[w++]=t}}}}return n.makeTensorInfo([h,c,l,f],r.dtype,g)}};const TI={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a;xk([s,r],"resizeNearestNeighborGrad");const i=ae(r.shape),u=ae(s.shape),[c,l,h,d]=r.shape,[,p,f]=s.shape,m=new Float32Array(c*l*h*d),g=n.data.get(s.dataId).values,y=[o&&p>1?l-1:l,o&&f>1?h-1:h],b=[o&&p>1?p-1:p,o&&f>1?f-1:f],v=y[0]/b[0],x=y[1]/b[1],w=1/v,D=1/x,k=2*Math.ceil(w)+2,C=2*Math.ceil(D)+2;for(let N=0;N<c;N++){const e=N*i[0];for(let t=0;t<l;t++){const n=e+t*i[1],a=Math.floor(t*w),r=Math.floor(a-k/2);for(let s=0;s<h;s++){const a=n+s*i[2],c=Math.floor(s*D),y=Math.floor(c-C/2);for(let n=0;n<d;n++){let i=0;for(let a=0;a<k;a++){const c=a+r;if(c<0||c>=p)continue;const d=e+c*u[1],m=c*v;if(t===Math.min(l-1,o?Math.round(m):Math.floor(m)))for(let e=0;e<C;e++){const t=e+y;if(t<0||t>=f)continue;const a=d+t*u[2],r=t*x;s===Math.min(h-1,o?Math.round(r):Math.floor(r))&&(i+=g[a+n])}}m[a+n]=i}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}};const FI={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a;xk(r,"reverse");const o=r.shape.length,i=q(s,r.shape);if(0===o)return Ik({inputs:{x:r},backend:n});const u=new vr(r.shape,r.dtype),c=n.bufferSync(r);for(let l=0;l<u.size;l++){const e=u.indexToLoc(l),t=e.slice();i.forEach((e=>t[e]=r.shape[e]-1-t[e])),u.set(c.get(...t),...e)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},AI={kernelName:Ta,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:s,fillValue:o,center:i}=n,u=a,c=X(r.dtype,P(r.shape)),[l,h,d,p]=r.shape,[f,m]=yp(i,h,d),g=Math.sin(s),y=Math.cos(s),b=u.data.get(r.dataId).values;for(let v=0;v<l;v++){const e=v*d*h*p;for(let t=0;t<h;t++){const n=t*(d*p);for(let a=0;a<d;a++){const r=a*p;for(let s=0;s<p;s++){const i=[l,t,a,s],u=i[2],v=i[1];let x=(u-f)*y-(v-m)*g,w=(u-f)*g+(v-m)*y;x=Math.round(x+f),w=Math.round(w+m);let D=o;if("number"!==typeof o&&(D=3===s?255:o[s]),x>=0&&x<d&&w>=0&&w<h){D=b[e+w*(d*p)+x*p+s]}c[e+n+r+s]=D}}}}return{dataId:u.write(c,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},RI=Ck(Wn,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),_I={kernelName:Wn,backendName:"cpu",kernelFunc:RI},OI=kk((e=>1/Math.sqrt(e))),LI=Nk(Vn,OI),MI={kernelName:Vn,backendName:"cpu",kernelFunc:LI};function zI(e,t,n,a,r,s,o,i,u,c){const l=[a/r,r],h=e.values,d=t.values;if(0===a)return bo(n,t.dtype);const p=u instanceof vr?u:bo(l,t.dtype);"string"===typeof u||"number"===typeof u?p.values.fill(u):"boolean"===typeof u&&p.values.fill(+u);for(let f=0;f<s;f++){const e=[];let s=0;for(let t=0;t<o;t++){const n=h[f*o+t];e.push(n),s+=n*i[t]}if(s<0||s>=a/r)throw new Error("Invalid indices: ".concat(e," does not index into ").concat(n));for(let n=0;n<r;n++)c?p.values[s*r+n]+=d[f*r+n]:p.values[s*r+n]=0===t.rank?d[0]:d[f*r+n]}return p}const BI={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:o}=a,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:h}=Ch(0,r,o),d=zI(n.bufferSync(r),n.bufferSync(s),o,h,c,u,i,l,0,!0);return n.makeTensorInfo(o,d.dtype,d.values)}};function PI(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<t?n=r+1:a=r;return a}function WI(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<=t?n=r+1:a=r;return a}const VI={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:o}=a,i=function(e,t,n,a,r,s){const o=Y("int32",n*r);for(let i=0;i<n;++i){const n=e.slice(i*a,(i+1)*a),u=i*r;for(let e=0;e<r;++e)o[u+e]="left"===s?PI(n,t[e+u]):WI(n,t[e+u])}return o}(n.data.get(r.dataId).values,n.data.get(s.dataId).values,r.shape[0],r.shape[1],s.shape[1],o);return n.makeTensorInfo(s.shape,"int32",i)}};const UI={kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t;xk([a,r,s],"select");const o=a.shape.length,i=n.data.get(a.dataId).values,u=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,l=Rr(r.dtype,s.dtype),h=ie(P(r.shape),l);let d=0;const p=0===o||o>1||1===r.shape.length?1:P(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let e=0;e<p;e++)1===i[f]?h[d++]=u[f]:h[d++]=c[f];return n.makeTensorInfo(r.shape,l,h)}},GI=Cp,HI=Np,jI=Ck(qn,(e=>e>=0?HI*e:GI*(Math.exp(e)-1))),qI={kernelName:qn,backendName:"cpu",kernelFunc:jI},KI=Ck(Qn,(e=>e<0?-1:e>0?1:0)),XI={kernelName:Qn,backendName:"cpu",kernelFunc:KI},YI=Ck(Xn,(e=>Math.sin(e))),QI={kernelName:Xn,backendName:"cpu",kernelFunc:YI},ZI=Ck(Yn,(e=>Math.sinh(e))),JI={kernelName:Yn,backendName:"cpu",kernelFunc:ZI},$I=Math.log(1.1920928955078125e-7)+2,eT=Ck(Jn,(e=>{const t=e>-$I,n=e<$I,a=Math.exp(e);let r;return r=n?a:t?e:Math.log(1+a),r})),tT={kernelName:Jn,backendName:"cpu",kernelFunc:eT};const nT={kernelName:ta,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:o}=a;xk([r],"spaceToBatchND");const i=P(s),u=[[0,0]];u.push(...o);for(let g=1+s.length;g<r.shape.length;++g)u.push([0,0]);const c=nI.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),l=bp(c.shape,s,i,!1),h=vp(l.length,s.length,!1),d=xp(c.shape,s,i,!1),p=rC({inputs:{x:c},backend:n,attrs:{shape:l}}),f=yC({inputs:{x:p},backend:n,attrs:{perm:h}}),m=rC({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};function aT(e,t,n,a,r,s,o){const i=t[0],u=s[0],c=new Array(u),l=new Array(i),h=t[1];if(0===u){if(0!==i)throw new Error(Zp(i));return[Y(n,0),[0,h],Y(r,0),c,l]}let d=!0,p=0;const f=new Array(u).fill(0);for(let g=0;g<i;++g){const t=e[g*h];if(t<0)throw new Error(Jp(g,t));if(t>=u)throw new Error($p(g,t,u));++f[t],d=d&&t>=p,p=t}let m=!0;for(let g=0;g<u;++g){const e=0===f[g];c[g]=e,m=m&&!e,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){const t=e,n=a;for(let e=0;e<i;++e)l[e]=e;return[t,[i,h],n,c,l]}{const t=f[u-1],s=Y(n,t*h),d=Y(r,t),p=new Array(u).fill(0);for(let n=0;n<i;++n){const t=e[n*h],r=p[t],o=(0===t?0:f[t-1])+r;p[t]++;for(let a=0;a<h;++a)s[o*h+a]=e[n*h+a];d[o]=a[n],l[n]=o}for(let e=0;e<u;++e){if(0===p[e]){const t=0===e?0:f[e-1];s[t*h+0]=e;for(let e=1;e<h;++e)s[t*h+e]=0;d[t]=o}}return[s,[t,h],d,c,l]}}const rT={kernelName:ra,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n        ".concat(s.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Values must be a vector, saw:\n        ".concat(r.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.data.get(a.dataId).values,u=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,l=n.data.get(o.dataId).values[0],[h,d,p,f,m]=aT(i,a.shape,a.dtype,u,r.dtype,c,l);return[n.makeTensorInfo(d,a.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};function sT(e,t,n,a,r){const s=P(a),o=t[0],i=r.length,u=[];let c=1,l=-1;for(let m=0;m<i;++m){const e=r[m];if(-1===e){if(-1!==l)throw new Error(ef(l,m));l=m,u.push(1)}else{if(e<0)throw new Error(tf(m,e));c*=e,u.push(e)}}if(-1!==l){if(c<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(s/c);if(c*e!==s)throw new Error(af(a,u));u[l]=e}if(P(u)!==s)throw new Error(rf(a,u));const h=a.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*a[e+1]}const p=[];if(i>0){p[i-1]=1;for(let e=i-2;e>=0;--e)p[e]=p[e+1]*u[e+1]}const f=Y(n,o*i);for(let m=0;m<o;++m){let t=0;for(let n=0;n<h;++n)t+=e[m*h+n]*d[n];for(let e=0;e<i;++e)f[m*i+e]=Math.trunc(t/p[e]),t%=p[e]}return[f,[o,i],u]}const oT={kernelName:sa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape\n        ".concat(r.shape));if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(s.shape));const o=Array.from(n.data.get(r.dataId).values),i=n.data.get(a.dataId).values,u=Array.from(n.data.get(s.dataId).values),[c,l,h]=sT(i,a.shape,a.dtype,o,u);return[n.makeTensorInfo(l,a.dtype,c),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};function iT(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const i=a.length,u=[t[0],e.length/t[0]],c=u[1],l=i>0?r[i-1]+1:0;if(l<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=l;const d=Y(n,h.reduce(((e,t)=>e*t),1));if(0===i)return l>0&&d.fill(o),[d,h];if(l<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=r[p];for(;;){let t=0;if(f<i){if(t=r[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=l)throw new Error(uf(g,l));g>m&&d.fill(o,m*c,g*c);for(let n=p;n<f;++n){const t=a[n];if(t<0||t>=u[0])throw new Error(cf(n,a[n],u[0]));for(let n=0;n<c;n++)d[g*c+n]+=e[t*c+n]}if(s)for(let e=0;e<c;e++)d[g*c+e]/=f-p;if(p=f,++f,m=g+1,g=t,f>i)break}return m<l&&d.fill(o,m*c,l*c),[d,h]}const uT={kernelName:oa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n          ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n          ".concat(s.shape));if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,[c,l]=iT(o,a.shape,a.dtype,i,u,!0);return n.makeTensorInfo(l,a.dtype,c)}};const cT={kernelName:ia,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n         ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n         ".concat(s.shape));if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,[c,l]=iT(o,a.shape,a.dtype,i,u);return n.makeTensorInfo(l,a.dtype,c)}};const lT={kernelName:ua,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:o}=t,{outputShape:i}=a,{sliceRank:u,numUpdates:c,sliceSize:l,strides:h,outputSize:d}=Ch(0,r,i),p=!1,f=n.bufferSync(r);let m;switch(s.dtype){case"bool":m=zI(f,n.bufferSync(s),i,d,l,c,u,h,Boolean(n.data.get(o.dataId).values[0]),p);break;case"float32":m=zI(f,n.bufferSync(s),i,d,l,c,u,h,n.data.get(o.dataId).values[0],p);break;case"int32":m=zI(f,n.bufferSync(s),i,d,l,c,u,h,n.data.get(o.dataId).values[0],p);break;case"string":m=zI(f,n.bufferSync(s),i,d,l,c,u,h,ur(n.data.get(o.dataId).values[0]),p);break;default:throw new Error("Unsupported type ".concat(s.dtype))}return n.makeTensorInfo(i,m.dtype,m.values)}};const hT={kernelName:na,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:o}=a,i=q(o,r.shape)[0],u=Qp(r,s,i),c=new Array(r.shape.length).fill(0),l=r.shape.slice();return u.map((e=>{const t=[...l];t[i]=e;const a=GC({inputs:{x:r},backend:n,attrs:{begin:c,size:t}});return c[i]+=e,a}))}},dT=kk((e=>Math.sqrt(e))),pT=Ck($n,(e=>Math.sqrt(e))),fT={kernelName:$n,backendName:"cpu",kernelFunc:pT},mT={kernelName:la,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{x:a}=t,r=n;xk(a,"square");const s=r.data.get(a.dataId).values,o=new Float32Array(s.length);for(let i=0;i<s.length;++i){const e=s[i];o[i]=e*e}return{dataId:r.write(o,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},gT=Rk(((e,t)=>{const n=e-t;return n*n})),yT=Jk(ca,gT),bT={kernelName:ca,backendName:"cpu",kernelFunc:yT},vT=kk(((e,t)=>{const{pattern:n,replaceGlobal:a,rewrite:r}=t;return e.replace(new RegExp(n,a?"g":""),r)})),xT=Nk(ha,vT),wT={kernelName:ha,backendName:"cpu",kernelFunc:xT},DT=Ck(Ea,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),kT={kernelName:Ea,backendName:"cpu",kernelFunc:DT};function CT(e,t,n,a){const r=bo(e,t.dtype);for(let s=0;s<r.size;s++){const e=r.indexToLoc(s),o=new Array(e.length);for(let t=0;t<o.length;t++)o[t]=e[t]*n[t]+a[t];r.set(t.get(...o),...e)}return r}const NT={kernelName:da,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:o,strides:i,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:h,shrinkAxisMask:d}=a;xk(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:v,strides:x}=zi(r.shape,s,o,i,u,c,l,h,d);let w;if(m)w=rC({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){M(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const e=Ci(b,v,x),t=GC({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});w=rC({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=CT(p,n.bufferSync(r),x,b);w=n.makeTensorInfo(f,e.dtype,e.values)}return w}};class ST{constructor(e,t,n,a,r,s){this.separator=ir(e),this.nGramWidths=t,this.leftPad=ir(n),this.rightPad=ir(a),this.padWidth=r,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,a,r,s){for(let o=0;o<r;++o){const i=this.getPadWidth(s),u=Math.max(0,i-o),c=Math.max(0,i-(r-(o+1))),l=s-(u+c),h=t+(u>0?0:o-i);let d=0;d+=u*this.leftPad.length;for(let t=0;t<l;++t)d+=e[h+t].length;d+=c*this.rightPad.length;d+=(u+c+l-1)*this.separator.length,n[a+o]=new Uint8Array(d);const p=n[a+o];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<l-1;++t)m(e[h+t]),m(this.separator);if(l>0){m(e[h+l-1]);for(let e=0;e<c;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<c-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error("First split value must be 0, got ".concat(e));for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error("Invalid split value ".concat(t[r],", must be in [").concat(e,", ").concat(n,"]"));e=t[r]}if(e!==n)throw new Error("Last split value must be data size. Expected ".concat(n,", got ").concat(e))}const r=a-1,s=Y("int32",a);if(0===n||0===a){const e=new Array(n);for(let t=0;t<=r;++t)s[t]=0;return[e,s]}s[0]=0;for(let i=1;i<=r;++i){const e=t[i]-t[i-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),s[i]=s[i-1]+n}const o=new Array(s[r]);for(let i=0;i<r;++i){const n=t[i];let a=s[i];if(this.nGramWidths.forEach((r=>{const s=t[i+1]-t[i],u=this.getNumNGrams(s,r);this.createNGrams(e,n,o,a,u,r),a+=u})),this.preserveShort&&a===s[i]){const r=t[i+1]-t[i];if(0===r)continue;const s=r+2*this.padWidth,u=1;this.createNGrams(e,n,o,a,u,s)}}return[o,s]}}function ET(e,t,n,a,r,s,o,i){return new ST(n,a,r,s,o,i).compute(e,t)}const IT={kernelName:pa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:o,rightPad:i,padWidth:u,preserveShortSequences:c}=a,{data:l,dataSplits:h}=t,d=n.data.get(l.dataId).values,p=n.data.get(h.dataId).values,[f,m]=ET(d,p,r,s,o,i,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function TT(e,t,n,a){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)a.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let s=e.indexOf(r);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||a.push(t),s=(e=e.subarray(s+1)).indexOf(r)}return void(n&&0===e.length||a.push(e))}let r=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(r,s);n&&0===t.length||a.push(t),r=s+1}}function FT(e,t,n){const a=e.length,r=[];let s=0,o=0;const i=new Array(a);for(let d=0;d<a;++d){const a=r.length;TT(e[d],t,n,r);const u=r.length-a;i[d]=u,s+=u,o=Math.max(o,u)}const u=Y("int32",2*s),c=new Array(s),l=[a,o];let h=0;for(let d=0;d<a;++d)for(let e=0;e<i[d];++e)u[2*h]=d,u[2*h+1]=e,c[h]=r[h],++h;return[u,c,l]}const AT={kernelName:fa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: ".concat(s.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values[0],[c,l,h]=FT(i,u,r),d=l.length;return[n.makeTensorInfo([d,2],"int32",c),n.makeTensorInfo([d],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function RT(e,t){const n=Y("int32",e.length);for(let a=0;a<e.length;++a)n[a]=ar(e[a]).modulo(t).getLowBitsUnsigned();return n}const _T={kernelName:ma,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=RT(n.data.get(s.dataId).values,r);return n.makeTensorInfo(s.shape,"int32",o)}},OT=Ck(ya,(e=>Math.tan(e))),LT={kernelName:ya,backendName:"cpu",kernelFunc:OT},MT=Ck(ba,(e=>Math.tanh(e)));const zT={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:a,indices:r,updates:s}=t,{sliceRank:o,numUpdates:i,sliceSize:u,strides:c,outputSize:l}=Ch(0,r,a.shape),h=n.bufferSync(r),d=n.bufferSync(s),p=n.bufferSync(a),f=zI(h,d,a.shape,l,u,i,o,c,p,!1);return n.makeTensorInfo(a.shape,f.dtype,f.values)}};function BT(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const a=bo(n,e.dtype);for(let r=0;r<a.values.length;++r){const t=a.indexToLoc(r),n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=t[a]%e.shape[a];const s=e.locToIndex(n);a.values[r]=e.values[s]}return a}const PT={kernelName:va,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;xk(r,"tile");const o=BT(n.bufferSync(r),s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}},WT=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function VT(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;a>n;){if(a-n>600){const r=a-n+1,s=t-n+1,o=Math.log(r),i=.5*Math.exp(2*o/3),u=.5*Math.sqrt(o*i*(r-i)/r)*Math.sign(s-r/2);VT(e,t,Math.max(n,Math.floor(t-s*i/r+u)),Math.min(a,Math.floor(t+(r-s)*i/r+u)))}const r=e[t];let s=n,o=a;for(L(e,n,t),WT(e[a],r)>0&&L(e,n,a);s<o;){for(L(e,s,o),s++,o--;WT(e[s],r)<0;)s+=1;for(;WT(e[o],r)>0;)o-=1}0===WT(e[n],r)?L(e,n,o):(o+=1,L(e,o,a)),o<=t&&(n=o+1),t<=o&&(a=o-1)}}function UT(e,t,n,a,r){const s=t[t.length-1],[o,i]=[e.length/s,s],u=X(n,o*a),c=X("int32",o*a);for(let h=0;h<o;h++){const t=h*i,n=e.subarray(t,t+i);let s=new Array(n.length);n.forEach(((e,t)=>s[t]={value:e,index:t})),a<s.length&&(VT(s,a),s=s.slice(0,a)),r&&s.sort(WT);const o=h*a,l=u.subarray(o,o+a),d=c.subarray(o,o+a);for(let e=0;e<a;e++)l[e]=s[e].value,d[e]=s[e].index}const l=t.slice();return l[l.length-1]=a,[bo(l,n,u),bo(l,"int32",c)]}const GT={kernelName:xa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:o}=a;xk(r,"topk");const i=n.data.get(r.dataId).values,[u,c]=UT(i,r.shape,r.dtype,s,o);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}};const HT={kernelName:wa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{image:r,transforms:s}=t,{interpolation:o,fillMode:i,fillValue:u,outputShape:c}=n,[l,h,d,p]=r.shape,[f,m]=null!=c?c:[h,d],g=[l,f,m,p],y=ae(r.shape),b=y[0],v=y[1],x=y[2],w=ae(g),D=w[0],k=w[1],C=w[2],N=X(r.dtype,P(g));N.fill(u);const S=a.data.get(r.dataId).values,E=a.data.get(s.dataId).values;for(let I=0;I<l;++I){const e=1===s.shape[0]?E:E.subarray(8*I,8*I+8);for(let t=0;t<f;++t)for(let n=0;n<m;++n)for(let a=0;a<p;++a){let r;const s=e[6]*n+e[7]*t+1;if(0===s)continue;const c=(e[0]*n+e[1]*t+e[2])/s,l=(e[3]*n+e[4]*t+e[5])/s,p=jT(c,d,i),f=jT(l,h,i);switch(o){case"nearest":r=KT(S,h,d,b,v,x,I,f,p,a,u);break;case"bilinear":r=XT(S,h,d,b,v,x,I,f,p,a,u);break;default:throw new Error("Error in Transform: Expect 'nearest' or "+"'bilinear', but got ".concat(o))}N[I*D+t*k+n*C+a]=r}return a.makeTensorInfo(g,r.dtype,N)}return{dataId:a.write(N,g,r.dtype),shape:r.shape,dtype:r.dtype}}};function jT(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return _(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return _(0,n,t-1)}(e,t);case"nearest":return function(e,t){return _(0,e,t-1)}(e,t);default:return function(e){return e}(e)}}function qT(e,t,n,a,r,s,o,i,u,c,l){return 0<=i&&i<t&&0<=u&&u<n?e[o*a+i*r+u*s+c]:l}function KT(e,t,n,a,r,s,o,i,u,c,l){return qT(e,t,n,a,r,s,o,Math.round(i),Math.round(u),c,l)}function XT(e,t,n,a,r,s,o,i,u,c,l){const h=Math.floor(i),d=Math.floor(u),p=h+1,f=d+1;return(p-i)*((f-u)*qT(e,t,n,a,r,s,o,h,d,c,l)+(u-d)*qT(e,t,n,a,r,s,o,h,f,c,l))+(i-h)*((f-u)*qT(e,t,n,a,r,s,o,p,d,c,l)+(u-d)*qT(e,t,n,a,r,s,o,p,f,c,l))}function YT(e,t,n,a){const r=q(t,n)[0],s=[1,n[0],1];for(let f=0;f<r;f++)s[0]*=n[f];s[1]=n[r];for(let f=r+1;f<n.length;f++)s[2]*=n[f];const o=new Map,i=new Int32Array(n[r]),u=new vr(s,a,e),c=[],l=1===s[0]&&1===s[2];for(let f=0;f<n[r];f++){let t;if(l)t=e[f].toString();else{const e=[];for(let t=0;t<s[0];t++)for(let n=0;n<s[2];n++)e.push(u.get(t,f,n));t=e.join(",")}const n=o.get(t);if(null!=n)i[f]=n;else{const e=o.size;o.set(t,e),i[f]=e,c.push(f)}}const h=s.slice();h[1]=o.size;const d=new vr(h,a);c.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let a=0;a<s[2];a++)d.set(u.get(n,e,a),n,t,a)}));const p=n.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:i}}const QT={kernelName:ka,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;xk(s,"unique");const o=a.data.get(s.dataId).values,{outputValues:i,outputShape:u,indices:c}=YT(o,r,s.shape,s.dtype);return[a.makeTensorInfo(u,s.dtype,i),a.makeTensorInfo([c.length],"int32",c)]}};const ZT={kernelName:Ca,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const o=r.shape.length,i=r.shape[s],u=new Array(o-1);let c=0;for(let p=0;p<o;p++)p!==s&&(u[c++]=r.shape[p]);const l=new Array(o).fill(0),h=r.shape.slice();h[s]=1;const d=new Array(i);for(let p=0;p<d.length;p++){l[s]=p;const e=GC({inputs:{x:r},backend:n,attrs:{begin:l,size:h}});d[p]=rC({inputs:{x:e},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(e)}return d}};const JT={kernelName:Na,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:o}=a;xk(r,"unsortedSegmentSum");const i=[],u=[],c=r.shape.length-s.shape.length;let l=s;for(let d=0;d<c;++d){const e=aS({inputs:{input:l},backend:n,attrs:{dim:d+1}});l=e,u.push(e)}for(let d=0;d<o;++d){const e=rr(d,"int32"),t=n.makeTensorInfo([],"int32",e),a=HN({inputs:{a:t,b:l},backend:n}),s=Qk({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),o=zN({inputs:{a:s,b:r},backend:n}),c=PN({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}});i.push(c),u.push(t),u.push(a),u.push(s),u.push(o),u.push(c)}const h=eI({inputs:i,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},$T=[uC,lC,dC,fC,aC,mC,vC,xC,wC,DC,CC,SC,IC,AC,_C,zC,BC,PC,WC,iC,VC,jC,XC,ZC,JC,Zk,tN,aN,jk,rN,cN,hN,dN,pN,fN,mN,gN,bN,xN,wN,DN,kN,CN,NN,EN,IN,TN,FN,AN,RN,_N,ON,VN,Ek,UN,jN,$N,nS,rS,iS,bS,xS,wS,CS,ES,IS,TS,AS,_S,MS,PS,Tk,WS,iN,US,HS,qS,Ak,YS,JS,eE,aE,sE,uE,lE,pE,fE,mE,bE,wE,DE,kE,CE,NE,SE,EE,IE,AE,RE,LE,BE,BN,WE,UE,HE,qE,YE,QE,$E,tI,nI,sI,Lk,iI,dI,mI,wI,kI,Xk,lS,NI,zk,Pk,sC,SI,EI,II,TI,FI,AI,_I,MI,BI,VI,UI,qI,Uk,XI,QI,JI,HC,zE,tT,nT,rT,oT,uT,cT,lT,hT,fT,mT,bT,wT,kT,NT,IT,AT,_T,fS,WN,LT,{kernelName:ba,backendName:"cpu",kernelFunc:MT},zT,PT,GT,HT,bC,QT,ZT,JT,JE];for(const n of $T)Wa(n);const eF={},tF={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function nF(e,t){if(!(e in eF)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(ge().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==e){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete eF[e]}),!1),ge().getBool("SOFTWARE_WEBGL_ENABLED")&&(tF.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",tF)||n.getContext("experimental-webgl",tF);return n.getContext("webgl2",tF)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;eF[e]=n}const n=eF[e];return null==n||n.isContextLost()?(delete eF[e],nF(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),eF[e])}var aF,rF,sF;function oF(e,t){return[t,e]}function iF(e){const t=P(e);return U(Math.ceil(t/4))}function uF(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function cF(e,t){const n=e;let a,r,s,o,i,u,c,l,h,d;return 2===ge().getNumber("WEBGL_VERSION")?(a=n.R32F,r=n.R16F,s=n.RGBA16F,o=n.RGBA32F,i=n.RED,c=4,l=1,h=n.HALF_FLOAT,d=n.FLOAT,u=n.RGBA8):(a=e.RGBA,r=e.RGBA,s=e.RGBA,o=n.RGBA,i=e.RGBA,c=4,l=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,u=e.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:l,textureTypeHalfFloat:h,textureTypeFloat:d}}function lF(e,t){const n=t();return ge().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code ".concat(t)}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(aF||(aF={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(rF||(rF={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(sF||(sF={}));function hF(e){return!!(ge().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function dF(e,t){return wF(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const pF=/ERROR: [0-9]+:([0-9]+):/g;function fF(e,t){const n=pF.exec(t);if(null==n)return console.log("Couldn't parse line number in error: ".concat(t)),void console.log(e);const a=+n[1],r=e.split("\n"),s=r.length.toString().length+2,o=r.map(((e,t)=>G((t+1).toString(),s)+e));let i=0;for(let h=0;h<o.length;h++)i=Math.max(o[h].length,i);const u=o.slice(0,a-1),c=o.slice(a-1,a),l=o.slice(a);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log("%c ".concat(G(c[0],i)),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join("\n"))}function mF(e,t){if(lF(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function gF(e,t,n,a,r,s,o){const i=e.getAttribLocation(t,n);return-1!==i&&(lF(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,a))),lF(e,(()=>e.vertexAttribPointer(i,r,e.FLOAT,!1,s,o))),lF(e,(()=>e.enableVertexAttribArray(i))),!0)}function yF(e,t,n,a){lF(e,(()=>function(e,t,n){DF(e,n),lF(e,(()=>e.activeTexture(e.TEXTURE0+n))),lF(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,a))),lF(e,(()=>e.uniform1i(n,a)))}function bF(e,t,n){lF(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),lF(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function vF(e,t){lF(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),lF(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function xF(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error ".concat(t)}}(e,t))}function wF(e,t,n){const a=lF(e,(()=>t()));if(null==a)throw new Error(n);return a}function DF(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n){const e="[gl.TEXTURE0, gl.TEXTURE".concat(n,"]");throw new Error("textureUnit must be in ".concat(e,"."))}}function kF(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return P(e.slice(0,e.length-t))}function CF(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function NF(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[kF(e),...CF(e)]),t}function SF(e){return e%2===0}function EF(e,t){if(W(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],a=t[t.length-1];if(n===a)return!0;if(SF(n)&&SF(a)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&SF(e[0])&&SF(t[0])}let IF,TF;function FF(e,t){return null!=e.getExtension(t)}function AF(e){try{if(null!=nF(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function RF(e){if(0===e)return!1;const t=nF(e);if(1!==e){if(FF(t,"EXT_color_buffer_float"))return _F(t);const e="EXT_color_buffer_half_float";if(FF(t,e)){const n=t.getExtension(e);return function(e,t){const n=cF(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a);const r=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(o),i}(t,n)}return!1}if(!FF(t,"OES_texture_float"))return!1;if(!FF(t,"WEBGL_color_buffer_float"))return!1;return _F(t)}function _F(e){const t=cF(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),r}function OF(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&M("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors ")+"in the WebGL backend."))}))}const LF=ge();function MF(){let e,t,n,a,r,s,o,i,u,c;return 2===ge().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",r="texture",s="outputColor",o="out vec4 outputColor;",i=ge().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",u="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",r="texture2D",s="gl_FragColor",o="",i="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:r,output:s,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:u,defineRound:c}}function zF(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=ae(t);return a.map(((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / ").concat(t),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * ").concat(t):"index -= ".concat(e[r]," * ").concat(t);return"".concat(s,"; ").concat(o,";")})).join("")}function BF(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=ae(t);return a.map(((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / outShapeStrides[").concat(r,"]"),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * outShapeStrides[").concat(r,"]"):"index -= ".concat(e[r]," * outShapeStrides[").concat(r,"]");return"".concat(s,"; ").concat(o,";")})).join("")}function PF(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=function(e,t){const n=e.length,a=e.map((e=>"".concat(t,"[").concat(e,"]"))),r=new Array(n-1);r[n-2]=a[n-1];for(let s=n-3;s>=0;--s)r[s]="(".concat(r[s+1]," * ").concat(a[s+1],")");return r}(e.map(((e,t)=>t)),t);return a.map(((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / ").concat(a[r]),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * ").concat(a[r]):"index -= ".concat(e[r]," * ").concat(a[r]);return"".concat(s,"; ").concat(o,";")})).join("")}function WF(e){const t=ae(e).map((e=>e.toString()));return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ".concat(t[0]," + coords.y * ").concat(t[1]," + coords.z;\n  }\n")}LF.registerFlag("HAS_WEBGL",(()=>LF.getNumber("WEBGL_VERSION")>0)),LF.registerFlag("WEBGL_VERSION",(()=>AF(2)?2:AF(1)?1:0)),LF.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),LF.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===LF.get("WEBGL_VERSION"))),LF.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),LF.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),LF.registerFlag("WEBGL_PACK",(()=>LF.getBool("HAS_WEBGL"))),LF.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>LF.getBool("WEBGL_PACK"))),LF.registerFlag("WEBGL_PACK_CLIP",(()=>LF.getBool("WEBGL_PACK"))),LF.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>LF.getBool("WEBGL_PACK"))),LF.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>LF.getBool("WEBGL_PACK"))),LF.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>LF.getBool("WEBGL_PACK"))),LF.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>LF.getBool("WEBGL_PACK"))),LF.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>LF.getBool("WEBGL_PACK"))),LF.registerFlag("WEBGL_PACK_REDUCE",(()=>LF.getBool("WEBGL_PACK"))),LF.registerFlag("WEBGL_LAZILY_UNPACK",(()=>LF.getBool("WEBGL_PACK"))),LF.registerFlag("WEBGL_CONV_IM2COL",(()=>LF.getBool("WEBGL_PACK"))),LF.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>LF.getBool("WEBGL_PACK"))),LF.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==IF){const t=nF(e);IF=t.getParameter(t.MAX_TEXTURE_SIZE)}return IF}(LF.getNumber("WEBGL_VERSION")))),LF.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==TF){const t=nF(e);TF=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,TF)}(LF.getNumber("WEBGL_VERSION")))),LF.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=LF.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=nF(e);return t=FF(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:FF(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),LF.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>LF.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Kr())),LF.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=nF(e);if(1===e){if(!FF(t,"OES_texture_float"))return!1}else if(!FF(t,"EXT_color_buffer_float"))return!1;return _F(t)}(LF.getNumber("WEBGL_VERSION")))),LF.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!LF.getBool("WEBGL_FORCE_F16_TEXTURES")&&LF.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),LF.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>RF(LF.getNumber("WEBGL_VERSION")))),LF.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=LF.getNumber("WEBGL_VERSION"))&&null!=nF(e).fenceSync;var e})),LF.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>LF.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),LF.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!==typeof e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but "+"got ".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never "+"delete) or at least 0, but got ".concat(e,"."))})),LF.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Kr()?1:-1),(e=>{if("number"!==typeof e)throw new Error("WEBGL_FLUSH_THRESHOLD must be a number but got "+"".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_FLUSH_THRESHOLD must be -1 (indicating never "+"manual flush) or at least 0, but got ".concat(e,"."))})),LF.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),LF.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),LF.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),LF.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),LF.registerFlag("WEBGL_EXP_CONV",(()=>!1)),LF.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>LF.getBool("IS_TEST"))),LF.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),LF.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),LF.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),LF.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const VF="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:UF}=s;function GF(e,t,n){const a=[];if(e.forEach((e=>{const t=P(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push("uniform float ".concat(e.name).concat(t>1?"[".concat(t,"]"):"",";")):(a.push("uniform sampler2D ".concat(e.name,";")),a.push("uniform int offset".concat(e.name,";"))),n.enableShapeUniforms){const{uniformShape:t}=$F(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push("uniform int ".concat(e.name,"Shape;"));break;case 2:a.push("uniform ivec2 ".concat(e.name,"Shape;"));break;case 3:a.push("uniform ivec3 ".concat(e.name,"Shape;"));break;case 4:a.push("uniform ivec4 ".concat(e.name,"Shape;"))}a.push("uniform ivec2 ".concat(e.name,"TexShape;"))}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{a.push("uniform ".concat(e.type," ").concat(e.name).concat(e.arrayIndex?"[".concat(e.arrayIndex,"]"):"",";"))}));const r=a.join("\n"),s=e.map((e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3?arguments[3]:void 0,r="";r+=n?jF(e,a):HF(e,a);const s=e.shapeInfo.logicalShape,o=t.logicalShape;s.length<=o.length&&(r+=n?function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=UF(e.shapeInfo.logicalShape,t.logicalShape),u=JF(o),c=o-s;let l;const h=["x","y","z","w","u","v"];l=0===s?"":o<2&&i.length>=1?"coords = 0;":i.map((e=>"coords.".concat(h[e+c]," = 0;"))).join("\n");let d="";d=o<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords.".concat(h[t+c]))).join(", ");let p="return outputValue;";const f=1===P(e.shapeInfo.logicalShape),m=P(t.logicalShape),g=1===m;if(1!==s||f||g){if(f&&!g)p=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(i.length){const e=s-2,t=s-1;i.indexOf(e)>-1&&i.indexOf(t)>-1?p="return vec4(outputValue.x);":i.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 ".concat(r,"() {\n      ").concat(u," coords = getOutputCoords();\n      ").concat(l,"\n      vec4 outputValue = get").concat(a,"(").concat(d,");\n      ").concat(p,"\n    }\n  ")}(e,t):function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===u&&null==e.shapeInfo.flatOffset&&W(o,s))return"\n      float ".concat(r,"() {\n        return sampleTexture(").concat(n,", resultUV);\n      }\n    ");const c=JF(u),l=UF(e.shapeInfo.logicalShape,t.logicalShape),h=u-i;let d;const p=["x","y","z","w","u","v"];d=0===i?"":u<2&&l.length>=1?"coords = 0;":l.map((e=>"coords.".concat(p[e+h]," = 0;"))).join("\n");let f="";f=u<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords.".concat(p[t+h]))).join(", ");return"\n    float ".concat(r,"() {\n      ").concat(c," coords = getOutputCoords();\n      ").concat(d,"\n      return get").concat(a,"(").concat(f,");\n    }\n  ")}(e,t));return r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),o=t.texShape,i=MF(),u=function(e){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ".concat(e.texture2D,"(textureSampler, uv).r;\n    }\n  ")}(i);let c,l,h=function(e){const t="".concat(e.version,"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ").concat(e.varyingFs," vec2 resultUV;\n    ").concat(e.defineOutput,"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ").concat(e.defineSpecialNaN,"\n    ").concat(e.defineSpecialInf,"\n    ").concat(e.defineRound,"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ").concat(qF,"\n    ").concat(KF,"\n    ").concat(XF,"\n  ");return t}(i);t.isPacked?(c=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===a[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ".concat(a[1],".0);\n      }\n    ");if(1===a[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ".concat(a[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      return 2 * (resTexRC.x * ").concat(a[1]," + resTexRC.y);\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(W(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(".concat(a[0],", ").concat(a[1],"));\n      }\n    ");const r=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      int b = index / ").concat(s,";\n      index -= b * ").concat(s,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ")}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2);let o=s,i="",u="b, r, c";for(let c=2;c<e.length-1;c++)o*=e[e.length-c-1],i="\n      int b".concat(c," = index / ").concat(o,";\n      index -= b").concat(c," * ").concat(o,";\n    ")+i,u="b".concat(c,", ")+u;return"\n    ivec".concat(e.length," getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(").concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      ").concat(i,"\n\n      int b = index / ").concat(s,";\n      index -= b * ").concat(s,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec").concat(e.length,"(").concat(u,");\n    }\n  ")}(e,t,n)}}(t.logicalShape,o,n.enableShapeUniforms),l=function(e){return"\n    void setOutput(vec4 val) {\n      ".concat(e.output," = val;\n    }\n  ")}(i)):(c=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.x * ".concat(t[1],".0);\n      }\n    ");if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.y * ".concat(t[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      return resTexRC.x * ").concat(t[1]," + resTexRC.y;\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){if(W(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(".concat(t[0],", ").concat(t[1],"));\n      }\n    ");if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ");if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ");if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      int r = index / ").concat(e[1],";\n      int c = index - r * ").concat(e[1],";\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n){const t=BF(["r","c","d"],e);return"\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ".concat(t,"\n    return ivec3(r, c, d);\n  }\n")}const a=zF(["r","c","d"],e);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec3(r, c, d);\n    }\n  ")}(e,t,n);case 4:return function(e,t,n){if(n){const t=BF(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ".concat(t,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}const a=zF(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}(e,t,n);case 5:return function(e,t){const n=zF(["r","c","d","d2","d3"],e);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(".concat(t[0],",\n                             ").concat(t[1],"));\n\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  ")}(e,t);case 6:return function(e,t){const n=zF(["r","c","d","d2","d3","d4"],e);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  ")}(e,t);default:throw new Error("".concat(e.length,"-D output sampling is not yet supported"))}}(t.logicalShape,o,n.enableShapeUniforms),l=function(e){return"\n    void setOutput(float val) {\n      ".concat(e.output," = vec4(val, 0, 0, 0);\n    }\n  ")}(i)),n.packedInputs&&(h+=YF);return[h,u,l,r,c,s,n.userCode].join("\n")}function HF(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"float ".concat(a,"() {return ").concat(n,";}");const[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return"\n      float ".concat(a,"() {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const o=QF(n);if(t)return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");const[i,u]=e.shapeInfo.texShape;return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(i,", ").concat(u,", ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e,t);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int index) {\n        ").concat(ZF(e),"\n      }\n    ");const r=e.shapeInfo.texShape,s=r[0],o=r[1];if(1===o&&1===s)return"\n      float ".concat(a,"(int index) {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const i=QF(n);if(1===o)return t?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[0]));\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / ").concat(s,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(1===s)return t?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / ").concat(o,".0, 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(t)return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(s,", ").concat(o,", index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape;if(null!=s&&W(n,s)){if(t)return"\n      float ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const e=s[0],n=s[1];return"\n    float ".concat(r,"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(n,".0, ").concat(e,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}const{newShape:o,keptDims:i}=K(n),u=o;if(u.length<n.length){const n=eA(e,u),a=["row","col"];return"\n      ".concat(HF(n,t),"\n      float ").concat(r,"(int row, int col) {\n        return ").concat(r,"(").concat(tA(a,i),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(").concat(n[1],", 1)));\n        ").concat(ZF(e),"\n      }\n    ");const c=s[0],l=s[1],h=QF(a);if(1===l)return t?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(").concat(a,"TexShape[0]));\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ").concat(c,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(1===c)return t?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(").concat(a,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2((index + 0.5) / ").concat(l,".0, 0.5);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(t)return"\n      float ".concat(r,"(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(a,"Shape[1] + col + ").concat(h,";\n        vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");return"\n  float ".concat(r,"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ").concat(n[1]," + col + ").concat(h,";\n    vec2 uv = uvFromFlat(").concat(c,", ").concat(l,", index);\n    return sampleTexture(").concat(a,", uv);\n  }\n")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[1]*n[2],o=n[2],{newShape:i,keptDims:u}=K(n),c=i;if(c.length<n.length){const n=eA(e,c),a=["row","col","depth"];return"\n        ".concat(HF(n,t),"\n        float ").concat(r,"(int row, int col, int depth) {\n          return ").concat(r,"(").concat(tA(a,u),");\n        }\n      ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(").concat(s,", ").concat(o,", 1)));\n        ").concat(ZF(e),"\n      }\n    ");const l=e.shapeInfo.texShape,h=l[0],d=l[1],p=e.shapeInfo.flatOffset;if(d===s&&null==p)return t?"\n      float ".concat(r,"(int row, int col, int depth) {\n        int stride1 = ").concat(a,"Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n        float ".concat(r,"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(").concat(o,", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(").concat(d,".0, ").concat(h,".0);\n          return sampleTexture(").concat(a,", uv);\n        }\n      ");if(d===o&&null==p)return t?"\n      float ".concat(r,"(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(").concat(a,"Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(").concat(n[1],", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(d,".0, ").concat(h,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");const f=QF(a);if(t)return"\n    float ".concat(r,"(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ").concat(a,"Shape[1] * ").concat(a,"Shape[2];\n      int stride1 = ").concat(a,"Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ").concat(f,";\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n      return sampleTexture(").concat(a,", uv);\n    }\n    ");return"\n      float ".concat(r,"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(s," + col * ").concat(o," + depth + ").concat(f,";\n        vec2 uv = uvFromFlat(").concat(h,", ").concat(d,", index);\n        return sampleTexture(").concat(a,", uv);\n      }\n  ")}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[3],o=n[2]*s,i=n[1]*o,{newShape:u,keptDims:c}=K(n);if(u.length<n.length){const n=eA(e,u),a=["row","col","depth","depth2"];return"\n      ".concat(HF(n,t),"\n      float ").concat(r,"(int row, int col, int depth, int depth2) {\n        return ").concat(r,"(").concat(tA(a,c),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(").concat(i,", ").concat(o,", ").concat(s,", 1)));\n        ").concat(ZF(e),"\n      }\n    ");const l=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f="int stride2 = ".concat(a,"Shape[3];"),m="int stride1 = ".concat(a,"Shape[2] * stride2;"),g="int stride0 = ".concat(a,"Shape[1] * stride1;");if(p===i&&null==l)return t?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        ").concat(f,"\n        ").concat(m,"\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(").concat(o,", ").concat(s,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");if(p===s&&null==l)return t?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(a,"Shape[1] * ").concat(a,"Shape[2], ").concat(a,"Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(n[1]*n[2],", ").concat(n[2],", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const y=QF(a);if(t)return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ").concat(f,"\n      ").concat(m,"\n      ").concat(g,"\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index + ").concat(y,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i," + col * ").concat(o," +\n          depth * ").concat(s," + depth2;\n      vec2 uv = uvFromFlat(").concat(d,", ").concat(p,", index + ").concat(y,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],s=t[3]*r,o=t[2]*s,i=t[1]*o,{newShape:u,keptDims:c}=K(t);if(u.length<t.length){const t=eA(e,u),n=["row","col","depth","depth2","depth3"];return"\n      ".concat(HF(t),"\n      float ").concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        return ").concat(a,"(").concat(tA(n,c),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(i,", ").concat(o,", ").concat(s,", ").concat(r,")) +\n          depth3;\n        ").concat(ZF(e),"\n      }\n    ");const l=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===i&&null==l)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(").concat(o,", ").concat(s,", ").concat(r,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(p===r&&null==l)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3],",\n               ").concat(t[2]*t[3],", ").concat(t[3],", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const f=QF(n);return"\n    float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i," + col * ").concat(o," + depth * ").concat(s," +\n          depth2 * ").concat(r," + depth3 + ").concat(f,";\n      vec2 uv = uvFromFlat(").concat(d,", ").concat(p,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:s}=K(t);if(r.length<t.length){const t=eA(e,r),n=["row","col","depth","depth2","depth3","depth4"];return"\n      ".concat(HF(t),"\n      float ").concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ").concat(a,"(").concat(tA(n,s),");\n      }\n    ")}const o=t[5],i=t[4]*o,u=t[3]*i,c=t[2]*u,l=t[1]*c;if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(l,", ").concat(c,", ").concat(u,", ").concat(i,")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(").concat(o,", 1)));\n        ").concat(ZF(e),"\n      }\n    ");const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===l&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(").concat(c,", ").concat(u,", ").concat(i,", ").concat(o,")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(f===o&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3]*t[4],",\n               ").concat(t[2]*t[3]*t[4],",\n               ").concat(t[3]*t[4],",\n               ").concat(t[4],")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const m=QF(n);return"\n    float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(l," + col * ").concat(c," + depth * ").concat(u," +\n          depth2 * ").concat(i," + depth3 * ").concat(o," + depth4 + ").concat(m,";\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(f,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e);default:throw new Error("".concat(n.length,"-D input sampling")+" is not yet supported")}}function jF(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),a=MF();return"\n    vec4 ".concat(n,"() {\n      return ").concat(a.texture2D,"(").concat(t,", halfCR);\n    }\n  ")}(e);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,s=MF();if(t)return"\n    vec4 ".concat(a,"(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ");const o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return"\n    vec4 ".concat(a,"(int index) {\n      vec2 uv = packedUVfrom1D(\n        ").concat(o[0],", ").concat(o[1],", index);\n      return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,o=s[0],i=s[1],u=MF();if(null!=s&&W(n,s))return t?"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n\n        return ").concat(u.texture2D,"(").concat(a,", uv);\n      }\n    "):"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(i,".0, ").concat(o,".0);\n\n        return ").concat(u.texture2D,"(").concat(a,", uv);\n      }\n    ");if(t)return"\n    vec4 ".concat(r,"(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ").concat(u.texture2D,"(").concat(a,", uv);\n    }\n  ");const c=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],l=Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int row, int col) {\n      vec2 uv = packedUVfrom2D(").concat(l,", ").concat(c[0],", ").concat(c[1],", row, col);\n      return ").concat(u.texture2D,"(").concat(a,", uv);\n    }\n  ")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const a=[1,2],s=eA(e,n.slice(1)),o=["b","row","col"];return"\n        ".concat(jF(s,t),"\n        vec4 ").concat(r,"(int b, int row, int col) {\n          return ").concat(r,"(").concat(tA(o,a),");\n        }\n      ")}const i=MF();if(t)return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ");const u=o[0],c=o[1],l=Math.ceil(n[2]/2),h=l*Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ").concat(u,", ").concat(c,", ").concat(h,", ").concat(l,", b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ")}(e,t);default:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=MF();if(t)return"\n    vec4 ".concat(a,"(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(").concat(n,"Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(n,"Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ").concat(n,"Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ");const s=e.shapeInfo.logicalShape,o=s.length,i=e.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=u[0],l=u[1],h=Math.ceil(s[o-1]/2);let d=h*Math.ceil(s[o-2]/2),p="int b, int row, int col",f="b * ".concat(d," + (row / 2) * ").concat(h," + (col / 2)");for(let m=2;m<o-1;m++)p="int b".concat(m,", ")+p,d*=s[o-m-1],f="b".concat(m," * ").concat(d," + ")+f;return"\n    vec4 ".concat(a,"(").concat(p,") {\n      int index = ").concat(f,";\n      int texR = index / ").concat(l,";\n      int texC = index - texR * ").concat(l,";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(l,", ").concat(c,");\n      return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t)}}const qF="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",KF="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",XF="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",YF="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function QF(e){return"offset".concat(e)}function ZF(e){const t=e.name,n=P(e.shapeInfo.logicalShape);return n<2?"return ".concat(t,";"):"\n    for (int i = 0; i < ".concat(n,"; i++) {\n      if (i == index) {\n        return ").concat(t,"[i];\n      }\n    }\n  ")}function JF(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error("GPU for rank ".concat(e," is not yet supported"))}function $F(e,t,n){const{newShape:a,keptDims:r}=K(t),s=t.length,o=e&&3===s&&1===t[0],i=o?t.slice(1):a,u=!e&&s>1&&!W(t,n)&&a.length<s||o;return{useSqueezeShape:u,uniformShape:u?i:t,keptDims:r}}function eA(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function tA(e,t){return t.map((t=>e[t])).join(", ")}function nA(e,t,n,a){const r=n.map(((e,n)=>{const a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:a}})),s=r.map((e=>e.shapeInfo)),o={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},i=GF(r,o,t),u=function(e,t){const n=wF(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(lF(e,(()=>e.shaderSource(n,t))),lF(e,(()=>e.compileShader(n))),ge().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw fF(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,i),c=e.createProgram(u);return ge().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:i,webGLProgram:c,inShapeInfos:s,outShapeInfo:o,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(c),Object.assign({program:t,fragmentShader:u,source:i,webGLProgram:c,inShapeInfos:s,outShapeInfo:o},aA(e,t,c)))}function aA(e,t,n){const a=[],r=[];let s,o,i,u=null,c=null;c=e.getUniformLocation(n,"NAN",!1),1===ge().getNumber("WEBGL_VERSION")&&(u=e.getUniformLocation(n,"INFINITY",!1));const l=!1;for(const h of t.variableNames){const r={name:h,uniform:e.getUniformLocation(n,h,l),offset:e.getUniformLocation(n,"offset".concat(h),l)};t.enableShapeUniforms&&(r.shape=e.getUniformLocation(n,"".concat(h,"Shape"),l),r.texShape=e.getUniformLocation(n,"".concat(h,"TexShape"),l)),a.push(r)}if(t.enableShapeUniforms&&(s=e.getUniformLocation(n,"outShape",l),i=e.getUniformLocation(n,"outShapeStrides",l),o=e.getUniformLocation(n,"outTexShape",l)),t.customUniforms)for(const h of t.customUniforms)r.push(e.getUniformLocation(n,h.name,l));return{variablesLocations:a,customUniformLocations:r,infLoc:u,nanLoc:c,outShapeLocation:s,outShapeStridesLocation:i,outTexShapeLocation:o}}function rA(e,t){if(e.length!==t.length)throw Error("Binary was compiled with ".concat(e.length," inputs, but ")+"was executed with ".concat(t.length," inputs"));e.forEach(((e,n)=>{const a=e.logicalShape,r=t[n],s=r.shape;if(!W(a,s))throw Error("Binary was compiled with different shapes than "+"the current args. Shapes ".concat(a," and ").concat(s," must match"));if(e.isUniform&&r.isUniform)return;const o=e.texShape,i=r.isUniform?null:r.texData.texShape;if(!W(o,i))throw Error("Binary was compiled with different texture shapes than the"+" current args. Shape ".concat(o," and ").concat(i," must match"))}))}function sA(e){return ge().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class oA{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=aF.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=MF();this.outputShape=e,this.enableShapeUniforms=sA(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?BF(["r","c","d"],e):zF(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class iA{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=aF.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=MF();this.outputShape=e,this.enableShapeUniforms=sA(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?BF(["r","c","d"],e):zF(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class uA{constructor(e){this.variableNames=["A"],this.outTexUsage=rF.DOWNLOAD;const t=MF();this.outputShape=e,this.userCode="\n      ".concat(VF,"\n\n      void main() {\n        float x = getAAtOutCoords();\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}class cA{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=rF.DOWNLOAD;const t=MF();this.outputShape=e,this.userCode="\n      ".concat(VF,"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}const lA={R:0,G:1,B:2,A:3};class hA{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RGBA";this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=MF();this.outputShape=e,this.enableShapeUniforms=sA(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let s="";for(let o=0;o<n.length;o++){const e=n[o];s+="\n          if(offset == ".concat(o,") {\n            result = values[").concat(lA[e],"];\n          }")}this.userCode="\n      ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":WF(e),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ").concat(n.length,");\n\n        flatIndex = idiv(flatIndex, ").concat(n.length,", 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ").concat(a.texture2D,"(A, uv);\n          ").concat(s,"\n        }\n        ").concat(a.output," = vec4(").concat(r,", 0., 0., 0.);\n      }\n    ")}}class dA{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=MF();this.outputShape=e,this.enableShapeUniforms=sA(this.outputShape.length);let a="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let t=0;t<=1;t++){const r=2*s+t;a+="\n          localCoords = coords;\n          if(localCoords[2] + ".concat(t," < ").concat(this.enableShapeUniforms?"outShape[2]":"".concat(e[2]),") {\n          localCoords[2] += ").concat(t,";\n          if (localCoords[1] + ").concat(s," < ").concat(this.enableShapeUniforms?"outShape[1]":"".concat(e[1]),") {\n            localCoords[1] += ").concat(s,";\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ").concat(n.texture2D,"(A, uv);\n\n            if (offset == 0) {\n              result[").concat(r,"] = values[0];\n            } else if (offset == 1) {\n              result[").concat(r,"] = values[1];\n            } else if (offset == 2) {\n              result[").concat(r,"] = values[2];\n            } else {\n              result[").concat(r,"] = values[3];\n            }\n          }\n        }\n        ")}this.userCode="\n        ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":WF(e),"\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ").concat(a,"\n\n          ").concat(n.output," = ").concat(r,";\n        }\n    ")}}function pA(e){const t=MF();return function(e,t){const n=wF(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(lF(e,(()=>e.shaderSource(n,t))),lF(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,"".concat(t.version,"\n    precision highp float;\n    ").concat(t.attribute," vec3 clipSpacePos;\n    ").concat(t.attribute," vec2 uv;\n    ").concat(t.varyingVs," vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }"))}function fA(e){return function(e,t){const n=wF(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return lF(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),lF(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function mA(e){return function(e,t){const n=wF(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return lF(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),lF(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function gA(e,t,n,a,r,s){!function(e,t){const n=ge().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){const n="[".concat(e,"x").concat(t,"]");throw new Error("Requested texture size "+n+" is invalid.")}if(e>n||t>n){const a="[".concat(e,"x").concat(t,"]"),r="[".concat(n,"x").concat(n,"]");throw new Error("Requested texture size "+a+" greater than WebGL maximum on this browser / GPU "+r+".")}}(t,n);const o=function(e){return wF(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),i=e.TEXTURE_2D;return lF(e,(()=>e.bindTexture(i,o))),lF(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),lF(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),lF(e,(()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST))),lF(e,(()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===ge().getNumber("WEBGL_VERSION")?lF(e,(()=>e.texImage2D(i,0,a,t,n,0,r,s,null))):lF(e,(()=>e.texStorage2D(i,1,a,t,n))),lF(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:o,texShape:[n,t]}}function yA(e){return e.internalFormatFloat}function bA(e){return e.internalFormatHalfFloat}function vA(e){return e.downloadTextureFormat}function xA(e){return e.internalFormatPackedFloat}function wA(e){return e.internalFormatPackedHalfFloat}function DA(e,t,n,a,r,s,o,i){const u=e,c=new Float32Array(function(e,t){const[n,a]=uF(e,t);return n*a*4}(s,o));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}class kA{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=ge().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){eF[e]=t}(t,e)):this.gl=nF(t),e=this.gl,2===ge().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>lF(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>lF(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>lF(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>lF(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>lF(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>lF(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>lF(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>lF(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===ge().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=dF(this.gl,e),FF(this.gl,t))this.textureHalfFloatExtension=dF(this.gl,t);else if(ge().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),FF(this.gl,a))this.colorBufferHalfFloatExtension=dF(this.gl,a);else if(ge().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",FF(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!FF(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=fA(this.gl),this.indexBuffer=mA(this.gl),this.framebuffer=function(e){return wF(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=cF(this.gl,this.textureHalfFloatExtension)}get debug(){return ge().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;lF(e,(()=>e.finish())),lF(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),lF(e,(()=>e.deleteFramebuffer(this.framebuffer))),lF(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),lF(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),lF(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=oF(t,n);return gA(e,r,s,yA(a),a.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=oF(t,n);return gA(e,r,s,bA(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=oF(t,n);return gA(e,r,s,vA(a),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){lF(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===ge().getNumber("WEBGL_VERSION")?lF(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):lF(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===ge().getNumber("WEBGL_VERSION")?lF(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):lF(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),lF(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),function(e,t,n,a,r,s){let o,i,u;lF(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(o=new Uint8Array(n*a*4),i=e.UNSIGNED_BYTE,u=e.RGBA):(o=new Float32Array(n*a*4),i=e.FLOAT,u=s.internalFormatPackedFloat),o.set(r),2===ge().getNumber("WEBGL_VERSION")?lF(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,a,e.RGBA,i,o))):lF(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,a,0,e.RGBA,i,o))),lF(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=uF(t,n);return gA(e,r,s,wA(a),e.RGBA,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=uF(t,n);return gA(e,r,s,xA(a),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(vF(this.gl,this.framebuffer),this.outputTexture=null),lF(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,a){const[r,s]=oF(t,n),o=new Uint8Array(t*n*4);return lF(e,(()=>e.readPixels(0,0,r,s,a.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,a,r,s){return DA(this.gl,e,0,0,0,r,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const a=e,r=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,r),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const a=function(e,t,n){const a=e.createBuffer();lF(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const r=16*t*n;return lF(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,r,e.STREAM_READ))),lF(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),lF(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(ge().getBool("WEBGL_FENCE_API_ENABLED")){const a=e,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=a.clientWaitSync(r,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=r}else ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const a=new Float32Array(t*n*4);return lF(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a))),a}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=pA(t));const n=function(e){return wF(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);lF(t,(()=>t.attachShader(n,this.vertexShader))),lF(t,(()=>t.attachShader(n,e))),function(e,t){if(lF(e,(()=>e.linkProgram(t))),!ge().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const a=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&mF(t,a),a}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;lF(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){lF(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),gF(e,t,"clipSpacePos",n,3,20,0)&&gF(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(lF(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&mF(this.gl,this.program),lF(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?function(e,t,n){return wF(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),lF(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),yF(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[a,r]=uF(t,n);this.setOutputMatrixTextureDriver(e,a,r)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&mF(this.gl,this.program),xF(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}lF(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),lF(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=dF(this.gl,2===ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await H((()=>this.disposed||this.isQueryAvailable(e,ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in ge().platform&&(n=ge().platform.setTimeoutCustom.bind(ge().platform)),H((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),bF(this.gl,e,this.framebuffer),this.debug&&xF(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(bF(this.gl,this.outputTexture,this.framebuffer),this.debug&&xF(this.gl)):vF(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const a=this.gl;bF(a,e,this.framebuffer),this.debug&&xF(a),this.outputTexture=e,lF(a,(()=>a.viewport(0,0,t,n))),lF(a,(()=>a.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),lF(this.gl,(()=>this.gl.scissor(e,t,n,a)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{mx:CA,XI:NA,Nk:SA,f6:EA,ct:IA,YG:TA,hH:FA,z3:AA,sG:RA,uM:_A,vS:OA,qB:LA,GG:MA,rq:zA,lg:BA,WR:PA,cu:WA,GE:VA,px:UA,jC:GA,He:HA,hE:jA,BF:qA,Dk:KA,cl:XA,_B:YA,ub:QA,_f:ZA,Ku:JA,qy:$A,Zy:eR,bu:tR,zv:nR,dH:aR,HS:rR,yH:sR,l3:oR,z9:iR,x6:uR,_m:cR,eW:lR,GK:hR,SP:dR,yr:pR,dl:fR,Dw:mR,xT:gR,_X:yR,wz:bR}=S;function vR(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>"".concat(e,".").concat(t)))}function xR(e,t){return 1===t?[e]:vR(e,t)}class wR{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=sA(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=xR("rc",this.rank),t=JF(this.rank),n=this.getOutOfBoundsCondition(e),a=this.getSetup(e),r=this.getOutput(e);this.userCode="\n        void main() {\n          ".concat(t," rc = getOutputCoords();\n\n          if(").concat(n,") {\n            setOutput(vec4(0));\n          } else {\n            ").concat(a,"\n\n            setOutput(vec4(").concat(r,"));\n          }\n        }\n      ")}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let r="".concat(0===n?"r":"rp1",", ").concat(0===a?"c":"cp1");for(let t=2;t<this.rank;t++)r="".concat(e[e.length-1-t],",")+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return"rc > ".concat(this.enableShapeUniforms?"outShape":this.outputShape[0]);let t="";for(let n=this.rank-2;n<this.rank;n++)t+="".concat(e[n]," >= ").concat(this.enableShapeUniforms?"outShape[".concat(n,"]"):this.outputShape[n]),n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?"outShape[".concat(this.rank," - 1]"):this.outputShape[this.rank-1],a=this.enableShapeUniforms?"outShape[".concat(this.rank," - 2]"):this.outputShape[this.rank-2];return"\n      int r = ".concat(t[0],";\n      int c = ").concat(t[1],";\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ").concat(n,";\n      bool rEdge = rp1 >= ").concat(a,";\n    ")}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){const e=this.enableShapeUniforms?"outShape":this.outputShape[0];return"getA(rc), (rc + 1 >= ".concat(e," ? 0. : getA(rc + 1)), 0, 0")}return"getA(".concat(t[0],"),\n            cEdge ? 0. : getA(").concat(t[1],"),\n            rEdge ? 0. : getA(").concat(t[2],"),\n            rEdge || cEdge ? 0. : getA(").concat(t[3],")")}}class DR{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=sA(this.outputShape.length);let n="";for(let a=0;a<4;a++){let e="thisRC = rc;";a%2===1&&(e+="thisRC.z += 1;"),a>1&&(e+="thisRC.y += 1;"),n+="\n        ".concat(e,"\n        ").concat(a>0?"if(thisRC.y < rows && thisRC.z < cols){":"","\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[").concat(a,"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ").concat(a>0?"}":"","\n      ")}this.userCode="\n      ".concat(function(e,t){const n=t?PF(["r","c","d"],"inputShape"):zF(["r","c","d"],e);return"\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ".concat(n,"\n      return ivec3(r, c, d);\n    }\n  ")}(t,this.enableShapeUniforms),"\n      ").concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":WF(e),"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ").concat(this.enableShapeUniforms?"outShape[1]":e[1],";\n        int cols = ").concat(this.enableShapeUniforms?"outShape[2]":e[2],";\n\n        ").concat(n,"\n\n        setOutput(result);\n      }\n    ")}}class kR{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const a=NR(t,n),r=SR(e,a,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const s=CR(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[r].pop();return this.usedTextures[r].push(e),e}let o;return a===sF.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===sF.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===sF.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===sF.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===sF.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(o),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),o}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;const r=NR(n,a),s=SR(t,r,a);s in this.freeTextures||(this.freeTextures[s]=[]);const o=CR(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),i=ge().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==i&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const u=this.usedTextures[s],c=u&&u.indexOf(e);if(null==c||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[c]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used","".concat(this.numFreeTextures," / ").concat(this.numUsedTextures),"(".concat(e,")"));const t=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: ".concat(this._numBytesAllocated)),console.log("Bytes unused: ".concat(this._numBytesFree," (").concat(Math.round(100*t),"%)"))}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function CR(e,t,n,a,r){const s=function(e,t){switch(e){case sF.PACKED_2X2_FLOAT32:return xA(t);case sF.PACKED_2X2_FLOAT16:return wA(t);case sF.UNPACKED_FLOAT32:return yA(t);case sF.UNPACKED_FLOAT16:return bA(t);case sF.PACKED_4X1_UNSIGNED_BYTE:return vA(t);default:throw new Error("Unknown physical texture type ".concat(e))}}(t,a);let o;if(r){const[t,n]=uF(e[0],e[1]);o=t*n}else{const[t,n]=oF(e[0],e[1]);o=t*n}const i=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error("Unknown internal format ".concat(t))}(n,s);return o*i}function NR(e,t){if(e===rF.UPLOAD)return sF.PACKED_2X2_FLOAT32;if(e===rF.RENDER||null==e)return function(e){return ge().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?sF.PACKED_2X2_FLOAT32:sF.UNPACKED_FLOAT32:e?sF.PACKED_2X2_FLOAT16:sF.UNPACKED_FLOAT16}(t);if(e===rF.DOWNLOAD||e===rF.PIXELS)return sF.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type ".concat(e))}function SR(e,t,n){return"".concat(e[0],"_").concat(e[1],"_").concat(t,"_").concat(n)}class ER{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=sA(this.outputShape.length),this.userCode="\n      float unaryOperation(float x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}const IR="if (isnan(x)) return x;",TR="return abs(x);";const FR=IR+"\n  return (x < 0.0) ? 0.0 : x;\n",AR=IR+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",RR="return x;";class _R{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=sA(this.outputShape.length),this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}class OR{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=sA(this.outputShape.length);const t=e.length,n=xR("rc",t),a=JF(t),r=function(e,t){if(1===e)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),o=t<=1?"rc":"vec2(".concat(s.join(","),")");this.userCode="\n      void main() {\n        ".concat(a," rc = getOutputCoords();\n        vec4 packedInput = getA(").concat(r,");\n\n        setOutput(getChannel(packedInput, ").concat(o,"));\n      }\n    ")}}const LR=_h,MR={};const zR=ge().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class BR extends F{nextDataId(){return BR.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!ge().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof kA)t=e;else{const n=nF(ge().getNumber("WEBGL_VERSION"),e);t=new kA(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=nF(ge().getNumber("WEBGL_VERSION"));t=new kA(e),this.binaryCache=((n=ge().getNumber("WEBGL_VERSION"))in MR||(MR[n]={}),MR[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new kR(this.gpgpu),this.numMBBeforeWarning=null==ge().global.screen?1024:ge().global.screen.height*ge().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new T(this,us())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,a,r,s){const o=this.makeTensorInfo(t,n),i=this.texData.get(o.dataId);i.isPacked=!1,i.texture={texture:e,texShape:[a,r]},i.texShape=[a,r];const u=NF(t),c=new hA(u,!1,s),l=this.runWebGLProgram(c,[o],n,[[a,r]]);return l.shape=t,i.texture=null,this.disposeIntermediateTensorInfo(o),l.dataId}write(e,t,n){if((ge().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||ge().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:rF.UPLOAD,refCount:1}),a}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,a,r){if(ge().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:rF.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:r,slice:s,shape:o,isPacked:i}=t;if(null!=s){let t;t=i?new _R(o,RR):new ER(o,RR);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;const u=null!=this.activeTimers;let c,l;if(u&&(c=or()),"complex64"===a){l=Rp(this.readSync(r.real.dataId),this.readSync(r.imag.dataId))}else l=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=or()-c),this.convertAndCacheOnCPU(e,l)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:a,slice:r,dtype:s,complexTensorInfos:o,isPacked:i}=t;if(null!=r){let t;t=i?new _R(a,RR):new ER(a,RR);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:s}],s),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(ge().getBool("DEBUG")&&!ge().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===ge().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,c,l=null;if("complex64"!==s&&ge().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);l=this.gpgpu.createBufferFromTexture(t.texture.texture,...iF(a))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]);c=Rp(e[0],e[1])}else if(null==l)c=this.getValuesFromTexture(e);else{const e=P(a);c=this.gpgpu.downloadFloat32MatrixFromBuffer(l,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=l){const e=this.gpgpu.gl;lF(e,(()=>e.deleteBuffer(l)))}const h=this.convertAndCacheOnCPU(e,c),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&us().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.texData.get(e),{values:a,shape:r,slice:s,dtype:o,isPacked:i,texture:u}=n;if("complex64"===o)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=i?new _R(r,RR):new ER(r,RR);const a=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:o}],o),s=this.readToGPU(a,t);return this.disposeIntermediateTensorInfo(a),s}if(null==u)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,t.customTexShape),l=us().makeTensorFromTensorInfo(c),h=this.texData.get(c.dataId);return Object.assign({tensorRef:l},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>ur(e)));return bo(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return bo(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!hF(n)){if(ge().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value ".concat(n," cannot be represented with your ")+"current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value ".concat(n," cannot be represented on this device."))}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:a}=this.texData.get(e),r=P(t);if(ge().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),a=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...iF(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),s}const s=ge().getBool("WEBGL_PACK")&&!0===a,o=s?NF(t):t,i=s?new cA(o):new uA(o),u=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),c=this.texData.get(u.dataId),l=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(u),l}timerAvailable(){return ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=lr(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=lr(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);o.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>"".concat(e.name,": ").concat(e.ms))).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:or(),endMs:null}}endTimer(e){return ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=or(),e)}async getQueryTime(e){if(ge().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:a,usage:r,isPacked:s,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,u=this.dataRefCount.get(i);u>1?this.dataRefCount.set(i,u-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,r,s)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:zR;return ge().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&P(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){_a("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return LR(e.shape,t)}packedUnaryOp(e,t,n){const a=new _R(e.shape,t),r=this.compileAndRun(a,[e],n);return us().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=aR(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(ge().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,TR,e.dtype);const t=new ER(e.shape,TR),n=this.compileAndRun(t,[e]);return us().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&J(n[0])){const r=n.map((e=>ir(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){return us().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new OR(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new wR(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[kF(e.shape),...CF(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},r=[kF(t),...CF(t)],s=new DR(r,n),o=[n],i=this.runWebGLProgram(s,[a],e.dtype,o,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:a,shape:r,dtype:s}=n;if(null!=t){M(P(r)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const o=NF(r);let i;i=a?new iA(o):new oA(o);const u=[null!=t?t:iF(o)];return{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:o,dtype:s,dataId:e}],s,u,!0,t).dataId}}runWebGLProgram(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5?arguments[5]:void 0;const o=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(o.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===aF.DENSE){const t=null!=s?s:iF(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===P(o.shape))return i.values=X(o.dtype,0),o;const u=[],c=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&P(t.shape)<=ge().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!EF(n.shape,t.shape)){const e=t,a=t.shape;t.shape=n.shape,t=this.packedReshape(t,a),u.push(t),n=this.texData.get(t.dataId),e.shape=a}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(o.dataId);const l={shape:o.shape,texData:i,isUniform:!1},h=function(e,t,n){let a="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:o,uniformShape:i,keptDims:u}=$F(e.packedInputs,t.shape,s);let c="",l="",h="";if(1===i.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];c="".concat(e[0]>1,"_").concat(e[1]>1)}else if(2!==i.length||e.packedInputs){if(i.length>2&&!e.packedInputs){const e=ae(i);h="".concat(e[0]===s[1],"_").concat(e[e.length-1]===s[1])}}else l="".concat(i[0]>1,"_").concat(i[1]>1);const d=t.shape.length,p=2===i.length&&W(t.shape,s),f=1===P(t.shape),m=Ho(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&W(s,n.texData.texShape),y=e.packedInputs||i.length>2?"":"".concat(s[0]>1,"_").concat(s[1]>1);a+="".concat(d,"_").concat(g,"_").concat(o?u:"","_").concat(i.length,"_").concat(f,"_").concat(m,"_").concat(p,"_").concat(c,"_").concat(l,"_").concat(h,"_").concat(y,"_").concat(r)}else{const e=t.isUniform?"uniform":t.texData.texShape;a+="".concat(t.shape,"_").concat(e,"_").concat(r)}}));const r=e.userCode;let s=e.constructor.name;return s+="_"+a+"_"+r+"".concat(ge().getNumber("WEBGL_VERSION")),s}(e,c,l),d=this.getAndSaveBinary(h,(()=>nA(this.gpgpu,e,c,l))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),ge().get("ENGINE_COMPILE_ONLY")||function(e,t,n,a,r){t.program.enableShapeUniforms||(rA(t.inShapeInfos,n),rA([t.outShapeInfo],[a]));const s=a.texData.texture,o=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,o[0],o[1]):e.setOutputMatrixTexture(s.texture,o[0],o[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===ge().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let u=0;u<n.length;++u){const a=n[u],{uniform:r,offset:s,shape:o,texShape:i}=t.variablesLocations[u];if(o){const{uniformShape:n}=$F(t.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(i&&e.gl.uniform2i(i,a.texData.texShape[0],a.texData.texShape[1]),null!=r)if(a.isUniform)if(P(a.shape)<2)e.gl.uniform1f(r,a.uniformValues[0]);else{let t=a.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(r,t)}else null!=a.texData.slice&&null!=s&&e.gl.uniform1i(s,a.texData.slice.flatOffset),e.setInputMatrixTexture(a.texData.texture.texture,r,u)}const i=t.outShapeLocation;if(i)switch(a.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(a.shape))}if(t.outShapeStridesLocation){const n=ae(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&r)for(let u=0;u<t.program.customUniforms.length;++u){const n=t.program.customUniforms[u],a=t.customUniformLocations[u],s=r[u];if("float"===n.type)e.gl.uniform1fv(a,s);else if("vec2"===n.type)e.gl.uniform2fv(a,s);else if("vec3"===n.type)e.gl.uniform3fv(a,s);else if("vec4"===n.type)e.gl.uniform4fv(a,s);else if("int"===n.type)e.gl.uniform1iv(a,s);else if("ivec2"===n.type)e.gl.uniform2iv(a,s);else if("ivec3"===n.type)e.gl.uniform3iv(a,s);else{if("ivec4"!==n.type)throw Error("uniform type ".concat(n.type," is not supported yet."));e.gl.uniform4iv(a,s)}}e.executeProgram()}(this.gpgpu,d,c,l,a),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=ge().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=or();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!ge().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===r){const e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,a,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!ge().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=ls((()=>{if(!ge().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=ge().getBool("DEBUG");ge().set("DEBUG",!1);const t=this.abs(Fo(1e-8)).dataSync()[0];if(ge().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:a,values:r,texture:s,usage:o,isPacked:i}=t;if(null!=s)return;const u=null!=this.activeTimers;let c;u&&(c=or());let l=t.texShape;if(null==l&&(l=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=ge().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=ge().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(a===1/0&&ge().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),t&&(n*=2,a*=2,1===(e=e.map(((t,n)=>n>=e.length-2?O(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=K(e);e=t.newShape}let r=P(e),s=null;e.length<=1&&r<=n?s=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?s=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);const o=null!=s&&Math.max(...s)>a&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(null==s||o)if(t){const t=kF(e);let n=2,a=2;e.length&&([n,a]=CF(e)),r=t*(n/2)*(a/2),s=U(r).map((e=>2*e))}else s=U(r);return s}(n,i),t.texShape=l),null!=r){const e=NF(n);let s,o=l[1],h=l[0];const d=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!i&&d||([o,h]=uF(l[0],l[1])),s=i?new dA(e,d):new hA(e,d);const p=d?[h,o]:l,f=this.makeTensorInfo(p,a),m=this.texData.get(f.dataId);m.usage=d?rF.PIXELS:rF.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),o,h,r);const g=[[h,o]],y=!0,b=this.runWebGLProgram(s,[f],a,g,y),v=this.texData.get(b.dataId);t.texShape=v.texShape,t.isPacked=v.isPacked,t.usage=v.usage,ge().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=v.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=or()-c)}else{const e=this.acquireTexture(l,o,a,i);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:a}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype ".concat(t))}(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: ".concat(e," MB, ")+"most likely due to a memory leak")}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*Z(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await ip(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw fF(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:a,nanLoc:r,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:i}=aA(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=a,e.nanLoc=r,e.outShapeLocation=s,e.outShapeStridesLocation=o,e.outTexShapeLocation=i}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:a,height:r,width:s,channels:o}=e,i=us().backend;if(!i.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=i.writeTexture(a,t,n,r,s,o);return us().makeTensorFromDataId(u,t,n,i)}}BR.nextDataId=0;Xr()&&ps("webgl",(()=>new BR),2);const PR="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class WR{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=qo(t,n),this.enableShapeUniforms=sA(this.outputShape.length),this.userCode="\n      float binaryOperation(float a, float b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ")}}const VR="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class UR{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=qo(t,n);const r=this.outputShape.length;this.enableShapeUniforms=sA(r);let s="";if(a)if(0===r||1===P(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const e=JF(r);if(s="\n          ".concat(e," coords = getOutputCoords();\n        "),1===r)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+="\n            result.y = (coords + 1) >= ".concat(this.outputShape[0]," ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ");else{const e=xR("coords",r);this.enableShapeUniforms?s+="\n            bool nextRowOutOfBounds =\n              (".concat(e[r-2]," + 1) >= outShape[").concat(r," - 2];\n            bool nextColOutOfBounds =\n              (").concat(e[r-1]," + 1) >= outShape[").concat(r," - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          "):s+="\n            bool nextRowOutOfBounds =\n              (".concat(e[r-2]," + 1) >= ").concat(this.outputShape[r-2],";\n            bool nextColOutOfBounds =\n              (").concat(e[r-1]," + 1) >= ").concat(this.outputShape[r-1],";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          ")}}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ").concat(s,"\n\n        setOutput(result);\n      }\n    ")}}function GR(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const HR={kernelName:Mt,backendName:"webgl",kernelFunc:GR};function jR(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.makeTensorInfo(a.shape,"complex64"),o=n.texData.get(s.dataId),i=GR({inputs:{x:a},backend:n}),u=GR({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:u},s}const qR={kernelName:Ke,backendName:"webgl",kernelFunc:jR},KR="return (a < 0.) ? b * a : a;",XR="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const YR={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a,o=n.makeTensorInfo([],"float32",rr(s,"float32")),i=ge().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new UR(XR,r.shape,o.shape):new WR(KR,r.shape,o.shape),u=n.runWebGLProgram(i,[r,o],"float32");return n.disposeIntermediateTensorInfo(o),u}},QR="return (a < 0.) ? b * a : a;",ZR="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const JR={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=ge().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new UR(ZR,a.shape,r.shape):new WR(QR,a.shape,r.shape);return n.runWebGLProgram(s,[a,r],"float32")}},$R="if (isnan(x)) return x;";function e_(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:a,dtype:r}=e;return e=>{let{inputs:s,backend:o}=e;const{x:i}=s,u=o,c=r||i.dtype;if(u.shouldExecuteOnCPU([i])&&null!=a){const e=u.texData.get(i.dataId),t=a(e.values,c);return u.makeTensorInfo(i.shape,c,t)}let l;return l=ge().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new _R(i.shape,n):new ER(i.shape,t),u.runWebGLProgram(l,[i],c)}}function t_(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:a=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:o}=e;return e=>{let{inputs:i,backend:u}=e;const{a:c,b:l}=i,h=u;if(r&&"complex64"===c.dtype){const e=h.texData.get(c.dataId),n=h.texData.get(l.dataId),[a,r]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,a]=e,r={dataId:n.dataId,dtype:n.dtype,shape:c.shape},s={dataId:a.dataId,dtype:a.dtype,shape:l.shape},o=new WR(t,c.shape,l.shape);return h.runWebGLProgram(o,[r,s],Rr(n.dtype,a.dtype))})),s=jR({inputs:{real:a,imag:r},backend:h});return h.disposeIntermediateTensorInfo(a),h.disposeIntermediateTensorInfo(r),s}const d=o||Rr(c.dtype,l.dtype);if(("string"===c.dtype||"string"===l.dtype||h.shouldExecuteOnCPU([c,l]))&&null!=s){const e=h.texData.get(c.dataId).values,t=h.texData.get(l.dataId).values,n="string"===c.dtype?pf(e):e,a="string"===c.dtype?pf(t):t,[r,o]=s(c.shape,l.shape,n,a,d),i=h.makeTensorInfo(o,d);return h.texData.get(i.dataId).values=r,i}let p;return p=ge().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new UR(n,c.shape,l.shape,a):new WR(t,c.shape,l.shape),h.runWebGLProgram(p,[c,l],d)}}function n_(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":FR;if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":AR;if("prelu"===e)return t?ZR:QR;if("leakyrelu"===e)return t?XR:KR;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error("Activation ".concat(e," has not been implemented for the WebGL backend."))}class a_{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],u=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=sA(this.outputShape.length);const c=a?e[1]:e[2],l=Math.ceil(c/2),h=a?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",p=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";o&&(m=i?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(o,"\n        }"):u?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(o,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(o,"\n        }"),g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",v="rc.x";e[0]<t[0]?b="imod(rc.x, ".concat(e[0],")"):t[0]<e[0]&&(v="imod(rc.x, ".concat(t[0],")")),this.userCode="\n      ".concat(m,"\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ").concat(l,".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ").concat(b,";\n        int batchB = ").concat(v,";\n        for (int i = 0; i < ").concat(l,"; i++) {\n          vec4 a = getMatrixA(batchA, ").concat(h,");\n          vec4 b = getMatrixB(batchB, ").concat(d,");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (").concat(p[0]," * ").concat(f[0],");\n          result += (").concat(p[1]," * ").concat(f[1],");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ").concat(y,"\n\n        ").concat(g,"\n\n        setOutput(result);\n      }\n    ")}}const r_="return areal * breal - aimag * bimag;",s_="return areal * bimag + aimag * breal;";class o_{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=qo(t,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    ")}}const i_="return a * b;";function u_(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,s=Rr(a.dtype,r.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),s=new o_(r_,a.shape,r.shape),o=new o_(s_,a.shape,r.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],u=n.runWebGLProgram(s,i,"float32"),c=n.runWebGLProgram(o,i,"float32"),l=jR({inputs:{real:u,imag:c},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),l}if(n.shouldExecuteOnCPU([a,r])){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),[o,i]=qA(a.shape,r.shape,e.values,t.values,s),u=n.makeTensorInfo(i,s);return n.texData.get(u.dataId).values=o,u}let o;return o=ge().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new UR(i_,a.shape,r.shape):new WR(i_,a.shape,r.shape),n.runWebGLProgram(o,[a,r],s)}const c_={kernelName:pn,backendName:"webgl",kernelFunc:u_};function l_(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,o=n,i=P(r.shape),u=j(s,i),c=P(u);M(i===c,(()=>"The new shape (".concat(u,") has ").concat(c," elements and the old ")+"shape (".concat(r.shape,") has ").concat(i," elements. The new shape and old ")+"shape must have the same number of elements."));const l=o.texData.get(r.dataId);return!l.isPacked||EF(r.shape,u)||null!==l.texture&&EF(l.shape,u)?(o.incRef(r.dataId),{dataId:r.dataId,shape:u,dtype:r.dtype}):function(e,t,n){const a=[kF(e.shape),...CF(e.shape)],r={dtype:e.dtype,shape:a,dataId:e.dataId},s=[kF(t),...CF(t)],o=new DR(s,a),i=[a],u=n.runWebGLProgram(o,[r],e.dtype,i,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(r,u,o)}const h_={kernelName:_n,backendName:"webgl",kernelFunc:l_};class d_{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];const o=4*Math.floor(n/4),i=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u="sumValue += dot(values * ".concat(V(e)?e.toPrecision(2):e,", ones);")}let c="";r%n>0&&(c="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return 0.0;\n        }\n      ")),this.userCode="\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ".concat(c,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(o,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(u,"\n        }\n\n        int inIdx = inOffset + ").concat(o,";\n        if (").concat(1===i,") {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ").concat(u,"\n        } else if (").concat(2===i,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ").concat(u,"\n        } else if (").concat(3===i,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ").concat(u,"\n        }\n        setOutput(sumValue);\n      }\n    ")}}class p_{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let u="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const c=4*Math.floor(n/4),l=n%4;let h="\n      if (".concat("sum"===t,") {\n        sumValue += dot(values, ones);\n      } else if (").concat("prod"===t,") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ").concat(i,"(values, minMaxValue);\n        if (").concat("min"===t," || ").concat("max"===t,") {\n          minMaxValue = ").concat(i,"(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    "),d="vec4";"all"===t?(o="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(o="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";r%n>0&&(p="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat(o,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ").concat(p,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        vec4 minMaxValue = vec4(").concat(o,");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ").concat(c,"; i += 4) {\n          int inIdx = inOffset + i;\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(h,"\n        }\n\n        int inIdx = inOffset + ").concat(c,";\n        if (").concat(1===l,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(h,"\n        } else if (").concat(2===l,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(h,"\n        } else if (").concat(3===l,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ").concat(h,"\n        }\n        setOutput(").concat(u,");\n      }\n    ")}}function f_(e,t,n,a){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],a=gp(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape);let s=e;for(let o=0;o<r.length;o++){const{inSize:i,windowSize:u,outSize:c}=r[o];let l,h;l="mean"===n?0===o?new d_({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:c},i):new d_({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:c}):new p_({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:c},n),h=s,s=a.runWebGLProgram(l,[s],t),h.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(h)}return s}class m_{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const a=JF(this.rank),r=function(e){const t=e.length;if(t>6)throw Error("Transpose for rank ".concat(t," is not yet supported"));const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let r=0;r<e.length;r++)a[e[r]]=n[r];return a.join()}(t);this.userCode="\n    void main() {\n      ".concat(a," resRC = getOutputCoords();\n      setOutput(getA(").concat(r,"));\n    }\n    ")}}class g_{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let c=0;c<n.length;c++)n[c]=e[t[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank ".concat(this.rank," is not yet supported."));const a=JF(this.rank),r=vR("rc",this.rank),s=new Array(this.rank);for(let c=0;c<t.length;c++)s[t[c]]=r[c];const o="vec2(".concat(s.slice(-2).join(),")"),i="++".concat(r[this.rank-1]," < ").concat(n[this.rank-1]),u="getChannel(getA(".concat(s.join(),"), ").concat(o,")");this.userCode="\n    void main() {\n      ".concat(a," rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ").concat(u,";\n      if(").concat(i,") {\n        result[1] = ").concat(u,";\n      }\n      --").concat(r[this.rank-1],";\n      if(++").concat(r[this.rank-2]," < ").concat(n[this.rank-2],") {\n        result[2] = ").concat(u,";\n        if(").concat(i,") {\n          result[3] = ").concat(u,";\n        }\n      }\n      setOutput(result);\n    }\n    ")}}function y_(e,t,n){const a=ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new g_(e.shape,t):new m_(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function b_(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;return function(e,t,n,a){const r=t,s=e.shape.length,o=q(r,e.shape);let i=o;const u=hc(i,s),c=null!=u;let l=e;c&&(l=y_(e,u,a),i=pc(i.length,s)),lc("sum",i,s);const[h,d]=uc(l.shape,i);let p=h;n&&(p=cc(h,o));const f=P(d),m=l_({inputs:{x:l},attrs:{shape:[P(e.shape)/f,f]},backend:a}),g=f_(m,_r(e.dtype),"sum",a),y=l_({inputs:{x:g},attrs:{shape:p},backend:a});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),c&&a.disposeIntermediateTensorInfo(l),y}(r,s,o,n)}const v_={kernelName:ea,backendName:"webgl",kernelFunc:b_};function x_(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{perm:s}=a,o=n,i=r.shape.length,u=new Array(i);for(let l=0;l<u.length;l++)u[l]=r.shape[s[l]];let c;if(o.shouldExecuteOnCPU([r])){const e=o.texData.get(r.dataId).values,t=yR(e,r.shape,r.dtype,s,u);c=o.makeTensorInfo(u,r.dtype);o.texData.get(c.dataId).values=t}else c=y_(r,s,o);return c}const w_={kernelName:Da,backendName:"webgl",kernelFunc:x_};function D_(e){let{a:t,b:n,transposeA:a,transposeB:r,backend:s,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:u=0,activation:c=null}=e;const l=t.shape.length,h=n.shape.length,d=a?t.shape[l-2]:t.shape[l-1],p=r?n.shape[h-1]:n.shape[h-2],f=a?t.shape[l-1]:t.shape[l-2],m=r?n.shape[h-2]:n.shape[h-1],g=t.shape.slice(0,-2),y=n.shape.slice(0,-2),b=P(g),v=P(y),x=qo(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([f,m]);M(d===p,(()=>"Error in matMul: inner shapes (".concat(d,") and (")+"".concat(p,") of Tensors with shapes ").concat(t.shape," and ")+"".concat(n.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const w=a?[b,d,f]:[b,f,d],D=r?[v,m,p]:[v,p,m],k=l_({inputs:{x:t},backend:s,attrs:{shape:w}}),C=l_({inputs:{x:n},backend:s,attrs:{shape:D}}),N=[k,C],S=Math.max(b,v),E=a?k.shape[1]:k.shape[2],I=null!=o,T=null!=i,F="leakyrelu"===c,A=null!=c?n_(c,!0):null;let R;if((1===f||1===m)&&E>1e3&&!1===(I||T||F||null!=A)){let e=k,t=C;a&&(e=x_({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),N.push(e)),r&&(t=x_({inputs:{x:C},backend:s,attrs:{perm:[0,2,1]}}),N.push(t));const n=1===m;let o=e;1!==m&&(o=l_({inputs:{x:e},backend:s,attrs:{shape:[S,E,1]}}),N.push(o));const i=1===m?2:1;let u=t;n&&(u=l_({inputs:{x:t},backend:s,attrs:{shape:[S,1,E]}}),N.push(u));const c=u_({inputs:{a:o,b:u},backend:s});R=b_({inputs:{x:c},backend:s,attrs:{axis:i,keepDims:!0}}),N.push(c)}else{const e=Rr(t.dtype,n.dtype),c=new a_(w,D,[S,f,m],a,r,I,A,T,F),l=[k,C];if(null!=o&&l.push(o),T&&l.push(i),F){const e=s.makeTensorInfo([],"float32",rr(u,"float32"));l.push(e),N.push(e)}R=s.runWebGLProgram(c,l,e)}const _=l_({inputs:{x:R},backend:s,attrs:{shape:x}});N.push(R);for(const O of N)s.disposeIntermediateTensorInfo(O);return _}const k_={kernelName:Fa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:h}=a;return D_({a:r,b:s,transposeA:u,transposeB:c,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:h,activation:l})}},C_="return abs(x);";const N_={kernelName:we,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const e=n.texData.get(a.dataId),t=aR(e.values);return n.makeTensorInfo(a.shape,a.dtype,t)}let r;return r=ge().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new _R(a.shape,C_):new ER(a.shape,C_),n.runWebGLProgram(r,[a],a.dtype)}},S_=e_({opSnippet:IR+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),E_={kernelName:De,backendName:"webgl",kernelFunc:S_},I_=e_({opSnippet:IR+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),T_={kernelName:ke,backendName:"webgl",kernelFunc:I_},F_="return a + b;",A_=t_({opSnippet:F_,packedOpSnippet:F_,supportsComplex:!0,cpuKernelImpl:CA}),R_={kernelName:Ce,backendName:"webgl",kernelFunc:A_};class __{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>"T".concat(t)));const n=[];this.variableNames.forEach((e=>{n.push("float v".concat(e," = get").concat(e,"AtOutCoords();"))}));const a=this.variableNames.map((e=>"v".concat(e))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        float result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}class O_{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>"T".concat(t)));const n=[];this.variableNames.forEach((e=>{n.push("vec4 v".concat(e," = get").concat(e,"AtOutCoords();"))}));const a=this.variableNames.map((e=>"v".concat(e))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        vec4 result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}const L_={kernelName:Ne,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,r=n;if(1===r.length)return GR({inputs:{x:r[0]},backend:a});if(r.length>ge().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:a}),s=e({inputs:r.slice(t),backend:a});return e({inputs:[n,s],backend:a})}const s=r.map((e=>e.dtype)).reduce(((e,t)=>Rr(e,t))),o=r.map((e=>e.shape)),i=ge().getBool("WEBGL_PACK")?new O_(r[0].shape,o):new __(r[0].shape,o);return a.runWebGLProgram(i,r,s)}};const M_={kernelName:Se,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=r.shape.length,u=q(s,r.shape);let c=u;const l=hc(c,i);let h=r;null!=l&&(h=x_({inputs:{x:r},backend:n,attrs:{perm:l}}),c=pc(c.length,i)),lc("all",c,i);const[d,p]=uc(h.shape,c),f=l_({inputs:{x:h},backend:n,attrs:{shape:[-1,P(p)]}}),m=f_(f,f.dtype,"all",n);let g;if(o){g=l_({inputs:{x:m},backend:n,attrs:{shape:cc(d,u)}})}else g=l_({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=l&&n.disposeIntermediateTensorInfo(h),g}};const z_={kernelName:Ee,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=r.shape.length,u=q(s,r.shape);let c=u;const l=hc(c,i);let h=r;null!=l&&(h=x_({inputs:{x:r},backend:n,attrs:{perm:l}}),c=pc(c.length,i)),lc("any",c,i);const[d,p]=uc(h.shape,c),f=l_({inputs:{x:h},backend:n,attrs:{shape:[-1,P(p)]}}),m=f_(f,f.dtype,"any",n);let g;if(o){g=l_({inputs:{x:m},backend:n,attrs:{shape:cc(d,u)}})}else g=l_({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=l&&n.disposeIntermediateTensorInfo(h),g}};class B_{constructor(e,t,n){this.variableNames=["A"];const{windowSize:a,batchSize:r,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,s];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ".concat(a,";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          int inIdx = ").concat(i,";\n          float candidate = getA(batch, inIdx);\n          if (candidate ").concat(o," bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    ")}}class P_{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,M(e.length>2,(()=>"Packed arg".concat(n.charAt(0).toUpperCase()+n.slice(1)," supports only inputs with rank above 2.")));const r=e[e.length-1],s=Math.ceil(r/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),a||this.variableNames.push("bestIndicesA");const o=this.outputShape,i=o.length,u=JF(i),c=xR("coords",i);let l,h;if(1===s){h=i+1;const e=JF(h);l="\n        ".concat(e," sourceLocR = ").concat(e,"(").concat(c.join(),", 0);\n        ++").concat(c[i-1],";\n        ").concat(e," sourceLocG = ").concat(e,"(").concat(c.join(),", 0);\n        ++").concat(c[i-2],";\n        ").concat(e," sourceLocA = ").concat(e,"(").concat(c.join(),", 0);\n        --").concat(c[i-1],";\n        ").concat(e," sourceLocB = ").concat(e,"(").concat(c.join(),", 0);\n        --").concat(c[i-2],";")}else h=i,l="\n        ".concat(u," sourceLocR = coords;\n        ++").concat(c[i-1],";\n        ").concat(u," sourceLocG = coords;\n        ++").concat(c[i-2],";\n        ").concat(u," sourceLocA = coords;\n        --").concat(c[i-1],";\n        ").concat(u," sourceLocB = coords;\n        --").concat(c[i-2],";");const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),m=xR("sourceLocR",h-1).concat("inIdx.r"),g=xR("sourceLocG",h-1).concat("inIdx.g"),y=xR("sourceLocB",h-1).concat("inIdx.b"),b=xR("sourceLocA",h-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",x=a?"":"\n          inIdx = round(vec4(getBestIndicesAChannel(".concat(m.join(),"),\n                             getBestIndicesAChannel(").concat(g.join(),"),\n                             getBestIndicesAChannel(").concat(y.join(),"),\n                             getBestIndicesAChannel(").concat(b.join(),")));"),w="vec4(\n            getAChannel(".concat(m.join(),"),\n            hasNextCol ? getAChannel(").concat(g.join(),") : 0.,\n            hasNextRow ? getAChannel(").concat(y.join(),") : 0.,\n            hasNextRow && hasNextCol ? getAChannel(").concat(b.join(),") : 0.)"),D=a?"":"\n      float getBestIndicesAChannel(".concat(f.join(),") {\n        return getChannel(getBestIndicesA(").concat(d.join(),"),\n                                          vec2(").concat(d.slice(-2).join(),"));\n      }");this.userCode="\n      float getAChannel(".concat(f.join(),") {\n        return getChannel(getA(").concat(d.join(),"),\n                               vec2(").concat(d.slice(-2).join(),"));\n      }\n      ").concat(D,"\n      void main() {\n        ").concat(u," coords = getOutputCoords();\n        bool hasNextCol = ").concat(c[i-1]," < ").concat(o[i-1]-1,";\n        bool hasNextRow = ").concat(c[i-2]," < ").concat(o[i-2]-1,";\n        ").concat(l,"\n        ivec4 srcIdx = ivec4(sourceLocR").concat(p,", sourceLocG").concat(p,",\n          sourceLocB").concat(p,", sourceLocA").concat(p,") * ").concat(t,";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ").concat(w,";\n\n        for (int i = 0; i < ").concat(t,"; i++) {\n          inIdx = srcIdx;\n          ").concat(x,"\n          vec4 candidate = ").concat(w,";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(").concat(v,"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    ")}}function W_(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=t.shape[0],s=t.shape[1];null!=a&&(r=a.shape[0],s=a.shape[1]);const o=gp(s),i={windowSize:o,inSize:s,batchSize:r,outSize:Math.ceil(s/o)},u=new B_(i,n,null==a),c=[t];null!=a&&c.push(a);const l=e.runWebGLProgram(u,c,"int32");if(1===l.shape[1])return l;const h=W_(e,t,n,l);return e.disposeIntermediateTensorInfo(l),h}function V_(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const r=null!=a?a.shape:t.shape,s=gp(r[r.length-1]),o=new P_(r,s,n,null==a),i=null==a?[t]:[t,a],u=e.runWebGLProgram(o,i,"int32");if(u.shape.length===t.shape.length){const a=V_(e,t,n,u);return e.disposeIntermediateTensorInfo(u),a}return u}function U_(e,t,n,a){const r=[n];if(lc("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,t.shape.length),!ge().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],s=e.texData.get(t.dataId);let o=t;null!==s&&s.isPacked&&(o=e.unpackTensor(t),n.push(o));const[i,u]=uc(o.shape,r),c=P(u),l=l_({inputs:{x:o},backend:e,attrs:{shape:[-1,c]}});n.push(l);const h=W_(e,l,a);n.push(h);const d=l_({inputs:{x:h},backend:e,attrs:{shape:i}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return V_(e,t,a)}const G_={kernelName:Ie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let o=q(s,r.shape);const i=hc(o,r.shape.length);let u=r;const c=[];null!=i&&(u=x_({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(u),o=pc(o.length,u.shape.length)),lc("argMax",[o[0]],u.shape.length);const l=U_(n,u,o[0],"max");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};const H_={kernelName:Te,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let o=q(s,r.shape);const i=hc(o,r.shape.length);let u=r;const c=[];null!=i&&(u=x_({inputs:{x:r},backend:n,attrs:{perm:i}}),c.push(u),o=pc(o.length,u.shape.length)),lc("argMin",[o[0]],u.shape.length);const l=U_(n,u,o[0],"min");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}},j_=e_({opSnippet:IR+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),q_={kernelName:Fe,backendName:"webgl",kernelFunc:j_},K_=e_({opSnippet:IR+"return log(x + sqrt(x * x + 1.0));"}),X_={kernelName:Ae,backendName:"webgl",kernelFunc:K_},Y_=e_({opSnippet:IR+"\n  return atan(x);\n"}),Q_={kernelName:Re,backendName:"webgl",kernelFunc:Y_},Z_=t_({opSnippet:PR+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+VR+"\n  return result;\n"}),J_={kernelName:Oe,backendName:"webgl",kernelFunc:Z_},$_=e_({opSnippet:IR+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),eO={kernelName:_e,backendName:"webgl",kernelFunc:$_};class tO{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideHeight,i=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m="((batch  * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + d"),g="(xR * ".concat(e.inWidth," + xC) * ").concat(e.inChannels," + d");let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n        const ivec2 pads = ivec2(").concat(d,", ").concat(p,");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ").concat(l,";\n              wR += ").concat(u,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(h,";\n                wC += ").concat(c,") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ").concat(t," currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ").concat(a?r?m:g:"wR * ".concat(h," + wC"),";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let b="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(b="avgValue / max(count, 1.0)");const v=4*Math.floor(s/4),x=s%4,w="\n      if (".concat(f,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n      const ivec2 pads = ivec2(").concat(d,", ").concat(p,");\n      const float initializationValue = ").concat(y,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(y,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ").concat(l,";\n            wR += ").concat(u,") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(v,"; wC += 4) {\n            int xC = xCCorner + wC * ").concat(c,";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(c,", d),\n              getValue(batch, xR, xC + 2 * ").concat(c,", d),\n              getValue(batch, xR, xC + 3 * ").concat(c,", d)\n            );\n\n            ").concat(w,"\n          }\n\n          int xC = xCCorner + ").concat(v,";\n          if (").concat(1===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(2===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(c,", d),\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(3===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(c,", d),\n              getValue(batch, xR, xC + 2 * ").concat(c,", d),\n              initializationValue\n            );\n\n            ").concat(w,"\n          }\n        }\n        setOutput(").concat(b,");\n      }\n    ")}}class nO{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideDepth,i=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,l=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let v="0.0";if(b||(v="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec3 strides =\n            ivec3(".concat(o,", ").concat(i,", ").concat(u,");\n        const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ").concat(d,";\n              wD += ").concat(c,") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int wR = 0; wR < ").concat(p,";\n                wR += ").concat(l,") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int wC = 0; wC < ").concat(f,";\n                  wC += ").concat(h,") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ").concat(t," currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ").concat(a?r?"(((batch * ".concat(e.inDepth," + xD) * ").concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"((xD * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"wD * ".concat(p," * ").concat(f," +\n                      wR * ").concat(f," + wC"),";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let x="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(x="avgValue / max(count, 1.0)");const w=4*Math.floor(s/4),D=s%4,k="\n      if (".concat(b,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec3 strides =\n        ivec3(".concat(o,", ").concat(i,", ").concat(u,");\n      const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n      const float initializationValue = ").concat(v,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(v,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ").concat(d,";\n            wD += ").concat(c,") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(p,";\n            wR += ").concat(l,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(w,"; wC += 4) {\n              int xC = xCCorner + wC * ").concat(h,";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 3 * ").concat(h,", ch)\n              );\n\n              ").concat(k,"\n            }\n\n            int xC = xCCorner + ").concat(w,";\n            if (").concat(1===D,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(k,"\n            } else if (").concat(2===D,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(k,"\n            } else if (").concat(3===D,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(h,", ch),\n                initializationValue\n              );\n\n              ").concat(k,"\n            }\n          }\n        }\n        setOutput(").concat(x,");\n      }\n    ")}}const aO={kernelName:Le,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;OF(r,"avgPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:u}=a;M(uu(o,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const c=Ji(r.shape,s,o,1,i,u);if(1===c.filterWidth&&1===c.filterHeight&&W(c.inShape,c.outShape))return GR({inputs:{x:r},backend:n});const l=new tO(c,"avg",!1);return n.runWebGLProgram(l,[r],"float32")}};const rO={kernelName:ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:u,dataFormat:c}=a,l=$i(r.shape,s,o,[1,1,1],i,u,c),h=new nO(l,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class sO{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=i-1-e.padInfo.top,l=u-1-e.padInfo.left,h=1/(t*n);this.userCode="\n      const ivec2 pads = ivec2(".concat(c,", ").concat(l,");\n      const float avgMultiplier = float(").concat(h,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(i,";\n            wR += ").concat(s,") {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(u,";\n            wC+= ").concat(o,") {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class oO{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=l-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*a);this.userCode="\n      const ivec3 pads = ivec3(".concat(p,", ").concat(f,", ").concat(m,");\n      const float avgMultiplier = float(").concat(g,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(l,";\n            wD += ").concat(i,") {\n          float dyD = float(dyDCorner + wD) / ").concat(r,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(h,";\n              wR += ").concat(u,") {\n            float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(d,";\n                wC += ").concat(c,") {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const iO={kernelName:Be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=a,h=$i(o.shape,i,u,[1,1,1],c,l),d=new oO(h);return n.runWebGLProgram(d,[r],o.dtype)}};const uO={kernelName:Me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s;OF([r,s],"avgPoolGrad");const{filterSize:i,strides:u,pad:c}=a,l=Ji(o.shape,i,u,1,c),h=new sO(l);return n.runWebGLProgram(h,[r],o.dtype)}};const cO={kernelName:Pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:o,transposeB:i}=a;return D_({a:r,b:s,transposeA:o,transposeB:i,backend:n})}};class lO{constructor(e,t,n,a,r,s){this.outputShape=[],this.variableNames=["x","mean","variance"],qo(e,t),qo(e,n);let o="0.0";null!=a&&(qo(e,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";null!=r&&(qo(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ".concat(o,";\n        float scale = ").concat(i,";\n        float inv = scale * inversesqrt(variance + float(").concat(s,"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    ")}}class hO{constructor(e,t,n,a,r,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],qo(e,t),qo(e,n);let o="vec4(0.0)";null!=a&&(qo(e,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";null!=r&&(qo(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        vec4 offset = ".concat(o,";\n        vec4 scale = ").concat(i,";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(").concat(s,"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    ")}}const dO={kernelName:At,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,mean:s,variance:o,offset:i,scale:u}=t;M(s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),M(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),M(null==u||s.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:c}=a;null==c&&(c=.001);const l=[r,s,o];let h=null;null!=i&&(h=i.shape,l.push(i));let d=null;null!=u&&(d=u.shape,l.push(u));const p=ge().getBool("WEBGL_PACK_NORMALIZATION")?new hO(r.shape,s.shape,o.shape,h,d,c):new lO(r.shape,s.shape,o.shape,h,d,c);return n.runWebGLProgram(p,l,l[0].dtype)}};class pO{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=JF(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return fO.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error("Slicing for rank ".concat(e," is not yet supported"))}(this.rank);let a;const r=e.map(((e,t)=>"sourceLoc.".concat(fO[t]," = start[").concat(t,"] + coords.").concat(fO[t],";")));a="\n        ".concat(t," sourceLoc;\n        ").concat(t," coords = getOutputCoords();\n        ").concat(r.join("\n"),"\n      "),this.userCode="\n      void main() {\n        ".concat(a,"\n        setOutput(getSource(").concat(n,"));\n      }\n    ")}}const fO=["x","y","z","w","u","v"];class mO{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=JF(this.rank),n=xR("coords",this.rank),a=xR("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":"vec2(".concat(a.slice(-2).join(),")"),s="getChannel(getSource(".concat(a.join(),"), ").concat(r,")"),o="\n      result.x = ".concat(s,";\n      if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n        ++").concat(a[this.rank-1],";\n        result.y = ").concat(s,";\n        --").concat(a[this.rank-1],";\n      }\n    "),i=1===this.rank?"":"\n      --".concat(n[this.rank-1],";\n      if (++").concat(n[this.rank-2]," < ").concat(e[this.rank-2],") {\n        ++").concat(a[this.rank-2],";\n        result.z = ").concat(s,";\n        if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n          ++").concat(a[this.rank-1],";\n          result.w = ").concat(s,";\n        }\n      }\n    "),u=this.rank<=4?"sourceLoc = coords +\n            ".concat(t,"(").concat(e.map(((e,t)=>"start[".concat(t,"]"))).join(),");"):e.map(((e,t)=>"".concat(a[t]," = ").concat(n[t]," + start[").concat(t,"];"))).join("\n");this.userCode="\n      void main() {\n        ".concat(t," coords = getOutputCoords();\n        ").concat(t," sourceLoc;\n        ").concat(u,"\n        vec4 result = vec4(0.);\n        ").concat(o,"\n        ").concat(i,"\n        setOutput(result);\n      }\n    ")}}function gO(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:o}=a,[i,u]=Mi(r,s,o);if(Di(r,i,u),0===P(u))return n.makeTensorInfo(u,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=rR(e.values,i,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,t)}const{isPacked:c}=n.texData.get(r.dataId),l=Oi(r.shape,i,u);if(c||!l){const e=ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new mO(u):new pO(u),t=[i];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,a){const r=a.texData.get(e.dataId),s=a.makeTensorInfo(n,e.dtype),o=a.texData.get(s.dataId);Object.assign(o,r),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=Li(t,ae(e.shape));r.slice&&(i+=r.slice.flatOffset),o.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||e.dataId};const u=a.dataRefCount.get(o.slice.origDataId)||1;return a.dataRefCount.set(o.slice.origDataId,u+1),s}(r,i,u,n)}const yO={kernelName:Kn,backendName:"webgl",kernelFunc:gO},bO={kernelName:We,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:o}=a;M(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const i=s.reduce(((e,t)=>e*t)),u=bp(r.shape,s,i),c=vp(u.length,s.length),l=xp(r.shape,s,i),h=wp(o,s.length),d=Dp(l,o,s.length),p=[],f=l_({inputs:{x:r},backend:n,attrs:{shape:u}}),m=x_({inputs:{x:f},backend:n,attrs:{perm:c}}),g=l_({inputs:{x:m},backend:n,attrs:{shape:l}}),y=gO({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const vO={kernelName:Ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o}=a,i=n.readSync(r.dataId),u=n.readSync(s.dataId),c=NA(i,u,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,c)}};const xO={kernelName:Ue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,s=ge().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=ge().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([a,r])||1===o){const e=n.texData.get(a.dataId).values,t=n.texData.get(r.dataId).values,[s,o]=EA(a.shape,r.shape,e,t,a.dtype),i=n.makeTensorInfo(o,a.dtype);return n.texData.get(i.dataId).values=s,i}let i;return i=s?new UR("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",a.shape,r.shape,!1):new WR("\n  return float(int(a.r) & int(b.r));\n",a.shape,r.shape),n.runWebGLProgram(i,[a,r],a.dtype)}};const wO={kernelName:Ge,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.readSync(a.dataId),o=n.readSync(r.dataId),i=qo(Array.from(s),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},DO=t_({opSnippet:"return float(a != b);",cpuKernelImpl:XA,dtype:"bool"}),kO={kernelName:mn,backendName:"webgl",kernelFunc:DO};function CO(e){const{inputs:t,backend:n}=e,{input:a}=t;return GR({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const NO={kernelName:Fn,backendName:"webgl",kernelFunc:CO};const SO={kernelName:He,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:r}=t,{x:s}=n,{dtype:o}=r;if("complex64"===o){if("complex64"===s.dtype)return GR({inputs:{x:s},backend:a});const t=nl(s.shape),n=e({inputs:{x:s},backend:a,attrs:{dtype:"float32"}}),r=jR({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),r}if("complex64"===s.dtype){const t=CO({inputs:{input:s},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:o}});return a.disposeIntermediateTensorInfo(t),n}if(!Q(s.dtype,o)){const e=GR({inputs:{x:s},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:o}}if(a.shouldExecuteOnCPU([s])){const e=a.texData.get(s.dataId).values,[t,n,r]=IA(e,s.shape,s.dtype,o);return a.makeTensorInfo(t,n,r)}if("int32"===o)return function(e,t){const n=new ER(e.shape,"return float(int(x));"),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(s,a);if("bool"===o){const e=a.makeTensorInfo([],"bool",X("bool",1)),t=DO({inputs:{a:s,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error("Error in Cast: failed to cast ".concat(s.dtype," to ").concat(o))}},EO="return ceil(x);",IO=e_({opSnippet:EO,packedOpSnippet:EO,cpuKernelImpl:TA}),TO={kernelName:je,backendName:"webgl",kernelFunc:IO};class FO{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class AO{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const RO={kernelName:qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:s,clipValueMax:o}=a;let i;i=ge().getBool("WEBGL_PACK_CLIP")?new AO(r.shape):new FO(r.shape);const u=[[s],[o]];return n.runWebGLProgram(i,[r],r.dtype,u)}};class _O{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function OO(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const LO={kernelName:Xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=n.texData.get(a.dataId),s=new _O(a.shape),o=[OO(a,r.complexTensorInfos.real),OO(a,r.complexTensorInfos.imag)];return n.runWebGLProgram(s,o,o[0].dtype)}};class MO{constructor(e){this.outputShape=[],this.outputShape=cp(e,1),this.variableNames=e.map(((e,t)=>"T".concat(t)));const t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];const n=["if (yC < ".concat(t[0],") setOutput(getT0(yR, yC));")];for(let s=1;s<t.length;s++){const e=t[s-1];n.push("else if (yC < ".concat(t[s],") ")+"setOutput(getT".concat(s,"(yR, yC-").concat(e,"));"))}const a=t.length,r=t[t.length-1];n.push("else setOutput(getT".concat(a,"(yR, yC-").concat(r,"));")),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ".concat(n.join("\n        "),"\n      }\n    ")}}class zO{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=cp(e,t);const n=this.outputShape,a=n.length,r=JF(a),s=xR("coords",a),o=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map(((e,t)=>"T".concat(t)));const i=new Array(e.length-1);i[0]=e[0][t];for(let f=1;f<i.length;f++)i[f]=i[f-1]+e[f][t];const u=o[t],c=o.slice(-2),l=o.join();let h="if (".concat(u," < ").concat(i[0],") {\n        return getChannel(\n            getT0(").concat(l,"), vec2(").concat(c.join(),"));\n        }");for(let f=1;f<i.length;f++){const e=i[f-1];h+="\n        if (".concat(u," < ").concat(i[f],"  && ").concat(u," >= ").concat(i[f-1],") {\n          return getChannel(\n            getT").concat(f,"(").concat(BO(o,u,e),"),\n            vec2(").concat(BO(c,u,e),"));\n        }")}const d=i.length,p=i[i.length-1];h+="\n        return getChannel(\n          getT".concat(d,"(").concat(BO(o,u,p),"),\n          vec2(").concat(BO(c,u,p),"));"),this.userCode="\n      float getValue(".concat(o.map((e=>"int "+e)),") {\n        ").concat(h,"\n      }\n\n      void main() {\n        ").concat(r," coords = getOutputCoords();\n        vec4 result = vec4(getValue(").concat(s,"), 0., 0., 0.);\n\n        ").concat(s[a-1]," = ").concat(s[a-1]," + 1;\n        if (").concat(s[a-1]," < ").concat(n[a-1],") {\n          result.g = getValue(").concat(s,");\n        }\n\n        ").concat(s[a-2]," = ").concat(s[a-2]," + 1;\n        if (").concat(s[a-2]," < ").concat(n[a-2],") {\n          result.a = getValue(").concat(s,");\n        }\n\n        ").concat(s[a-1]," = ").concat(s[a-1]," - 1;\n        if (").concat(s[a-2]," < ").concat(n[a-2]," &&\n            ").concat(s[a-1]," < ").concat(n[a-1],") {\n          result.b = getValue(").concat(s,");\n        }\n        setOutput(result);\n      }\n    ")}}function BO(e,t,n){const a=e.indexOf(t);return e.map(((e,t)=>t===a?"".concat(e," - ").concat(n):e)).join()}function PO(e){const{inputs:t,backend:n}=e,{input:a}=t;return GR({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const WO={kernelName:Bt,backendName:"webgl",kernelFunc:PO};function VO(e,t,n){const a=e[0].dtype;if("complex64"===a){const a=e.map((e=>CO({inputs:{input:e},backend:n}))),r=e.map((e=>PO({inputs:{input:e},backend:n}))),s=VO(a,t,n),o=VO(r,t,n),i=jR({inputs:{real:s,imag:o},backend:n});return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),i}let r=n.shouldExecuteOnCPU(e);if("string"===a&&(r=!0),r){const r=e.map((e=>{const a=P(e.shape.slice(t));return l_({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})})),s=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=cp(r.map((e=>e.shape)),1),i=1===r[0].shape[0],u=FA(s,o,a,i),c=cp(e.map((e=>e.shape)),t),l=n.makeTensorInfo(c,a,u);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const s=e.filter((e=>P(e.shape)>0)),o=ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(1===s.length){const t=o?new ER(e[0].shape,RR):new _R(e[0].shape,RR);return n.runWebGLProgram(t,e,a)}const i=ge().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>i){const e=[];for(let r=0;r<s.length;r+=i){const a=s.slice(r,r+i);e.push(VO(a,t,n))}const a=VO(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return a}if(o){const e=new zO(s.map((e=>e.shape)),t);return n.runWebGLProgram(e,s,a)}const{tensors2D:u,outShape:c}=function(e,t,n){const a=cp(e.map((e=>e.shape)),t),r=e.map((e=>l_({inputs:{x:e},attrs:{shape:[-1,P(e.shape.slice(t))]},backend:n})));return{tensors2D:r,outShape:a}}(s,t,n),l=new MO(u.map((e=>e.shape))),h=n.runWebGLProgram(l,u,a);u.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=l_({inputs:{x:h},attrs:{shape:c},backend:n});return n.disposeIntermediateTensorInfo(h),d}function UO(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=q(r,t[0].shape)[0];up(t.map((e=>e.shape)),s);const o=cp(t.map((e=>e.shape)),s);if(0===P(o))return n.makeTensorInfo(o,t[0].dtype,[]);const i=t.filter((e=>P(e.shape)>0));return 1===i.length?GR({inputs:{x:i[0]},backend:n}):VO(i,s,n)}const GO={kernelName:Ye,backendName:"webgl",kernelFunc:UO};class HO{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let v="",x="";n&&(v=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),x="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(v,"\n\n      const ivec2 strides = ivec2(").concat(i,", ").concat(u,");\n      const ivec2 pads = ivec2(").concat(s,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[").concat(b,"];\n\n        ivec2 xRCCorner =\n            ivec2(coords[").concat(g,"], coords[").concat(y,"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(h,"; wR++) {\n          int xR = xRCorner + wR * ").concat(c,";\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(d,"; wC++) {\n            int xC = xCCorner + wC * ").concat(l,";\n\n            if (xC < 0 || xC >= ").concat(e.inWidth,") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (").concat(m,") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (").concat(1===f,") {\n\n              if (").concat(m,") {\n                dotProd +=\n                    getX(batch, xR, xC, ").concat(p,") *\n                    getW(wR, wC, ").concat(p,", d2);\n              } else {\n                dotProd +=\n                    getX(batch, ").concat(p,", xR, xC) *\n                    getW(wR, wC, ").concat(p,", d2);\n              }\n\n            } else if (").concat(2===f,") {\n              vec2 wValues = vec2(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2)\n              );\n\n              if (").concat(m,") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (").concat(3===f,") {\n              vec3 wValues = vec3(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2),\n                getW(wR, wC, ").concat(p," + 2, d2)\n              );\n\n              if (").concat(m,") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1),\n                  getX(batch, xR, xC, ").concat(p," + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC),\n                  getX(batch, ").concat(p," + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ").concat(w,"\n        ").concat(x,"\n        setOutput(result);\n      }\n    ")}}class jO{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3(".concat(r,", ").concat(s,", ").concat(o,");\n      const ivec3 pads = ivec3(").concat(t,", ").concat(n,", ").concat(a,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(l,"; wF++) {\n          int xF = xFCorner + wF * ").concat(i,";\n\n          if (xF < 0 || xF >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(h,"; wR++) {\n            int xR = xRCorner + wR * ").concat(u,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(d,"; wC++) {\n              int xC = xCCorner + wC * ").concat(c,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (").concat(1===f,") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ").concat(p,") *\n                  getW(wF, wR, wC, ").concat(p,", d2);\n              } else if (").concat(2===f,") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (").concat(3===f,") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1),\n                  getX(batch, xF, xR, xC, ").concat(p," + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2),\n                  getW(wF, wR, wC, ").concat(p," + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class qO{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=sA(this.outputShape.length);const s=e.padInfo.left,o=e.strideWidth,i=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,l=c;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let m=0;m<c;m++)h+="\n           vec4 xTexelC".concat(2*m,";\n           int xTexelC").concat(2*m,"Ready;\n           vec4 xTexelC").concat(2*m+1,";\n           int xTexelC").concat(2*m+1,"Ready;\n           vec4 xC").concat(m,";");h+="\n     for (int r = 0; r < ".concat(u,"; r++) {\n      for (int d1 = 0; d1 < ").concat(e.inChannels,"; d1 += 2) {\n       ");for(let m=0;m<c;m++)h+="\n           xTexelC".concat(2*m," = vec4(0.0);\n           xTexelC").concat(2*m,"Ready = 0;\n           xTexelC").concat(2*m+1," = vec4(0.0);\n           xTexelC").concat(2*m+1,"Ready = 0;\n           xC").concat(m," = vec4(0.0);");h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(l+1)/2;m++){const t=2*m;if(h+="\n           xC = xCCorner + ".concat(t*i,";\n           "),1===o){if(t<c&&(s%2===1?(h+="\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n               "),h+=1===i&&t>0?"\n                 xC".concat(t," = vec4(xTexelC").concat(t-2,".zw, xTexelC").concat(t,".xy);\n                 "):"\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC".concat(t," = vec4(previous.zw, xTexelC").concat(t,".xy);\n                   } else {\n                     xC").concat(t," = vec4(0.0, 0.0, xTexelC").concat(t,".xy);\n                   }\n                   ")):h+="\n                 if (xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xC").concat(t," = xTexelC").concat(t,";\n                 "),t+1<c)){const e=s%2===0?O(i):i;i%2===0&&s%2===1||i%2!==0&&s%2!==1?(h+="\n                   xCOffset = xC + imod(pads[1], 2) + ".concat(e,";\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                     xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC").concat(t+1,".zw = vec2(0.0);\n                     }\n                     xTexelC").concat(t+1,"Ready = 1;\n                   }\n                   "),h+=i>1?"\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC".concat(t+1," = vec4(previous.zw, xTexelC").concat(t+1,".xy);\n                     } else {\n                      xC").concat(t+1," = vec4(0.0, 0.0, xTexelC").concat(t+1,".xy);\n                     }\n                     "):"\n                     xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".xy);\n                     ")):h+=1===e?"\n                     xC".concat(t+1," = xTexelC").concat(t,";\n                     "):"\n                     xCOffset = xC + ".concat(e,";\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                       xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC").concat(t+1,".zw = vec2(0.0);\n                       }\n                       xTexelC").concat(t+1,"Ready = 1;\n                     }\n\n                     xC").concat(t+1," = xTexelC").concat(t+1,";\n                     ")}}else t<c&&(s%2===1?(h+="\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n               "),t+1<c&&(h+="\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC".concat(t+1," = vec4(xTexelC").concat(t+1,".xy, final.xy);\n                 "))):(h+="\n                 if(xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(\n                   xTexelC").concat(t,".xy, xTexelC").concat(t+1,".xy);\n               "),t+1<c&&(h+="\n                   xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n                 "))));t<c&&(h+="\n             wTexel = getW(r, ".concat(t,", d1, d2);\n             dotProd += xC").concat(t,".xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ").concat(e.inChannels,") {\n               dotProd += xC").concat(t,".yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           "),t+1<c&&(h+="\n               wTexel = getW(r, ".concat(t+1,", d1, d2);\n               dotProd += xC").concat(t+1,".xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ").concat(e.inChannels,") {\n                 dotProd += xC").concat(t+1,".yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             ")))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",p="";n&&(d=a?"vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ".concat(n,"\n         }"):r?"vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ".concat(n,"\n         }"):"vec4 activation(vec4 x) {\n           ".concat(n,"\n         }"),p="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n       ".concat(d,"\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ").concat(h,"\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ").concat(f,"\n         ").concat(p,"\n         setOutput(result);\n       }\n     ")}}class KO{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=sA(this.outputShape.length);const{dataFormat:n}=t,a=MF(),r="channelsLast"===n,s=r?1:2,o=r?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":"if(blockIndex < ".concat(e[2]," && pos < ").concat(e[1],") {");let u="";for(let c=0;c<=1;c++)for(let e=0;e<=1;e++)u+="\n          blockIndex = rc.z + ".concat(e,";\n          pos = rc.y + ").concat(c,";\n\n          ").concat(i,"\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[").concat(s,"] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[").concat(o,"] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (").concat(r,") {\n                  innerDims = vec2(d1, ch);\n                  result[").concat(2*c+e,"] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[").concat(2*c+e,"] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ");this.userCode="\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ".concat(u,"\n\n        ").concat(a.output," = result;\n      }\n    ")}}function XO(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function YO(e){let{x:t,filter:n,convInfo:a,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:u=null}=e;const c=t.shape,l=r.texData.get(t.dataId),h=a.inChannels,d=c[0]*c[1]*c[2],p=a.outChannels,f="channelsLast"===a.dataFormat,m=!1;let g;const y=[];if(null!=o){const e=XO(o.shape,f);null!=e&&(o=l_({inputs:{x:o},backend:r,attrs:{shape:e}}),y.push(o))}if(null!=s){const e=XO(s.shape,f);null!=e&&(s=l_({inputs:{x:s},backend:r,attrs:{shape:e}}),y.push(s))}if(!((1===d||1===p)&&h>1e3)&&l.isPacked&&f&&null!=l.texture&&c[2]%2!==0&&W(l.shape.slice(-3),c.slice(-3))){const e=c[0]*c[1]*(c[2]+1),h={dataId:t.dataId,shape:[1,e,a.inChannels],dtype:t.dtype},d=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,M(EF(l.shape,h.shape),(()=>"packed reshape ".concat(l.shape," to ").concat(h.shape," isn't free")));const p=l_({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}});y.push(p);const f=D_({a:h,b:p,backend:r,transposeA:false,transposeB:m,bias:s,activation:u,preluActivationWeights:o,leakyreluAlpha:i}),b=r.texData.get(f.dataId);M(b.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=d,b.shape=a.outShape,g=GR({inputs:{x:f},backend:r}),g.shape=a.outShape,y.push(f)}else{const e=a.outHeight*a.outWidth,c=l_({inputs:{x:t},backend:r,attrs:{shape:f?[a.batchSize,e,a.inChannels]:[a.batchSize,a.inChannels,e]}}),l=l_({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}}),h=D_({a:f?c:l,b:f?l:c,transposeA:!f,transposeB:m,backend:r,bias:s,activation:u,preluActivationWeights:o,leakyreluAlpha:i});g=l_({inputs:{x:h},backend:r,attrs:{shape:a.outShape}}),y.push(c),y.push(l),y.push(h)}for(const b of y)r.disposeIntermediateTensorInfo(b);return g}function QO(e){let{x:t,filter:n,convInfo:a,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:u=null}=e;const{filterWidth:c,filterHeight:l,inChannels:h,outWidth:d,outHeight:p,dataFormat:f}=a,m="channelsLast"===f,g=c*l*h,y=p*d,b=[a.batchSize,g,y],v=[];if(null!=o){const e=XO(o.shape,m);null!=e&&(o=l_({inputs:{x:o},backend:r,attrs:{shape:e}}),v.push(o))}if(null!=s){const e=XO(s.shape,m);null!=e&&(s=l_({inputs:{x:s},backend:r,attrs:{shape:e}}),v.push(s))}const x=l_({inputs:{x:n},backend:r,attrs:{shape:[1,g,P(n.shape)/g]}});v.push(x);const w=new KO(b,a),D=[t.shape,[a.padInfo.top,a.padInfo.left],[a.strideHeight,a.strideWidth],[a.dilationHeight,a.dilationWidth],[a.inChannels],[a.filterWidth*a.inChannels],[a.outWidth]],k=r.runWebGLProgram(w,[t],"float32",D),C=l_({inputs:{x:k},backend:r,attrs:{shape:b}});v.push(k),v.push(C);const N=null!=s,S=null!=o,E="leakyrelu"===u,I=u?n_(u,!0):null,T=new a_(m?C.shape:x.shape,m?x.shape:C.shape,m?[a.batchSize,y,a.outChannels]:[a.batchSize,a.outChannels,y],!0,!1,N,I,S,E),F=m?[C,x]:[x,C];if(s&&F.push(s),S&&F.push(o),E){const e=r.makeTensorInfo([],"float32",rr(i,"float32"));F.push(e),v.push(e)}const A=r.runWebGLProgram(T,F,"float32"),R=l_({inputs:{x:A},backend:r,attrs:{shape:a.outShape}});v.push(A);for(const _ of v)r.disposeIntermediateTensorInfo(_);return R}const ZO={kernelName:Qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dataFormat:u,dilations:c,dimRoundingMode:l}=a,h=lu(u),d=eu(r.shape,s.shape,o,c,i,l,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&ge().getBool("WEBGL_EXP_CONV")){const e=new qO(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[r,s],"float32",t)}else if(ge().getBool("WEBGL_CONV_IM2COL"))p=QO({x:r,filter:s,convInfo:d,backend:n});else{const e=new HO(d);p=n.runWebGLProgram(e,[r,s],"float32")}else p=YO({x:r,filter:s,convInfo:d,backend:n});const f=l_({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class JO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              ").concat(s?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);","\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class $O{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,u=s?1:2,c=s?2:3,l=s?3:1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[").concat(l,"];\n\n        ivec2 dyCorner = ivec2(coords[").concat(u,"], coords[").concat(c,"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n\n              if (").concat(s,") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class eL{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.padInfo.front,s=e.padInfo.top,o=e.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yF = 0; yF < ").concat(e.outDepth,"; yF++) {\n            int xF = wF + yF * ").concat(t," - ").concat(r,";\n\n            if (xF < 0 || xF >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n              int xR = wR + yR * ").concat(n," - ").concat(s,";\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n                int xC = wC + yC * ").concat(a," - ").concat(o,";\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class tL{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,u=n-1-e.padInfo.top,c=a-1-e.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3(".concat(i,", ").concat(u,", ").concat(c,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(t,"; wF++) {\n          float dyF = float(dyFCorner + wF) / ").concat(r,".0;\n\n          if (dyF < 0.0 || dyF >= ").concat(e.outDepth,".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ").concat(t," - 1 - wF;\n\n          for (int wR = 0; wR < ").concat(n,"; wR++) {\n            float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ").concat(n," - 1 - wR;\n\n            for (int wC = 0; wC < ").concat(a,"; wC++) {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ").concat(a," - 1 - wC;\n\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const nL={kernelName:Ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:i,dataFormat:u,dimRoundingMode:c,filterShape:l}=a,h=lu(u),d=eu(r.shape,l,o,1,i,c,!1,h),p=new JO(d);return n.runWebGLProgram(p,[r,s],"float32")}};class aL{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=sA(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,a=t-1-e.padInfo.top,r=n-1-e.padInfo.left;this.userCode="\n      const ivec2 pads = ivec2(".concat(a,", ").concat(r,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ").concat(e.outWidth,".0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ").concat(e.outWidth,".0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    ")}}const rL={kernelName:Je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:o,strides:i,pad:u,dataFormat:c,dimRoundingMode:l}=a,h=lu(c),d=eu(o,s.shape,i,1,u,l,!1,h);if(ge().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[d.strideHeight,d.strideWidth]],t=new aL(d);return n.runWebGLProgram(t,[r,s],"float32",e)}{const e=new $O(d);return n.runWebGLProgram(e,[r,s],"float32")}}};const sL={kernelName:$e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:u}=a,c=tu(r.shape,s.shape,o,u,i),l=new jO(c);return n.runWebGLProgram(l,[r,s],"float32")}};const oL={kernelName:et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:i,filterShape:u}=a,c=tu(r.shape,u,o,1,i),l=new eL(c);return n.runWebGLProgram(l,[r,s],"float32")}};const iL={kernelName:tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:o,strides:i,inputShape:u}=a,c=tu(u,s.shape,i,1,o),l=new tL(c);return n.runWebGLProgram(l,[r,s],"float32")}},uL=e_({opSnippet:$R+"\n  return cos(x);\n",packedOpSnippet:"\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(VR,"\n  return result;\n")}),cL={kernelName:nt,backendName:"webgl",kernelFunc:uL},lL=e_({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),hL={kernelName:at,backendName:"webgl",kernelFunc:lL};class dL{constructor(e,t,n,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,o,i,u]=e,[c]=t,[l,h]=n;this.outputShape=[c,l,h,u];const d="bilinear"===a?1:0,[p,f]=["".concat(o-1,".0"),"".concat(i-1,".0")],[m,g,y]=l>1?["".concat((o-1)/(l-1)),"(y2-y1) * height_ratio","y1*".concat(p," + float(y)*(height_scale)")]:["0.0","0.0","0.5 * (y1+y2) * ".concat(p)],[b,v,x]=h>1?["".concat((i-1)/(h-1)),"(x2-x1) * width_ratio","x1*".concat(f," + float(x)*(width_scale)")]:["0.0","0.0","0.5 * (x1+x2) * ".concat(f)];this.userCode="\n      const float height_ratio = float(".concat(m,");\n      const float width_ratio = float(").concat(b,");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ").concat(s,") {\n          return;\n        }\n\n        float height_scale = ").concat(g,";\n        float width_scale = ").concat(v,";\n\n        float in_y = ").concat(y,";\n        if( in_y < 0.0 || in_y > ").concat(p," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n        float in_x = ").concat(x,";\n        if( in_x < 0.0 || in_x > ").concat(f," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(").concat(d," == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    ")}}const pL={kernelName:ot,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:o}=t,{cropSize:i,method:u,extrapolationValue:c}=a,l=new dL(r.shape,s.shape,i,u,c);return n.runWebGLProgram(l,[r,s,o],"float32")}};var fL;!function(e){e.Prod="*",e.Sum="+"}(fL||(fL={}));class mL{constructor(e,t,n,a){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,s=this.op===fL.Prod?"1.0":"0.0",o=n?s:"getX(".concat(gL(r,"coords",this.op),")"),i=this.outputShape[this.outputShape.length-1];let u="",c="";n?(u=a?"end != ".concat(i-1):"end != 0",c=a?"end + 1":"end - 1"):(u=a?"end + pow2 < ".concat(i):"end >= pow2",c=a?"end + pow2":"end - pow2"),this.userCode="\n      void main() {\n        ".concat(JF(r)," coords = getOutputCoords();\n        int end = ").concat(yL(r,"coords",this.op),";\n        float val = ").concat(o,";\n        int pow2 = int(pow(2.0, index));\n        if (").concat(u,") {\n          int idx = ").concat(c,";\n          ").concat(yL(r,"coords",this.op)," = idx;\n          val ").concat(this.op,"= getX(").concat(gL(r,"coords",this.op),");\n        }\n        setOutput(val);\n      }\n    ")}}function gL(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".x, ").concat(t,".y");if(3===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z");if(4===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z, ").concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function yL(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".y");if(3===e)return"".concat(t,".z");if(4===e)return"".concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function bL(e,t,n,a,r,s){const o=t.shape.length,i=hc([a],o);let u=t;null!=i&&(u=x_({inputs:{x:t},backend:n,attrs:{perm:i}}));const c=pc(1,o)[0];if(c!==o-1)throw new Error("WebGL cumprod shader expects an inner-most axis=".concat(t.shape.length-1," ")+"but got axis=".concat(a));const l=u.shape[c];let h=GR({inputs:{x:u},backend:n});for(let d=0;d<=Math.ceil(Math.log2(l))-1;d++){const t=new mL(e,u.shape,!1,s),a=[[d]],r=h;h=n.runWebGLProgram(t,[h],h.dtype,a),n.disposeIntermediateTensorInfo(r)}if(r){const t=new mL(e,u.shape,r,s),a=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(a)}if(null!=i){const e=x_({inputs:{x:h},backend:n,attrs:{perm:dc(i)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),e}return h}const vL={kernelName:rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;return bL(fL.Prod,r,n,s,o,i)}};const xL={kernelName:st,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;return bL(fL.Sum,r,n,s,o,i)}};const wL={kernelName:it,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o,binaryOutput:i}=a;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(s.dataId),a=NA(e,t,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,a)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(s),a=SA(e,t,o,i);return n.makeTensorInfo(a.shape,s.dtype,a.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};class DL{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ".concat(this.getHeightCoordString(),";\n      int w = ").concat(this.getWidthCoordString(),";\n      int d = ").concat(this.getDepthCoordString(),";\n\n      int in_h = h / ").concat(t,";\n      int offset_h = imod(h, ").concat(t,");\n      int in_w = w / ").concat(t,";\n      int offset_w = imod(w, ").concat(t,");\n      int offset_d = (offset_h * ").concat(t," + offset_w) *\n        ").concat(this.getOutputDepthSize(),";\n      int in_d = d + offset_d;\n\n      float result = ").concat(this.getInputSamplingString(),";\n      setOutput(result);\n    }\n  ")}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const kL={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:o}=a,i=r.shape[0],u=("NHWC"===o?r.shape[1]:r.shape[2])*s,c=("NHWC"===o?r.shape[2]:r.shape[3])*s,l=("NHWC"===o?r.shape[3]:r.shape[1])/(s*s),h=new DL("NHWC"===o?[i,u,c,l]:[i,l,u,c],s,o);return n.runWebGLProgram(h,[r],r.dtype)}};class CL{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=sA(this.outputShape.length);const s=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels;let u="",c="";n&&(u=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),c="result = activation(result);");const l=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(u,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(i,";\n        int q = d2 - d1 * ").concat(i,";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ").concat(s,"; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(o,"; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ").concat(l,"\n        ").concat(c,"\n        setOutput(result);\n      }\n    ")}}class NL{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=sA(this.outputShape.length);const s=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,l=e.filterWidth,h=l;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<l;g++)d+="\n          vec4 xTexelC".concat(2*g,";\n          int xTexelC").concat(2*g,"Ready;\n          vec4 xTexelC").concat(2*g+1,";\n          int xTexelC").concat(2*g+1,"Ready;\n          vec4 xC").concat(g,";");d+="\n    for (int r = 0; r < ".concat(c,"; r++) {\n      ");for(let g=0;g<l;g++)d+="\n          xTexelC".concat(2*g," = vec4(0.0);\n          xTexelC").concat(2*g,"Ready = 0;\n          xTexelC").concat(2*g+1," = vec4(0.0);\n          xTexelC").concat(2*g+1,"Ready = 0;\n          xC").concat(g," = vec4(0.0);");d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let g=0;g<(h+1)/2;g++){const e=2*g;if(d+="\n          xC = xCCorner + ".concat(e*u,";\n          "),1===i){if(e<l&&(o%2===1?(d+="\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n              "),d+=1===u&&e>0?"\n                xC".concat(e," = vec4(xTexelC").concat(e-2,".zw, xTexelC").concat(e,".xy);\n                "):"\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC".concat(e," = vec4(previous.zw, xTexelC").concat(e,".xy);\n                  } else {\n                    xC").concat(e," = vec4(0.0, 0.0, xTexelC").concat(e,".xy);\n                  }\n                  ")):d+="\n                if (xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xC").concat(e," = xTexelC").concat(e,";\n                "),e+1<l)){const t=o%2===0?O(u):u;u%2===0&&o%2===1||u%2!==0&&o%2!==1?(d+="\n                  xCOffset = xC + imod(pads[1], 2) + ".concat(t,";\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                    xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC").concat(e+1,".zw = vec2(0.0);\n                    }\n                    xTexelC").concat(e+1,"Ready = 1;\n                  }\n                  "),d+=u>1?"\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC".concat(e+1," = vec4(previous.zw, xTexelC").concat(e+1,".xy);\n                    } else {\n                     xC").concat(e+1," = vec4(0.0, 0.0, xTexelC").concat(e+1,".xy);\n                    }\n                    "):"\n                    xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".xy);\n                    ")):d+=1===t?"\n                    xC".concat(e+1," = xTexelC").concat(e,";\n                    "):"\n                    xCOffset = xC + ".concat(t,";\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                      xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC").concat(e+1,".zw = vec2(0.0);\n                      }\n                      xTexelC").concat(e+1,"Ready = 1;\n                    }\n\n                    xC").concat(e+1," = xTexelC").concat(e+1,";\n                    ")}}else e<l&&(o%2===1?(d+="\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n              "),e+1<l&&(d+="\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC".concat(e+1," = vec4(xTexelC").concat(e+1,".xy, final.xy);\n                "))):(d+="\n                if(xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(\n                  xTexelC").concat(e,".xy, xTexelC").concat(e+1,".xy);\n              "),e+1<l&&(d+="\n                  xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n                "))));e<l&&(d+="\n            wTexel = getW(r, ".concat(e,", d1, q);\n            dotProd += xC").concat(e," * vec4(wTexel.xz, wTexel.xz);\n          "),e+1<l&&(d+="\n              wTexel = getW(r, ".concat(e+1,", d1, q);\n              dotProd += xC").concat(e+1," * vec4(wTexel.xz, wTexel.xz);\n            ")))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=a?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(n,"\n        }"),f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(p,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(s,";\n        int q = d2 - d1 * ").concat(s,";\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ").concat(d,"\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ").concat(m,"\n        ").concat(f,"\n        setOutput(result);\n      }\n    ")}}const SL={kernelName:ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:u,dimRoundingMode:c}=a;let l=u;null==l&&(l=[1,1]),M(uu(o,l),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(o," and dilations '").concat(l,"'")));const h=eu(r.shape,s.shape,o,l,i,c,!0);let d;d=ge().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new NL(h):new CL(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[r,s],"float32",p)}};class EL{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ".concat(s," + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ").concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class IL{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode="\n      const ivec2 pads = ivec2(".concat(s,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ").concat(i,"; dm++) {\n              int d2 = d1 * ").concat(i," + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const TL={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:c,filterShape:l}=a,h=eu(r.shape,l,o,i,u,c,!0),d=new EL(h);return n.runWebGLProgram(d,[r,s],"float32")}};const FL={kernelName:ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:c,inputShape:l}=a,h=eu(l,s.shape,o,i,u,c,!0),d=new IL(h);return n.runWebGLProgram(d,[r,s],"float32")}};class AL{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const RL={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],s=P(a.shape),o=l_({inputs:{x:a},backend:n,attrs:{shape:[s]}}),i=new AL(s),u=n.runWebGLProgram(i,[o],o.dtype),c=l_({inputs:{x:u},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),c}};class _L{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:a,strideHeight:r,strideWidth:s,filterHeight:o,filterWidth:i,dilationHeight:u,dilationWidth:c}=e,{top:l,left:h}=a;this.userCode="\n      const ivec2 strides = ivec2(".concat(r,", ").concat(s,");\n      const ivec2 pads = ivec2(").concat(l,", ").concat(h,");\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ").concat(o,"; h++) {\n          int hIn = hBeg + h * ").concat(u,";\n\n          if (hIn >= 0 && hIn < ").concat(t,") {\n            for (int w = 0; w < ").concat(i,"; w++) {\n              int wIn = wBeg + w * ").concat(c,";\n\n              if (wIn >= 0 && wIn < ").concat(n,") {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    ")}}const OL={kernelName:pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:u}=a,c=Zi(r.shape,s.shape,o,i,"NHWC",u);let l;const h=new _L(c);l=n.runWebGLProgram(h,[r,s],"float32");const d=l_({inputs:{x:l},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(l),d}};const LL={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:o,summedDims:i,idDims:u}=Hp(r,s.length);qp(o.length,u,s);const{path:c,steps:l}=Kp(i,u),h=l.length;let d=null,p=o.length;const f=[];for(let m=0;m<h;++m){for(const e of l[m]){const{permutationIndices:t,expandDims:a}=jp(p,u[e]);let r;Xp(t)?r=s[e]:(r=x_({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),f.push(r));const o=r.shape.slice();for(let e=0;e<a.length;++e)o.splice(a[e],0,1);W(r.shape,o)||(r=l_({inputs:{x:r},backend:n,attrs:{shape:o}}),f.push(r)),null===d?d=r:(d=u_({inputs:{a:r,b:d},backend:n}),f.push(d))}m<h-1&&(c[m]>=0&&(d=b_({inputs:{x:d},backend:n,attrs:{axis:c[m]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}},ML=e_({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),zL={kernelName:vt,backendName:"webgl",kernelFunc:ML},BL={kernelName:xt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:r}=t,s=ge().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new UR("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,r.shape):new WR("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,r.shape);return n.runWebGLProgram(s,[a,r],a.dtype)}},PL=t_({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:AA}),WL={kernelName:Dt,backendName:"webgl",kernelFunc:PL},VL=e_({opSnippet:'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = '.concat(Sp,";\n  float a1 = ").concat(Ep,";\n  float a2 = ").concat(Ip,";\n  float a3 = ").concat(Tp,";\n  float a4 = ").concat(Fp,";\n  float a5 = ").concat(Ap,";\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n")}),UL={kernelName:wt,backendName:"webgl",kernelFunc:VL},GL=e_({opSnippet:$R+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:RA,dtype:"float32"}),HL={kernelName:kt,backendName:"webgl",kernelFunc:GL};function jL(e){const{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:s}=t,o=s.shape.length,i=s.shape.slice();let u=r;return r<0&&(M(-(o+1)<=r,(()=>"Axis must be in the interval [".concat(-(o+1),", ").concat(o,"]"))),u=o+r+1),i.splice(u,0,1),l_({inputs:{x:s},backend:a,attrs:{shape:i}})}const qL={kernelName:Ct,backendName:"webgl",kernelFunc:jL},KL="return exp(x) - 1.0;",XL=e_({opSnippet:KL,packedOpSnippet:KL,cpuKernelImpl:_A}),YL={kernelName:Nt,backendName:"webgl",kernelFunc:XL};class QL{constructor(e,t,n){this.variableNames=["real","imag"];const a=t[1];this.outputShape=t;const r=n?"2.0 * ".concat(Math.PI):"-2.0 * ".concat(Math.PI),s=n?"".concat(a,".0"):"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error('FFT component must be either "real" or "imag", got '.concat(e,"."));o="return real * expI + imag * expR;"}this.userCode="\n      const float exponentMultiplier = ".concat(r,";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ").concat(o,"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(").concat(a,");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ").concat(s,";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    ")}}function ZL(e,t,n){const a=n.texData.get(e.dataId),r=P(e.shape),s=e.shape[e.shape.length-1],o=l_({inputs:{x:e},backend:n,attrs:{shape:[r/s,s]}}),i=o.shape,u=new QL("real",i,t),c=new QL("imag",i,t),l=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:i},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:i}],h=n.runWebGLProgram(u,l,"float32"),d=n.runWebGLProgram(c,l,"float32"),p=jR({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=l_({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(p),f}const JL={kernelName:St,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return ZL(a,!1,n)}};class $L{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function eM(e){const{backend:t,attrs:n}=e,{shape:a,value:r}=n;let{dtype:s}=n;if(s=s||ee(r),"string"===s){const e=Y(s,P(a));return e.fill(r),t.makeTensorInfo(a,s,e)}{const e=new $L(a,r),n=[[r]];return t.runWebGLProgram(e,[],s,n)}}const tM={kernelName:Et,backendName:"webgl",kernelFunc:eM};class nM{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ".concat(t," - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ").concat(t,") {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const aM={kernelName:It,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:a}=t,r=n,s=new nM(a.shape);return r.runWebGLProgram(s,[a],a.dtype)}},rM="return floor(x);",sM=e_({opSnippet:rM,packedOpSnippet:rM,cpuKernelImpl:OA}),oM={kernelName:Tt,backendName:"webgl",kernelFunc:sM},iM=t_({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),uM={kernelName:Ft,backendName:"webgl",kernelFunc:iM};class cM{constructor(e){this.variableNames=["A"];const t=MF(),[n,a]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(".concat(a,".0, ").concat(n,".0);\n\n        vec4 values = ").concat(t.texture2D,"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    ")}}class lM{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=MF(),[n,a]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(".concat(a,".0, ").concat(n,".0);\n            vec4 values = ").concat(t.texture2D,"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}const hM={kernelName:Ia,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:r}=t;const{numChannels:s}=a,o="undefined"!==typeof HTMLVideoElement&&r instanceof HTMLVideoElement,i="undefined"!==typeof HTMLImageElement&&r instanceof HTMLImageElement,[u,c]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],l=[c,u],h=[c,u,s];if(i||o){const e=ge().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=dM&&e===pM||(pM=e,dM=document.createElement("canvas").getContext("2d",{willReadFrequently:pM})),dM.canvas.width=u,dM.canvas.height=c,dM.drawImage(r,0,0,u,c),r=dM.canvas}const d=n.makeTensorInfo(l,"int32");n.texData.get(d.dataId).usage=rF.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);const p=ge().getBool("WEBGL_PACK")?new lM(h):new cM(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let dM,pM=ge().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const fM={kernelName:Aa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a,m=lu(l),g=eu(r.shape,s.shape,u,h,c,d,!1,m);let y;const b=[],v=null!=o,x=null!=i,w="leakyrelu"===p,D=()=>{const e=[r,s],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=l_({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(v&&e.push(t(o,l)),x&&e.push(t(i,l)),w){const t=n.makeTensorInfo([],"float32",rr(f,"float32"));e.push(t),b.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&ge().getBool("WEBGL_EXP_CONV")){const e=p?n_(p,!0):null,t=new qO(g,v,e,x,w),a=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],r=D();y=n.runWebGLProgram(t,r,"float32",a)}else if(ge().getBool("WEBGL_CONV_IM2COL"))y=QO({x:r,filter:s,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else{const e=p?n_(p,!1):null,t=new HO(g,v,e,x,w),a=D();y=n.runWebGLProgram(t,a,"float32")}else y=YO({x:r,filter:s,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});const k=l_({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),k}};const mM={kernelName:Ra,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:u,pad:c,dilations:l,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=a,f=[];let m=l;null==m&&(m=[1,1]),M(uu(u,m),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(u," and dilations '").concat(m,"'")));const g=eu(r.shape,s.shape,u,m,c,h,!0),y=ge().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=d?n_(d,y):null,v=[r,s],x=null!=o,w=null!=i,D="leakyrelu"===d;if(x&&v.push(o),w&&v.push(i),D){const e=n.makeTensorInfo([],"float32",rr(p,"float32"));v.push(e),f.push(e)}let k;k=y?new NL(g,x,b,w,D):new CL(g,x,b,w,D);const C=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],N=n.runWebGLProgram(k,v,"float32",C);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};class gM{constructor(e,t,n,a){this.sliceDim=e,this.strides=t,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=n;const r=JF(n.length);let s="\n    int index;";for(let o=0;o<this.sliceDim;o++)s+="\n          index = round(getIndices(coords[0], ".concat(o,"));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ").concat(this.paramsShape[o],";\n          flattenIndex += index * ").concat(this.strides[o],";");this.userCode="\n         void main() {\n          ".concat(r," coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ").concat(s,"\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      ")}}const yM={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=r.shape,o=s[s.length-1],i=P(a.shape),[u,c,l,h]=kp(a,r),d=l_({inputs:{x:r},backend:n,attrs:{shape:[c,o]}}),p=l_({inputs:{x:a},backend:n,attrs:{shape:[P(a.shape)/l,l]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(a),s=LA(e,t,a.dtype,c,o,l,h,a.shape,i);return n.makeTensorInfo(u,a.dtype,s.values)}const f=new gM(o,h,[c,l],a.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),g=l_({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};class bM{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=JF(this.rank),a=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let a=0;a<e.length;a++)2===a?n.push("index"):n.push("".concat(t[a]));return n.join()}(e);this.userCode="\n      void main() {\n        ".concat(n," resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ").concat(e[2],") ? 1.0 : 0.0;\n        setOutput(inBounds * getA(").concat(a,"));\n      }\n    ")}}function vM(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:o,batchDims:i}=a,u=q(o,r.shape)[0];if(ge().get("DEBUG")){const e=n.readSync(s.dataId),t=r.shape[u];for(let n=0;n<e.length;++n){const a=e[n];M(a<=t-1&&a>=0,(()=>"GatherV2: the index value ".concat(a," is not in [0, ").concat(t-1,"]")))}}const c=df(r,s,u,i),l=P(s.shape),h=[],d=l_({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=l_({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,l/c.batchSize]}});h.push(d),h.push(p);const f=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),a=MA(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c.outputShape,a.dtype,a.values)}const m=new bM(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const y=l_({inputs:{x:g},backend:n,attrs:{shape:c.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const xM={kernelName:Rt,backendName:"webgl",kernelFunc:vM},wM=t_({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:zA,dtype:"bool"}),DM={kernelName:Ot,backendName:"webgl",kernelFunc:wM},kM=t_({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:BA}),CM={kernelName:Lt,backendName:"webgl",kernelFunc:kM};const NM={kernelName:zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return ZL(a,!0,n)}},SM=e_({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),EM={kernelName:Pt,backendName:"webgl",kernelFunc:SM},IM=e_({opSnippet:"return float(isinf(x));",dtype:"bool"}),TM={kernelName:Wt,backendName:"webgl",kernelFunc:IM},FM=e_({opSnippet:"return float(isnan(x));",dtype:"bool"}),AM={kernelName:Vt,backendName:"webgl",kernelFunc:FM},RM=t_({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:PA,dtype:"bool"}),_M={kernelName:Gt,backendName:"webgl",kernelFunc:RM},OM=t_({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:WA,dtype:"bool"}),LM={kernelName:Ht,backendName:"webgl",kernelFunc:OM};const MM={kernelName:jt,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,o=VA(a,r,s);return t.makeTensorInfo([o.length],"float32",o)}},zM=e_({opSnippet:$R+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:UA}),BM={kernelName:qt,backendName:"webgl",kernelFunc:zM},PM=e_({opSnippet:$R+"\n  return log(1.0 + x);\n"}),WM={kernelName:Kt,backendName:"webgl",kernelFunc:PM},VM=t_({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),UM={kernelName:Xt,backendName:"webgl",kernelFunc:VM},GM=e_({opSnippet:"return float(!(x >= 1.0));"}),HM={kernelName:Yt,backendName:"webgl",kernelFunc:GM},jM=t_({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),qM={kernelName:Qt,backendName:"webgl",kernelFunc:jM};class KM{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[];const s=t,o=e[3]-1;let i;this.outputShape=e;const u="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(u,")"):1===r?"1.0/(".concat(u,")"):"exp(log(".concat(u,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -".concat(s,"; j <= ").concat(s,"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ").concat(o,") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ").concat(i,";\n        setOutput(val);\n      }\n    ")}}class XM{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,o=e[3]-1;let i;this.outputShape=e;const u="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(u,")"):1===r?"1.0/(".concat(u,")"):"exp(log(".concat(u,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ".concat(this.outputShape[3],";\n        bool hasNextRow = c < ").concat(this.outputShape[2],";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ").concat(s,";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ").concat(s,"; j <= ").concat(s,"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(").concat(o,"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ").concat(i,";\n        setOutput(result);\n      }\n    ")}}const YM={kernelName:Zt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:o,alpha:i,beta:u}=a,c=ge().getBool("WEBGL_PACK_NORMALIZATION")?new XM(r.shape,s,o,i,u):new KM(r.shape,s,o,i,u);return n.runWebGLProgram(c,[r],r.dtype)}};class QM{constructor(e,t,n,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=r,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ".concat(this.depth,"; ++d) {\n          int depthBegin = int(max(0.0, float(d - ").concat(t,")));\n          int depthEnd = int(min(float(").concat(this.depth,"),\n              float(d + ").concat(t," + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ").concat(this.depth,";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(").concat(a,") * norm + float(").concat(n,");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(").concat(a,")\n                * float(").concat(r,")\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ").concat(r,");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    ")}}const ZM={kernelName:Jt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:o}=t,{depthRadius:i,bias:u,alpha:c,beta:l}=a,h=new QM(r.shape,i,u,c,l);return n.runWebGLProgram(h,[r,s,o],r.dtype)}};function JM(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:o}=a,i=r.shape.length,u=q(s,r.shape);let c=u;const l=hc(c,i),h=null!=l,d=n.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(i);for(let n=0;n<t.length;n++)t[n]=r.shape[l[n]];const a=yR(e,r.shape,r.dtype,l,t);p=n.makeTensorInfo(t,r.dtype);n.texData.get(p.dataId).values=a}else p=y_(r,l,n);c=pc(c.length,i)}lc("max",c,i);const[f,m]=uc(p.shape,c);let g,y=f;if(o&&(y=cc(f,u)),d){const e=n.texData.get(p.dataId).values,t=GA(e,P(m),y,r.dtype);g=n.makeTensorInfo(y,r.dtype);n.texData.get(g.dataId).values=t}else g=function(e,t,n,a){const r=P(t),s=l_({inputs:{x:e},attrs:{shape:[P(e.shape)/r,r]},backend:a}),o=f_(s,e.dtype,"max",a),i=l_({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}(p,m,y,n);return h&&n.disposeIntermediateTensorInfo(p),g}const $M={kernelName:$t,backendName:"webgl",kernelFunc:JM},ez=t_({opSnippet:PR+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+VR+"\n  return result;\n",cpuKernelImpl:HA}),tz={kernelName:en,backendName:"webgl",kernelFunc:ez};const nz={kernelName:tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;OF(r,"maxPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:u}=a;M(uu(o,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const c=Ji(r.shape,s,o,1,i,u);if(1===c.filterWidth&&1===c.filterHeight&&W(c.inShape,c.outShape))return GR({inputs:{x:r},backend:n});const l=new tO(c,"max",!1);return n.runWebGLProgram(l,[r],r.dtype)}};const az={kernelName:an,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:i,dataFormat:u,dimRoundingMode:c}=a,l=$i(r.shape,s,o,[1,1,1],i,c,u),h=new nO(l,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class rz{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,r=e.effectiveFilterHeight,s=e.effectiveFilterWidth,o=r-1-e.padInfo.top,i=s-1-e.padInfo.left,u=r*s-1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(r,";\n          wR += ").concat(a,") {\n          float dyR = float(dyRCorner + wR) / ").concat(t,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(s,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(n,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ").concat(u," - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ").concat(s," + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class sz{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.dilationDepth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=i-1-e.padInfo.front,h=u-1-e.padInfo.top,d=c-1-e.padInfo.left,p=i*u*c-1;this.userCode="\n      const ivec3 pads = ivec3(".concat(l,", ").concat(h,", ").concat(d,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(i,";\n           wD += ").concat(r,") {\n          float dyD = float(dyDCorner + wD) / ").concat(t,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(u,";\n              wR += ").concat(s,") {\n            float dyR = float(dyRCorner + wR) / ").concat(n,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(c,";\n                wC += ").concat(o,") {\n              float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ").concat(p," -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ").concat(u," * ").concat(c," +\n                  wR * ").concat(c," + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const oz={kernelName:rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=a,h=$i(o.shape,i,u,[1,1,1],c,l),d=new nO(h,"max",!0),p=n.runWebGLProgram(d,[o],o.dtype),f=new sz(h),m=n.runWebGLProgram(f,[r,p],o.dtype);return n.disposeIntermediateTensorInfo(p),m}};const iz={kernelName:nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:o}=t,i=s;OF([s,o],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:h}=a,d=Ji(i.shape,u,c,1,l,h),p=new tO(d,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),m=new rz(d),g=n.runWebGLProgram(m,[r,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}};const uz={kernelName:sn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{filterSize:s,strides:o,pad:i,includeBatchInIndex:u}=n,c=a;M(4===r.shape.length,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(r.shape.length,".")));const l=[1,1];M(uu(o,l),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(l,"'")));const h=Ji(r.shape,s,o,l,i),[d,p]=function(e,t,n,a){let r=new tO(n,"max",!1);const s=a.runWebGLProgram(r,[e],"float32");return r=new tO(n,"max",!0,!0,t),[s,a.runWebGLProgram(r,[e],"float32")]}(r,u,h,c);return[d,p]}};const cz={kernelName:on,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{keepDims:s,axis:o}=n,i=a,u=r.shape.length,c=q(o,r.shape);let l=c;const h=hc(l,u),d=null!=h,p=i.shouldExecuteOnCPU([r]),f=[];let m=r;if(d){if(p){const e=i.texData.get(m.dataId).values,t=new Array(u);for(let a=0;a<t.length;a++)t[a]=r.shape[h[a]];const n=yR(e,r.shape,r.dtype,h,t);m=i.makeTensorInfo(t,r.dtype);i.texData.get(m.dataId).values=n}else m=y_(r,h,i);f.push(m),l=pc(l.length,u)}lc("sum",l,u);const[g,y]=uc(m.shape,l);let b=g;s&&(b=cc(g,c));const v=function(e,t,n,a){const r=P(t),s=l_({inputs:{x:e},attrs:{shape:[P(e.shape)/r,r]},backend:a}),o=f_(s,"float32","mean",a),i=l_({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}(m,y,b,i);for(const x of f)i.disposeIntermediateTensorInfo(x);return v}};const lz={kernelName:un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=r.shape.length,u=q(s,r.shape);let c=u;const l=hc(c,i);let h=r;null!=l&&(h=x_({inputs:{x:r},backend:n,attrs:{perm:l}}),c=pc(c.length,r.shape.length)),lc("min",c,i);const[d,p]=uc(h.shape,c),f=l_({inputs:{x:h},backend:n,attrs:{shape:[-1,P(p)]}}),m=f_(f,f.dtype,"min",n);let g;if(o){g=l_({inputs:{x:m},backend:n,attrs:{shape:cc(d,u)}})}else g=l_({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=l&&n.disposeIntermediateTensorInfo(h),g}},hz=t_({opSnippet:PR+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+VR+"\n  return result;\n",cpuKernelImpl:jA}),dz={kernelName:cn,backendName:"webgl",kernelFunc:hz};class pz{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=JF(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),u="reflect"===n?0:1;this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(s,");\n      ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        for (int i = 0; i < ").concat(a,"; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ").concat(u,";\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ").concat(u,";\n          }\n        }\n        ").concat(r," coords = outC - start;\n        setOutput(getX(").concat(i,"));\n      }\n    "):"\n        int start = ".concat(s,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ").concat(u,";\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ").concat(u,";\n          }\n          setOutput(getX(outC - start));\n        }\n      ")}}class fz{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=JF(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=xR("rc",a),u=xR("source",a),c="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),l=1===a?"source":"vec2(".concat(u.slice(-2).join(),")"),h="reflect"===n?0:1;let d="";if(1===a){const e="\n        ".concat(r," source = rc;\n        if (source < start) {\n          source = start * 2 - source - ").concat(h,";\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ").concat(h,";\n        }\n        source -= start;\n      ");d="\n        ".concat(r," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(u.join(),"), ").concat(l,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(c,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(u.join(),"), ").concat(l,");\n        }\n      ")}else{const e="\n        ".concat(r," source = rc;\n        ").concat(r," lt = ").concat(r,"(lessThan(source, start));\n        ").concat(r," gte = ").concat(r,"(greaterThanEqual(source, end));\n        ").concat(r," orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ").concat(h,") +\n                gte * ((end - 1) * 2 - source + ").concat(h,");\n        source -= start;\n      ");d="\n        ".concat(r," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(u.join(),"), ").concat(l,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(c,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(u.join(),"), ").concat(l,");\n        }\n        rc = outputLoc;\n        ").concat(i[a-2]," += 1;\n        if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {\n          ").concat(e,"\n          result[2] = getChannel(getX(").concat(u.join(),"), ").concat(l,");\n          ").concat(i[a-1]," += 1;\n          if(").concat(c,") {\n            ").concat(e,"\n            result[3] = getChannel(getX(").concat(u.join(),"), ").concat(l,");\n          }\n        }\n      ")}this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(s,");\n      const ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(d,"\n        setOutput(result);\n      }\n    ")}}const mz={kernelName:ln,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r}=t,{paddings:s,mode:o}=a,i=ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fz(r.shape,s,o):new pz(r.shape,s,o);return n.runWebGLProgram(i,[r],r.dtype)}},gz=t_({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+VR+"\n  return result;\n"}),yz={kernelName:hn,backendName:"webgl",kernelFunc:gz};class bz{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ".concat(t-1,"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(").concat(t-1,"));\n      }\n    ")}}const vz=t_({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),xz={kernelName:yt,backendName:"webgl",kernelFunc:vz},wz="return a - b;",Dz=t_({opSnippet:wz,packedOpSnippet:wz,supportsComplex:!0,cpuKernelImpl:fR}),kz={kernelName:ga,backendName:"webgl",kernelFunc:Dz};function Cz(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,o=q([s],r.shape),i=JM({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),u=cc(i.shape,o),c=l_({inputs:{x:i},backend:n,attrs:{shape:u}}),l=Dz({inputs:{a:r,b:c},backend:n}),h=GL({inputs:{x:l},backend:n}),d=b_({inputs:{x:h},backend:n,attrs:{axis:o,keepDims:!1}}),p=l_({inputs:{x:d},backend:n,attrs:{shape:u}}),f=vz({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const Nz={kernelName:aa,backendName:"webgl",kernelFunc:Cz};const Sz={kernelName:dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:o,normalized:i}=a,u=i?r:Cz({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),c=u.shape[0],l=u.shape[1],h=new bz(c,l,s),d=[[o]],p=n.runWebGLProgram(h,[u],"int32",d);return i||n.disposeIntermediateTensorInfo(u),p}},Ez=IR+"\n  return -x;\n";const Iz={kernelName:fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.texData.get(a.dataId),[t,r]=KA(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}let r;return r=ge().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new _R(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new ER(a.shape,Ez),n.runWebGLProgram(r,[a],a.dtype)}},Tz=fd;const Fz={kernelName:gn,backendName:"webgl",kernelFunc:function(e){_a("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=a,c=n.readSync(r.dataId),l=n.readSync(s.dataId),{selectedIndices:h}=Tz(c,l,o,i,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Az=md;const Rz={kernelName:yn,backendName:"webgl",kernelFunc:function(e){_a("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:c}=a,l=n.readSync(r.dataId),h=n.readSync(s.dataId),{selectedIndices:d,validOutputs:p}=Az(l,h,o,i,u,c);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},_z=gd;const Oz={kernelName:bn,backendName:"webgl",kernelFunc:function(e){_a("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=a,l=n.readSync(r.dataId),h=n.readSync(s.dataId),d=o,p=i,f=u,m=c,{selectedIndices:g,selectedScores:y}=_z(l,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class Lz{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(".concat(a,"), float(").concat(n,"),\n                      float(index == coords.y)));\n      }\n    ")}}const Mz={kernelName:xn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:o,onValue:i,offValue:u}=a,c=P(r.shape),l=new Lz(c,o,i,u),h=l_({inputs:{x:r},backend:n,attrs:{shape:[c]}}),d=n.runWebGLProgram(l,[h],s);n.disposeIntermediateTensorInfo(h);const p=l_({inputs:{x:d},backend:n,attrs:{shape:[...r.shape,o]}});return n.disposeIntermediateTensorInfo(d),p}};function zz(e){const{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){const e=CO({inputs:{input:a},backend:n}),t=zz({inputs:{x:e},backend:n}),r=PO({inputs:{input:a},backend:n}),s=zz({inputs:{x:r},backend:n}),o=jR({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}return eM({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const Bz={kernelName:Sa,backendName:"webgl",kernelFunc:zz};const Pz={kernelName:vn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=CO({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=PO({inputs:{input:r},backend:a}),o=zz({inputs:{x:s},backend:a}),i=jR({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}return eM({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}};const Wz={kernelName:wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return jL({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,o=t[0].dtype;t.forEach((e=>{z(s,e.shape,"All tensors passed to stack must have matching shapes"),M(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],u=UO({inputs:t.map((e=>{const t=jL({inputs:{input:e},backend:n,attrs:{dim:r}});return i.push(t),t})),backend:n,attrs:{axis:r}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class Vz{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=JF(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(s,");\n      ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ").concat(r," coords = outC - start;\n          setOutput(getX(").concat(i,"));\n        }\n      }\n    "):"\n        int start = ".concat(s,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      ")}}class Uz{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=JF(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=xR("rc",a),u=xR("source",a),c="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),l=1===a?"source":"vec2(".concat(u.slice(-2).join(),")"),h=["".concat(r," rc = outputLoc;"),"".concat(i[a-1]," += 1;\n       if(").concat(c,") {\n      "),1===a?"":"}\n       rc = outputLoc;\n       ".concat(i[a-2]," += 1;\n       if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {"),1===a?"":"  ".concat(i[a-1]," += 1;\n         if(").concat(c,") {")],d=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===a?2:4;f<m;f++)p+="\n        ".concat(h[f],"\n        if (").concat(d,") {\n          result[").concat(f,"] = float(value);\n        } else {\n          ").concat(r," source = rc - start;\n          result[").concat(f,"] = getChannel(getX(").concat(u.join(),"), ").concat(l,");\n        }\n      ");p+=1===a?"} ":"}}",this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(s,");\n      const ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(p,"\n        setOutput(result);\n      }\n    ")}}const Gz=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:o}=a;if(0===P(r.shape)){const e=s.map(((e,t)=>e[0]+r.shape[t]+e[1]));return eM({backend:n,attrs:{shape:e,value:o,dtype:r.dtype}})}const i=ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Uz(r.shape,s,o):new Vz(r.shape,s,o),u=[[o]];return n.runWebGLProgram(i,[r],r.dtype,u)},Hz={kernelName:Dn,backendName:"webgl",kernelFunc:Gz},jz=t_({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+VR+"\n  return result;\n"}),qz={kernelName:kn,backendName:"webgl",kernelFunc:jz};const Kz={kernelName:Nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=r.shape.length,u=[],c=q(s,r.shape);let l=c;const h=hc(l,i);let d,p=r;if(null!=h&&(p=x_({inputs:{x:r},backend:n,attrs:{perm:h}}),l=pc(l.length,i),u.push(p)),lc("prod",l,i),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:a,outDtype:r}=YA(p.shape,p.dtype,e,l);d=n.makeTensorInfo(a,r,t)}else{const[e,t]=uc(p.shape,l),a=P(t),s=l_({inputs:{x:p},backend:n,attrs:{shape:[-1,a]}}),o=f_(s,_r(r.dtype),"prod",n);d=l_({inputs:{x:o},backend:n,attrs:{shape:e}}),u.push(s),u.push(o)}if(o){u.push(d);const e=cc(d.shape,c);d=l_({inputs:{x:d},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};const Xz={kernelName:Sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:o}=t,{outputRaggedRank:i}=a,u=r.map((e=>n.readSync(e.dataId))),c=r.map((e=>e.shape)),l=n.readSync(s.dataId),h=n.readSync(o.dataId),[d,p,f]=QA(u,c,l,s.shape,s.dtype,h,o.shape,i),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}};const Yz={kernelName:En,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:s}=t,o=n.readSync(a.dataId),i=n.readSync(r.dataId),u=n.readSync(s.dataId),[c,l]=ZA(o,a.shape,a.dtype,i,r.shape,u,s.shape);return[n.makeTensorInfo([c.length],"int32",c),n.makeTensorInfo([l.length],a.dtype,l)]}};const Qz={kernelName:In,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:s,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:u}=a,c=n.readSync(r.dataId),l=n.readSync(s.dataId),h=n.readSync(o.dataId),d=i.map((e=>n.readSync(e.dataId))),p=i.map((e=>e.shape)),[f,m]=JA(c,r.shape,l,s.shape,s.dtype,h,o.shape,d,p,u);return n.makeTensorInfo(f,s.dtype,m)}},Zz=e=>{const{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:o}=n,i=$A(a,r,s,o);return t.makeTensorInfo([i.length],o,i)},Jz={kernelName:Tn,backendName:"webgl",kernelFunc:Zz},$z=e_({opSnippet:"return 1.0 / x;"}),eB={kernelName:An,backendName:"webgl",kernelFunc:$z},tB=e_({opSnippet:IR+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),nB={kernelName:Rn,backendName:"webgl",kernelFunc:tB},aB=e_({opSnippet:IR+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),rB={kernelName:Bn,backendName:"webgl",kernelFunc:aB};class sB{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const c=[a&&t>1?o-1:o,a&&n>1?i-1:i],l=[a&&t>1?t-1:t,a&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(c[0]/l[0],",\n          ").concat(c[1]/l[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    ")}}class oB{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const c=[a&&t>1?o-1:o,a&&n>1?i-1:i],l=[a&&t>1?t-1:t,a&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(c[0]/l[0],",\n          ").concat(c[1]/l[1],",\n          ").concat(c[1]/l[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(u-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    ")}}const iB={kernelName:Mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:i}=a,[u,c]=i,l=ge().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new oB(r.shape,u,c,s,o):new sB(r.shape,u,c,s,o);return n.runWebGLProgram(l,[r],"float32")}};class uB{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,s,o]=e,i=[n&&s>1?a-1:a,n&&o>1?r-1:r],u=[n&&s>1?s-1:s,n&&o>1?o-1:o],c=i[0]/u[0],l=i[1]/u[1],h=1/c,d=1/l,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(c,");\n        const float widthScale = float(").concat(l,");\n\n        const float invHeightScale = float(").concat(h,");\n        const float invWidthScale = float(").concat(d,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ").concat(a-1,".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ").concat(r-1,".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const cB={kernelName:zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a,i=new uB(s.shape,r.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class lB{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const c=[a&&t>1?o-1:o,a&&n>1?i-1:i],l=[a&&t>1?t-1:t,a&&n>1?n-1:n],h=a?"0.5":"0.0";let d;d=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(c[0]/l[0],",\n          ").concat(c[1]/l[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(h,")));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    ")}}class hB{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const c=[a&&t>1?o-1:o,a&&n>1?i-1:i],l=[a&&t>1?t-1:t,a&&n>1?n-1:n],h=a?"0.5":"0.0";let d;d=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(c[0]/l[0],",\n          ").concat(c[1]/l[1],",\n          ").concat(c[1]/l[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(h,")));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(u-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    ")}}const dB={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:i}=a,[u,c]=i,l=ge().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new hB(r.shape,u,c,s,o):new lB(r.shape,u,c,s,o);return n.runWebGLProgram(l,[r],r.dtype)}};class pB{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,s,o]=e,i=[n&&s>1?a-1:a,n&&o>1?r-1:r],u=[n&&s>1?s-1:s,n&&o>1?o-1:o],c=i[0]/u[0],l=i[1]/u[1],h=1/c,d=1/l,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(c,");\n        const float widthScale = float(").concat(l,");\n\n        const float invHeightScale = float(").concat(h,");\n        const float invWidthScale = float(").concat(d,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(").concat(i[0],") *\n                (float(dyR) / float(").concat(u[0],"));\n\n            float sourceFracCol =\n                float(").concat(i[1],") *\n                  (float(dyC) / float(").concat(u[1],"));\n\n            int sourceNearestRow = int(min(\n                float(int(").concat(a,") - 1),\n                ").concat(n," ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(").concat(r,") - 1),\n                ").concat(n," ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const fB={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a,i=new pB(s.shape,r.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class mB{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));if(this.outputShape=e,1===n)return void(this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(".concat(e[0]," - coord - 1));\n        }\n      "));const a=e.map(((n,a)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - coords[").concat(n,"] - 1"):"coords[".concat(n,"]"))(a))).join(","),r=JF(n);this.userCode="\n      void main() {\n        ".concat(r," coords = getOutputCoords();\n        setOutput(getX(").concat(a,"));\n      }\n    ")}}class gB{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));this.outputShape=e;const a=xR("rc",n),r="".concat(a[n-1]," + 1 < ").concat(this.outputShape[n-1]),s="".concat(a[n-2]," + 1 < ").concat(this.outputShape[n-2]),o=JF(n);function i(n){const a=e.map(((a,r)=>function(n,a){return-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - ").concat(a[n]," - 1"):"".concat(a[n])}(r,n))),r=a.join(","),s=a.slice(-2).join(",");return"getChannel(getX(".concat(r,"), vec2(").concat(s,"))")}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(".concat(e[0]," - rc - 1),\n            ").concat(e[0]," - rc - 1);\n          if(").concat(r,"){\n              result.g = getChannel(getX(").concat(e[0]," - (rc  + 1) - 1),\n                ").concat(e[0]," - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      "):"\n        void main() {\n          ".concat(o," rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ").concat(function(e){return i(e)}(a.slice()),";\n          if(").concat(r,"){\n            result.g = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(a.slice()),";\n          }\n          if(").concat(s,") {\n            result.b = ").concat(function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(a.slice()),";\n            if(").concat(r,") {\n              result.a = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(a.slice()),";\n            }\n          }\n          setOutput(result);\n        }\n    ")}}const yB={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,o=r.shape.length,i=q(s,r.shape);if(0===o)return GR({inputs:{x:r},backend:n});const u=ge().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gB(r.shape,i):new mB(r.shape,i);return n.runWebGLProgram(u,[r],r.dtype)}};class bB{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],a=e[2];this.outputShape=e;let r="";r="number"===typeof t?"float outputValue = ".concat(t.toFixed(2),";"):"\n        vec3 fill = vec3(".concat(t.join(","),");\n        float outputValue = fill[coords[3]];"),this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ".concat(r,"\n          if(coordX >= 0 && coordX < ").concat(a," && coordY >= 0 && coordY < ").concat(n,") {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const vB={kernelName:Ta,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:s,fillValue:o,center:i}=n,u=a,c=new bB(r.shape,o),[l,h]=yp(i,r.shape[1],r.shape[2]),d=[[l,h,Math.sin(s),Math.cos(s)]];return u.runWebGLProgram(c,[r],r.dtype,d)}},xB=e_({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),wB={kernelName:Wn,backendName:"webgl",kernelFunc:xB},DB=e_({opSnippet:"return inversesqrt(x);",cpuKernelImpl:eR}),kB={kernelName:Vn,backendName:"webgl",kernelFunc:DB};class CB{constructor(e,t,n,a,r,s){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const i=JF(r.length),u=JF(s.length);let c="";1===n?c="i":2===n&&(c="i, j");const l="getIndices(".concat(c,")");let h="";1===a?h="i":2===a&&(h="i, coords[1]");const d="getUpdates(".concat(h,")");let p="";o&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),m=t>1?"strides[j]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(u," coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ").concat(e,"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ").concat(t,"; j++) {\n              int index = round(").concat(l,");\n              flattenedIndex += index * ").concat(m,";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ").concat(d,";\n              found = true;\n            }\n          }\n          setOutput(mix(").concat(f,", sum, float(found)));\n        }\n      ")}}class NB{constructor(e,t,n,a,r,s){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;const i=JF(r.length),u=JF(s.length);let c="";1===n?c="i":2===n&&(c="i, j");const l="getIndices(".concat(c,")");let h="";1===a?h="i":2===a&&(h="i, coords[1]");const d="getUpdates(".concat(h,")");let p="";o&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),m=t>1?"strides[j]":"strides",g=t>1?"strides[j + 1]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(u," coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ").concat(e,"; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ").concat(t,"; j+=2) {\n              ivec4 index = round(").concat(l,");\n              flattenedIndex += index.xz * ").concat(m,";\n              if (j + 1 < ").concat(t,") {\n                flattenedIndex += index.yw * ").concat(g,";\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ").concat(d,";\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(").concat(f,", sum, found));\n        }\n      ")}}const SB={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:o}=a,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:h}=Ch(0,r,o),d=[h/c,c];if(0===h)return n.makeTensorInfo(o,r.dtype);const p=l_({inputs:{x:r},backend:n,attrs:{shape:[u,i]}}),f=l_({inputs:{x:s},backend:n,attrs:{shape:[u,c]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=ge().getBool("WEBGL_PACK")?new NB(u,i,p.shape.length,f.shape.length,l,d):new CB(u,i,p.shape.length,f.shape.length,l,d);const y=n.runWebGLProgram(g,[f,p,m],f.dtype),b=l_({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class EB{constructor(e,t,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const r="for (int i = 0; i < ".concat(Math.ceil(Math.log2(t+1)),"; ++i) { if (left >= right) break;"),s=2===ge().getNumber("WEBGL_VERSION")?"while (left < right) {":r,o="left"===a?"<":"<=";this.userCode="\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ".concat(s,"\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ").concat(o," value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     ")}}const IB={kernelName:Hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:o}=a,i=new EB(r.shape[0],r.shape[1],s.shape[1],o),u=[[r.shape[1]]];return n.runWebGLProgram(i,[r,s],"int32",u)}};class TB{constructor(e,t,n){let a,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error("Where for rank ".concat(n," is not yet supported"));if(1===n)r="resRC",a="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],o=[];for(let a=0;a<t.length;a++)o.push("".concat(n[a])),a<e&&s.push("".concat(n[a]));a=s.join(),r=o.join()}const s=JF(n);this.userCode="\n      void main() {\n        ".concat(s," resRC = getOutputCoords();\n        float cVal = getC(").concat(a,");\n        if (cVal >= 1.0) {\n          setOutput(getA(").concat(r,"));\n        } else {\n          setOutput(getB(").concat(r,"));\n        }\n      }\n    ")}}const FB={kernelName:jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,o=new TB(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(o,[a,r,s],Rr(r.dtype,s.dtype))}},AB=e_({opSnippet:"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ".concat(Cp,";\n  float scale = ").concat(Np,";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n")}),RB={kernelName:qn,backendName:"webgl",kernelFunc:AB},_B=e_({opSnippet:$R+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:nR}),OB={kernelName:Zn,backendName:"webgl",kernelFunc:_B},LB=e_({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),MB={kernelName:Qn,backendName:"webgl",kernelFunc:LB},zB=e_({opSnippet:$R+"\n  return sin(x);\n",packedOpSnippet:"\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(VR,"\n  return result;\n")}),BB={kernelName:Xn,backendName:"webgl",kernelFunc:zB},PB=e_({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),WB={kernelName:Yn,backendName:"webgl",kernelFunc:PB},VB=e_({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),UB={kernelName:Jn,backendName:"webgl",kernelFunc:VB},GB={kernelName:ta,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:o}=a;M(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const i=s.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...o);for(let y=1+s.length;y<r.shape.length;++y)u.push([0,0]);const c=[],l=Gz({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),h=bp(l.shape,s,i,!1),d=vp(h.length,s.length,!1),p=xp(l.shape,s,i,!1),f=l_({inputs:{x:l},backend:n,attrs:{shape:h}}),m=x_({inputs:{x:f},backend:n,attrs:{perm:d}}),g=l_({inputs:{x:m},backend:n,attrs:{shape:p}});return c.push(l),c.push(f),c.push(m),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};const HB={kernelName:ra,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n         ".concat(s.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n         ".concat(a.shape));if(1!==r.shape.length)throw new Error("Values must be a vector, saw:\n         ".concat(r.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.readSync(a.dataId),u=n.readSync(r.dataId),c=n.readSync(s.dataId),l=n.readSync(o.dataId)[0],[h,d,p,f,m]=sR(i,a.shape,a.dtype,u,r.dtype,c,l);return[n.makeTensorInfo(d,a.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};const jB={kernelName:sa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape ".concat(r.shape));if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(s.shape));const o=Array.from(n.readSync(r.dataId)),i=n.readSync(a.dataId),u=Array.from(n.readSync(s.dataId)),[c,l,h]=oR(i,a.shape,a.dtype,o,u);return[n.makeTensorInfo(l,a.dtype,c),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};const qB={kernelName:oa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n              ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n              ".concat(s.shape));const o=n.readSync(a.dataId),i=n.readSync(r.dataId),u=n.readSync(s.dataId),[c,l]=iR(o,a.shape,a.dtype,i,u,!0);return n.makeTensorInfo(l,a.dtype,c)}};const KB={kernelName:ia,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n             ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n             ".concat(s.shape));const o=n.readSync(a.dataId),i=n.readSync(r.dataId),u=n.readSync(s.dataId),[c,l]=iR(o,a.shape,a.dtype,i,u);return n.makeTensorInfo(l,a.dtype,c)}};const XB={kernelName:ua,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:o}=t,{outputShape:i}=a,{sliceRank:u,numUpdates:c,sliceSize:l,strides:h,outputSize:d}=Ch(0,r,i),p=!1;if("string"===s.dtype){const e=n.bufferSync(r),t=n.bufferSync(s),a=ur(n.readSync(o.dataId)[0]),f=tR(e,t,i,d,l,c,u,h,a,p);return n.makeTensorInfo(i,f.dtype,f.values)}const f=new CB(c,u,r.shape.length,s.shape.length,h,[d,1],p),m=n.runWebGLProgram(f,[s,r,o],s.dtype),g=l_({inputs:{x:m},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(m),g}};const YB={kernelName:na,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:o}=a,i=q(o,r.shape)[0],u=Qp(r,s,i),c=r.shape.length,l=new Array(c).fill(0),h=r.shape.slice();return u.map((e=>{const t=[...h];t[i]=e;const a=gO({inputs:{x:r},backend:n,attrs:{begin:l,size:t}});return l[i]+=e,a}))}},QB="return sqrt(x);",ZB=e_({opSnippet:QB,packedOpSnippet:QB,cpuKernelImpl:uR}),JB={kernelName:$n,backendName:"webgl",kernelFunc:ZB},$B={kernelName:la,backendName:"webgl",kernelFunc:e_({opSnippet:"return x * x;"})},eP="return (a - b) * (a - b);",tP=t_({opSnippet:eP,packedOpSnippet:eP}),nP={kernelName:ca,backendName:"webgl",kernelFunc:tP};const aP={kernelName:ha,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");const s=pf(n.readSync(r.dataId)),o=cR(s,"string",a);return n.makeTensorInfo(r.shape,"string",o)}};const rP={kernelName:Ea,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,s=IR+"\n    return x > 0.0 ? 1.0 : float(".concat(n.alpha,");\n  "),o=new ER(r.shape,s);return a.runWebGLProgram(o,[r],r.dtype)}};class sP{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const a=n.length,r=JF(n.length),s=JF(n.length);let o="";if(1===a)o="coords * strides + begin";else{let e=0;o=n.map(((t,a)=>(e++,1===n.length?"coords * strides[".concat(a,"] + begin[").concat(a,"]"):"coords[".concat(e-1,"] * strides[").concat(a,"] + begin[").concat(a,"]")))).join(",")}this.userCode="\n      ".concat(r," begin = ").concat(r,"(").concat(e,");\n      ").concat(r," strides = ").concat(r,"(").concat(t,");\n\n      void main() {\n        ").concat(s," coords = getOutputCoords();\n        setOutput(getX(").concat(o,"));\n      }\n    ")}}const oP={kernelName:da,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:o,strides:i,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:h,shrinkAxisMask:d}=a,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:v,strides:x}=zi(r.shape,s,o,i,u,c,l,h,d);let w;if(m)w=l_({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){M(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const e=Ci(b,v,x),t=gO({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});w=l_({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=bo(r.shape,r.dtype,e),a=lR(p,t,x,b);w=n.makeTensorInfo(f,r.dtype,a.values)}else{const e=new sP(b,x,p);w=n.runWebGLProgram(e,[r],r.dtype)}}const D=l_({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),D}};const iP={kernelName:pa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:o,rightPad:i,padWidth:u,preserveShortSequences:c}=a,{data:l,dataSplits:h}=t,d=n.readSync(l.dataId),p=n.readSync(h.dataId),[f,m]=hR(d,p,r,s,o,i,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};const uP={kernelName:fa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: ".concat(s.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.readSync(s.dataId),u=n.readSync(o.dataId)[0],[c,l,h]=dR(i,u,r),d=l.length;return[n.makeTensorInfo([d,2],"int32",c),n.makeTensorInfo([d],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};const cP={kernelName:ma,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(s.dataId),i=pR(o,r);return n.makeTensorInfo(s.shape,"int32",i)}},lP=e_({opSnippet:"return tan(x);"}),hP={kernelName:ya,backendName:"webgl",kernelFunc:lP},dP=e_({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),pP={kernelName:ba,backendName:"webgl",kernelFunc:dP};const fP={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{tensor:r,indices:s,updates:o}=t,{}=a,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:h}=Ch(0,s,r.shape),d=[h/c,c];if(0===h)return n.makeTensorInfo(r.shape,s.dtype);const p=l_({inputs:{x:s},backend:n,attrs:{shape:[u,i]}}),f=l_({inputs:{x:o},backend:n,attrs:{shape:[u,c]}}),m=l_({inputs:{x:r},backend:n,attrs:{shape:d}}),g=new CB(u,i,p.shape.length,f.shape.length,l,d,!1,!0),y=n.runWebGLProgram(g,[f,p,m],m.dtype),b=l_({inputs:{x:y},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),b}};class mP{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const a=JF(this.rank),r=function(e){const t=e.length;if(t>5)throw Error("Tile for rank ".concat(t," is not yet supported"));if(1===t)return"imod(resRC, ".concat(e[0],")");const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let r=0;r<e.length;r++)a.push("imod(".concat(n[r],", ").concat(e[r],")"));return a.join()}(e);this.userCode="\n      void main() {\n        ".concat(a," resRC = getOutputCoords();\n        setOutput(getA(").concat(r,"));\n      }\n    ")}}function gP(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>ur(e))):e,a=bo(r.shape,r.dtype,t),o=mR(a,s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new mP(r.shape,s);return n.runWebGLProgram(o,[r],r.dtype)}const yP={kernelName:va,backendName:"webgl",kernelFunc:gP};class bP{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class vP{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function xP(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function wP(e){let t=1;for(;t<e;)t*=2;return t}const DP={kernelName:xa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:o}=a,i=ge().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=ge().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=r.shape,l=c[c.length-1];if(n.shouldExecuteOnCPU([r])||l<i||s>u){const e=n.readSync(r.dataId),[t,a]=gR(e,c,r.dtype,s,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===s)return c[c.length-1]=0,[n.makeTensorInfo(c,r.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(1===l)return[r,eM({attrs:{shape:c,dtype:"int32",value:0},backend:n})];const h=n.texData.get(r.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(r):r,f=P(c)/l,m=l_({inputs:{x:p},attrs:{shape:[f,l]},backend:n});d&&xP(n,p);const g=wP(s),y=wP(l);let b=null;const v=()=>null===b?[m,m]:[m,b],x=(e,t,a)=>{const r=v(),s=new bP(a),o=[[l],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=b;b=n.runWebGLProgram(s,r,"int32",o),xP(n,i)};for(let N=1;N<g;N*=2){const e=2*N;for(let t=N;t>=1;t/=2)x(e,t,[f,y])}for(let N=y;N>g;N/=2){const e=v(),t=new vP([f,N/2]),a=[[l],[null===b?1:0],[g]],r=b;b=n.runWebGLProgram(t,e,"int32",a),xP(n,r);const s=g/2,o=2*s;for(let n=s;n>=1;n/=2)x(o,n,b.shape)}let w=b;b=gO({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),xP(n,w);let D=vM({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});xP(n,m);const k=c.slice(0,-1);k.push(s),w=b,b=l_({inputs:{x:b},attrs:{shape:k},backend:n}),xP(n,w);const C=D;return D=l_({inputs:{x:D},attrs:{shape:k},backend:n}),xP(n,C),[D,b]}};class kP{constructor(e,t,n,a,r,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const o="nearest"===n?1:2;let i;switch(a){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode="\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(".concat(i," == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ").concat(e," && 0 <= coordX && coordX < ").concat(t,") {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(").concat(r,");\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(").concat(r,");\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(").concat(t,"));\n                float mapY = mapCoord(inY, float(").concat(e,"));\n\n                if (").concat(o," == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        ")}}const CP={kernelName:wa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,transforms:s}=t,{interpolation:o,fillMode:i,fillValue:u,outputShape:c}=a,[l,h,d,p]=r.shape,[f,m]=null!=c?c:[h,d],g=new kP(h,d,o,i,u,[l,f,m,p]);return n.runWebGLProgram(g,[r,s],"float32")}};const NP={kernelName:ka,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;OF(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=a.readSync(s.dataId),{outputValues:i,outputShape:u,indices:c}=bR(o,r,s.shape,s.dtype);return[a.makeTensorInfo(u,s.dtype,i),a.makeTensorInfo([c.length],"int32",c)]}};const SP={kernelName:Ca,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const o=r,i=o.shape.length,u=r.shape[s],c=new Array(i-1);let l=0;for(let m=0;m<i;m++)m!==s&&(c[l++]=o.shape[m]);const h=[],d=new Array(i).fill(0),p=o.shape.slice();p[s]=1;const f=new Array(u);for(let m=0;m<f.length;m++){d[s]=m;const e=gO({inputs:{x:o},backend:n,attrs:{begin:d,size:p}}),t=l_({inputs:{x:e},backend:n,attrs:{shape:c}});f[m]=t,h.push(e)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class EP{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,a=e.batchSize,r=e.inSize,s=e.numSegments,o=s*Math.ceil(r/n);this.outputShape=[a,o];const i=4*Math.floor(n/4),u=n%4,c="\n        sumValue += dot(values, segFilter);\n    ";let l="";r%n>0&&(l="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      "));let h="";r%n>0&&(h="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return -1.0;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat("0.0",";\n\n      float getValue(int batch, int inIdx) {\n        ").concat(l,"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ").concat(h,"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ").concat(s,")) * float(").concat(n,"));\n        int currentSeg = int(mod(float(outIdx), float(").concat(s,")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ").concat(c,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===u,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ").concat(c,"\n        } else if (").concat(2===u,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ").concat(c,"\n        } else if (").concat(3===u,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ").concat(c,"\n        }\n        setOutput(").concat("sumValue",");\n      }\n    ")}}const IP={kernelName:Na,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:o}=a,i=r.shape.length,u=[];let c=0;const l=hc([c],i);let h=r;null!=l&&(h=x_({inputs:{x:r},backend:n,attrs:{perm:l}}),u.push(h),c=pc(1,i)[0]);const d=hf(h.shape,c,o),p=P([h.shape[c]]),f=l_({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});u.push(f);const m=_r(r.dtype),g=(e,t,a,r,s)=>{const o=e.shape[0],i=e.shape[1],c=lf(i,s),l=new EP({windowSize:c,inSize:i,batchSize:o,numSegments:s},t),h=n.compileAndRun(l,[e,a],r);if(u.push(h),h.shape[1]===s)return h;const d=Zz({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),p=gP({inputs:{x:d},backend:n,attrs:{reps:[i/c]}});u.push(d),u.push(p);return g(h,t,p,r,s)},y=l_({inputs:{x:g(f,"unsortedSegmentSum",s,m,o)},backend:n,attrs:{shape:d}});let b=y;if(null!=l){u.push(y);const e=dc(l);b=x_({inputs:{x:b},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},TP=[k_,N_,E_,T_,R_,L_,M_,z_,G_,H_,q_,X_,Q_,J_,eO,aO,rO,iO,uO,cO,dO,bO,vO,xO,wO,SO,TO,RO,qR,LO,GO,ZO,nL,rL,sL,oL,iL,cL,hL,pL,vL,xL,wL,kL,SL,TL,FL,RL,OL,LL,zL,BL,WL,UL,HL,qL,YL,JL,tM,aM,oM,uM,hM,fM,mM,yM,xM,DM,CM,HR,NM,WO,EM,TM,AM,YR,_M,LM,MM,BM,WM,UM,HM,qM,YM,ZM,$M,tz,nz,az,oz,iz,uz,cz,lz,dz,mz,yz,Sz,c_,Iz,Fz,Rz,Oz,kO,Mz,Pz,Wz,Hz,qz,JR,Kz,Xz,Yz,Qz,Jz,NO,xz,eB,nB,rB,h_,iB,cB,dB,fB,yB,vB,wB,kB,SB,IB,FB,RB,OB,MB,BB,WB,yO,Nz,UB,GB,HB,jB,qB,KB,XB,YB,JB,$B,nP,aP,rP,oP,iP,uP,cP,kz,v_,hP,pP,fP,yP,DP,CP,w_,NP,SP,IP,Bz];for(const n of TP)Wa(n);const FP={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},AP={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},RP="[aeiouy]",_P="([^aeiou][^aeiouy]*)",OP="("+RP+"[aeiou]*)",LP=new RegExp("^"+_P+"?"+OP+_P),MP=new RegExp("^"+_P+"?"+OP+_P+OP+"?$"),zP=new RegExp("^"+_P+"?("+OP+_P+"){2,}"),BP=new RegExp("^"+_P+"?"+RP),PP=new RegExp("^"+_P+RP+"[^aeiouwxy]$"),WP=/ll$/,VP=/^(.+?)e$/,UP=/^(.+?)y$/,GP=/^(.+?(s|t))(ion)$/,HP=/^(.+?)(ed|ing)$/,jP=/(at|bl|iz)$/,qP=/^(.+?)eed$/,KP=/^.+?[^s]s$/,XP=/^.+?(ss|i)es$/,YP=/([^aeiouylsz])\1$/,QP=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,ZP=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,JP=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;const $P=new(n(231)),eW=e=>{e=e.toLowerCase().replace(/([+\-*/])/g," $1 ");const t=$P.tokenize(e).filter((e=>"word"===e.tag||"number"===e.tag||/[+\-*/]/.test(e.value))).map((e=>e.value)),n=t.map((e=>isNaN(e)?function(e){let t=String(e).toLowerCase();if(t.length<3)return t;let n,a=!1;return 121===t.codePointAt(0)&&(a=!0,t="Y"+t.slice(1)),XP.test(t)?t=t.slice(0,-2):KP.test(t)&&(t=t.slice(0,-1)),(n=qP.exec(t))?LP.test(n[1])&&(t=t.slice(0,-1)):(n=HP.exec(t))&&BP.test(n[1])&&(t=n[1],jP.test(t)?t+="e":YP.test(t)?t=t.slice(0,-1):PP.test(t)&&(t+="e")),(n=UP.exec(t))&&BP.test(n[1])&&(t=n[1]+"i"),(n=QP.exec(t))&&LP.test(n[1])&&(t=n[1]+FP[n[2]]),(n=ZP.exec(t))&&LP.test(n[1])&&(t=n[1]+AP[n[2]]),(n=JP.exec(t))?zP.test(n[1])&&(t=n[1]):(n=GP.exec(t))&&zP.test(n[1])&&(t=n[1]),(n=VP.exec(t))&&(zP.test(n[1])||MP.test(n[1])&&!PP.test(n[1]))&&(t=n[1]),WP.test(t)&&zP.test(t)&&(t=t.slice(0,-1)),a&&(t="y"+t.slice(1)),t}(e):e));return console.log("[DEBUG] Tokens originales: ".concat(t)),console.log("[DEBUG] Tokens con ra\xedces: ".concat(n)),n};var tW=n(579);const nW=()=>{const[e,t]=(0,E.useState)(null),[n,a]=(0,E.useState)(null),[r,s]=(0,E.useState)([]),[o,i]=(0,E.useState)(""),[u,c]=(0,E.useState)([]),[l,h]=(0,E.useState)([]),[d,p]=(0,E.useState)(!1),f=(0,E.useRef)(null);(0,E.useEffect)((()=>{(async()=>{try{const e=await UD("/model.json"),n=await fetch("/intents.json").then((e=>e.json())),r=await fetch("/vocabulario.json").then((e=>e.json()));t(e),a(n),s(r.palabras||[]),h(r.etiquetas||[])}catch(e){console.error("Error al cargar los datos:",e)}})()}),[]),(0,E.useEffect)((()=>{f.current&&(f.current.scrollTop=f.current.scrollHeight)}),[u]);const m=async t=>{if(!e||!n||0===r.length)return;const a=((e,t)=>{const n=Array(t.length).fill(0);return e.forEach((e=>{const a=t.indexOf(e);-1!==a?n[a]=1:console.warn("[DEBUG] Token no encontrado en el vocabulario: ".concat(e))})),console.log("[DEBUG] Vector de bolsa de palabras generado: ".concat(n)),n})(eW(t),r),s=ss([a]);p(!0);try{await new Promise((e=>setTimeout(e,1500)));const a=e.predict(s),r=a.argMax(-1).dataSync()[0];if(a.dataSync()[r]>.75){const e=l[r];if(["suma","resta","multiplicacion","division"].includes(e)){var o;const n=(null===(o=t.match(/\d+/g))||void 0===o?void 0:o.map(Number))||[];if(n.length>=2){const[t,a]=n,r="suma"===e?t+a:"resta"===e?t-a:"multiplicacion"===e?t*a:0!==a?t/a:"No puedo dividir entre cero. \ud83d\ude05";c((e=>[...e,{tipo:"bot",mensaje:"El resultado es ".concat(r)}]))}else c((e=>[...e,{tipo:"bot",mensaje:"Faltan n\xfameros para calcular. Intenta de nuevo."}]))}else{const t=n.intents.find((t=>t.tag===e)).responses,a=t[Math.floor(Math.random()*t.length)];c((e=>[...e,{tipo:"bot",mensaje:a}]))}}else c((e=>[...e,{tipo:"bot",mensaje:"Lo siento, no entiendo eso."}]))}catch(i){console.error("Error durante la predicci\xf3n:",i)}finally{p(!1)}};return(0,tW.jsxs)("div",{className:"chat-container",children:[(0,tW.jsx)("h1",{className:"chat-title",children:"ChatXD"}),(0,tW.jsxs)("div",{ref:f,className:"chat-box",children:[u.map(((e,t)=>(0,tW.jsx)("div",{className:"chat-message ".concat("usuario"===e.tipo?"user":"bot"),children:e.mensaje},t))),d&&(0,tW.jsxs)("div",{className:"chat-message bot typing-indicator",children:[(0,tW.jsx)("span",{children:"."}),(0,tW.jsx)("span",{children:"."}),(0,tW.jsx)("span",{children:"."})]})]}),(0,tW.jsxs)("form",{onSubmit:e=>{e.preventDefault(),o.trim()&&(c((e=>[...e,{tipo:"usuario",mensaje:o}])),m(o),i(""))},className:"chat-form",children:[(0,tW.jsx)("input",{type:"text",value:o,onChange:e=>i(e.target.value),placeholder:"Escribe tu mensaje...",className:"chat-input"}),(0,tW.jsx)("button",{type:"submit",className:"chat-submit",children:"Enviar"})]})]})},aW=e=>{e&&e instanceof Function&&n.e(488).then(n.bind(n,488)).then((t=>{let{getCLS:n,getFID:a,getFCP:r,getLCP:s,getTTFB:o}=t;n(e),a(e),r(e),s(e),o(e)}))};I.createRoot(document.getElementById("root")).render((0,tW.jsx)(E.StrictMode,{children:(0,tW.jsx)(nW,{})})),aW()})()})();
//# sourceMappingURL=main.59a53f7d.js.map